// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OrderSummaryModal is updated modal UI on mobile screens displays continue to checkout button 1`] = `
<OrderSummaryModal
  coupons={
    Array [
      Object {
        "code": "savebig2015",
        "couponType": "percentage_discount",
        "discountedAmount": 5,
        "displayName": "20% off each item",
        "id": "1",
      },
      Object {
        "code": "279F507D817E3E7",
        "couponType": "shipping_discount",
        "discountedAmount": 5,
        "displayName": "$5.00 off the shipping total",
        "id": "4",
      },
    ]
  }
  discountAmount={10}
  giftCertificates={
    Array [
      Object {
        "balance": 10,
        "code": "gc",
        "purchaseDate": "",
        "remaining": 3,
        "used": 7,
      },
    ]
  }
  giftWrappingAmount={0}
  handlingAmount={8}
  isOpen={true}
  isTaxIncluded={false}
  isUpdatedCartSummayModal={true}
  lineItems={
    Object {
      "customItems": Array [],
      "digitalItems": Array [],
      "giftCertificates": Array [
        Object {
          "amount": 100,
          "id": "bd391ead-8c58-4105-b00e-d75d233b429a",
          "message": "message",
          "name": "$100 Gift Certificate",
          "recipient": Object {
            "email": "lu@is.com",
            "name": "luis",
          },
          "sender": Object {
            "email": "pa@blo.com",
            "name": "pablo",
          },
          "taxable": false,
          "theme": "General",
        },
      ],
      "physicalItems": Array [
        Object {
          "addedByPromotion": false,
          "brand": "OFS",
          "categoryNames": Array [
            "Cat 1",
          ],
          "comparisonPrice": 200,
          "couponAmount": 0,
          "discountAmount": 0,
          "discounts": Array [],
          "extendedComparisonPrice": 250,
          "extendedListPrice": 200,
          "extendedSalePrice": 200,
          "id": "666",
          "imageUrl": "/images/canvas-laundry-cart.jpg",
          "isShippingRequired": true,
          "isTaxable": true,
          "listPrice": 200,
          "name": "Canvas Laundry Cart",
          "options": Array [
            Object {
              "name": "n",
              "nameId": 1,
              "value": "v",
              "valueId": 3,
            },
          ],
          "productId": 103,
          "quantity": 1,
          "salePrice": 200,
          "sku": "CLC",
          "url": "/canvas-laundry-cart/",
          "variantId": 71,
        },
      ],
    }
  }
  shippingAmount={20}
  shopperCurrency={
    Object {
      "code": "USD",
      "decimalPlaces": "2",
      "decimalSeparator": ".",
      "exchangeRate": 1.12,
      "isTransactional": true,
      "symbol": "$",
      "symbolLocation": "left",
      "thousandsSeparator": ",",
    }
  }
  storeCreditAmount={0}
  storeCurrency={
    Object {
      "code": "USD",
      "decimalPlaces": "2",
      "decimalSeparator": ".",
      "symbol": "$",
      "symbolLocation": "left",
      "thousandsSeparator": ",",
    }
  }
  subtotalAmount={200}
  taxes={
    Array [
      Object {
        "amount": 3,
        "name": "Tax",
      },
    ]
  }
  total={190}
>
  <Modal
    additionalBodyClassName="cart-modal-body optimizedCheckout-orderSummary"
    additionalHeaderClassName="cart-modal-header optimizedCheckout-orderSummary with-continue-button"
    additionalModalClassName="optimizedCheckout-cart-modal"
    footer={
      <Button
        className="cart-modal-continue"
        data-test="manage-instrument-cancel-button"
        onClick={[Function]}
      >
        <WithLanguage(TranslatedString)
          id="cart.return_to_checkout"
        />
      </Button>
    }
    header={
      <React.Fragment>
        <ModalHeader
          additionalClassName="cart-modal-title"
        >
          <div>
            <WithLanguage(TranslatedString)
              id="cart.cart_heading"
            />
            <div
              className="cart-heading-subheader"
            >
              <Memo(OrderModalSummarySubheader)
                amountWithCurrency={
                  <WithCurrency(ShopperCurrency)
                    amount={190}
                  />
                }
                items={
                  Object {
                    "customItems": Array [],
                    "digitalItems": Array [],
                    "giftCertificates": Array [
                      Object {
                        "amount": 100,
                        "id": "bd391ead-8c58-4105-b00e-d75d233b429a",
                        "message": "message",
                        "name": "$100 Gift Certificate",
                        "recipient": Object {
                          "email": "lu@is.com",
                          "name": "luis",
                        },
                        "sender": Object {
                          "email": "pa@blo.com",
                          "name": "pablo",
                        },
                        "taxable": false,
                        "theme": "General",
                      },
                    ],
                    "physicalItems": Array [
                      Object {
                        "addedByPromotion": false,
                        "brand": "OFS",
                        "categoryNames": Array [
                          "Cat 1",
                        ],
                        "comparisonPrice": 200,
                        "couponAmount": 0,
                        "discountAmount": 0,
                        "discounts": Array [],
                        "extendedComparisonPrice": 250,
                        "extendedListPrice": 200,
                        "extendedSalePrice": 200,
                        "id": "666",
                        "imageUrl": "/images/canvas-laundry-cart.jpg",
                        "isShippingRequired": true,
                        "isTaxable": true,
                        "listPrice": 200,
                        "name": "Canvas Laundry Cart",
                        "options": Array [
                          Object {
                            "name": "n",
                            "nameId": 1,
                            "value": "v",
                            "valueId": 3,
                          },
                        ],
                        "productId": 103,
                        "quantity": 1,
                        "salePrice": 200,
                        "sku": "CLC",
                        "url": "/canvas-laundry-cart/",
                        "variantId": 71,
                      },
                    ],
                  }
                }
                shopperCurrencyCode="USD"
                storeCurrencyCode="USD"
              />
            </div>
          </div>
        </ModalHeader>
        <a
          className="cart-modal-close"
          href="#"
          onClick={[Function]}
        >
          <span
            className="is-srOnly"
          >
            <WithLanguage(TranslatedString)
              id="common.close_action"
            />
          </span>
          <Memo />
        </a>
      </React.Fragment>
    }
    isOpen={true}
  >
    <Modal
      ariaHideApp={false}
      bodyOpenClassName="has-activeModal"
      className={
        Object {
          "afterOpen": "modal--afterOpen",
          "base": "modal optimizedCheckout-contentPrimary optimizedCheckout-cart-modal",
          "beforeClose": "modal--beforeClose",
        }
      }
      closeTimeoutMS={200}
      contentElement={[Function]}
      isOpen={true}
      onRequestClose={[Function]}
      overlayClassName={
        Object {
          "afterOpen": "modalOverlay--afterOpen",
          "base": "modalOverlay",
          "beforeClose": "modalOverlay--beforeClose",
        }
      }
      overlayElement={[Function]}
      parentSelector={[Function]}
      portalClassName="ReactModalPortal"
      preventScroll={false}
      role="dialog"
      shouldCloseOnEsc={true}
      shouldCloseOnOverlayClick={false}
      shouldFocusAfterRender={true}
      shouldReturnFocusAfterClose={true}
    >
      <Portal
        containerInfo={
          <div
            class="ReactModalPortal"
          >
            <div
              class="modalOverlay"
            >
              <div
                aria-modal="true"
                class="modal optimizedCheckout-contentPrimary optimizedCheckout-cart-modal"
                role="dialog"
                tabindex="-1"
              >
                <div
                  class="modal-header cart-modal-header optimizedCheckout-orderSummary with-continue-button"
                >
                  <h2
                    class="modal-header-title optimizedCheckout-headingSecondary cart-modal-title"
                    data-test="modal-heading"
                  >
                    <div>
                      <div
                        class="cart-heading-subheader"
                      >
                        2
                         
                         | 
                         
                      </div>
                    </div>
                  </h2>
                  <a
                    class="cart-modal-close"
                    href="#"
                  >
                    <span
                      class="is-srOnly"
                    />
                    <div
                      class="icon"
                    >
                      <svg
                        fill="none"
                        height="37"
                        viewBox="0 0 38 37"
                        width="38"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M38 18.5C38 28.7173 29.7173 37 19.5 37C9.28273 37 1 28.7173 1 18.5C1 8.28273 9.28273 0 19.5 0C29.7173 0 38 8.28273 38 18.5Z"
                          fill="#F3F3F3"
                        />
                        <path
                          clip-rule="evenodd"
                          d="M24.6671 24.6674L12.9998 13.0002L14.4141 11.5859L26.0813 23.2532L24.6671 24.6674Z"
                          fill="black"
                          fill-rule="evenodd"
                        />
                        <path
                          clip-rule="evenodd"
                          d="M25.6674 13.0004L14.0002 24.6676L12.5859 23.2534L24.2532 11.5862L25.6674 13.0004Z"
                          fill="black"
                          fill-rule="evenodd"
                        />
                      </svg>
                    </div>
                  </a>
                </div>
                <div
                  class="modal-body cart-modal-body optimizedCheckout-orderSummary"
                  data-test="modal-body"
                >
                  <section
                    class="cart-section optimizedCheckout-orderSummary-cartSection"
                  >
                    <h3
                      class="cart-section-heading optimizedCheckout-contentPrimary"
                      data-test="cart-count-total"
                    />
                    <ul
                      aria-live="polite"
                      class="productList"
                    >
                      <li
                        class="productList-item is-visible"
                      >
                        <div
                          class="product"
                          data-test="cart-item"
                        >
                          <figure
                            class="product-column product-figure"
                          >
                            <img
                              alt="Canvas Laundry Cart"
                              data-test="cart-item-image"
                              src="/images/canvas-laundry-cart.jpg"
                            />
                          </figure>
                          <div
                            class="product-column product-body"
                          >
                            <h4
                              class="product-title optimizedCheckout-contentPrimary"
                              data-test="cart-item-product-title"
                            >
                              1 x Canvas Laundry Cart
                            </h4>
                            <ul
                              class="product-options optimizedCheckout-contentSecondary"
                              data-test="cart-item-product-options"
                            >
                              <li
                                class="product-option"
                                data-test="cart-item-product-option"
                              >
                                n v
                              </li>
                            </ul>
                          </div>
                          <div
                            class="product-column product-actions"
                          >
                            <div
                              class="product-price optimizedCheckout-contentPrimary product-price--beforeDiscount"
                              data-test="cart-item-product-price"
                            />
                            <div
                              class="product-price"
                              data-test="cart-item-product-price--afterDiscount"
                            />
                          </div>
                        </div>
                      </li>
                      <li
                        class="productList-item is-visible"
                      >
                        <div
                          class="product"
                          data-test="cart-item"
                        >
                          <figure
                            class="product-column product-figure"
                          >
                            <span
                              class="productImage-giftCertificate"
                              data-test="cart-item-gift-certificate"
                            >
                              <svg
                                height="24"
                                viewBox="0 0 24 24"
                                width="24"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M20 6h-2.18c.11-.31.18-.65.18-1a2.996 2.996 0 0 0-5.5-1.65l-.5.67-.5-.68C10.96 2.54 10.05 2 9 2 7.34 2 6 3.34 6 5c0 .35.07.69.18 1H4c-1.11 0-1.99.89-1.99 2L2 19c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-5-2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM9 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm11 15H4v-2h16v2zm0-5H4V8h5.08L7 10.83 8.62 12 11 8.76l1-1.36 1 1.36L15.38 12 17 10.83 14.92 8H20v6z"
                                />
                              </svg>
                            </span>
                          </figure>
                          <div
                            class="product-column product-body"
                          >
                            <h4
                              class="product-title optimizedCheckout-contentPrimary"
                              data-test="cart-item-product-title"
                            >
                              1 x $100 Gift Certificate
                            </h4>
                          </div>
                          <div
                            class="product-column product-actions"
                          >
                            <div
                              class="product-price optimizedCheckout-contentPrimary"
                              data-test="cart-item-product-price"
                            />
                          </div>
                        </div>
                      </li>
                    </ul>
                  </section>
                  <section
                    class="cart-section optimizedCheckout-orderSummary-cartSection"
                  >
                    <div
                      data-test="cart-subtotal"
                    >
                      <div
                        aria-live="polite"
                        class="cart-priceItem optimizedCheckout-contentPrimary cart-priceItem--subtotal"
                      >
                        <span
                          class="cart-priceItem-label"
                        >
                          <span
                            data-test="cart-price-label"
                          >
                              
                          </span>
                        </span>
                        <span
                          class="cart-priceItem-value"
                        >
                          <span
                            data-test="cart-price-value"
                          />
                        </span>
                      </div>
                    </div>
                    <div
                      data-test="cart-coupon"
                    >
                      <div
                        aria-live="polite"
                        class="cart-priceItem optimizedCheckout-contentPrimary"
                      >
                        <span
                          class="cart-priceItem-label"
                        >
                          <span
                            data-test="cart-price-label"
                          >
                            20% off each item
                              
                          </span>
                        </span>
                        <span
                          class="cart-priceItem-value"
                        >
                          <span
                            data-test="cart-price-value"
                          />
                        </span>
                        <span
                          class="cart-priceItem-postFix optimizedCheckout-contentSecondary"
                          data-test="cart-price-code"
                        >
                          savebig2015
                        </span>
                      </div>
                    </div>
                    <div
                      data-test="cart-coupon"
                    >
                      <div
                        aria-live="polite"
                        class="cart-priceItem optimizedCheckout-contentPrimary"
                      >
                        <span
                          class="cart-priceItem-label"
                        >
                          <span
                            data-test="cart-price-label"
                          >
                            $5.00 off the shipping total
                              
                          </span>
                        </span>
                        <span
                          class="cart-priceItem-value"
                        >
                          <span
                            data-test="cart-price-value"
                          />
                        </span>
                        <span
                          class="cart-priceItem-postFix optimizedCheckout-contentSecondary"
                          data-test="cart-price-code"
                        >
                          279F507D817E3E7
                        </span>
                      </div>
                    </div>
                    <div
                      data-test="cart-discount"
                    >
                      <div
                        aria-live="polite"
                        class="cart-priceItem optimizedCheckout-contentPrimary"
                      >
                        <span
                          class="cart-priceItem-label"
                        >
                          <span
                            data-test="cart-price-label"
                          >
                              
                          </span>
                        </span>
                        <span
                          class="cart-priceItem-value"
                        >
                          <span
                            data-test="cart-price-value"
                          />
                        </span>
                      </div>
                    </div>
                    <div
                      data-test="cart-gift-certificate"
                    >
                      <div
                        aria-live="polite"
                        class="cart-priceItem optimizedCheckout-contentPrimary"
                      >
                        <span
                          class="cart-priceItem-label"
                        >
                          <span
                            data-test="cart-price-label"
                          >
                              
                          </span>
                        </span>
                        <span
                          class="cart-priceItem-value"
                        >
                          <span
                            data-test="cart-price-value"
                          />
                        </span>
                        <span
                          class="cart-priceItem-postFix optimizedCheckout-contentSecondary"
                          data-test="cart-price-remaining"
                        >
                          : 
                        </span>
                        <span
                          class="cart-priceItem-postFix optimizedCheckout-contentSecondary"
                          data-test="cart-price-code"
                        >
                          gc
                        </span>
                      </div>
                    </div>
                    <div
                      data-test="cart-shipping"
                    >
                      <div
                        aria-live="polite"
                        class="cart-priceItem optimizedCheckout-contentPrimary"
                      >
                        <span
                          class="cart-priceItem-label"
                        >
                          <span
                            data-test="cart-price-label"
                          >
                              
                          </span>
                        </span>
                        <span
                          class="cart-priceItem-value"
                        >
                          <span
                            data-test="cart-price-value"
                          />
                        </span>
                      </div>
                    </div>
                    <div
                      data-test="cart-handling"
                    >
                      <div
                        aria-live="polite"
                        class="cart-priceItem optimizedCheckout-contentPrimary"
                      >
                        <span
                          class="cart-priceItem-label"
                        >
                          <span
                            data-test="cart-price-label"
                          >
                              
                          </span>
                        </span>
                        <span
                          class="cart-priceItem-value"
                        >
                          <span
                            data-test="cart-price-value"
                          />
                        </span>
                      </div>
                    </div>
                    <div
                      data-test="cart-taxes"
                    >
                      <div
                        aria-live="polite"
                        class="cart-priceItem optimizedCheckout-contentPrimary"
                      >
                        <span
                          class="cart-priceItem-label"
                        >
                          <span
                            data-test="cart-price-label"
                          >
                            Tax
                              
                          </span>
                        </span>
                        <span
                          class="cart-priceItem-value"
                        >
                          <span
                            data-test="cart-price-value"
                          />
                        </span>
                      </div>
                    </div>
                  </section>
                  <section
                    class="cart-section optimizedCheckout-orderSummary-cartSection"
                  />
                </div>
                <div
                  class="modal-footer"
                  data-test="modal-footer"
                >
                  <button
                    class="button cart-modal-continue"
                    type="button"
                  />
                </div>
              </div>
            </div>
          </div>
        }
      >
        <ModalPortal
          ariaHideApp={false}
          bodyOpenClassName="has-activeModal"
          className={
            Object {
              "afterOpen": "modal--afterOpen",
              "base": "modal optimizedCheckout-contentPrimary optimizedCheckout-cart-modal",
              "beforeClose": "modal--beforeClose",
            }
          }
          closeTimeoutMS={200}
          contentElement={[Function]}
          defaultStyles={
            Object {
              "content": Object {
                "WebkitOverflowScrolling": "touch",
                "background": "#fff",
                "border": "1px solid #ccc",
                "borderRadius": "4px",
                "bottom": "40px",
                "left": "40px",
                "outline": "none",
                "overflow": "auto",
                "padding": "20px",
                "position": "absolute",
                "right": "40px",
                "top": "40px",
              },
              "overlay": Object {
                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                "bottom": 0,
                "left": 0,
                "position": "fixed",
                "right": 0,
                "top": 0,
              },
            }
          }
          isOpen={true}
          onRequestClose={[Function]}
          overlayClassName={
            Object {
              "afterOpen": "modalOverlay--afterOpen",
              "base": "modalOverlay",
              "beforeClose": "modalOverlay--beforeClose",
            }
          }
          overlayElement={[Function]}
          parentSelector={[Function]}
          portalClassName="ReactModalPortal"
          preventScroll={false}
          role="dialog"
          shouldCloseOnEsc={true}
          shouldCloseOnOverlayClick={false}
          shouldFocusAfterRender={true}
          shouldReturnFocusAfterClose={true}
          style={
            Object {
              "content": Object {},
              "overlay": Object {},
            }
          }
        >
          <div
            className="modalOverlay"
            onClick={[Function]}
            onMouseDown={[Function]}
            style={Object {}}
          >
            <div
              aria-modal={true}
              className="modal optimizedCheckout-contentPrimary optimizedCheckout-cart-modal"
              onClick={[Function]}
              onKeyDown={[Function]}
              onMouseDown={[Function]}
              onMouseUp={[Function]}
              role="dialog"
              style={Object {}}
              tabIndex="-1"
            >
              <div
                className="modal-header cart-modal-header optimizedCheckout-orderSummary with-continue-button"
              >
                <ModalHeader
                  additionalClassName="cart-modal-title"
                >
                  <h2
                    className="modal-header-title optimizedCheckout-headingSecondary cart-modal-title"
                    data-test="modal-heading"
                  >
                    <div>
                      <WithLanguage(TranslatedString)
                        id="cart.cart_heading"
                      />
                      <div
                        className="cart-heading-subheader"
                      >
                        <Memo(OrderModalSummarySubheader)
                          amountWithCurrency={
                            <WithCurrency(ShopperCurrency)
                              amount={190}
                            />
                          }
                          items={
                            Object {
                              "customItems": Array [],
                              "digitalItems": Array [],
                              "giftCertificates": Array [
                                Object {
                                  "amount": 100,
                                  "id": "bd391ead-8c58-4105-b00e-d75d233b429a",
                                  "message": "message",
                                  "name": "$100 Gift Certificate",
                                  "recipient": Object {
                                    "email": "lu@is.com",
                                    "name": "luis",
                                  },
                                  "sender": Object {
                                    "email": "pa@blo.com",
                                    "name": "pablo",
                                  },
                                  "taxable": false,
                                  "theme": "General",
                                },
                              ],
                              "physicalItems": Array [
                                Object {
                                  "addedByPromotion": false,
                                  "brand": "OFS",
                                  "categoryNames": Array [
                                    "Cat 1",
                                  ],
                                  "comparisonPrice": 200,
                                  "couponAmount": 0,
                                  "discountAmount": 0,
                                  "discounts": Array [],
                                  "extendedComparisonPrice": 250,
                                  "extendedListPrice": 200,
                                  "extendedSalePrice": 200,
                                  "id": "666",
                                  "imageUrl": "/images/canvas-laundry-cart.jpg",
                                  "isShippingRequired": true,
                                  "isTaxable": true,
                                  "listPrice": 200,
                                  "name": "Canvas Laundry Cart",
                                  "options": Array [
                                    Object {
                                      "name": "n",
                                      "nameId": 1,
                                      "value": "v",
                                      "valueId": 3,
                                    },
                                  ],
                                  "productId": 103,
                                  "quantity": 1,
                                  "salePrice": 200,
                                  "sku": "CLC",
                                  "url": "/canvas-laundry-cart/",
                                  "variantId": 71,
                                },
                              ],
                            }
                          }
                          shopperCurrencyCode="USD"
                          storeCurrencyCode="USD"
                        >
                          2
                           
                          <WithLanguage(TranslatedString)
                            id="cart.items"
                          />
                           | 
                          <WithCurrency(ShopperCurrency)
                            amount={190}
                          />
                           
                        </Memo(OrderModalSummarySubheader)>
                      </div>
                    </div>
                  </h2>
                </ModalHeader>
                <a
                  className="cart-modal-close"
                  href="#"
                  onClick={[Function]}
                >
                  <span
                    className="is-srOnly"
                  >
                    <WithLanguage(TranslatedString)
                      id="common.close_action"
                    />
                  </span>
                  <Memo()>
                    <div
                      className="icon"
                    >
                      <IconCloseWithBorder>
                        <svg
                          fill="none"
                          height="37"
                          viewBox="0 0 38 37"
                          width="38"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M38 18.5C38 28.7173 29.7173 37 19.5 37C9.28273 37 1 28.7173 1 18.5C1 8.28273 9.28273 0 19.5 0C29.7173 0 38 8.28273 38 18.5Z"
                            fill="#F3F3F3"
                          />
                          <path
                            clipRule="evenodd"
                            d="M24.6671 24.6674L12.9998 13.0002L14.4141 11.5859L26.0813 23.2532L24.6671 24.6674Z"
                            fill="black"
                            fillRule="evenodd"
                          />
                          <path
                            clipRule="evenodd"
                            d="M25.6674 13.0004L14.0002 24.6676L12.5859 23.2534L24.2532 11.5862L25.6674 13.0004Z"
                            fill="black"
                            fillRule="evenodd"
                          />
                        </svg>
                      </IconCloseWithBorder>
                    </div>
                  </Memo()>
                </a>
              </div>
              <div
                className="modal-body cart-modal-body optimizedCheckout-orderSummary"
                data-test="modal-body"
              >
                <OrderSummarySection>
                  <section
                    className="cart-section optimizedCheckout-orderSummary-cartSection"
                  >
                    <OrderSummaryItems
                      items={
                        Object {
                          "customItems": Array [],
                          "digitalItems": Array [],
                          "giftCertificates": Array [
                            Object {
                              "amount": 100,
                              "id": "bd391ead-8c58-4105-b00e-d75d233b429a",
                              "message": "message",
                              "name": "$100 Gift Certificate",
                              "recipient": Object {
                                "email": "lu@is.com",
                                "name": "luis",
                              },
                              "sender": Object {
                                "email": "pa@blo.com",
                                "name": "pablo",
                              },
                              "taxable": false,
                              "theme": "General",
                            },
                          ],
                          "physicalItems": Array [
                            Object {
                              "addedByPromotion": false,
                              "brand": "OFS",
                              "categoryNames": Array [
                                "Cat 1",
                              ],
                              "comparisonPrice": 200,
                              "couponAmount": 0,
                              "discountAmount": 0,
                              "discounts": Array [],
                              "extendedComparisonPrice": 250,
                              "extendedListPrice": 200,
                              "extendedSalePrice": 200,
                              "id": "666",
                              "imageUrl": "/images/canvas-laundry-cart.jpg",
                              "isShippingRequired": true,
                              "isTaxable": true,
                              "listPrice": 200,
                              "name": "Canvas Laundry Cart",
                              "options": Array [
                                Object {
                                  "name": "n",
                                  "nameId": 1,
                                  "value": "v",
                                  "valueId": 3,
                                },
                              ],
                              "productId": 103,
                              "quantity": 1,
                              "salePrice": 200,
                              "sku": "CLC",
                              "url": "/canvas-laundry-cart/",
                              "variantId": 71,
                            },
                          ],
                        }
                      }
                    >
                      <h3
                        className="cart-section-heading optimizedCheckout-contentPrimary"
                        data-test="cart-count-total"
                      >
                        <WithLanguage(TranslatedString)
                          data={
                            Object {
                              "count": 2,
                            }
                          }
                          id="cart.item_count_text"
                        />
                      </h3>
                      <ul
                        aria-live="polite"
                        className="productList"
                      >
                        <li
                          className="productList-item is-visible"
                          key="666"
                        >
                          <Memo(OrderSummaryItem)
                            amount={250}
                            amountAfterDiscount={200}
                            id="666"
                            image={
                              <img
                                alt="Canvas Laundry Cart"
                                data-test="cart-item-image"
                                src="/images/canvas-laundry-cart.jpg"
                              />
                            }
                            name="Canvas Laundry Cart"
                            productOptions={
                              Array [
                                Object {
                                  "content": "n v",
                                  "testId": "cart-item-product-option",
                                },
                              ]
                            }
                            quantity={1}
                          >
                            <div
                              className="product"
                              data-test="cart-item"
                            >
                              <figure
                                className="product-column product-figure"
                              >
                                <img
                                  alt="Canvas Laundry Cart"
                                  data-test="cart-item-image"
                                  src="/images/canvas-laundry-cart.jpg"
                                />
                              </figure>
                              <div
                                className="product-column product-body"
                              >
                                <h4
                                  className="product-title optimizedCheckout-contentPrimary"
                                  data-test="cart-item-product-title"
                                >
                                  1 x Canvas Laundry Cart
                                </h4>
                                <ul
                                  className="product-options optimizedCheckout-contentSecondary"
                                  data-test="cart-item-product-options"
                                >
                                  <li
                                    className="product-option"
                                    data-test="cart-item-product-option"
                                    key="0"
                                  >
                                    n v
                                  </li>
                                </ul>
                              </div>
                              <div
                                className="product-column product-actions"
                              >
                                <div
                                  className="product-price optimizedCheckout-contentPrimary product-price--beforeDiscount"
                                  data-test="cart-item-product-price"
                                >
                                  <WithCurrency(ShopperCurrency)
                                    amount={250}
                                  />
                                </div>
                                <div
                                  className="product-price"
                                  data-test="cart-item-product-price--afterDiscount"
                                >
                                  <WithCurrency(ShopperCurrency)
                                    amount={200}
                                  />
                                </div>
                              </div>
                            </div>
                          </Memo(OrderSummaryItem)>
                        </li>
                        <li
                          className="productList-item is-visible"
                          key="bd391ead-8c58-4105-b00e-d75d233b429a"
                        >
                          <Memo(OrderSummaryItem)
                            amount={100}
                            id="bd391ead-8c58-4105-b00e-d75d233b429a"
                            image={
                              <span
                                className="productImage-giftCertificate"
                                data-test="cart-item-gift-certificate"
                              >
                                <IconGiftCertificate />
                              </span>
                            }
                            name="$100 Gift Certificate"
                            quantity={1}
                          >
                            <div
                              className="product"
                              data-test="cart-item"
                            >
                              <figure
                                className="product-column product-figure"
                              >
                                <span
                                  className="productImage-giftCertificate"
                                  data-test="cart-item-gift-certificate"
                                >
                                  <IconGiftCertificate>
                                    <svg
                                      height="24"
                                      viewBox="0 0 24 24"
                                      width="24"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M20 6h-2.18c.11-.31.18-.65.18-1a2.996 2.996 0 0 0-5.5-1.65l-.5.67-.5-.68C10.96 2.54 10.05 2 9 2 7.34 2 6 3.34 6 5c0 .35.07.69.18 1H4c-1.11 0-1.99.89-1.99 2L2 19c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-5-2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM9 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm11 15H4v-2h16v2zm0-5H4V8h5.08L7 10.83 8.62 12 11 8.76l1-1.36 1 1.36L15.38 12 17 10.83 14.92 8H20v6z"
                                      />
                                    </svg>
                                  </IconGiftCertificate>
                                </span>
                              </figure>
                              <div
                                className="product-column product-body"
                              >
                                <h4
                                  className="product-title optimizedCheckout-contentPrimary"
                                  data-test="cart-item-product-title"
                                >
                                  1 x $100 Gift Certificate
                                </h4>
                              </div>
                              <div
                                className="product-column product-actions"
                              >
                                <div
                                  className="product-price optimizedCheckout-contentPrimary"
                                  data-test="cart-item-product-price"
                                >
                                  <WithCurrency(ShopperCurrency)
                                    amount={100}
                                  />
                                </div>
                              </div>
                            </div>
                          </Memo(OrderSummaryItem)>
                        </li>
                      </ul>
                    </OrderSummaryItems>
                  </section>
                </OrderSummarySection>
                <OrderSummarySection>
                  <section
                    className="cart-section optimizedCheckout-orderSummary-cartSection"
                  >
                    <Memo(OrderSummarySubtotals)
                      coupons={
                        Array [
                          Object {
                            "code": "savebig2015",
                            "couponType": "percentage_discount",
                            "discountedAmount": 5,
                            "displayName": "20% off each item",
                            "id": "1",
                          },
                          Object {
                            "code": "279F507D817E3E7",
                            "couponType": "shipping_discount",
                            "discountedAmount": 5,
                            "displayName": "$5.00 off the shipping total",
                            "id": "4",
                          },
                        ]
                      }
                      discountAmount={10}
                      giftCertificates={
                        Array [
                          Object {
                            "balance": 10,
                            "code": "gc",
                            "purchaseDate": "",
                            "remaining": 3,
                            "used": 7,
                          },
                        ]
                      }
                      giftWrappingAmount={0}
                      handlingAmount={8}
                      isTaxIncluded={false}
                      shippingAmount={20}
                      storeCreditAmount={0}
                      subtotalAmount={200}
                      taxes={
                        Array [
                          Object {
                            "amount": 3,
                            "name": "Tax",
                          },
                        ]
                      }
                    >
                      <OrderSummaryPrice
                        amount={200}
                        className="cart-priceItem--subtotal"
                        label={
                          <WithLanguage(TranslatedString)
                            id="cart.subtotal_text"
                          />
                        }
                        testId="cart-subtotal"
                      >
                        <div
                          data-test="cart-subtotal"
                        >
                          <CSSTransition
                            addEndListener={[Function]}
                            classNames="changeHighlight"
                            in={true}
                            timeout={Object {}}
                          >
                            <Transition
                              addEndListener={[Function]}
                              appear={false}
                              enter={true}
                              exit={true}
                              in={true}
                              mountOnEnter={false}
                              onEnter={[Function]}
                              onEntered={[Function]}
                              onEntering={[Function]}
                              onExit={[Function]}
                              onExited={[Function]}
                              onExiting={[Function]}
                              timeout={Object {}}
                              unmountOnExit={false}
                            >
                              <div
                                aria-live="polite"
                                className="cart-priceItem optimizedCheckout-contentPrimary cart-priceItem--subtotal"
                              >
                                <span
                                  className="cart-priceItem-label"
                                >
                                  <span
                                    data-test="cart-price-label"
                                  >
                                    <WithLanguage(TranslatedString)
                                      id="cart.subtotal_text"
                                    />
                                      
                                  </span>
                                </span>
                                <span
                                  className="cart-priceItem-value"
                                >
                                  <span
                                    data-test="cart-price-value"
                                  >
                                    <WithCurrency(ShopperCurrency)
                                      amount={200}
                                    />
                                  </span>
                                </span>
                              </div>
                            </Transition>
                          </CSSTransition>
                        </div>
                      </OrderSummaryPrice>
                      <Memo(OrderSummaryDiscount)
                        amount={5}
                        code="savebig2015"
                        key="0"
                        label="20% off each item"
                        testId="cart-coupon"
                      >
                        <OrderSummaryPrice
                          amount={-5}
                          label="20% off each item"
                          testId="cart-coupon"
                        >
                          <div
                            data-test="cart-coupon"
                          >
                            <CSSTransition
                              addEndListener={[Function]}
                              classNames="changeHighlight"
                              in={true}
                              timeout={Object {}}
                            >
                              <Transition
                                addEndListener={[Function]}
                                appear={false}
                                enter={true}
                                exit={true}
                                in={true}
                                mountOnEnter={false}
                                onEnter={[Function]}
                                onEntered={[Function]}
                                onEntering={[Function]}
                                onExit={[Function]}
                                onExited={[Function]}
                                onExiting={[Function]}
                                timeout={Object {}}
                                unmountOnExit={false}
                              >
                                <div
                                  aria-live="polite"
                                  className="cart-priceItem optimizedCheckout-contentPrimary"
                                >
                                  <span
                                    className="cart-priceItem-label"
                                  >
                                    <span
                                      data-test="cart-price-label"
                                    >
                                      20% off each item
                                        
                                    </span>
                                  </span>
                                  <span
                                    className="cart-priceItem-value"
                                  >
                                    <span
                                      data-test="cart-price-value"
                                    >
                                      <WithCurrency(ShopperCurrency)
                                        amount={-5}
                                      />
                                    </span>
                                  </span>
                                  <span
                                    className="cart-priceItem-postFix optimizedCheckout-contentSecondary"
                                    data-test="cart-price-code"
                                  >
                                    savebig2015
                                  </span>
                                </div>
                              </Transition>
                            </CSSTransition>
                          </div>
                        </OrderSummaryPrice>
                      </Memo(OrderSummaryDiscount)>
                      <Memo(OrderSummaryDiscount)
                        amount={5}
                        code="279F507D817E3E7"
                        key="1"
                        label="$5.00 off the shipping total"
                        testId="cart-coupon"
                      >
                        <OrderSummaryPrice
                          amount={-5}
                          label="$5.00 off the shipping total"
                          testId="cart-coupon"
                        >
                          <div
                            data-test="cart-coupon"
                          >
                            <CSSTransition
                              addEndListener={[Function]}
                              classNames="changeHighlight"
                              in={true}
                              timeout={Object {}}
                            >
                              <Transition
                                addEndListener={[Function]}
                                appear={false}
                                enter={true}
                                exit={true}
                                in={true}
                                mountOnEnter={false}
                                onEnter={[Function]}
                                onEntered={[Function]}
                                onEntering={[Function]}
                                onExit={[Function]}
                                onExited={[Function]}
                                onExiting={[Function]}
                                timeout={Object {}}
                                unmountOnExit={false}
                              >
                                <div
                                  aria-live="polite"
                                  className="cart-priceItem optimizedCheckout-contentPrimary"
                                >
                                  <span
                                    className="cart-priceItem-label"
                                  >
                                    <span
                                      data-test="cart-price-label"
                                    >
                                      $5.00 off the shipping total
                                        
                                    </span>
                                  </span>
                                  <span
                                    className="cart-priceItem-value"
                                  >
                                    <span
                                      data-test="cart-price-value"
                                    >
                                      <WithCurrency(ShopperCurrency)
                                        amount={-5}
                                      />
                                    </span>
                                  </span>
                                  <span
                                    className="cart-priceItem-postFix optimizedCheckout-contentSecondary"
                                    data-test="cart-price-code"
                                  >
                                    279F507D817E3E7
                                  </span>
                                </div>
                              </Transition>
                            </CSSTransition>
                          </div>
                        </OrderSummaryPrice>
                      </Memo(OrderSummaryDiscount)>
                      <Memo(OrderSummaryDiscount)
                        amount={10}
                        label={
                          <WithLanguage(TranslatedString)
                            id="cart.discount_text"
                          />
                        }
                        testId="cart-discount"
                      >
                        <OrderSummaryPrice
                          amount={-10}
                          label={
                            <WithLanguage(TranslatedString)
                              id="cart.discount_text"
                            />
                          }
                          testId="cart-discount"
                        >
                          <div
                            data-test="cart-discount"
                          >
                            <CSSTransition
                              addEndListener={[Function]}
                              classNames="changeHighlight"
                              in={true}
                              timeout={Object {}}
                            >
                              <Transition
                                addEndListener={[Function]}
                                appear={false}
                                enter={true}
                                exit={true}
                                in={true}
                                mountOnEnter={false}
                                onEnter={[Function]}
                                onEntered={[Function]}
                                onEntering={[Function]}
                                onExit={[Function]}
                                onExited={[Function]}
                                onExiting={[Function]}
                                timeout={Object {}}
                                unmountOnExit={false}
                              >
                                <div
                                  aria-live="polite"
                                  className="cart-priceItem optimizedCheckout-contentPrimary"
                                >
                                  <span
                                    className="cart-priceItem-label"
                                  >
                                    <span
                                      data-test="cart-price-label"
                                    >
                                      <WithLanguage(TranslatedString)
                                        id="cart.discount_text"
                                      />
                                        
                                    </span>
                                  </span>
                                  <span
                                    className="cart-priceItem-value"
                                  >
                                    <span
                                      data-test="cart-price-value"
                                    >
                                      <WithCurrency(ShopperCurrency)
                                        amount={-10}
                                      />
                                    </span>
                                  </span>
                                </div>
                              </Transition>
                            </CSSTransition>
                          </div>
                        </OrderSummaryPrice>
                      </Memo(OrderSummaryDiscount)>
                      <Memo(OrderSummaryDiscount)
                        amount={7}
                        code="gc"
                        key="0"
                        label={
                          <WithLanguage(TranslatedString)
                            id="cart.gift_certificate_text"
                          />
                        }
                        remaining={3}
                        testId="cart-gift-certificate"
                      >
                        <OrderSummaryPrice
                          amount={-7}
                          label={
                            <WithLanguage(TranslatedString)
                              id="cart.gift_certificate_text"
                            />
                          }
                          testId="cart-gift-certificate"
                        >
                          <div
                            data-test="cart-gift-certificate"
                          >
                            <CSSTransition
                              addEndListener={[Function]}
                              classNames="changeHighlight"
                              in={true}
                              timeout={Object {}}
                            >
                              <Transition
                                addEndListener={[Function]}
                                appear={false}
                                enter={true}
                                exit={true}
                                in={true}
                                mountOnEnter={false}
                                onEnter={[Function]}
                                onEntered={[Function]}
                                onEntering={[Function]}
                                onExit={[Function]}
                                onExited={[Function]}
                                onExiting={[Function]}
                                timeout={Object {}}
                                unmountOnExit={false}
                              >
                                <div
                                  aria-live="polite"
                                  className="cart-priceItem optimizedCheckout-contentPrimary"
                                >
                                  <span
                                    className="cart-priceItem-label"
                                  >
                                    <span
                                      data-test="cart-price-label"
                                    >
                                      <WithLanguage(TranslatedString)
                                        id="cart.gift_certificate_text"
                                      />
                                        
                                    </span>
                                  </span>
                                  <span
                                    className="cart-priceItem-value"
                                  >
                                    <span
                                      data-test="cart-price-value"
                                    >
                                      <WithCurrency(ShopperCurrency)
                                        amount={-7}
                                      />
                                    </span>
                                  </span>
                                  <span
                                    className="cart-priceItem-postFix optimizedCheckout-contentSecondary"
                                    data-test="cart-price-remaining"
                                  >
                                    <WithLanguage(TranslatedString)
                                      id="cart.remaining_text"
                                    />
                                    : 
                                    <WithCurrency(ShopperCurrency)
                                      amount={3}
                                    />
                                  </span>
                                  <span
                                    className="cart-priceItem-postFix optimizedCheckout-contentSecondary"
                                    data-test="cart-price-code"
                                  >
                                    gc
                                  </span>
                                </div>
                              </Transition>
                            </CSSTransition>
                          </div>
                        </OrderSummaryPrice>
                      </Memo(OrderSummaryDiscount)>
                      <OrderSummaryPrice
                        amount={20}
                        label={
                          <WithLanguage(TranslatedString)
                            id="cart.shipping_text"
                          />
                        }
                        testId="cart-shipping"
                        zeroLabel={
                          <WithLanguage(TranslatedString)
                            id="cart.free_text"
                          />
                        }
                      >
                        <div
                          data-test="cart-shipping"
                        >
                          <CSSTransition
                            addEndListener={[Function]}
                            classNames="changeHighlight"
                            in={true}
                            timeout={Object {}}
                          >
                            <Transition
                              addEndListener={[Function]}
                              appear={false}
                              enter={true}
                              exit={true}
                              in={true}
                              mountOnEnter={false}
                              onEnter={[Function]}
                              onEntered={[Function]}
                              onEntering={[Function]}
                              onExit={[Function]}
                              onExited={[Function]}
                              onExiting={[Function]}
                              timeout={Object {}}
                              unmountOnExit={false}
                            >
                              <div
                                aria-live="polite"
                                className="cart-priceItem optimizedCheckout-contentPrimary"
                              >
                                <span
                                  className="cart-priceItem-label"
                                >
                                  <span
                                    data-test="cart-price-label"
                                  >
                                    <WithLanguage(TranslatedString)
                                      id="cart.shipping_text"
                                    />
                                      
                                  </span>
                                </span>
                                <span
                                  className="cart-priceItem-value"
                                >
                                  <span
                                    data-test="cart-price-value"
                                  >
                                    <WithCurrency(ShopperCurrency)
                                      amount={20}
                                    />
                                  </span>
                                </span>
                              </div>
                            </Transition>
                          </CSSTransition>
                        </div>
                      </OrderSummaryPrice>
                      <OrderSummaryPrice
                        amount={8}
                        label={
                          <WithLanguage(TranslatedString)
                            id="cart.handling_text"
                          />
                        }
                        testId="cart-handling"
                      >
                        <div
                          data-test="cart-handling"
                        >
                          <CSSTransition
                            addEndListener={[Function]}
                            classNames="changeHighlight"
                            in={true}
                            timeout={Object {}}
                          >
                            <Transition
                              addEndListener={[Function]}
                              appear={false}
                              enter={true}
                              exit={true}
                              in={true}
                              mountOnEnter={false}
                              onEnter={[Function]}
                              onEntered={[Function]}
                              onEntering={[Function]}
                              onExit={[Function]}
                              onExited={[Function]}
                              onExiting={[Function]}
                              timeout={Object {}}
                              unmountOnExit={false}
                            >
                              <div
                                aria-live="polite"
                                className="cart-priceItem optimizedCheckout-contentPrimary"
                              >
                                <span
                                  className="cart-priceItem-label"
                                >
                                  <span
                                    data-test="cart-price-label"
                                  >
                                    <WithLanguage(TranslatedString)
                                      id="cart.handling_text"
                                    />
                                      
                                  </span>
                                </span>
                                <span
                                  className="cart-priceItem-value"
                                >
                                  <span
                                    data-test="cart-price-value"
                                  >
                                    <WithCurrency(ShopperCurrency)
                                      amount={8}
                                    />
                                  </span>
                                </span>
                              </div>
                            </Transition>
                          </CSSTransition>
                        </div>
                      </OrderSummaryPrice>
                      <OrderSummaryPrice
                        amount={3}
                        key="0"
                        label="Tax"
                        testId="cart-taxes"
                      >
                        <div
                          data-test="cart-taxes"
                        >
                          <CSSTransition
                            addEndListener={[Function]}
                            classNames="changeHighlight"
                            in={true}
                            timeout={Object {}}
                          >
                            <Transition
                              addEndListener={[Function]}
                              appear={false}
                              enter={true}
                              exit={true}
                              in={true}
                              mountOnEnter={false}
                              onEnter={[Function]}
                              onEntered={[Function]}
                              onEntering={[Function]}
                              onExit={[Function]}
                              onExited={[Function]}
                              onExiting={[Function]}
                              timeout={Object {}}
                              unmountOnExit={false}
                            >
                              <div
                                aria-live="polite"
                                className="cart-priceItem optimizedCheckout-contentPrimary"
                              >
                                <span
                                  className="cart-priceItem-label"
                                >
                                  <span
                                    data-test="cart-price-label"
                                  >
                                    Tax
                                      
                                  </span>
                                </span>
                                <span
                                  className="cart-priceItem-value"
                                >
                                  <span
                                    data-test="cart-price-value"
                                  >
                                    <WithCurrency(ShopperCurrency)
                                      amount={3}
                                    />
                                  </span>
                                </span>
                              </div>
                            </Transition>
                          </CSSTransition>
                        </div>
                      </OrderSummaryPrice>
                    </Memo(OrderSummarySubtotals)>
                  </section>
                </OrderSummarySection>
                <OrderSummarySection>
                  <section
                    className="cart-section optimizedCheckout-orderSummary-cartSection"
                  >
                    <WithCurrency(OrderSummaryTotal)
                      orderAmount={190}
                      shopperCurrencyCode="USD"
                      storeCurrencyCode="USD"
                    />
                  </section>
                </OrderSummarySection>
              </div>
              <div
                className="modal-footer"
                data-test="modal-footer"
              >
                <Button
                  className="cart-modal-continue"
                  data-test="manage-instrument-cancel-button"
                  onClick={[Function]}
                >
                  <button
                    className="button cart-modal-continue"
                    onClick={[Function]}
                    type="button"
                  >
                    <WithLanguage(TranslatedString)
                      id="cart.return_to_checkout"
                    />
                  </button>
                </Button>
              </div>
            </div>
          </div>
        </ModalPortal>
      </Portal>
    </Modal>
  </Modal>
</OrderSummaryModal>
`;

exports[`OrderSummaryModal renders order summary 1`] = `
<Modal
  additionalBodyClassName="cart-modal-body optimizedCheckout-orderSummary"
  additionalHeaderClassName="cart-modal-header optimizedCheckout-orderSummary"
  additionalModalClassName=""
  footer={false}
  header={
    <React.Fragment>
      <a
        className="cart-modal-close"
        href="#"
        onClick={[Function]}
      >
        <span
          className="is-srOnly"
        >
          <WithLanguage(TranslatedString)
            id="common.close_action"
          />
        </span>
        <Memo />
      </a>
      <ModalHeader
        additionalClassName="cart-modal-title"
      >
        <WithLanguage(TranslatedString)
          id="cart.cart_heading"
        />
      </ModalHeader>
    </React.Fragment>
  }
  isOpen={true}
>
  <OrderSummarySection>
    <OrderSummaryItems
      items={
        Object {
          "customItems": Array [],
          "digitalItems": Array [],
          "giftCertificates": Array [
            Object {
              "amount": 100,
              "id": "bd391ead-8c58-4105-b00e-d75d233b429a",
              "message": "message",
              "name": "$100 Gift Certificate",
              "recipient": Object {
                "email": "lu@is.com",
                "name": "luis",
              },
              "sender": Object {
                "email": "pa@blo.com",
                "name": "pablo",
              },
              "taxable": false,
              "theme": "General",
            },
          ],
          "physicalItems": Array [
            Object {
              "addedByPromotion": false,
              "brand": "OFS",
              "categoryNames": Array [
                "Cat 1",
              ],
              "comparisonPrice": 200,
              "couponAmount": 0,
              "discountAmount": 0,
              "discounts": Array [],
              "extendedComparisonPrice": 250,
              "extendedListPrice": 200,
              "extendedSalePrice": 200,
              "id": "666",
              "imageUrl": "/images/canvas-laundry-cart.jpg",
              "isShippingRequired": true,
              "isTaxable": true,
              "listPrice": 200,
              "name": "Canvas Laundry Cart",
              "options": Array [
                Object {
                  "name": "n",
                  "nameId": 1,
                  "value": "v",
                  "valueId": 3,
                },
              ],
              "productId": 103,
              "quantity": 1,
              "salePrice": 200,
              "sku": "CLC",
              "url": "/canvas-laundry-cart/",
              "variantId": 71,
            },
          ],
        }
      }
    />
  </OrderSummarySection>
  <OrderSummarySection>
    <Memo(OrderSummarySubtotals)
      coupons={
        Array [
          Object {
            "code": "savebig2015",
            "couponType": "percentage_discount",
            "discountedAmount": 5,
            "displayName": "20% off each item",
            "id": "1",
          },
          Object {
            "code": "279F507D817E3E7",
            "couponType": "shipping_discount",
            "discountedAmount": 5,
            "displayName": "$5.00 off the shipping total",
            "id": "4",
          },
        ]
      }
      discountAmount={10}
      giftCertificates={
        Array [
          Object {
            "balance": 10,
            "code": "gc",
            "purchaseDate": "",
            "remaining": 3,
            "used": 7,
          },
        ]
      }
      giftWrappingAmount={0}
      handlingAmount={8}
      isTaxIncluded={false}
      shippingAmount={20}
      storeCreditAmount={0}
      subtotalAmount={200}
      taxes={
        Array [
          Object {
            "amount": 3,
            "name": "Tax",
          },
        ]
      }
    />
    foo
  </OrderSummarySection>
  <OrderSummarySection>
    <WithCurrency(OrderSummaryTotal)
      orderAmount={190}
      shopperCurrencyCode="USD"
      storeCurrencyCode="USD"
    />
  </OrderSummarySection>
</Modal>
`;

exports[`OrderSummaryModal when taxes are inclusive displays tax as summary section 1`] = `
<Modal
  additionalBodyClassName="cart-modal-body optimizedCheckout-orderSummary"
  additionalHeaderClassName="cart-modal-header optimizedCheckout-orderSummary"
  additionalModalClassName=""
  footer={false}
  header={
    <React.Fragment>
      <a
        className="cart-modal-close"
        href="#"
        onClick={[Function]}
      >
        <span
          className="is-srOnly"
        >
          <WithLanguage(TranslatedString)
            id="common.close_action"
          />
        </span>
        <Memo />
      </a>
      <ModalHeader
        additionalClassName="cart-modal-title"
      >
        <WithLanguage(TranslatedString)
          id="cart.cart_heading"
        />
      </ModalHeader>
    </React.Fragment>
  }
  isOpen={true}
>
  <OrderSummarySection>
    <OrderSummaryItems
      items={
        Object {
          "customItems": Array [],
          "digitalItems": Array [],
          "giftCertificates": Array [
            Object {
              "amount": 100,
              "id": "bd391ead-8c58-4105-b00e-d75d233b429a",
              "message": "message",
              "name": "$100 Gift Certificate",
              "recipient": Object {
                "email": "lu@is.com",
                "name": "luis",
              },
              "sender": Object {
                "email": "pa@blo.com",
                "name": "pablo",
              },
              "taxable": false,
              "theme": "General",
            },
          ],
          "physicalItems": Array [
            Object {
              "addedByPromotion": false,
              "brand": "OFS",
              "categoryNames": Array [
                "Cat 1",
              ],
              "comparisonPrice": 200,
              "couponAmount": 0,
              "discountAmount": 0,
              "discounts": Array [],
              "extendedComparisonPrice": 250,
              "extendedListPrice": 200,
              "extendedSalePrice": 200,
              "id": "666",
              "imageUrl": "/images/canvas-laundry-cart.jpg",
              "isShippingRequired": true,
              "isTaxable": true,
              "listPrice": 200,
              "name": "Canvas Laundry Cart",
              "options": Array [
                Object {
                  "name": "n",
                  "nameId": 1,
                  "value": "v",
                  "valueId": 3,
                },
              ],
              "productId": 103,
              "quantity": 1,
              "salePrice": 200,
              "sku": "CLC",
              "url": "/canvas-laundry-cart/",
              "variantId": 71,
            },
          ],
        }
      }
    />
  </OrderSummarySection>
  <OrderSummarySection>
    <Memo(OrderSummarySubtotals)
      coupons={
        Array [
          Object {
            "code": "savebig2015",
            "couponType": "percentage_discount",
            "discountedAmount": 5,
            "displayName": "20% off each item",
            "id": "1",
          },
          Object {
            "code": "279F507D817E3E7",
            "couponType": "shipping_discount",
            "discountedAmount": 5,
            "displayName": "$5.00 off the shipping total",
            "id": "4",
          },
        ]
      }
      discountAmount={10}
      giftCertificates={
        Array [
          Object {
            "balance": 10,
            "code": "gc",
            "purchaseDate": "",
            "remaining": 3,
            "used": 7,
          },
        ]
      }
      giftWrappingAmount={0}
      handlingAmount={8}
      isTaxIncluded={true}
      shippingAmount={20}
      storeCreditAmount={0}
      subtotalAmount={200}
      taxes={
        Array [
          Object {
            "amount": 3,
            "name": "Tax",
          },
        ]
      }
    />
  </OrderSummarySection>
  <OrderSummarySection>
    <WithCurrency(OrderSummaryTotal)
      orderAmount={190}
      shopperCurrencyCode="USD"
      storeCurrencyCode="USD"
    />
  </OrderSummarySection>
  <OrderSummarySection>
    <h5
      className="cart-taxItem cart-taxItem--subtotal optimizedCheckout-contentPrimary"
      data-test="tax-text"
    >
      <WithLanguage(TranslatedString)
        id="tax.inclusive_label"
      />
    </h5>
    <OrderSummaryPrice
      amount={3}
      key="0"
      label="Tax"
      testId="cart-taxes"
    />
  </OrderSummarySection>
</Modal>
`;
