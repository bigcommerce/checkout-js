{"version":3,"file":"cart-summary-04a7207b.js","mappings":"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","sources":["webpack://checkout/./packages/core/src/app/cart/CartSummary.tsx","webpack://checkout/./packages/core/src/app/cart/EditLink.tsx","webpack://checkout/./packages/core/src/app/cart/withRedeemable.tsx","webpack://checkout/./packages/core/src/app/cart/mapToOrderSummarySubtotalsProps.ts","webpack://checkout/./packages/core/src/app/cart/mapToCartSummaryProps.ts","webpack://checkout/./packages/ui/src/modal/ConfirmationModal.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryHeader.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummary.tsx"],"sourcesContent":["import { Checkout, ShopperCurrency, StoreCurrency } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent } from 'react';\n\nimport { withCheckout } from '../checkout';\nimport { isBuyNowCart } from '../common/utility';\nimport OrderSummary from '../order/OrderSummary';\n\nimport EditLink from './EditLink';\nimport mapToCartSummaryProps from './mapToCartSummaryProps';\nimport { RedeemableProps } from './Redeemable';\nimport withRedeemable from './withRedeemable';\n\nexport type WithCheckoutCartSummaryProps = {\n    checkout: Checkout;\n    cartUrl: string;\n    storeCurrency: StoreCurrency;\n    shopperCurrency: ShopperCurrency;\n    storeCreditAmount?: number;\n    isShippingDiscountDisplayEnabled: boolean;\n} & RedeemableProps;\n\nconst CartSummary: FunctionComponent<\n    WithCheckoutCartSummaryProps & {\n        isMultiShippingMode: boolean;\n    }\n    > = ({ cartUrl, isMultiShippingMode, ...props }) => {\n    const headerLink = isBuyNowCart() ? null : (\n        <EditLink\n            isMultiShippingMode={isMultiShippingMode}\n            url={cartUrl}\n        />\n    );\n\n    return withRedeemable(OrderSummary)({\n        ...props,\n        cartUrl,\n        headerLink,\n    });\n};\n\nexport default withCheckout(mapToCartSummaryProps)(CartSummary);\n","import React, { FunctionComponent, memo, useState } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { ConfirmationModal } from '@bigcommerce/checkout/ui';\n\nexport interface EditLinkProps {\n    className?: string;\n    isMultiShippingMode: boolean;\n    url: string;\n}\n\nconst EditLink: FunctionComponent<EditLinkProps> = ({ className, url, isMultiShippingMode }) => {\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    const gotoCartPage = () => {\n        window.location.assign(url);\n    };\n\n    if (isMultiShippingMode) {\n        return (\n            <>\n                <ConfirmationModal\n                    action={gotoCartPage}\n                    headerId=\"cart.edit_cart_action\"\n                    isModalOpen={isModalOpen}\n                    messageId=\"cart.edit_multi_shipping_cart_message\"\n                    onRequestClose={() => setIsModalOpen(false)}\n                />\n                <a\n                    className={className || 'cart-header-link'}\n                    data-test=\"cart-edit-link\"\n                    href=\"#\"\n                    id=\"cart-edit-link\"\n                    onClick={preventDefault(() => setIsModalOpen(true))}\n                >\n                    <TranslatedString id=\"cart.edit_cart_action\" />\n                </a>\n            </>\n        );\n    }\n\n    return (\n        <a\n            className={className || 'cart-header-link'}\n            data-test=\"cart-edit-link\"\n            href={url}\n            id=\"cart-edit-link\"\n            target=\"_top\"\n        >\n            <TranslatedString id=\"cart.edit_cart_action\" />\n        </a>\n    );\n};\n\nexport default memo(EditLink);\n","import React, { ComponentType, FunctionComponent } from 'react';\n\nimport { OrderSummaryProps, OrderSummarySubtotalsProps } from '../order';\n\nimport { WithCheckoutCartSummaryProps } from './CartSummary';\nimport mapToOrderSummarySubtotalsProps from './mapToOrderSummarySubtotalsProps';\nimport Redeemable from './Redeemable';\n\nexport default function withRedeemable(\n    OriginalComponent: ComponentType<OrderSummaryProps & OrderSummarySubtotalsProps>,\n): FunctionComponent<WithCheckoutCartSummaryProps & { headerLink?: any }> {\n    return (props) => {\n        const {\n            checkout,\n            storeCurrency,\n            shopperCurrency,\n            headerLink,\n            onRemovedCoupon,\n            onRemovedGiftCertificate,\n            storeCreditAmount,\n            isShippingDiscountDisplayEnabled,\n            ...redeemableProps\n        } = props;\n\n        return (\n            <OriginalComponent\n                {...mapToOrderSummarySubtotalsProps(checkout, isShippingDiscountDisplayEnabled)}\n                additionalLineItems={\n                    <Redeemable\n                        {...{\n                            ...redeemableProps,\n                            onRemovedCoupon,\n                            onRemovedGiftCertificate,\n                        }}\n                    />\n                }\n                headerLink={headerLink}\n                lineItems={checkout.cart.lineItems}\n                onRemovedCoupon={onRemovedCoupon}\n                onRemovedGiftCertificate={onRemovedGiftCertificate}\n                shopperCurrency={shopperCurrency}\n                storeCreditAmount={storeCreditAmount}\n                storeCurrency={storeCurrency}\n                total={checkout.outstandingBalance}\n            />\n        );\n    };\n}\n","import { Checkout } from '@bigcommerce/checkout-sdk';\n\nimport { OrderSummarySubtotalsProps } from '../order';\nimport { getShippingCostAfterAutomaticDiscount, hasSelectedShippingOptions } from '../shipping';\n\nexport default function mapToOrderSummarySubtotalsProps({\n    subtotal,\n    cart: { discountAmount, isTaxIncluded },\n    giftCertificates,\n    consignments,\n    handlingCostTotal,\n    shippingCostBeforeDiscount,\n    giftWrappingCostTotal,\n    coupons,\n    taxes,\n    fees,\n}: Checkout,\nisShippingDiscountDisplayEnabled: boolean,\n): OrderSummarySubtotalsProps {\n    const allConsignmentsHaveSelectedShippingOption = hasSelectedShippingOptions(consignments);\n\n    const shippingAmount = allConsignmentsHaveSelectedShippingOption\n        ? isShippingDiscountDisplayEnabled\n            ? getShippingCostAfterAutomaticDiscount(shippingCostBeforeDiscount, consignments)\n            : shippingCostBeforeDiscount\n        : undefined;\n\n    return {\n        subtotalAmount: subtotal,\n        discountAmount,\n        giftCertificates,\n        giftWrappingAmount: giftWrappingCostTotal,\n        shippingAmount,\n        shippingAmountBeforeDiscount: isShippingDiscountDisplayEnabled && allConsignmentsHaveSelectedShippingOption\n            ? shippingCostBeforeDiscount\n            : undefined,\n        handlingAmount: handlingCostTotal,\n        coupons,\n        taxes,\n        fees,\n        isTaxIncluded,\n    };\n}\n","import { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { isExperimentEnabled } from '../common/utility';\n\nimport { WithCheckoutCartSummaryProps } from './CartSummary';\nimport mapToRedeemableProps from './mapToRedeemableProps';\n\nexport default function mapToCartSummaryProps(\n    context: CheckoutContextProps,\n): WithCheckoutCartSummaryProps | null {\n    const {\n        checkoutState: {\n            data: { getConfig, getCustomer, getCheckout },\n        },\n    } = context;\n\n    const checkout = getCheckout();\n    const config = getConfig();\n    const customer = getCustomer();\n    const redeemableProps = mapToRedeemableProps(context);\n\n    if (!checkout || !config || !redeemableProps || !customer) {\n        return null;\n    }\n\n    const { isStoreCreditApplied, grandTotal } = checkout;\n    const { storeCredit } = customer;\n\n    const isShippingDiscountDisplayEnabled = isExperimentEnabled(\n        config.checkoutSettings,\n        'PROJECT-6643.enable_shipping_discounts_in_orders',\n    );\n\n    return {\n        isShippingDiscountDisplayEnabled,\n        checkout,\n        shopperCurrency: config.shopperCurrency,\n        cartUrl: config.links.cartLink,\n        storeCurrency: config.currency,\n        storeCreditAmount: isStoreCreditApplied ? Math.min(grandTotal, storeCredit) : undefined,\n        ...redeemableProps,\n    };\n}\n","import { noop } from 'lodash';\nimport React, { ReactNode } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button, ButtonSize, ButtonVariant } from '../button';\n\nimport Modal from './Modal';\nimport ModalHeader from './ModalHeader';\n\ninterface ConfirmationModalProps {\n    headerId: string;\n    messageId: string;\n    isModalOpen: boolean;\n    onRequestClose?: () => void;\n    action: () => void;\n    actionButtonLabel?: ReactNode;\n    shouldShowCloseButton?: boolean;\n}\n\nconst ConfirmationModal = ({\n    headerId,\n    messageId,\n    isModalOpen,\n    action,\n    actionButtonLabel,\n    onRequestClose = noop,\n    shouldShowCloseButton = true,\n}: ConfirmationModalProps) => {\n    return (\n        <Modal\n            additionalModalClassName=\"modal--confirm\"\n            footer={\n                <Button onClick={action} size={ButtonSize.Small} variant={ButtonVariant.Primary}>\n                    {actionButtonLabel ?? <TranslatedString id=\"common.confirm_action\" />}\n                </Button>\n            }\n            header={\n                <ModalHeader>\n                    <span aria-live=\"assertive\" role=\"alert\">\n                        <TranslatedString id={headerId} />\n                    </span>\n                </ModalHeader>\n            }\n            isOpen={isModalOpen}\n            onRequestClose={onRequestClose}\n            shouldShowCloseButton={shouldShowCloseButton}\n        >\n            <p aria-live=\"assertive\" role=\"alert\">\n                <TranslatedString id={messageId} />\n            </p>\n        </Modal>\n    );\n};\n\nexport default ConfirmationModal;\n","import React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nconst OrderSummaryHeader: FunctionComponent = ({ children }) => (\n    <header className=\"cart-header\">\n        <h3 className=\"cart-title optimizedCheckout-headingSecondary\">\n            <TranslatedString id=\"cart.cart_heading\" />\n        </h3>\n        {children}\n    </header>\n);\n\nexport default OrderSummaryHeader;\n","import {\n    ExtensionRegion,\n    LineItemMap,\n    ShopperCurrency,\n    StoreCurrency,\n} from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, ReactNode, useMemo } from 'react';\n\nimport { Extension } from '@bigcommerce/checkout/checkout-extension';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport OrderSummaryHeader from './OrderSummaryHeader';\nimport OrderSummaryItems from './OrderSummaryItems';\nimport OrderSummaryPrice from './OrderSummaryPrice';\nimport OrderSummarySection from './OrderSummarySection';\nimport OrderSummarySubtotals, { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\nimport OrderSummaryTotal from './OrderSummaryTotal';\nimport removeBundledItems from './removeBundledItems';\n\nexport interface OrderSummaryProps {\n    lineItems: LineItemMap;\n    total: number;\n    headerLink: ReactNode;\n    storeCurrency: StoreCurrency;\n    shopperCurrency: ShopperCurrency;\n    additionalLineItems?: ReactNode;\n}\n\nconst OrderSummary: FunctionComponent<OrderSummaryProps & OrderSummarySubtotalsProps> = ({\n    isTaxIncluded,\n    taxes,\n    storeCurrency,\n    shopperCurrency,\n    headerLink,\n    additionalLineItems,\n    lineItems,\n    total,\n    ...orderSummarySubtotalsProps\n}) => {\n    const nonBundledLineItems = useMemo(() => removeBundledItems(lineItems), [lineItems]);\n    const displayInclusiveTax = isTaxIncluded && taxes && taxes.length > 0;\n\n    return (\n        <article className=\"cart optimizedCheckout-orderSummary\" data-test=\"cart\">\n            <OrderSummaryHeader>{headerLink}</OrderSummaryHeader>\n\n            <OrderSummarySection>\n                <OrderSummaryItems displayLineItemsCount items={nonBundledLineItems} />\n            </OrderSummarySection>\n\n            <Extension region={ExtensionRegion.SummaryLastItemAfter} />\n\n            <OrderSummarySection>\n                <OrderSummarySubtotals isTaxIncluded={isTaxIncluded} taxes={taxes} {...orderSummarySubtotalsProps} />\n                {additionalLineItems}\n            </OrderSummarySection>\n\n            <OrderSummarySection>\n                <OrderSummaryTotal\n                    orderAmount={total}\n                    shopperCurrencyCode={shopperCurrency.code}\n                    storeCurrencyCode={storeCurrency.code}\n                />\n            </OrderSummarySection>\n\n            {displayInclusiveTax && <OrderSummarySection>\n                <h5\n                    className=\"cart-taxItem cart-taxItem--subtotal optimizedCheckout-contentPrimary\"\n                    data-test=\"tax-text\"\n                >\n                    <TranslatedString\n                        id=\"tax.inclusive_label\"\n                    />\n                </h5>\n                {(taxes || []).map((tax, index) => (\n                    <OrderSummaryPrice\n                        amount={tax.amount}\n                        key={index}\n                        label={tax.name}\n                        testId=\"cart-taxes\"\n                    />\n                ))}\n            </OrderSummarySection>}\n        </article>\n    );\n};\n\nexport default OrderSummary;\n"],"names":["cartUrl","isMultiShippingMode","props","headerLink","url","memo","className","useState","isModalOpen","setIsModalOpen","action","window","location","assign","headerId","messageId","onRequestClose","href","id","onClick","target","withRedeemable","OriginalComponent","checkout","storeCurrency","shopperCurrency","onRemovedCoupon","onRemovedGiftCertificate","storeCreditAmount","isShippingDiscountDisplayEnabled","redeemableProps","subtotal","cart","discountAmount","isTaxIncluded","giftCertificates","consignments","handlingCostTotal","shippingCostBeforeDiscount","giftWrappingCostTotal","coupons","taxes","fees","allConsignmentsHaveSelectedShippingOption","hasSelectedShippingOptions","subtotalAmount","giftWrappingAmount","shippingAmount","getShippingCostAfterAutomaticDiscount","undefined","shippingAmountBeforeDiscount","handlingAmount","mapToOrderSummarySubtotalsProps","additionalLineItems","Redeemable","lineItems","total","outstandingBalance","mapToCartSummaryProps","context","getConfig","getCustomer","getCheckout","config","customer","isStoreCreditApplied","grandTotal","storeCredit","checkoutSettings","links","cartLink","currency","Math","min","actionButtonLabel","noop","shouldShowCloseButton","additionalModalClassName","footer","size","Small","variant","Primary","header","role","isOpen","children","TranslatedString","orderSummarySubtotalsProps","nonBundledLineItems","useMemo","removeBundledItems","displayInclusiveTax","length","OrderSummarySection","OrderSummaryItems","displayLineItemsCount","items","Extension","region","OrderSummarySubtotals","OrderSummaryTotal","orderAmount","shopperCurrencyCode","code","storeCurrencyCode","map","tax","index","OrderSummaryPrice","amount","key","label","name","testId"],"sourceRoot":""}