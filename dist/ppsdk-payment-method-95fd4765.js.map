{"version":3,"file":"ppsdk-payment-method-95fd4765.js","mappings":"kLAiBA,MAoCA,GAAe,OAlCV,I,IAAA,qBACDA,EAAoB,sCACpBC,EAAqC,eACrCC,EAAc,iCACdC,EAAgC,uBAChCC,EAAsB,kBACtBC,GAAiB,EACdC,GAAI,cAPN,mKASD,MAAMC,GACF,IAAAC,aACI,CAAOC,EAASC,KAAuB,gDACnC,OAAOL,EAAkB,OAAD,wBACjBI,GAAO,CACVE,WAAYX,GAAwB,CAChCY,WAAYZ,EAAqBU,MAG7C,GACA,CAACV,EAAsBK,IAG/B,OACI,gBAAC,IAAuB,iBAChBC,EAAI,CACRO,aAAcX,EACdY,qBAAsBV,EACtBW,gCAAiCd,EACjCI,kBAAmBE,EACnBS,2BAA4Bb,M,qFCnCjC,MCNMc,EAAqCC,IAC9C,MAAM,SAAEC,EAAQ,QAAEC,GAAYF,EAI9B,OAFA,IAAAG,WAAUD,EAAS,CAACA,IAEb,gCAAGD,ICJDG,EAA2C,CACpDC,QAASC,EAAA,QACTC,KCJiBP,IACjB,MAAME,EHMuB,CAACF,IAC9B,MAAM,kBAAEb,EAAiB,oBAAEqB,EAAmB,OAAEC,EAAM,iBAAEC,EAAmB,EAAAC,MAASX,EAE9ET,GAAU,IAAAqB,SACZ,KAAM,CACFC,UAAWJ,EAAOK,QAClBC,SAAUN,EAAOO,KAErB,CAACP,EAAOK,QAASL,EAAOO,KAGtBC,GAAS,IAAA3B,aAAY,IAAMH,EAAkBI,GAAU,CAACJ,EAAmBI,IAC3E2B,GAAW,IAAA5B,aACb,IAAMkB,EAAoBjB,GAC1B,CAACiB,EAAqBjB,IAG1B,OAAO,IAAAD,aAAY,KACf2B,IAASE,MAAMT,GAER,KACHQ,IAAWC,MAAMT,KAEtB,CAACO,EAAQP,EAAkBQ,KG7BdE,CAAkBpB,GAElC,OAAO,gBAACD,EAAO,CAACG,QAASA,MCMhBmB,EAAgDrB,I,MACzD,MAAM,OAAES,EAAM,iBAAEC,EAAmB,EAAAC,MAASX,EAEtCsB,GAA4C,QAA7B,EAAAb,EAAOc,8BAAsB,eAAEC,OAAQ,GACtDC,EAAYrB,EAA2BkB,GAE7C,OAAKG,EAME,gBAACA,EAAS,iBAAKzB,KALlBU,EAAiB,IAAIgB,MAAM,4CAEpB,M","sources":["webpack://checkout/./packages/core/src/app/payment/paymentMethod/HostedCreditCardPaymentMethod.tsx","webpack://checkout/./packages/core/src/app/payment/paymentMethod/PPSDKPaymentMethod/usePropsToOnMount.ts","webpack://checkout/./packages/core/src/app/payment/paymentMethod/PPSDKPaymentMethod/Wrapper.tsx","webpack://checkout/./packages/core/src/app/payment/paymentMethod/PPSDKPaymentMethod/initializationComponentMap.ts","webpack://checkout/./packages/core/src/app/payment/paymentMethod/PPSDKPaymentMethod/NoUI.tsx","webpack://checkout/./packages/core/src/app/payment/paymentMethod/PPSDKPaymentMethod/PPSDKPaymentMethod.tsx"],"sourcesContent":["import React, { FunctionComponent, useCallback } from 'react';\n\nimport {\n    withHostedCreditCardFieldset,\n    WithInjectedHostedCreditCardFieldsetProps,\n} from '../hostedCreditCard';\n\nimport CreditCardPaymentMethod, { CreditCardPaymentMethodProps } from './CreditCardPaymentMethod';\n\nexport type HostedCreditCardPaymentMethodProps = Omit<\n    CreditCardPaymentMethodProps,\n    | 'cardFieldset'\n    | 'cardValidationSchema'\n    | 'storedCardValidationSchema'\n    | 'getStoredCardValidationFieldset'\n>;\n\nconst HostedCreditCardPaymentMethod: FunctionComponent<\n    HostedCreditCardPaymentMethodProps & WithInjectedHostedCreditCardFieldsetProps\n> = ({\n    getHostedFormOptions,\n    getHostedStoredCardValidationFieldset,\n    hostedFieldset,\n    hostedStoredCardValidationSchema,\n    hostedValidationSchema,\n    initializePayment,\n    ...rest\n}) => {\n    const initializeHostedCreditCardPayment: CreditCardPaymentMethodProps['initializePayment'] =\n        useCallback(\n            async (options, selectedInstrument) => {\n                return initializePayment({\n                    ...options,\n                    creditCard: getHostedFormOptions && {\n                        form: await getHostedFormOptions(selectedInstrument),\n                    },\n                });\n            },\n            [getHostedFormOptions, initializePayment],\n        );\n\n    return (\n        <CreditCardPaymentMethod\n            {...rest}\n            cardFieldset={hostedFieldset}\n            cardValidationSchema={hostedValidationSchema}\n            getStoredCardValidationFieldset={getHostedStoredCardValidationFieldset}\n            initializePayment={initializeHostedCreditCardPayment}\n            storedCardValidationSchema={hostedStoredCardValidationSchema}\n        />\n    );\n};\n\nexport default withHostedCreditCardFieldset(HostedCreditCardPaymentMethod);\n","import { CheckoutService, PaymentMethod } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport { useCallback, useMemo } from 'react';\n\ntype CheckoutServiceInstance = InstanceType<typeof CheckoutService>;\n\ninterface Props {\n    method: PaymentMethod;\n    deinitializePayment: CheckoutServiceInstance['deinitializePayment'];\n    initializePayment: CheckoutServiceInstance['initializePayment'];\n    onUnhandledError?(error: Error): void;\n}\n\nexport const usePropsToOnMount = (props: Props): (() => () => void) => {\n    const { initializePayment, deinitializePayment, method, onUnhandledError = noop } = props;\n\n    const options = useMemo(\n        () => ({\n            gatewayId: method.gateway,\n            methodId: method.id,\n        }),\n        [method.gateway, method.id],\n    );\n\n    const onInit = useCallback(() => initializePayment(options), [initializePayment, options]);\n    const onDeinit = useCallback(\n        () => deinitializePayment(options),\n        [deinitializePayment, options],\n    );\n\n    return useCallback(() => {\n        onInit().catch(onUnhandledError);\n\n        return () => {\n            onDeinit().catch(onUnhandledError);\n        };\n    }, [onInit, onUnhandledError, onDeinit]);\n};\n","import React, { FunctionComponent, useEffect } from 'react';\n\ninterface Props {\n    onMount(): () => void;\n    children?: React.ReactNode;\n}\n\nexport const Wrapper: FunctionComponent<Props> = (props) => {\n    const { children, onMount } = props;\n\n    useEffect(onMount, [onMount]);\n\n    return <>{children}</>;\n};\n","import { ComponentType } from 'react';\n\nimport HostedCreditCardPaymentMethod from '../HostedCreditCardPaymentMethod';\n\nimport { NoUI } from './NoUI';\n\ntype ComponentMap = Record<string, ComponentType<any>>;\n\nexport const initializationComponentMap: ComponentMap = {\n    card_ui: HostedCreditCardPaymentMethod,\n    none: NoUI,\n};\n","import React from 'react';\n\nimport { Props } from './PPSDKPaymentMethod';\nimport { usePropsToOnMount } from './usePropsToOnMount';\nimport { Wrapper } from './Wrapper';\n\nexport const NoUI = (props: Props) => {\n    const onMount = usePropsToOnMount(props);\n\n    return <Wrapper onMount={onMount} />;\n};\n","import { CheckoutService, PaymentMethod } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent } from 'react';\n\nimport { initializationComponentMap } from './initializationComponentMap';\n\ntype CheckoutServiceInstance = InstanceType<typeof CheckoutService>;\n\nexport interface Props {\n    method: PaymentMethod;\n    deinitializePayment: CheckoutServiceInstance['deinitializePayment'];\n    initializePayment: CheckoutServiceInstance['initializePayment'];\n    onUnhandledError?(error: Error): void;\n}\n\nexport const PPSDKPaymentMethod: FunctionComponent<Props> = (props) => {\n    const { method, onUnhandledError = noop } = props;\n\n    const componentKey = method.initializationStrategy?.type || '';\n    const Component = initializationComponentMap[componentKey];\n\n    if (!Component) {\n        onUnhandledError(new Error('PPSDK initialization strategy not found'));\n\n        return null;\n    }\n\n    return <Component {...props} />;\n};\n"],"names":["getHostedFormOptions","getHostedStoredCardValidationFieldset","hostedFieldset","hostedStoredCardValidationSchema","hostedValidationSchema","initializePayment","rest","initializeHostedCreditCardPayment","useCallback","options","selectedInstrument","creditCard","form","cardFieldset","cardValidationSchema","getStoredCardValidationFieldset","storedCardValidationSchema","Wrapper","props","children","onMount","useEffect","initializationComponentMap","card_ui","HostedCreditCardPaymentMethod","none","deinitializePayment","method","onUnhandledError","noop","useMemo","gatewayId","gateway","methodId","id","onInit","onDeinit","catch","usePropsToOnMount","PPSDKPaymentMethod","componentKey","initializationStrategy","type","Component","Error"],"sourceRoot":""}