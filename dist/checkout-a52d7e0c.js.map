{"version":3,"file":"checkout-a52d7e0c.js","mappings":"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","sources":["webpack://checkout/./packages/analytics/src/AnalyticsContext.ts","webpack://checkout/./packages/analytics/src/createAnalyticsService.ts","webpack://checkout/./packages/analytics/src/AnalyticsProvider.tsx","webpack://checkout/./packages/checkout-extension/src/ExtensionContext.tsx","webpack://checkout/./packages/core/src/app/address/AddressType.ts","webpack://checkout/./packages/core/src/app/address/localizeAddress.ts","webpack://checkout/./packages/core/src/app/address/StaticAddress.tsx","webpack://checkout/./packages/core/src/app/formFields/getFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/address/getAddressFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/address/isValidAddress.ts","webpack://checkout/./packages/core/src/app/address/mapAddressToFormValues.ts","webpack://checkout/./packages/core/src/app/analytics/withAnalytics.ts","webpack://checkout/./packages/core/src/app/billing/StaticBillingAddress.tsx","webpack://checkout/./packages/core/src/app/recurly/cartHasSubscription.ts","webpack://checkout/./packages/core/src/app/recurly/getUser.ts","webpack://checkout/./packages/core/src/app/recurly/submitOrder.ts","webpack://checkout/./packages/core/src/app/recurly/RecurlyProvider.tsx","webpack://checkout/./packages/checkout-extension/src/ExtensionReducer.ts","webpack://checkout/./packages/checkout-extension/src/handlers/createReloadCheckoutHandler.ts","webpack://checkout/./packages/checkout-extension/src/handlers/createSetIframeStyleHandler.ts","webpack://checkout/./packages/checkout-extension/src/handlers/createShowLoadingIndicatorHandler.ts","webpack://checkout/./packages/checkout-extension/src/ExtensionService.ts","webpack://checkout/./packages/checkout-extension/src/ExtensionProvider.tsx","webpack://checkout/./packages/checkout-extension/src/isCheckoutExtensionEnabled.ts","webpack://checkout/./packages/core/src/app/checkout/NoopCheckoutSupport.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/errors/EmbeddedCheckoutUnsupportedError.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutSupport.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/createEmbeddedCheckoutSupport.ts","webpack://checkout/./packages/checkout-extension/src/withExtension.ts","webpack://checkout/./packages/core/src/app/cart/EmptyCartMessage.tsx","webpack://checkout/./packages/core/src/app/customer/CustomerViewType.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/WalletButtonContainerSkeleton.tsx","webpack://checkout/./packages/core/src/app/common/utility/is-apple-pay-window.ts","webpack://checkout/./packages/core/src/app/customer/getSupportedMethods.ts","webpack://checkout/./packages/core/src/app/customer/CheckoutButton.tsx","webpack://checkout/./packages/core/src/app/checkout/navigateToOrderConfirmation.tsx","webpack://checkout/./packages/core/src/app/customer/customWalletButton/ApplePayButton.tsx","webpack://checkout/./packages/core/src/app/customer/customWalletButton/AmazonPayV2Button.tsx","webpack://checkout/./packages/core/src/app/customer/customWalletButton/PayPalCommerceButton.tsx","webpack://checkout/./packages/core/src/app/customer/WalletButtonV1Resolver.tsx","webpack://checkout/./packages/core/src/app/customer/CheckoutButtonContainer.tsx","webpack://checkout/./packages/core/src/app/customer/resolveCheckoutButton.ts","webpack://checkout/./packages/analytics/src/useAnalytics.tsx","webpack://checkout/./packages/core/src/app/customer/checkoutSuggestion/BoltCheckoutSuggestion.tsx","webpack://checkout/./packages/dom-utils/src/stopPropagation.ts","webpack://checkout/./packages/core/src/app/customer/checkoutSuggestion/CheckoutSuggestion.tsx","webpack://checkout/./packages/core/src/app/customer/CheckoutButtonList.tsx","webpack://checkout/./packages/core/src/app/customer/canSignOut.ts","webpack://checkout/./packages/core/src/app/customer/CustomerInfo.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/CustomerSkeleton.tsx","webpack://checkout/./packages/core/src/app/customer/validationPatterns.ts","webpack://checkout/./packages/core/src/app/customer/getEmailValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/getCreateCustomerValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/CreateAccountForm.tsx","webpack://checkout/./packages/core/src/app/customer/EmailField.tsx","webpack://checkout/./packages/core/src/app/customer/EmailLoginForm.tsx","webpack://checkout/./packages/core/src/app/privacyPolicy/PrivacyPolicyField.tsx","webpack://checkout/./packages/core/src/app/privacyPolicy/getPrivacyPolicyValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/SubscribeField.tsx","webpack://checkout/./packages/core/src/app/customer/GuestForm.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconEye.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconEyeSlash.tsx","webpack://checkout/./packages/core/src/app/customer/PasswordField.tsx","webpack://checkout/./packages/core/src/app/customer/LoginForm.tsx","webpack://checkout/./packages/core/src/app/customer/mapErrorMessage.ts","webpack://checkout/./packages/core/src/app/customer/mapCreateAccountFromFormValues.ts","webpack://checkout/./packages/core/src/app/customer/StripeGuestForm.tsx","webpack://checkout/./packages/core/src/app/customer/SubscriptionForm.tsx","webpack://checkout/./packages/core/src/app/customer/Customer.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconTag.tsx","webpack://checkout/./packages/core/src/app/promotion/PromotionBanner.tsx","webpack://checkout/./packages/core/src/app/promotion/PromotionBannerList.tsx","webpack://checkout/./packages/core/src/app/shipping/isUsingMultiShipping.ts","webpack://checkout/./packages/core/src/app/shipping/StaticConsignment.tsx","webpack://checkout/./packages/core/src/app/shipping/shippingOption/ShippingOptionExpiredError.ts","webpack://checkout/./packages/core/src/app/ui/loading/LoadingNotification.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconCheck.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStepHeader.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStep.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/isMobileView.ts","webpack://checkout/./packages/core/src/app/checkout/CheckoutStepType.ts","webpack://checkout/./packages/core/src/app/shipping/itemsRequireShipping.ts","webpack://checkout/./packages/core/src/app/checkout/getCheckoutStepStatuses.ts","webpack://checkout/./packages/core/src/app/checkout/Checkout.tsx","webpack://checkout/./packages/core/src/app/checkout/mapToCheckoutProps.ts","webpack://checkout/./packages/core/src/app/checkout/CheckoutApp.tsx","webpack://checkout/./packages/core/src/app/checkout/withCheckout.tsx","webpack://checkout/./packages/core/src/app/common/error/CustomError.ts","webpack://checkout/./packages/core/src/app/common/error/ErrorCode.tsx","webpack://checkout/./packages/core/src/app/common/error/ErrorModal.tsx","webpack://checkout/./packages/core/src/app/common/error/computeErrorCode.ts","webpack://checkout/./packages/core/src/app/common/error/createCustomErrorType.ts","webpack://checkout/./packages/error-handling-utils/src/ErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/ConsoleErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/NoopErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/SentryErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/createErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/isCustomError.ts","webpack://checkout/./packages/core/src/app/common/error/isErrorWithType.ts","webpack://checkout/./packages/core/src/app/common/error/isRequestError.ts","webpack://checkout/./packages/payment-integration-api/src/isResolvableComponent.ts","webpack://checkout/./packages/core/src/app/common/resolver/resolveComponent.ts","webpack://checkout/./packages/core/src/app/common/utility/countryDialingCodes.ts","webpack://checkout/./packages/core/src/app/common/tracking/track.ts","webpack://checkout/./packages/core/src/app/common/utility/emptyData.ts","webpack://checkout/./packages/core/src/app/common/utility/isBuyNowCart.ts","webpack://checkout/./packages/core/src/app/common/utility/isFloatingLabelEnabled.ts","webpack://checkout/./packages/core/src/app/common/utility/retry.ts","webpack://checkout/./packages/core/src/app/currency/ShopperCurrency.tsx","webpack://checkout/./packages/core/src/app/customer/getPasswordRequirements.ts","webpack://checkout/./packages/core/src/app/common/dom/toCssRule.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutStyleParser.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutStylesheet.ts","webpack://checkout/./packages/core/src/app/common/dom/appendStylesheet.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/createEmbeddedCheckoutStylesheet.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/isEmbedded.ts","webpack://checkout/./packages/core/src/app/formFields/getCustomFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/formFields/mapCustomFormFieldsFromFormValues.ts","webpack://checkout/./packages/checkout-button-integration/src/CheckoutButton.tsx","webpack://checkout/./packages/payment-integration-api/src/errors/EmbeddedCheckoutUnsupportedError.ts","webpack://checkout/./packages/payment-integration-api/src/setPrototypeOf.ts","webpack://checkout/./packages/payment-integration-api/src/errors/CustomError.ts","webpack://checkout/./packages/google-pay-integration/src/GooglePayButton.tsx","webpack://checkout/./packages/payment-integration-api/src/isEmbedded.ts","webpack://checkout/./packages/core/src/app/giftCertificate/isGiftCertificatePayment.ts","webpack://checkout/./packages/core/src/app/common/bundler/getCurrentScriptPath.ts","webpack://checkout/./packages/core/src/app/common/bundler/configurePublicPath.ts","webpack://checkout/./packages/core/src/app/checkout/renderCheckout.tsx","webpack://checkout/./packages/core/src/app/order/renderOrderConfirmation.tsx","webpack://checkout/./packages/core/src/app/guestSignup/AccountService.ts","webpack://checkout/./packages/core/src/app/guestSignup/SignUpPasswordField.tsx","webpack://checkout/./packages/core/src/app/guestSignup/GuestSignUpForm.tsx","webpack://checkout/./packages/core/src/app/guestSignup/PasswordSavedSuccessAlert.tsx","webpack://checkout/./packages/core/src/app/guestSignup/SignedUpSuccessAlert.tsx","webpack://checkout/./packages/core/src/app/guestSignup/errors/AccountCreationRequirementsError.ts","webpack://checkout/./packages/core/src/app/guestSignup/errors/AccountCreationFailedError.ts","webpack://checkout/./packages/core/src/app/order/getPaymentInstructions.ts","webpack://checkout/./packages/core/src/app/giftCertificate/mapFromPayments.ts","webpack://checkout/./packages/core/src/app/order/getStoreCreditAmount.ts","webpack://checkout/./packages/core/src/app/order/mapToOrderSummarySubtotalsProps.ts","webpack://checkout/./packages/core/src/app/order/OrderConfirmationSection.tsx","webpack://checkout/./packages/core/src/app/order/MandateTextComponent.tsx","webpack://checkout/./packages/core/src/app/order/PaymentsWithMandates.tsx","webpack://checkout/./packages/core/src/app/order/OrderStatus.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconPrint.tsx","webpack://checkout/./packages/core/src/app/order/PrintLink.tsx","webpack://checkout/./packages/core/src/app/ui/header/PrimaryHeader.tsx","webpack://checkout/./packages/core/src/app/order/ThankYouHeader.tsx","webpack://checkout/./packages/core/src/app/order/OrderIncompleteHeader.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmation.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmationApp.tsx","webpack://checkout/./packages/core/src/app/payment/paymentMethod/PaymentMethodId.ts","webpack://checkout/./packages/core/src/app/payment/storeCredit/isStoreCreditPayment.ts","webpack://checkout/./packages/core/src/app/recurly/RecurlyContext.ts","webpack://checkout/./packages/core/src/app/recurly/config.ts","webpack://checkout/./packages/core/src/app/recurly/withRecurly.ts","webpack://checkout/./packages/core/src/app/shipping/StaticConsignmentItemList.tsx","webpack://checkout/./packages/core/src/app/shipping/findLineItems.ts","webpack://checkout/./packages/core/src/app/shipping/getLineItemsCount.ts","webpack://checkout/./packages/core/src/app/shipping/hasSelectedShippingOptions.ts","webpack://checkout/./packages/core/src/app/shipping/hasUnassignedLineItems.ts","webpack://checkout/./packages/core/src/app/shipping/shippingOption/ShippingOptionAdditionalDescription.tsx","webpack://checkout/./packages/core/src/app/shipping/shippingOption/StaticShippingOption.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconSuccess.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconInfo.tsx","webpack://checkout/./packages/core/src/app/ui/alert/Alert.tsx","webpack://checkout/./packages/core/src/app/ui/button/Button.tsx","webpack://checkout/./packages/core/src/app/ui/form/BasicFormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxFormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxInput.tsx","webpack://checkout/./packages/core/src/app/ui/form/RadioInput.tsx","webpack://checkout/./packages/core/src/app/ui/form/DynamicInput.tsx","webpack://checkout/./packages/core/src/app/ui/form/MultiCheckboxControl.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxGroupFormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/DynamicFormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/DynamicFormFieldType.ts","webpack://checkout/./packages/core/src/app/ui/form/Fieldset.tsx","webpack://checkout/./packages/core/src/app/ui/form/Form.tsx","webpack://checkout/./packages/core/src/app/ui/form/FormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/FormFieldContainer.tsx","webpack://checkout/./packages/core/src/app/ui/form/FormFieldError.tsx","webpack://checkout/./packages/core/src/app/ui/form/Input.tsx","webpack://checkout/./packages/core/src/app/ui/form/Label.tsx","webpack://checkout/./packages/core/src/app/ui/form/Legend.tsx","webpack://checkout/./packages/core/src/app/ui/form/TextArea.tsx","webpack://checkout/./packages/core/src/app/ui/form/TextInput.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconBolt.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconChevronDown.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconClose.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconError.tsx","webpack://checkout/./packages/core/src/app/ui/icon/withIconContainer.tsx","webpack://checkout/./packages/core/src/app/ui/loading/LazyContainer.tsx","webpack://checkout/./packages/core/src/app/ui/loading/LoadingOverlay.tsx","webpack://checkout/./packages/core/src/app/ui/loading/LoadingSpinner.tsx","webpack://checkout/./packages/core/src/app/ui/modal/Modal.tsx","webpack://checkout/./packages/core/src/app/ui/modal/ModalHeader.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/ViewPicker.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/MobileView.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/breakpoints.ts","webpack://checkout/./packages/core/src/app/ui/toggle/Toggle.tsx","webpack://checkout/./packages/dom-utils/src/getAppliedStyles.ts","webpack://checkout/./packages/dom-utils/src/parseAnchor.ts","webpack://checkout/./packages/dom-utils/src/preventDefault.ts","webpack://checkout/./packages/error-handling-utils/src/ErrorBoundary.tsx","webpack://checkout/./packages/legacy-hoc/src/createInjectHoc.tsx","webpack://checkout/./packages/legacy-hoc/src/createMappableInjectHoc.tsx","webpack://checkout/./packages/locale/src/LocaleContext.ts","webpack://checkout/./packages/locale/src/LocaleProvider.tsx","webpack://checkout/./packages/locale/src/TranslatedHtml.tsx","webpack://checkout/./packages/locale/src/TranslatedLink.tsx","webpack://checkout/./packages/locale/src/TranslatedString.tsx","webpack://checkout/./packages/locale/src/translations/index.ts","webpack://checkout/./packages/locale/src/getLanguageService.ts","webpack://checkout/./packages/locale/src/withCurrency.tsx","webpack://checkout/./packages/locale/src/withDate.tsx","webpack://checkout/./packages/locale/src/withLanguage.tsx","webpack://checkout/./packages/payment-integration-api/src/PaymentMethodId.ts","webpack://checkout/./packages/payment-integration-api/src/contexts/checkout-context/CheckoutContext.tsx","webpack://checkout/./packages/payment-integration-api/src/contexts/checkout-context/CheckoutProvider.tsx","webpack://checkout/./packages/payment-integration-api/src/toResolvableComponent.tsx","webpack://checkout/./packages/ui/src/icon/IconPayPalConnect.tsx","webpack://checkout/./packages/paypal-connect-integration/src/PoweredByPaypalConnectLabel.tsx","webpack://checkout/./packages/paypal-connect-integration/src/is-paypal-connect-address.ts","webpack://checkout/./packages/paypal-connect-integration/src/is-paypal-connect-method.ts","webpack://checkout/./packages/paypal-connect-integration/src/usePayPalConnectAddress.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/AddressFormSkeleton.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/ChecklistSkeleton.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/LoadingSkeleton.tsx","webpack://checkout/./packages/ui/src/form/contexts/FormContext.tsx","webpack://checkout/./packages/ui/src/icon/IconPayPalConnectSmall.tsx","webpack://checkout/./packages/ui/src/icon/withIconContainer.tsx"],"sourcesContent":["import { CheckoutPaymentMethodExecutedOptions } from '@bigcommerce/checkout-sdk';\nimport { createContext } from 'react';\n\nexport interface AnalyticsEvents {\n    checkoutBegin(): void;\n    trackStepCompleted(step: string): void;\n    trackStepViewed(step: string): void;\n    orderPurchased(): void;\n    customerEmailEntry(email: string): void;\n    customerSuggestionInit(payload?: CheckoutPaymentMethodExecutedOptions): void;\n    customerSuggestionExecute(): void;\n    customerPaymentMethodExecuted(payload?: CheckoutPaymentMethodExecutedOptions): void;\n    showShippingMethods(): void;\n    selectedPaymentMethod(methodName?: string): void;\n    clickPayButton(payload?: { [key: string]: unknown }): void;\n    paymentRejected(): void;\n    paymentComplete(): void;\n    exitCheckout(): void;\n}\n\nexport interface AnalyticsContextProps {\n    analyticsTracker: AnalyticsEvents;\n}\n\nconst AnalyticsContext = createContext<AnalyticsContextProps | undefined>(undefined);\n\nexport default AnalyticsContext;\n","export default function createAnalyticsService<T>(\n    createFn: (args?: any) => T,\n    createArguments: unknown[] = [],\n) {\n    let analyticsTracker: T;\n\n    return () => {\n        if (analyticsTracker) {\n            return analyticsTracker;\n        }\n\n        analyticsTracker = createFn(...createArguments);\n\n        return analyticsTracker;\n    };\n}\n","import {\n    BodlEventsPayload,\n    BodlService,\n    CheckoutService,\n    createBodlService,\n    createStepTracker,\n    StepTracker,\n} from '@bigcommerce/checkout-sdk';\nimport React, { ReactNode, useMemo } from 'react';\n\nimport AnalyticsContext, { AnalyticsEvents } from './AnalyticsContext';\nimport createAnalyticsService from './createAnalyticsService';\n\ninterface AnalyticsProviderProps {\n    checkoutService: CheckoutService;\n    children: ReactNode;\n}\n\nconst AnalyticsProvider = ({ checkoutService, children }: AnalyticsProviderProps) => {\n    const getStepTracker = useMemo(\n        () => createAnalyticsService<StepTracker>(createStepTracker, [checkoutService]),\n        [checkoutService],\n    );\n    const getBodlService = useMemo(\n        () => createAnalyticsService<BodlService>(createBodlService, [checkoutService.subscribe]),\n        [checkoutService],\n    );\n\n    const checkoutBegin = () => {\n        getStepTracker().trackCheckoutStarted();\n        getBodlService().checkoutBegin();\n    };\n\n    const trackStepCompleted = (currentStep: string) => {\n        getStepTracker().trackStepCompleted(currentStep);\n        getBodlService().stepCompleted(currentStep);\n    };\n\n    const trackStepViewed = (step: string) => {\n        getStepTracker().trackStepViewed(step);\n    };\n\n    const orderPurchased = () => {\n        getStepTracker().trackOrderComplete();\n        getBodlService().orderPurchased();\n    };\n\n    const customerEmailEntry = (email: string) => {\n        getBodlService().customerEmailEntry(email);\n    };\n\n    const customerSuggestionInit = (payload: BodlEventsPayload) => {\n        getBodlService().customerSuggestionInit(payload);\n    };\n\n    const customerSuggestionExecute = () => {\n        getBodlService().customerSuggestionExecute();\n    };\n\n    const customerPaymentMethodExecuted = (payload: BodlEventsPayload) => {\n        getBodlService().customerPaymentMethodExecuted(payload);\n    };\n\n    const showShippingMethods = () => {\n        getBodlService().showShippingMethods();\n    };\n\n    const selectedPaymentMethod = (methodName?: string) => {\n        getBodlService().selectedPaymentMethod(methodName);\n    };\n\n    const clickPayButton = (payload: BodlEventsPayload) => {\n        getBodlService().clickPayButton(payload);\n    };\n\n    const paymentRejected = () => {\n        getBodlService().paymentRejected();\n    };\n\n    const paymentComplete = () => {\n        getBodlService().paymentComplete();\n    };\n\n    const exitCheckout = () => {\n        getBodlService().exitCheckout();\n    };\n\n    const analyticsTracker: AnalyticsEvents = {\n        checkoutBegin,\n        trackStepCompleted,\n        trackStepViewed,\n        orderPurchased,\n        customerEmailEntry,\n        customerSuggestionInit,\n        customerSuggestionExecute,\n        customerPaymentMethodExecuted,\n        showShippingMethods,\n        selectedPaymentMethod,\n        clickPayButton,\n        paymentRejected,\n        paymentComplete,\n        exitCheckout,\n    };\n\n    return (\n        <AnalyticsContext.Provider value={{ analyticsTracker }}>\n            {children}\n        </AnalyticsContext.Provider>\n    );\n};\n\nexport default AnalyticsProvider;\n","import { createContext } from 'react';\n\nimport { ExtensionState } from './ExtensionProvider';\nimport { ExtensionService } from './ExtensionService';\n\nexport interface ExtensionContextProps {\n    isExtensionEnabled: () => boolean;\n    extensionService: ExtensionService;\n    extensionState: ExtensionState;\n}\n\nexport const ExtensionContext = createContext<ExtensionContextProps | undefined>(undefined);\n","enum AddressType {\n    Billing = 'billing',\n    Shipping = 'shipping',\n}\n\nexport default AddressType;\n","import { Address, Country } from '@bigcommerce/checkout-sdk';\nimport { find, isEmpty } from 'lodash';\n\nimport { LocalizedGeography } from '../geography';\n\nconst localizeAddress = <T1 extends Address>(\n    address: T1,\n    countries?: Country[],\n): T1 & LocalizedGeography => {\n    const country = find(countries, { code: address.countryCode });\n    const states = !country || isEmpty(country.subdivisions) ? [] : country.subdivisions;\n    const state = find(states, { code: address.stateOrProvinceCode });\n\n    return {\n        ...address,\n        localizedCountry: country ? country.name : address.country,\n        localizedProvince: state ? state.name : address.stateOrProvince,\n    };\n};\n\nexport default localizeAddress;\n","import {\n    Address,\n    CheckoutSelectors,\n    Country,\n    FormField,\n    ShippingInitializeOptions,\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { isEmpty } from 'lodash';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { isPayPalConnectAddress, usePayPalConnectAddress } from '@bigcommerce/checkout/paypal-connect-integration';\nimport { IconPayPalConnectSmall } from '@bigcommerce/checkout/ui';\n\nimport { withCheckout } from '../checkout';\n\nimport AddressType from './AddressType';\nimport isValidAddress from './isValidAddress';\nimport localizeAddress from './localizeAddress';\n\nimport './StaticAddress.scss';\n\nexport interface StaticAddressProps {\n    address: Address;\n    type?: AddressType;\n}\n\nexport interface StaticAddressEditableProps extends StaticAddressProps {\n    initialize?(options: ShippingInitializeOptions): Promise<CheckoutSelectors>;\n}\n\ninterface WithCheckoutStaticAddressProps {\n    countries?: Country[];\n    fields?: FormField[];\n}\n\nconst StaticAddress: FunctionComponent<\n    StaticAddressEditableProps & WithCheckoutStaticAddressProps\n> = ({ countries, fields, address: addressWithoutLocalization }) => {\n    const { isPayPalAxoEnabled, paypalConnectAddresses } = usePayPalConnectAddress();\n    const address = localizeAddress(addressWithoutLocalization, countries);\n    const isValid = !fields\n        ? !isEmpty(address)\n        : isValidAddress(\n              address,\n              fields.filter((field) => !field.custom),\n          );\n    const shouldShowProviderIcon = isPayPalAxoEnabled && isPayPalConnectAddress(addressWithoutLocalization, paypalConnectAddresses);\n\n    return !isValid ? null : (\n        <div\n            className={classNames(\n                'vcard checkout-address--static',\n                {\n                    'checkout-address--with-provider-icon': shouldShowProviderIcon,\n                }\n            )}\n        >\n            {shouldShowProviderIcon && <IconPayPalConnectSmall />}\n\n            {(address.firstName || address.lastName) && (\n                <p className=\"fn address-entry\">\n                    <span className=\"first-name\">{`${address.firstName} `}</span>\n                    <span className=\"family-name\">{address.lastName}</span>\n                </p>\n            )}\n\n            {(address.phone || address.company) && (\n                <p className=\"address-entry\">\n                    <span className=\"company-name\">{`${address.company} `}</span>\n                    <span className=\"tel\">{address.phone}</span>\n                </p>\n            )}\n\n            <div className=\"adr\">\n                <p className=\"street-address address-entry\">\n                    <span className=\"address-line-1\">{`${address.address1} `}</span>\n                    {address.address2 && (\n                        <span className=\"address-line-2\">{` / ${address.address2}`}</span>\n                    )}\n                </p>\n\n                <p className=\"address-entry\">\n                    {address.city && <span className=\"locality\">{`${address.city}, `}</span>}\n                    {address.localizedProvince && (\n                        <span className=\"region\">{`${address.localizedProvince}, `}</span>\n                    )}\n                    {address.postalCode && (\n                        <span className=\"postal-code\">{`${address.postalCode} / `}</span>\n                    )}\n                    {address.localizedCountry && (\n                        <span className=\"country-name\">{`${address.localizedCountry} `}</span>\n                    )}\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport function mapToStaticAddressProps(\n    context: CheckoutContextProps,\n    { address, type }: StaticAddressProps,\n): WithCheckoutStaticAddressProps | null {\n    const {\n        checkoutState: {\n            data: { getBillingCountries, getBillingAddressFields, getShippingAddressFields },\n        },\n    } = context;\n\n    return {\n        countries: getBillingCountries(),\n        fields:\n            type === AddressType.Billing\n                ? getBillingAddressFields(address.countryCode)\n                : type === AddressType.Shipping\n                ? getShippingAddressFields(address.countryCode)\n                : undefined,\n    };\n}\n\nexport default withCheckout(mapToStaticAddressProps)(memo(StaticAddress));\n","import { memoize } from '@bigcommerce/memoize';\nimport { object, ObjectSchema, string, StringSchema } from 'yup';\n\nimport getCustomFormFieldsValidationSchema, {\n    FormFieldsValidationSchemaOptions,\n} from './getCustomFormFieldsValidationSchema';\n\nexport const WHITELIST_REGEXP = /^[^<>]*$/;\n\nexport interface FormFieldValues {\n    [key: string]: string | { [id: string]: any };\n}\n\nexport default memoize(function getFormFieldsValidationSchema({\n    formFields,\n    translate = () => undefined,\n}: FormFieldsValidationSchemaOptions): ObjectSchema<FormFieldValues> {\n    return object({\n        ...formFields\n            .filter(({ custom }) => !custom)\n            .reduce((schema, { name, required, label }) => {\n                schema[name] = string();\n\n                if (required) {\n                    schema[name] = schema[name]\n                        .trim()\n                        .required(translate('required', { label, name }));\n                }\n\n                schema[name] = schema[name].matches(\n                    WHITELIST_REGEXP,\n                    translate('invalid', { name, label }),\n                );\n\n                return schema;\n            }, {} as { [key: string]: StringSchema }),\n    }).concat(\n        getCustomFormFieldsValidationSchema({ formFields, translate }),\n    ) as ObjectSchema<FormFieldValues>;\n});\n","import { FormField, LanguageService } from '@bigcommerce/checkout-sdk';\nimport { memoize } from 'lodash';\nimport { ObjectSchema } from 'yup';\n\nimport {\n    FormFieldValues,\n    getFormFieldsValidationSchema,\n    TranslateValidationErrorFunction,\n} from '../formFields';\n\nexport interface AddressFormFieldsValidationSchemaOptions {\n    formFields: FormField[];\n    language?: LanguageService;\n}\n\nexport function getTranslateAddressError(\n    language?: LanguageService,\n): TranslateValidationErrorFunction {\n    const requiredFieldErrorTranslationIds: { [fieldName: string]: string } = {\n        countryCode: 'address.country',\n        firstName: 'address.first_name',\n        lastName: 'address.last_name',\n        company: 'address.company_name',\n        address1: 'address.address_line_1',\n        address2: 'address.address_line_2',\n        city: 'address.city',\n        stateOrProvince: 'address.state',\n        stateOrProvinceCode: 'address.state',\n        postalCode: 'address.postal_code',\n        phone: 'address.phone_number',\n    };\n\n    return (type, { label, name, min, max }) => {\n        if (!language) {\n            return;\n        }\n\n        if (type === 'required') {\n            if (requiredFieldErrorTranslationIds[name]) {\n                return language.translate(\n                    `${requiredFieldErrorTranslationIds[name]}_required_error`,\n                );\n            }\n\n            return language.translate(`address.custom_required_error`, { label });\n        }\n\n        if (type === 'max' && max) {\n            return language.translate(`address.custom_max_error`, { label, max });\n        }\n\n        if (type === 'min' && min) {\n            return language.translate(`address.custom_max_error`, { label, min });\n        }\n\n        if (type === 'invalid') {\n            return language.translate(`address.invalid_characters_error`, { label });\n        }\n    };\n}\n\nexport default memoize(function getAddressFormFieldsValidationSchema({\n    formFields,\n    language,\n}: AddressFormFieldsValidationSchemaOptions): ObjectSchema<FormFieldValues> {\n    return getFormFieldsValidationSchema({\n        formFields,\n        translate: getTranslateAddressError(language),\n    });\n});\n","import { Address, FormField } from '@bigcommerce/checkout-sdk';\n\nimport getAddressFormFieldsValidationSchema from './getAddressFormFieldsValidationSchema';\nimport mapAddressToFormValues from './mapAddressToFormValues';\n\nexport default function isValidAddress(address: Address, formFields: FormField[]): boolean {\n    const addressSchema = getAddressFormFieldsValidationSchema({ formFields });\n\n    return addressSchema.isValidSync(mapAddressToFormValues(formFields, address));\n}\n","import { Address, AddressKey, FormField } from '@bigcommerce/checkout-sdk';\n\nimport { DynamicFormFieldType } from '../ui/form';\n\nexport type AddressFormValues = Pick<Address, Exclude<AddressKey, 'customFields'>> & {\n    customFields: { [id: string]: any };\n};\n\nexport default function mapAddressToFormValues(\n    fields: FormField[],\n    address?: Address,\n): AddressFormValues {\n    const values = {\n        ...fields.reduce(\n            (addressFormValues, { name, custom, fieldType, default: defaultValue }) => {\n                if (custom) {\n                    if (!addressFormValues.customFields) {\n                        addressFormValues.customFields = {};\n                    }\n\n                    const field =\n                        address &&\n                        address.customFields &&\n                        address.customFields.find(({ fieldId }) => fieldId === name);\n\n                    const fieldValue = field && field.fieldValue;\n\n                    addressFormValues.customFields[name] = getValue(\n                        fieldType,\n                        fieldValue,\n                        defaultValue,\n                    );\n\n                    return addressFormValues;\n                }\n\n                if (isSystemAddressFieldName(name)) {\n                    addressFormValues[name] = (address && address[name]) || '';\n                }\n\n                return addressFormValues;\n            },\n            {} as AddressFormValues,\n        ),\n    };\n\n    values.shouldSaveAddress =\n        address && address.shouldSaveAddress !== undefined ? address.shouldSaveAddress : true;\n\n    // Manually backfill stateOrProvince to avoid Formik warning (uncontrolled to controlled input)\n    if (values.stateOrProvince === undefined) {\n        values.stateOrProvince = '';\n    }\n\n    if (values.stateOrProvinceCode === undefined) {\n        values.stateOrProvinceCode = '';\n    }\n\n    return values;\n}\n\nfunction getValue(\n    fieldType?: string,\n    fieldValue?: string | string[] | number,\n    defaultValue?: string,\n): string | string[] | number | Date | undefined {\n    if (fieldValue === undefined || fieldValue === null) {\n        return getDefaultValue(fieldType, defaultValue);\n    }\n\n    if (fieldType === DynamicFormFieldType.date && typeof fieldValue === 'string') {\n        if (fieldValue) {\n            const [year, month, day] = fieldValue.split('-');\n            return new Date(Number(year), Number(month)-1, Number(day));\n        }\n        return undefined;\n    }\n\n    return fieldValue;\n}\n\nfunction getDefaultValue(fieldType?: string, defaultValue?: string): string | string[] | Date {\n    if (defaultValue && fieldType === DynamicFormFieldType.date) {\n        return new Date(defaultValue);\n    }\n\n    if (fieldType === DynamicFormFieldType.checkbox) {\n        return [];\n    }\n\n    return defaultValue || '';\n}\n\nfunction isSystemAddressFieldName(\n    fieldName: string,\n): fieldName is Exclude<keyof Address, 'customFields' | 'shouldSaveAddress'> {\n    return fieldName !== 'customFields' && fieldName !== 'shouldSaveAddress';\n}\n","import { AnalyticsContext } from '@bigcommerce/checkout/analytics';\nimport { createInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nconst withAnalytics = createInjectHoc(AnalyticsContext, { displayNamePrefix: 'WithAnalytics' });\n\nexport default withAnalytics;\n","import { Address, CheckoutPayment, FormField } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { isPayPalConnectAddress, PoweredByPaypalConnectLabel, usePayPalConnectAddress } from '@bigcommerce/checkout/paypal-connect-integration';\n\nimport { AddressType, StaticAddress } from '../address';\nimport { withCheckout } from '../checkout';\nimport { EMPTY_ARRAY } from '../common/utility';\n\nexport interface StaticBillingAddressProps {\n    address: Address;\n}\n\ninterface WithCheckoutStaticBillingAddressProps {\n    fields: FormField[];\n    payments?: CheckoutPayment[];\n}\n\nconst StaticBillingAddress: FunctionComponent<\n    StaticBillingAddressProps & WithCheckoutStaticBillingAddressProps\n> = ({ address, payments = EMPTY_ARRAY }) => {\n    const { isPayPalAxoEnabled, paypalConnectAddresses } = usePayPalConnectAddress();\n    const showPayPalConnectAddressLabel = isPayPalAxoEnabled && isPayPalConnectAddress(address, paypalConnectAddresses);\n\n    if (payments.find((payment) => payment.providerId === 'amazonpay')) {\n        return (\n            <p>\n                <TranslatedString id=\"billing.billing_address_amazonpay\" />\n            </p>\n        );\n    }\n\n    return (\n        <>\n            <StaticAddress address={address} type={AddressType.Billing} />\n\n            {showPayPalConnectAddressLabel && <PoweredByPaypalConnectLabel />}\n        </>\n    );\n};\n\nexport function mapToStaticBillingAddressProps(\n    { checkoutState }: CheckoutContextProps,\n    { address }: StaticBillingAddressProps,\n): WithCheckoutStaticBillingAddressProps | null {\n    const {\n        data: { getBillingAddressFields, getCheckout },\n    } = checkoutState;\n\n    const checkout = getCheckout();\n\n    return {\n        fields: getBillingAddressFields(address.countryCode),\n        payments: checkout && checkout.payments,\n    };\n}\n\nexport default withCheckout(mapToStaticBillingAddressProps)(memo(StaticBillingAddress));\n","import { Cart } from '@bigcommerce/checkout-sdk';\n\nimport { apiEndpoint } from './config';\n\nexport default async function cartHasSubscription(cart: Cart, store: string): Promise<boolean> {\n    const response = await fetch(`${apiEndpoint}/api/recurly/check-cart`, {\n        headers: {'Content-Type': 'application/json'},\n        method: 'POST',\n        body: JSON.stringify({store, skus: cart.lineItems.physicalItems.map(item => item.sku)}),\n    });\n    const result = await response.json();\n    if (response.status !== 200) {\n        throw new Error(result.message);\n    }\n\n    return result.hasPlan;\n}\n","import { apiEndpoint } from './config';\n\nexport default async function getUser(store: string) {\n    const customerResponse = await fetch('/customer/current.jwt?app_client_id=q4qtaqh5lhic2zcqu6n1kcs7ep1fbz8');\n    const jwtToken = await customerResponse.text();\n    const response = await fetch(`${apiEndpoint}/api/recurly/account?token=${jwtToken}&store=${store}`, {\n        method: 'GET',\n    });\n\n    return await response.json();\n}\n","import { TokenPayload } from '@recurly/recurly-js';\n\nimport config from './config';\n\nexport interface RecurlySubmission {\n    token?: TokenPayload;\n    currency: string;\n    cartId: string;\n    store: string;\n    orderId?: number;\n    threeDSecureToken?: any;\n}\n\nexport async function submitOrder(data: RecurlySubmission) {\n    const response = await fetch(`${config.apiEndpoint}/api/recurly/submit-order`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n    });\n    const result = await response.json();\n    if (response.status === 422) {\n        throw result;\n    }\n\n    if (response.status !== 200) {\n        throw result;\n    }\n\n    return result;\n}\n","import { Cart, Checkout, StoreConfig } from '@bigcommerce/checkout-sdk';\nimport { CustomerData, Elements, TokenPayload } from '@recurly/recurly-js';\nimport { noop } from 'lodash';\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\n\nimport { withCheckout, WithCheckoutProps } from '../checkout';\n\nimport cartHasSubscription from './cartHasSubscription';\nimport getUser from './getUser';\nimport { submitOrder } from './submitOrder';\nimport RecurlyContext, { RecurlyContextProps } from './RecurlyContext';\n\nexport interface RecurlyProviderProps {\n    cart: Cart;\n    checkout: Checkout;\n    config: StoreConfig;\n}\n\nfunction RecurlyProvider({cart, checkout, config, ...rest}: RecurlyProviderProps) {\n    const [recurlyState, setRecurlyState] = useState<RecurlyContextProps>({isLoadingRecurly: true, hasSubscription: false, isSubmitting: false, submitOrder: () => Promise.resolve(), resubmitRecurlyOrder: () => Promise.resolve()});\n    const [recurlyToken, setRecurlyToken] = useState<TokenPayload | null>(null);\n    useEffect(() => {\n        if (cart && config?.storeProfile) {\n            cartHasSubscription(cart, config.storeProfile.storeHash).then(hasSubscription => {\n                setRecurlyState(state => {\n                    return {...state, isLoadingRecurly: false, hasSubscription};\n                });\n            });\n        }\n    }, [cart, config]);\n    useEffect(() => {\n        if (cart?.customerId && config?.storeProfile) {\n            getUser(config.storeProfile.storeHash);\n        }\n\n    }, [cart, config]);\n    const resubmitRecurlyOrder = useCallback((customerInformation, secureToken) => {\n        return new Promise((resolve, reject) => {\n            if (recurlyToken) {\n                submitOrder({\n                    token: recurlyToken,\n                    currency: checkout.cart.currency.code,\n                    cartId: checkout.cart.id,\n                    store: config.storeProfile.storeHash,\n                    threeDSecureToken: secureToken,\n                }).then(json => {\n                    setRecurlyState(state => ({...state, isSubmitting: false}));\n                    resolve(json);\n                    window.location.replace(`checkout/order-confirmation/${json.orderId}`);\n\n                }, e => {\n                    setRecurlyState(state => ({...state, isSubmitting: false}));\n                    reject(e);\n                });\n            } else {\n                reject();\n            }\n        });\n\n    }, [checkout, config, recurlyToken]);\n    const submitRecurlyOrder = useCallback((elements, customerInformation) => {\n        setRecurlyState(state => {\n            return {...state, isSubmitting: true};\n        });\n\n        return new Promise((resolve, reject) => {\n            if (elements && customerInformation) {\n                recurly.token(elements, customerInformation, (err, token) => {\n                    if (err) {\n                        setRecurlyState(state => ({...state, isSubmitting: false}));\n                        reject(err);\n                    } else {\n                        setRecurlyToken(token);\n                        submitOrder({\n                            token,\n                            currency: checkout.cart.currency.code,\n                            cartId: checkout.cart.id,\n                            store: config.storeProfile.storeHash,\n                        }).then(json => {\n                            setRecurlyState(state => ({...state, isSubmitting: false}));\n                            window.location.replace(`checkout/order-confirmation/${json.orderId}`);\n\n                        }, e => {\n                            setRecurlyState(state => ({...state, isSubmitting: false}));\n                            reject(e);\n                        });\n                    }\n                });\n            } else {\n                submitOrder({\n                    currency: checkout.cart.currency.code,\n                    cartId: checkout.cart.id,\n                    store: config.storeProfile.storeHash,\n                }).then(json => {\n                    setRecurlyState(state => ({...state, isSubmitting: false}));\n                    window.location.replace(`checkout/order-confirmation/${json.orderId}`);\n\n                }, e => {\n                    setRecurlyState(state => ({...state, isSubmitting: false}));\n                    reject(e);\n                });\n            }\n\n        });\n\n    }, [checkout, config]);\n\n    return <RecurlyContext.Provider value={ {...recurlyState, submitOrder: submitRecurlyOrder, resubmitRecurlyOrder} } { ...rest } />;\n}\n\nexport default withCheckout(({ checkoutService, checkoutState }: WithCheckoutProps) => {\n    const { data, errors, statuses } = checkoutState;\n\n    return {cart: data.getCart(), checkout: data.getCheckout(), config: data.getConfig()};\n})(RecurlyProvider);\n","import { ExtensionAction, ExtensionActionType, ExtensionState } from './ExtensionProvider';\n\nexport const extensionReducer = (\n    state: ExtensionState,\n    action: ExtensionAction,\n): ExtensionState => {\n    switch (action.type) {\n        case ExtensionActionType.SHOW_LOADING_INDICATOR:\n            return { ...state, isShowingLoadingIndicator: action.payload };\n\n        default:\n            return state;\n    }\n};\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { CommandHandler, HandlerProps } from './CommandHandler';\n\nexport function createReloadCheckoutHandler({\n    checkoutService,\n}: HandlerProps): CommandHandler<ExtensionCommandType.ReloadCheckout> {\n    return {\n        commandType: ExtensionCommandType.ReloadCheckout,\n        handler: () => {\n            void checkoutService.loadCheckout(checkoutService.getState().data.getCheckout()?.id);\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { CommandHandler, HandlerProps } from './CommandHandler';\n\nexport function createSetIframeStyleHandler({\n    extension,\n}: HandlerProps): CommandHandler<ExtensionCommandType.SetIframeStyle> {\n    return {\n        commandType: ExtensionCommandType.SetIframeStyle,\n        handler: (data) => {\n            const { style } = data.payload;\n            const extensionContainer = document.querySelector(\n                `div[data-extension-id=\"${extension.id}\"]`,\n            );\n            const iframe = extensionContainer?.querySelector('iframe');\n\n            if (iframe) {\n                Object.assign(iframe.style, style);\n            }\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { ExtensionActionType } from '../ExtensionProvider';\n\nimport { CommandHandler, HandlerProps } from './CommandHandler';\n\nexport function createShowLoadingIndicatorHandler({\n    dispatch,\n}: HandlerProps): CommandHandler<ExtensionCommandType.ShowLoadingIndicator> {\n    return {\n        commandType: ExtensionCommandType.ShowLoadingIndicator,\n        handler: (data) => {\n            const { show } = data.payload;\n\n            dispatch({\n                type: ExtensionActionType.SHOW_LOADING_INDICATOR,\n                payload: show,\n            });\n        },\n    };\n}\n","import {\n    CheckoutService,\n    Extension,\n    ExtensionCommandMap,\n    ExtensionRegion,\n} from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { ExtensionAction } from './ExtensionProvider';\nimport * as handlerFactories from './handlers';\nimport { CommandHandler } from './handlers/CommandHandler';\n\nexport class ExtensionService {\n    private handlers: { [extensionId: string]: Array<() => void> } = {};\n\n    constructor(\n        private checkoutService: CheckoutService,\n        private dispatch: React.Dispatch<ExtensionAction>,\n    ) {}\n\n    async loadExtensions(): Promise<void> {\n        await this.checkoutService.loadExtensions();\n    }\n\n    async renderExtension(container: string, region: ExtensionRegion): Promise<void> {\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        if (!extension) {\n            return;\n        }\n\n        await this.checkoutService.renderExtension(container, region);\n\n        this.registerHandlers(extension);\n    }\n\n    removeListeners(region: ExtensionRegion): void {\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        if (!extension) {\n            return;\n        }\n\n        const removers = this.handlers[extension.id];\n\n        if (!removers) {\n            return;\n        }\n\n        for (const remover of removers) {\n            remover();\n        }\n\n        delete this.handlers[extension.id];\n    }\n\n    isRegionEnabled(region: ExtensionRegion): boolean {\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        return Boolean(extension);\n    }\n\n    private registerHandlers(extension: Extension): void {\n        const handlerProps = {\n            checkoutService: this.checkoutService,\n            dispatch: this.dispatch,\n            extension,\n        };\n\n        if (!this.handlers[extension.id]) {\n            this.handlers[extension.id] = [];\n        }\n\n        Object.values(handlerFactories).forEach((createHandlerFactory) => {\n            const handlerFactory = createHandlerFactory(handlerProps);\n\n            if (this.isCommandHandler(handlerFactory.commandType, handlerFactory)) {\n                this.handlers[extension.id].push(\n                    this.checkoutService.handleExtensionCommand(\n                        extension.id,\n                        handlerFactory.commandType,\n                        handlerFactory.handler,\n                    ),\n                );\n            }\n        });\n    }\n\n    private isCommandHandler<T extends keyof ExtensionCommandMap>(\n        type: T,\n        handler: CommandHandler<any>,\n    ): handler is CommandHandler<T> {\n        return handler.commandType === type;\n    }\n}\n","import { CheckoutService } from '@bigcommerce/checkout-sdk';\nimport React, { ReactNode, useReducer } from 'react';\n\nimport { ExtensionContext } from './ExtensionContext';\nimport { extensionReducer } from './ExtensionReducer';\nimport { ExtensionService } from './ExtensionService';\nimport { isCheckoutExtensionEnabled } from './isCheckoutExtensionEnabled';\n\nexport interface ExtensionState {\n    isShowingLoadingIndicator: boolean;\n}\n\nexport interface ExtensionAction {\n    type: ExtensionActionType;\n    payload: boolean;\n}\n\nexport enum ExtensionActionType {\n    SHOW_LOADING_INDICATOR,\n}\n\nexport interface ExtensionProviderProps {\n    checkoutService: CheckoutService;\n    children: ReactNode;\n}\n\nexport const ExtensionProvider = ({ checkoutService, children }: ExtensionProviderProps) => {\n    const isExtensionEnabled = () =>\n        isCheckoutExtensionEnabled(checkoutService.getState().data.getConfig()?.checkoutSettings);\n    const [extensionState, dispatch] = useReducer(extensionReducer, {\n        isShowingLoadingIndicator: false,\n    });\n    const extensionService = new ExtensionService(checkoutService, dispatch);\n\n    const extensionValues = {\n        isExtensionEnabled,\n        extensionService,\n        extensionState,\n    };\n\n    return (\n        <ExtensionContext.Provider value={extensionValues}>{children}</ExtensionContext.Provider>\n    );\n};\n","import { CheckoutSettings } from '@bigcommerce/checkout-sdk';\n\nexport function isCheckoutExtensionEnabled(\n    checkoutSettings: CheckoutSettings | undefined,\n): boolean {\n    return Boolean(checkoutSettings?.features['PROJECT-5029.checkout_extension']);\n}\n","import CheckoutSupport from './CheckoutSupport';\n\nexport default class NoopCheckoutSupport implements CheckoutSupport {\n    isSupported(): boolean {\n        return true;\n    }\n}\n","import { CustomError, setPrototypeOf } from '../../common/error';\n\nexport class EmbeddedCheckoutUnsupportedError extends CustomError {\n    constructor(message: string) {\n        super({\n            name: 'EMBEDDED_CHECKOUT_UNSUPPORTED_ERROR',\n            message,\n        });\n\n        setPrototypeOf(this, EmbeddedCheckoutUnsupportedError.prototype);\n    }\n}\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { CheckoutSupport } from '../checkout';\n\nimport { EmbeddedCheckoutUnsupportedError } from './errors';\n\nexport default class EmbeddedCheckoutSupport implements CheckoutSupport {\n    constructor(private unsupportedMethods: string[], private langService: LanguageService) {}\n\n    isSupported(...ids: string[]): boolean {\n        const unsupportedMethods = ids.filter((id) => this.unsupportedMethods.indexOf(id) >= 0);\n\n        if (unsupportedMethods.length === 0) {\n            return true;\n        }\n\n        throw new EmbeddedCheckoutUnsupportedError(\n            this.langService.translate('embedded_checkout.unsupported_error', {\n                methods: unsupportedMethods.join(', '),\n            }),\n        );\n    }\n}\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { CheckoutSupport, NoopCheckoutSupport } from '../checkout';\n\nimport EmbeddedCheckoutSupport from './EmbeddedCheckoutSupport';\nimport isEmbedded from './isEmbedded';\n\nconst UNSUPPORTED_METHODS = ['afterpay', 'applepay', 'amazonpay', 'chasepay', 'googlepay', 'klarna', 'masterpass'];\n\nexport default function createEmbeddedCheckoutSupport(language: LanguageService): CheckoutSupport {\n    return isEmbedded()\n        ? new EmbeddedCheckoutSupport(UNSUPPORTED_METHODS, language)\n        : new NoopCheckoutSupport();\n}\n","import { createInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport { ExtensionContext } from './ExtensionContext';\n\nexport const withExtension = createInjectHoc(ExtensionContext, {\n    displayNamePrefix: 'WithExtension',\n});\n","import React, { PureComponent, ReactNode } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\n\nimport { LoadingOverlay } from '../ui/loading';\n\nexport interface EmptyCartMessageProps {\n    waitInterval?: number;\n    loginUrl: string;\n}\n\ninterface EmptyCartMessageState {\n    isWaiting: boolean;\n}\n\nexport default class EmptyCartMessage extends PureComponent<\n    EmptyCartMessageProps,\n    EmptyCartMessageState\n> {\n    state: EmptyCartMessageState = {\n        isWaiting: true,\n    };\n\n    private waitToken?: number;\n\n    componentDidMount(): void {\n        const { waitInterval } = this.props;\n\n        this.waitToken = setTimeout(() => {\n            this.setState({ isWaiting: false });\n        }, waitInterval);\n    }\n\n    componentWillUnmount(): void {\n        clearInterval(this.waitToken);\n    }\n\n    render(): ReactNode {\n        const { loginUrl } = this.props;\n        const { isWaiting } = this.state;\n\n        return (\n            <LoadingOverlay hideContentWhenLoading isLoading={isWaiting}>\n                <TranslatedHtml data={{ url: loginUrl }} id=\"cart.empty_cart_message\" />\n            </LoadingOverlay>\n        );\n    }\n}\n","enum CustomerViewType {\n    Guest = 'guest',\n    Login = 'login',\n    SuggestedLogin = 'suggested_login',\n    EnforcedLogin = 'enforced_login',\n    CancellableEnforcedLogin = 'cancellable_enforced_login',\n    CreateAccount = 'create_account',\n    Subscription = 'subscription',\n}\n\nexport default CustomerViewType;\n","import React, { FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\n\ninterface WalletButtonsProps {\n    buttonsCount: number;\n}\n\nconst WalletButtonContainerSkeleton: FunctionComponent<\n    LoadingSkeletonProps & WalletButtonsProps\n> = ({ buttonsCount, children, isLoading }) => {\n    const renderWhileLoading = true;\n    const skeleton = (\n        <div className=\"checkoutRemote customer-skeleton\">\n            {Array(buttonsCount)\n                .fill(0)\n                .map((_v, i) => (\n                    <div className=\"skeleton-container\" key={`skeleton-container-${i}`}>\n                        <div className=\"input-skeleton\" />\n                    </div>\n                ))}\n        </div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, renderWhileLoading, skeleton }} />;\n};\n\nexport default WalletButtonContainerSkeleton;\n","interface ApplePayWindow extends Window {\n    ApplePaySession: void;\n}\n\nexport default function isApplePayWindow(window: Window): window is ApplePayWindow {\n    return 'ApplePaySession' in window;\n}\n","import { isApplePayWindow } from \"../common/utility\";\n\nconst APPLE_PAY = 'applepay';\n\n// TODO: The API should tell UI which payment method offers its own checkout button\nexport const SUPPORTED_METHODS: string[] = [\n    'amazonpay',\n    APPLE_PAY,\n    'braintreevisacheckout',\n    'braintreepaypal',\n    'braintreepaypalcredit',\n    'chasepay',\n    'masterpass',\n    'paypalcommerce',\n    'paypalcommercevenmo',\n    'paypalcommercecredit',\n    'googlepayadyenv2',\n    'googlepayadyenv3',\n    'googlepayauthorizenet',\n    'googlepaybnz',\n    'googlepaybraintree',\n    'googlepaycheckoutcom',\n    'googlepaycybersourcev2',\n    'googlepayorbital',\n    'googlepaystripe',\n    'googlepaystripeupe',\n    'googlepayworldpayaccess',\n];\n\nexport const getSupportedMethodIds = (methodIds: string[]): string[] => {\n    return methodIds.filter((methodId) => {\n        if (methodId === APPLE_PAY && !isApplePayWindow(window)) {\n            return false;\n        }\n\n        return SUPPORTED_METHODS.indexOf(methodId) !== -1;\n    });\n}\n","import { CustomerInitializeOptions, CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\nimport React, { PureComponent } from 'react';\n\nconst WALLET_BUTTON_HEIGHT = 36;\n\nexport interface CheckoutButtonProps {\n    containerId: string;\n    methodId: string;\n    isShowingWalletButtonsOnTop?: boolean;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onError?(error: Error): void;\n}\n\nexport default class CheckoutButton extends PureComponent<CheckoutButtonProps> {\n    componentDidMount() {\n        const { containerId, initialize, isShowingWalletButtonsOnTop, methodId, onError } = this.props;\n\n        const heightOption = isShowingWalletButtonsOnTop && (methodId === 'braintreepaypal' || methodId === 'braintreepaypalcredit' )\n            ? { buttonHeight: WALLET_BUTTON_HEIGHT }\n            : {};\n\n        initialize({\n            methodId,\n            [methodId]: {\n                ...heightOption,\n                container: containerId,\n                onError,\n            },\n        });\n    }\n\n    componentWillUnmount() {\n        const { deinitialize, methodId } = this.props;\n\n        deinitialize({ methodId });\n    }\n\n    render() {\n        const { containerId } = this.props;\n\n        return <div id={containerId} />;\n    }\n}\n","import { noop } from 'lodash';\n\nimport { isBuyNowCart } from '../common/utility';\n\nexport default function navigateToOrderConfirmation(\n    orderId?: number,\n): Promise<never> {\n    let url: string;\n\n    if (orderId && isBuyNowCart()) {\n        url = `/checkout/order-confirmation/${orderId.toString()}`;\n    } else {\n        url = `${window.location.pathname.replace(/\\/$/, '')}/order-confirmation`;\n    }\n\n    window.location.replace(url);\n\n    return new Promise(noop);\n}\n","import { CustomerInitializeOptions } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, useCallback, useContext } from 'react';\n\nimport { LocaleContext } from '@bigcommerce/checkout/locale';\n\nimport { navigateToOrderConfirmation } from '../../checkout';\nimport CheckoutButton, { CheckoutButtonProps } from '../CheckoutButton';\n\nconst ApplePayButton: FunctionComponent<CheckoutButtonProps> = ({\n    initialize,\n    onError,\n    ...rest\n}) => {\n    const localeContext = useContext(LocaleContext);\n    const initializeOptions = useCallback(\n        (options: CustomerInitializeOptions) =>\n            initialize({\n                ...options,\n                applepay: {\n                    container: rest.containerId,\n                    shippingLabel: localeContext?.language.translate('cart.shipping_text'),\n                    subtotalLabel: localeContext?.language.translate('cart.subtotal_text'),\n                    onError,\n                    onPaymentAuthorize: navigateToOrderConfirmation,\n                },\n            }),\n        [initialize, localeContext, onError, rest.containerId],\n    );\n\n    return <CheckoutButton initialize={initializeOptions} {...rest} />;\n};\n\nexport default ApplePayButton;\n","import React, { FunctionComponent, useEffect } from 'react';\n\nimport CheckoutButton, { CheckoutButtonProps } from '../CheckoutButton';\n\nconst AmazonPayV2Button: FunctionComponent<CheckoutButtonProps> = (props) => {\n    useEffect(() => {\n        beautifyAmazonButton();\n    }, []);\n\n    return (\n        <div className=\"AmazonPayContainer\">\n            <CheckoutButton {...props} />\n        </div>\n    );\n}\n\nexport default AmazonPayV2Button;\n\nconst beautifyAmazonButton = (): void => {\n    if (!document.querySelector('.checkout-button-container')) {\n        return;\n    }\n\n    const container = document.querySelector('#amazonpayCheckoutButton > div') as unknown as HTMLElement;\n    const amazonButton = container?.shadowRoot?.querySelector('.amazonpay-button-view1') as unknown as HTMLElement;\n\n    if (container && amazonButton) {\n        amazonButton.style.height = '36px';\n        return;\n    }\n\n    setTimeout(beautifyAmazonButton, 10);\n}\n","import { CustomerInitializeOptions } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, useCallback, useContext } from 'react';\n\nimport { LocaleContext } from '@bigcommerce/checkout/locale';\n\nimport { navigateToOrderConfirmation } from '../../checkout';\nimport CheckoutButton, { CheckoutButtonProps } from '../CheckoutButton';\n\nconst PayPalCommerceButton: FunctionComponent<CheckoutButtonProps> = ({\n    methodId,\n    initialize,\n    onError,\n    ...rest\n}) => {\n    const localeContext = useContext(LocaleContext);\n    const initializeOptions = useCallback(\n        (options: CustomerInitializeOptions) =>\n            initialize({\n                ...options,\n                [methodId]: {\n                    container: rest.containerId,\n                    onError,\n                    onComplete: navigateToOrderConfirmation,\n                },\n            }),\n        [initialize, localeContext, onError, rest.containerId],\n    );\n\n    return <CheckoutButton initialize={initializeOptions} methodId={methodId} {...rest} />;\n};\n\nexport default PayPalCommerceButton;\n","import { CustomerInitializeOptions, CustomerRequestOptions } from \"@bigcommerce/checkout-sdk\";\nimport React, { FunctionComponent } from \"react\";\n\nimport CheckoutButton from \"./CheckoutButton\";\nimport { AmazonPayV2Button, ApplePayButton, PayPalCommerceButton } from \"./customWalletButton\";\n\ninterface CheckoutButtonV1ResolverProps {\n    methodId: string;\n    deinitialize(options: CustomerRequestOptions): void;\n    isShowingWalletButtonsOnTop?: boolean;\n    initialize(options: CustomerInitializeOptions): void;\n    onError?(error: Error): void;\n}\n\nconst CheckoutButtonV1Resolver: FunctionComponent<CheckoutButtonV1ResolverProps> = ({\n    isShowingWalletButtonsOnTop= false,\n    onError,\n    methodId,\n    ...rest\n}) => {\n    switch (methodId) {\n        case 'applepay':\n            return (\n                <ApplePayButton\n                    containerId={`${methodId}CheckoutButton`}\n                    key={methodId}\n                    methodId={methodId}\n                    onError={onError}\n                    {...rest}\n                />\n            );\n\n        case 'amazonpay':\n            return (\n                <AmazonPayV2Button\n                    containerId={`${methodId}CheckoutButton`}\n                    key={methodId}\n                    methodId={methodId}\n                    onError={onError}\n                    {...rest}\n                />\n            );\n\n        case 'paypalcommerce':\n        case 'paypalcommercecredit':\n            return (\n                <PayPalCommerceButton\n                    containerId={`${methodId}CheckoutButton`}\n                    key={methodId}\n                    methodId={methodId}\n                    onError={onError}\n                    {...rest}\n                />\n            );\n    }\n\n    return <CheckoutButton\n            containerId={`${methodId}CheckoutButton`}\n            isShowingWalletButtonsOnTop={isShowingWalletButtonsOnTop}\n            key={methodId}\n            methodId={methodId}\n            onError={onError}\n            {...rest}\n        />;\n};\n\nexport default CheckoutButtonV1Resolver;\n","import { CheckoutSelectors, CheckoutService } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { FunctionComponent } from 'react';\n\nimport { TranslatedString, useLocale } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { WalletButtonsContainerSkeleton } from '@bigcommerce/checkout/ui';\n\n\nimport { withCheckout } from '../checkout';\n\nimport { getSupportedMethodIds } from './getSupportedMethods';\nimport resolveCheckoutButton from './resolveCheckoutButton';\nimport CheckoutButtonV1Resolver from './WalletButtonV1Resolver';\n\ninterface CheckoutButtonContainerProps {\n    isPaymentStepActive: boolean;\n    checkEmbeddedSupport(methodIds: string[]): void;\n    onUnhandledError(error: Error): void;\n}\n\ninterface WithCheckoutCheckoutButtonContainerProps {\n    availableMethodIds: string[];\n    checkoutState: CheckoutSelectors;\n    checkoutService: CheckoutService;\n    isLoading: boolean;\n    initializedMethodIds: string[];\n}\n\nconst paypalCommerceIds = [\n    'paypalcommerce',\n    'paypalcommercecredit',\n    'paypalcommercevenmo',\n];\n\nconst sortMethodIds = (methodIds:string[]): string[] => {\n    const order = [\n        'applepay',\n        'braintreepaypalcredit',\n        'braintreepaypal',\n        'paypalcommercevenmo',\n        'paypalcommercecredit',\n        'paypalcommerce',\n    ];\n\n    return methodIds.sort((a, b) => order.indexOf(b) - order.indexOf(a));\n}\n\nconst isPayPalCommerce = (methodId: string): boolean => paypalCommerceIds.includes(methodId);\n\nconst CheckoutButtonContainer: FunctionComponent<CheckoutButtonContainerProps & WithCheckoutCheckoutButtonContainerProps> = (\n    {\n        availableMethodIds,\n        checkoutService,\n        checkoutState,\n        checkEmbeddedSupport,\n        isLoading,\n        isPaymentStepActive,\n        initializedMethodIds,\n        onUnhandledError,\n    }) => {\n    const { language } = useLocale();\n\n    const methodIds = isLoading ? availableMethodIds : initializedMethodIds;\n\n    try {\n        checkEmbeddedSupport(methodIds);\n    } catch (error) {\n        return null;\n    }\n\n    const renderButtons = () => availableMethodIds.map((methodId) => {\n        if (isPaymentStepActive && isPayPalCommerce(methodId)) {\n            return null;\n        }\n\n        const ResolvedCheckoutButton = resolveCheckoutButton({ id: methodId });\n\n        if (!ResolvedCheckoutButton) {\n            return <CheckoutButtonV1Resolver\n                deinitialize={checkoutService.deinitializeCustomer}\n                initialize={checkoutService.initializeCustomer}\n                isShowingWalletButtonsOnTop={true}\n                key={methodId}\n                methodId={methodId}\n                onError={onUnhandledError}\n            />\n        }\n\n        return <ResolvedCheckoutButton\n                    checkoutService={checkoutService}\n                    checkoutState={checkoutState}\n                    containerId={`${methodId}CheckoutButton`}\n                    key={methodId}\n                    language={language}\n                    methodId={methodId}\n                    onUnhandledError={onUnhandledError}\n                />;\n    });\n\n    return (\n        <div className='checkout-button-container'\n             style={ isPaymentStepActive ? { position: 'absolute', left: '0', top: '-100%' } : undefined }\n        >\n            <p>\n                <TranslatedString id=\"remote.start_with_text\" />\n            </p>\n            <div className={classNames({\n                'checkout-buttons--1': methodIds.length === 1,\n                'checkout-buttons--2': methodIds.length === 2,\n                'checkout-buttons--3': methodIds.length === 3,\n                'checkout-buttons--4': methodIds.length === 4,\n                'checkout-buttons--5': methodIds.length === 5,\n                'checkout-buttons--n': methodIds.length > 5,\n            })}>\n                <WalletButtonsContainerSkeleton buttonsCount={methodIds.length} isLoading={isLoading}>\n                    <div className=\"checkoutRemote\">\n                        {renderButtons()}\n                    </div>\n                </WalletButtonsContainerSkeleton>\n            </div>\n            <div className='checkout-separator'><span><TranslatedString id='remote.or_text' /></span></div>\n        </div>\n    );\n};\n\nfunction mapToCheckoutButtonContainerProps({\n    checkoutState,\n    checkoutService,\n}: CheckoutContextProps): WithCheckoutCheckoutButtonContainerProps | null {\n    const {\n        data: {\n            getConfig,\n            getCustomer,\n            isPaymentDataRequired,\n        },\n        statuses: {\n            isInitializedCustomer,\n        },\n        errors: {\n            getInitializeCustomerError,\n        }\n     } = checkoutState;\n    const config = getConfig();\n    const availableMethodIds = getSupportedMethodIds(config?.checkoutSettings.remoteCheckoutProviders ?? []);\n    const customer = getCustomer();\n\n    if (!isPaymentDataRequired()) {\n        return null;\n    }\n\n    if (!config || availableMethodIds.length === 0 || !customer?.isGuest) {\n        return null;\n    }\n\n    const isLoading = availableMethodIds.filter(\n        (methodId) => Boolean(getInitializeCustomerError(methodId)) || isInitializedCustomer(methodId)\n    ).length !== availableMethodIds.length;\n    const initializedMethodIds = availableMethodIds.filter((methodId) => isInitializedCustomer(methodId));\n\n    return {\n        checkoutService,\n        checkoutState,\n        availableMethodIds: sortMethodIds(availableMethodIds),\n        initializedMethodIds,\n        isLoading,\n    }\n}\n\nexport default withCheckout(mapToCheckoutButtonContainerProps)(CheckoutButtonContainer);\n","import { ComponentType } from 'react';\n\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nimport { resolveComponent } from '../common/resolver';\n\nexport default function resolveCheckoutButton(\n    resolveId: CheckoutButtonResolveId,\n): ComponentType<CheckoutButtonProps> | undefined {\n    return resolveComponent<CheckoutButtonResolveId, CheckoutButtonProps>(\n        resolveId,\n        require('../generated/checkoutButtons'),\n    );\n}\n","import { useContext, useMemo } from 'react';\n\nimport AnalyticsContext from './AnalyticsContext';\n\nconst useAnalytics = () => {\n    const analyticsContext = useContext(AnalyticsContext);\n\n    if (!analyticsContext) {\n        throw new Error('useAnalytics must be used within an <AnalyticsProvider>');\n    }\n\n    return useMemo(\n        () => ({\n            analyticsTracker: analyticsContext.analyticsTracker,\n        }),\n        [analyticsContext],\n    );\n};\n\nexport default useAnalytics;\n","import {\n    CheckoutSelectors,\n    CustomerInitializeOptions,\n    CustomerRequestOptions,\n    ExecutePaymentMethodCheckoutOptions,\n} from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, useEffect, useState } from 'react';\n\nimport { useAnalytics } from '@bigcommerce/checkout/analytics';\nimport { stopPropagation } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button } from '../../ui/button';\nimport { IconBolt } from '../../ui/icon';\n\nexport interface BoltCheckoutSuggestionProps {\n    isExecutingPaymentMethodCheckout: boolean;\n    methodId: string;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n    onUnhandledError?(error: Error): void;\n}\n\nconst BoltCheckoutSuggestion: FunctionComponent<BoltCheckoutSuggestionProps> = ({\n    isExecutingPaymentMethodCheckout,\n    methodId,\n    deinitializeCustomer,\n    executePaymentMethodCheckout,\n    initializeCustomer,\n    onUnhandledError = noop,\n}) => {\n    const [showSuggestion, setShowSuggestion] = useState<boolean>(false);\n    const { analyticsTracker } = useAnalytics();\n\n    useEffect(() => {\n        deinitializeCustomer({ methodId });\n\n        try {\n            initializeCustomer({\n                methodId,\n                bolt: {\n                    onInit: (hasBoltAccount, email) => {\n                        setShowSuggestion(hasBoltAccount);\n\n                        if (email) {\n                            analyticsTracker.customerSuggestionInit({hasBoltAccount});\n                        }\n                    },\n                },\n            });\n        } catch (error) {\n            onUnhandledError(error);\n        }\n\n        return () => {\n            deinitializeCustomer({ methodId });\n        };\n    }, [initializeCustomer, deinitializeCustomer, methodId, onUnhandledError]);\n\n    if (!showSuggestion) {\n        return null;\n    }\n\n    const handleActionClick = async () => {\n        await executePaymentMethodCheckout({ methodId });\n    };\n\n    return (\n        <div className=\"checkoutSuggestion\" onClick={stopPropagation()}>\n            <p className=\"checkoutSuggestion-message\">\n                <TranslatedString\n                    data={{\n                        provider: 'Bolt',\n                        providerFlow: 'Bolt Checkout',\n                    }}\n                    id=\"customer.suggestion_text\"\n                />\n            </p>\n            <Button\n                className=\"checkoutSuggestion-button checkoutSuggestion-button--bolt\"\n                data-test=\"suggestion-action-button\"\n                isLoading={isExecutingPaymentMethodCheckout}\n                onClick={handleActionClick}\n            >\n                <IconBolt additionalClassName=\"checkoutSuggestion-button-icon--bolt\" />\n                <TranslatedString\n                    data={{ providerFlow: 'Bolt Checkout' }}\n                    id=\"customer.suggestion_action\"\n                />\n            </Button>\n        </div>\n    );\n};\n\nexport default memo(BoltCheckoutSuggestion);\n","import { SyntheticEvent } from 'react';\n\nexport default function stopPropagation<\n    TFunc extends (event: TEvent, ...args: any[]) => any,\n    TEvent extends SyntheticEvent,\n>(fn?: TFunc): (event: TEvent) => void {\n    return (event) => {\n        event.stopPropagation();\n\n        if (fn) {\n            fn(event);\n        }\n    };\n}\n","import {\n    CheckoutSelectors,\n    CustomerInitializeOptions,\n    CustomerRequestOptions,\n    ExecutePaymentMethodCheckoutOptions,\n} from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { useAnalytics } from '@bigcommerce/checkout/analytics';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { withCheckout } from '../../checkout';\nimport { PaymentMethodId } from '../../payment/paymentMethod';\n\n\nimport BoltCheckoutSuggestion from './BoltCheckoutSuggestion';\n\nexport interface CheckoutSuggestionProps {\n    onUnhandledError?(error: Error): void;\n}\n\nexport interface WithCheckoutSuggestionsProps {\n    isExecutingPaymentMethodCheckout: boolean;\n    providerWithCustomCheckout?: string;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n}\n\nconst CheckoutSuggestion: FunctionComponent<\n    WithCheckoutSuggestionsProps & CheckoutSuggestionProps\n> = ({\n    providerWithCustomCheckout,\n    executePaymentMethodCheckout,\n    ...rest\n}) => {\n    const { analyticsTracker } = useAnalytics();\n\n    const handleExecutePaymentMethodCheckout = (options: ExecutePaymentMethodCheckoutOptions) => {\n        analyticsTracker.customerSuggestionExecute();\n\n        return executePaymentMethodCheckout(options);\n    }\n\n    if (providerWithCustomCheckout === PaymentMethodId.Bolt) {\n        return <BoltCheckoutSuggestion\n                    executePaymentMethodCheckout={handleExecutePaymentMethodCheckout}\n                    methodId={providerWithCustomCheckout}\n                    {...rest}\n                />;\n    }\n\n    return null;\n};\n\nconst mapToCheckoutSuggestionProps = ({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutSuggestionsProps | null => {\n    const {\n        data: { getCheckout, getConfig },\n        statuses: { isExecutingPaymentMethodCheckout },\n    } = checkoutState;\n\n    const checkout = getCheckout();\n    const config = getConfig();\n\n    if (!checkout || !config) {\n        return null;\n    }\n\n    return {\n        deinitializeCustomer: checkoutService.deinitializeCustomer,\n        executePaymentMethodCheckout: checkoutService.executePaymentMethodCheckout,\n        initializeCustomer: checkoutService.initializeCustomer,\n        isExecutingPaymentMethodCheckout: isExecutingPaymentMethodCheckout(),\n        providerWithCustomCheckout: config.checkoutSettings.providerWithCustomCheckout || undefined,\n    };\n};\n\nexport default withCheckout(mapToCheckoutSuggestionProps)(memo(CheckoutSuggestion));\n","import { CustomerInitializeOptions, CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { isApplePayWindow } from '../common/utility';\n\nimport CheckoutButton from './CheckoutButton';\nimport { AmazonPayV2Button, ApplePayButton, PayPalCommerceButton } from './customWalletButton';\n\nconst APPLE_PAY = 'applepay';\n\n// TODO: The API should tell UI which payment method offers its own checkout button\nexport const SUPPORTED_METHODS: string[] = [\n    'amazonpay',\n    APPLE_PAY,\n    'braintreevisacheckout',\n    'braintreepaypal',\n    'braintreepaypalcredit',\n    'chasepay',\n    'masterpass',\n    'paypalcommerce',\n    'paypalcommercevenmo',\n    'paypalcommercecredit',\n    'googlepayadyenv2',\n    'googlepayadyenv3',\n    'googlepayauthorizenet',\n    'googlepaybnz',\n    'googlepaybraintree',\n    'googlepaypaypalcommerce',\n    'googlepaycheckoutcom',\n    'googlepaycybersourcev2',\n    'googlepayorbital',\n    'googlepaystripe',\n    'googlepaystripeupe',\n    'googlepayworldpayaccess',\n];\n\nexport interface CheckoutButtonListProps {\n    methodIds?: string[];\n    isInitializing?: boolean;\n    isShowingWalletButtonsOnTop?: boolean;\n    hideText?: boolean;\n    checkEmbeddedSupport?(methodIds: string[]): void;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onError?(error: Error): void;\n}\n\nexport const filterUnsupportedMethodIds = (methodIds:string[]): string[] => {\n    return (methodIds).filter((methodId) => {\n        if (methodId === APPLE_PAY && !isApplePayWindow(window)) {\n            return false;\n        }\n\n        return SUPPORTED_METHODS.indexOf(methodId) !== -1;\n    });\n}\n\nconst CheckoutButtonList: FunctionComponent<CheckoutButtonListProps> = ({\n    checkEmbeddedSupport,\n    onError,\n    isInitializing = false,\n    isShowingWalletButtonsOnTop= false,\n    methodIds,\n    hideText = false,\n    ...rest\n}) => {\n    const supportedMethodIds = filterUnsupportedMethodIds(methodIds ?? []);\n\n    if (supportedMethodIds.length === 0) {\n        return null;\n    }\n\n    if (checkEmbeddedSupport) {\n        try {\n            checkEmbeddedSupport(supportedMethodIds);\n        } catch (error) {\n            if (error instanceof Error && onError) {\n                onError(error);\n            } else {\n                throw error;\n            }\n\n            return null;\n        }\n    }\n\n    return (\n        <>\n            {!isInitializing && !hideText && (\n                <p>\n                    <TranslatedString id=\"remote.continue_with_text\" />\n                </p>\n            )}\n\n            <div className=\"checkoutRemote\">\n                {supportedMethodIds.map((methodId) => {\n                    if (methodId === 'applepay') {\n                        return (\n                            <ApplePayButton\n                                containerId={`${methodId}CheckoutButton`}\n                                key={methodId}\n                                methodId={methodId}\n                                onError={onError}\n                                {...rest}\n                            />\n                        );\n                    }\n\n                    if (methodId === 'amazonpay') {\n                        return (\n                            <AmazonPayV2Button\n                                containerId={`${methodId}CheckoutButton`}\n                                key={methodId}\n                                methodId={methodId}\n                                onError={onError}\n                                {...rest}\n                            />\n                        );\n                    }\n\n                    if (methodId === 'paypalcommerce' || methodId === 'paypalcommercecredit') {\n                        return (\n                            <PayPalCommerceButton\n                                containerId={`${methodId}CheckoutButton`}\n                                key={methodId}\n                                methodId={methodId}\n                                onError={onError}\n                                {...rest}\n                            />\n                        );\n                    }\n\n                    return (\n                        <CheckoutButton\n                            containerId={`${methodId}CheckoutButton`}\n                            isShowingWalletButtonsOnTop={isShowingWalletButtonsOnTop}\n                            key={methodId}\n                            methodId={methodId}\n                            onError={onError}\n                            {...rest}\n                        />\n                    );\n                })}\n            </div>\n        </>\n    );\n};\n\nexport default memo(CheckoutButtonList);\n","import { Checkout, Customer } from '@bigcommerce/checkout-sdk';\nimport { every } from 'lodash';\n\nimport { SUPPORTED_METHODS } from './CheckoutButtonList';\n\nconst SUPPORTED_SIGNOUT_METHODS = ['amazonpay'];\n\nexport const isSupportedSignoutMethod = (methodId: string): boolean => {\n    return SUPPORTED_SIGNOUT_METHODS.indexOf(methodId) > -1;\n};\n\nexport default function canSignOut(\n    customer: Customer,\n    checkout: Checkout,\n    methodId: string,\n): boolean {\n    if (isSupportedSignoutMethod(methodId)) {\n        return true;\n    }\n\n    if (customer.isGuest) {\n        return false;\n    }\n\n    // Return false if payment method offers its own checkout button\n    return every(\n        checkout.payments,\n        (payment) => SUPPORTED_METHODS.indexOf(payment.providerId) === -1,\n    );\n}\n","import { CheckoutSelectors, CustomerRequestOptions, CustomError } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { withCheckout } from '../checkout';\nimport { isErrorWithType } from '../common/error';\nimport { Button, ButtonSize, ButtonVariant } from '../ui/button';\n\nimport canSignOut, { isSupportedSignoutMethod } from './canSignOut';\n\nexport interface CustomerInfoProps {\n    onSignOut?(event: CustomerSignOutEvent): void;\n    onSignOutError?(error: CustomError): void;\n}\n\nexport interface CustomerSignOutEvent {\n    isCartEmpty: boolean;\n}\n\ninterface WithCheckoutCustomerInfoProps {\n    email: string;\n    methodId: string;\n    isSignedIn: boolean;\n    isSigningOut: boolean;\n    signOut(options?: CustomerRequestOptions): Promise<CheckoutSelectors>;\n}\n\nconst CustomerInfo: FunctionComponent<CustomerInfoProps & WithCheckoutCustomerInfoProps> = ({\n    email,\n    methodId,\n    isSignedIn,\n    isSigningOut,\n    onSignOut = noop,\n    onSignOutError = noop,\n    signOut,\n}) => {\n    const handleSignOut: () => Promise<void> = async () => {\n        try {\n            if (isSupportedSignoutMethod(methodId)) {\n                await signOut({ methodId });\n                onSignOut({ isCartEmpty: false });\n                window.location.reload();\n            } else {\n                await signOut();\n                onSignOut({ isCartEmpty: false });\n            }\n        } catch (error) {\n            if (isErrorWithType(error) && error.type === 'checkout_not_available') {\n                onSignOut({ isCartEmpty: true });\n            } else {\n                onSignOutError(error);\n            }\n        }\n    };\n\n    return (\n        <div className=\"customerView\" data-test=\"checkout-customer-info\">\n            <div\n                className=\"customerView-body optimizedCheckout-contentPrimary\"\n                data-test=\"customer-info\"\n            >\n                {email}\n            </div>\n\n            <div className=\"customerView-actions\">\n                {isSignedIn && (\n                    <Button\n                        isLoading={isSigningOut}\n                        onClick={handleSignOut}\n                        size={ButtonSize.Tiny}\n                        testId=\"sign-out-link\"\n                        variant={ButtonVariant.Secondary}\n                    >\n                        <TranslatedString id=\"customer.sign_out_action\" />\n                    </Button>\n                )}\n            </div>\n        </div>\n    );\n};\n\nfunction mapToWithCheckoutCustomerInfoProps({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutCustomerInfoProps | null {\n    const {\n        data: { getBillingAddress, getCheckout, getCustomer },\n        statuses: { isSigningOut },\n    } = checkoutState;\n\n    const billingAddress = getBillingAddress();\n    const checkout = getCheckout();\n    const customer = getCustomer();\n\n    if (!billingAddress || !checkout || !customer) {\n        return null;\n    }\n\n    const methodId =\n        checkout.payments && checkout.payments.length === 1 ? checkout.payments[0].providerId : '';\n\n    return {\n        email: billingAddress.email || customer.email,\n        methodId,\n        isSignedIn: canSignOut(customer, checkout, methodId),\n        isSigningOut: isSigningOut(),\n        signOut: checkoutService.signOutCustomer,\n    };\n}\n\nexport default withCheckout(mapToWithCheckoutCustomerInfoProps)(CustomerInfo);\n","import React, { FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\n\nconst CustomerSkeleton: FunctionComponent<LoadingSkeletonProps> = ({ children, isLoading }) => {\n    const skeleton = (\n        <div className=\"checkout-form customer-skeleton\">\n            <div className=\"customerEmail-container\">\n                <div className=\"customerEmail-body\">\n                    <div className=\"skeleton-container\">\n                        <div className=\"input-skeleton\" />\n                    </div>\n                    <div className=\"button-skeleton skeleton-container subscription-skeleton\" />\n                </div>\n                <div className=\"customerEmail-action customerEmail-floating--enabled\">\n                    <div className=\"button-skeleton skeleton-container\" />\n                </div>\n            </div>\n        </div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, skeleton }} />;\n};\n\nexport default CustomerSkeleton;\n","// NOTE: This is a legacy regex used to create accounts, more flexible than the current used one\n// we need to keep this regex for login validation as accounts might have been created using this regex\nexport const EMAIL_REGEXP =\n    /^[a-z0-9!#$%&'*+/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\nimport { object, ObjectSchema, string } from 'yup';\n\nimport { EMAIL_REGEXP } from './validationPatterns';\n\nexport interface EmailValidationSchemaOptions {\n    language: LanguageService;\n}\n\nexport default function getEmailValidationSchema({\n    language,\n}: EmailValidationSchemaOptions): ObjectSchema<{ email: string }> {\n    return object({\n        email: string()\n            .max(256)\n            .matches(EMAIL_REGEXP, language.translate('customer.email_invalid_error'))\n            .required(language.translate('customer.email_required_error')),\n    });\n}\n","import { FormField, LanguageService } from '@bigcommerce/checkout-sdk';\nimport { memoize } from '@bigcommerce/memoize';\nimport { object, ObjectSchema, string } from 'yup';\n\nimport {\n    CustomFormFieldValues,\n    getCustomFormFieldsValidationSchema,\n    TranslateValidationErrorFunction,\n} from '../formFields';\n\nimport getEmailValidationSchema from './getEmailValidationSchema';\nimport { PasswordRequirements } from './getPasswordRequirements';\n\nexport type CreateAccountFormValues = {\n    firstName: string;\n    lastName: string;\n    email: string;\n    password: string;\n    acceptsMarketingEmails?: string[];\n    token?: string;\n} & CustomFormFieldValues;\n\nexport interface CreateCustomerValidationSchema {\n    formFields: FormField[];\n    language: LanguageService;\n    passwordRequirements: PasswordRequirements;\n}\n\nfunction getTranslateCreateCustomerError(\n    language?: LanguageService,\n): TranslateValidationErrorFunction {\n    return (type, { label, min, max }) => {\n        if (!language) {\n            return;\n        }\n\n        if (type === 'required') {\n            return language.translate('customer.required_error', { label });\n        }\n\n        if (type === 'max' && max) {\n            return language.translate('customer.max_error', { label, max });\n        }\n\n        if (type === 'min' && min) {\n            return language.translate('customer.min_error', { label, min });\n        }\n\n        if (type === 'invalid') {\n            return language.translate('customer.invalid_characters_error', { label });\n        }\n    };\n}\n\nexport default memoize(function getCreateCustomerValidationSchema({\n    formFields,\n    language,\n    passwordRequirements: { description, numeric, alpha, minLength },\n}: CreateCustomerValidationSchema): ObjectSchema<CreateAccountFormValues> {\n    return object({\n        firstName: string().required(language.translate('address.first_name_required_error')),\n        lastName: string().required(language.translate('address.last_name_required_error')),\n        password: string()\n            .required(language.translate('customer.password_required_error') || description)\n            .matches(\n                numeric,\n                language.translate('customer.password_number_required_error') || description,\n            )\n            .matches(\n                alpha,\n                language.translate('customer.password_letter_required_error') || description,\n            )\n            .min(\n                minLength,\n                language.translate('customer.password_under_minimum_length_error' || description),\n            )\n            .max(100, language.translate('customer.password_over_maximum_length_error')),\n    })\n        .concat(getEmailValidationSchema({ language }))\n        .concat(\n            getCustomFormFieldsValidationSchema({\n                formFields,\n                translate: getTranslateCreateCustomerError(language),\n            }),\n        );\n});\n","import { FormField } from '@bigcommerce/checkout-sdk';\nimport { FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, useMemo } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\n\nimport { isRequestError } from '../common/error';\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { DynamicFormField, Fieldset, Form } from '../ui/form';\n\nimport getCreateCustomerValidationSchema, {\n    CreateAccountFormValues,\n} from './getCreateCustomerValidationSchema';\nimport getPasswordRequirements from './getPasswordRequirements';\nimport './CreateAccountForm.scss';\n\nexport interface CreateAccountFormProps {\n    formFields: FormField[];\n    createAccountError?: Error;\n    isCreatingAccount?: boolean;\n    isExecutingPaymentMethodCheckout?: boolean;\n    requiresMarketingConsent: boolean;\n    isFloatingLabelEnabled?: boolean;\n    onCancel?(): void;\n    onSubmit(values: CreateAccountFormValues): void;\n}\n\nconst CreateAccountForm: FunctionComponent<\n    CreateAccountFormProps & WithLanguageProps & FormikProps<CreateAccountFormValues>\n> = ({ formFields, createAccountError, isCreatingAccount, isExecutingPaymentMethodCheckout, onCancel, isFloatingLabelEnabled }) => {\n    const createAccountErrorMessage = useMemo(() => {\n        if (!createAccountError) {\n            return;\n        }\n\n        if (isRequestError(createAccountError) && createAccountError.status === 409) {\n            const splitMessage = createAccountError.message.split(':');\n\n            if (splitMessage.length > 1) {\n                return (\n                    <TranslatedString\n                        data={{ email: splitMessage[1].trim() }}\n                        id=\"customer.email_in_use_text\"\n                    />\n                );\n            }\n\n            return <TranslatedString id=\"customer.unknown_email_in_use_text\" />;\n        }\n\n        return createAccountError.message;\n    }, [createAccountError]);\n\n    return (\n        <Form\n            className=\"checkout-form\"\n            id=\"checkout-customer-returning\"\n            testId=\"checkout-customer-returning\"\n        >\n            <Fieldset>\n                {createAccountErrorMessage && (\n                    <Alert type={AlertType.Error}>{createAccountErrorMessage}</Alert>\n                )}\n                <div className=\"create-account-form\">\n                    {formFields.map((field) => (\n                        <DynamicFormField\n                            autocomplete={field.name}\n                            extraClass={`dynamic-form-field--${field.name}`}\n                            field={field}\n                            isFloatingLabelEnabled={isFloatingLabelEnabled}\n                            key={field.id}\n                            parentFieldName={field.custom ? 'customFields' : undefined}\n                        />\n                    ))}\n                </div>\n            </Fieldset>\n\n            <div className=\"form-actions\">\n                <Button\n                    disabled={isCreatingAccount || isExecutingPaymentMethodCheckout}\n                    isLoading={isCreatingAccount || isExecutingPaymentMethodCheckout}\n                    id=\"checkout-customer-create\"\n                    testId=\"customer-continue-create\"\n                    type=\"submit\"\n                    variant={ButtonVariant.Primary}\n                >\n                    <TranslatedString id=\"customer.create_account_action\" />\n                </Button>\n\n                <a\n                    className=\"button optimizedCheckout-buttonSecondary\"\n                    data-test=\"customer-cancel-button\"\n                    href=\"#\"\n                    id=\"checkout-customer-cancel\"\n                    onClick={preventDefault(onCancel)}\n                >\n                    <TranslatedString id=\"common.cancel_action\" />\n                </a>\n            </div>\n        </Form>\n    );\n};\n\nexport default withLanguage(\n    withFormik<CreateAccountFormProps & WithLanguageProps, CreateAccountFormValues>({\n        handleSubmit: (values, { props: { onSubmit = noop } }) => {\n            onSubmit(values);\n        },\n        mapPropsToValues: ({ requiresMarketingConsent }) => ({\n            firstName: '',\n            lastName: '',\n            email: '',\n            password: '',\n            customFields: {},\n            acceptsMarketingEmails: requiresMarketingConsent ? [] : ['0'],\n        }),\n        validationSchema: ({\n            language,\n            formFields,\n        }: CreateAccountFormProps & WithLanguageProps) => {\n            const passwordRequirements = formFields.find(\n                ({ requirements }) => requirements,\n            )?.requirements;\n\n            if (!passwordRequirements) {\n                throw new Error('Password requirements missing');\n            }\n\n            const schema = getCreateCustomerValidationSchema({\n                language,\n                formFields,\n                passwordRequirements: getPasswordRequirements(passwordRequirements),\n            });\n\n            return schema;\n        },\n    })(CreateAccountForm),\n);\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { FormField, TextInput } from '../ui/form';\n\nexport interface EmailFieldProps {\n    isFloatingLabelEnabled?: boolean;\n    onChange?(value: string): void;\n}\n\nconst EmailField: FunctionComponent<EmailFieldProps> = ({ onChange, isFloatingLabelEnabled }) => {\n    const renderInput = useCallback(\n        (props: FieldProps) => (\n            <TextInput\n                {...props.field}\n                autoComplete={props.field.name}\n                id={props.field.name}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                type=\"email\"\n            />\n        ),\n        [isFloatingLabelEnabled],\n    );\n\n    const labelContent = useMemo(() => <TranslatedString id=\"customer.email_label\" />, []);\n\n    return (\n        <FormField\n            input={renderInput}\n            isFloatingLabelEnabled={isFloatingLabelEnabled}\n            labelContent={labelContent}\n            name=\"email\"\n            onChange={onChange}\n        />\n    );\n};\n\nexport default memo(EmailField);\n","import { SignInEmail } from '@bigcommerce/checkout-sdk';\nimport { FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, useMemo } from 'react';\n\nimport {\n    TranslatedHtml,\n    TranslatedLink,\n    TranslatedString,\n    withLanguage,\n    WithLanguageProps,\n} from '@bigcommerce/checkout/locale';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Form } from '../ui/form';\nimport { LoadingSpinner } from '../ui/loading';\nimport { Modal, ModalHeader } from '../ui/modal';\n\nimport EmailField from './EmailField';\nimport getEmailValidationSchema from './getEmailValidationSchema';\n\nexport interface EmailLoginFormProps {\n    email?: string;\n    isOpen: boolean;\n    isSendingEmail?: boolean;\n    emailHasBeenRequested?: boolean;\n    sentEmail?: SignInEmail;\n    sentEmailError?: any;\n    isFloatingLabelEnabled?: boolean;\n    onRequestClose?(): void;\n    onSendLoginEmail?(values: EmailLoginFormValues): void;\n}\n\nexport interface EmailLoginFormValues {\n    email: string;\n}\n\nconst EmailLoginForm: FunctionComponent<\n    EmailLoginFormProps & WithLanguageProps & FormikProps<EmailLoginFormValues>\n> = ({\n    email,\n    isOpen,\n    isSendingEmail = false,\n    emailHasBeenRequested,\n    onRequestClose = noop,\n    sentEmailError,\n    sentEmail,\n    submitForm,\n    isFloatingLabelEnabled,\n    values: { email: formEmail },\n}) => {\n    const modalHeaderStringId = useMemo(() => {\n        if (emailHasBeenRequested) {\n            if (sentEmailError) {\n                return 'common.error_heading';\n            }\n\n            return 'login_email.sent_header';\n        }\n\n        if (email) {\n            return 'login_email.header_with_email';\n        }\n\n        return 'login_email.header';\n    }, [emailHasBeenRequested, sentEmailError, email]);\n\n    const okButton = useMemo(\n        () => (\n            <div className=\"modal-footer\">\n                <Button onClick={onRequestClose}>\n                    <TranslatedString id=\"common.ok_action\" />\n                </Button>\n            </div>\n        ),\n        [onRequestClose],\n    );\n\n    const footer = useMemo(() => {\n        if (sentEmailError && sentEmailError.status === 429) {\n            return okButton;\n        }\n\n        if (emailHasBeenRequested && !sentEmailError) {\n            if (isSendingEmail) {\n                return <LoadingSpinner isLoading />;\n            }\n\n            if (sentEmail && sentEmail.sent_email === 'reset_password') {\n                return okButton;\n            }\n\n            return (\n                <p>\n                    <TranslatedLink id=\"login_email.resend_link\" onClick={submitForm} />\n                    <TranslatedLink id=\"login_email.use_password_link\" onClick={onRequestClose} />\n                </p>\n            );\n        }\n\n        return (\n            <div className=\"modal-footer\">\n                <Button\n                    className=\"optimizedCheckout-buttonSecondary\"\n                    onClick={onRequestClose}\n                    type=\"button\"\n                >\n                    <TranslatedString id=\"common.cancel_action\" />\n                </Button>\n                <Button isLoading={isSendingEmail} type=\"submit\" variant={ButtonVariant.Primary}>\n                    <TranslatedString id=\"login_email.send\" />\n                </Button>\n            </div>\n        );\n    }, [\n        sentEmailError,\n        emailHasBeenRequested,\n        okButton,\n        submitForm,\n        isSendingEmail,\n        onRequestClose,\n        sentEmail,\n    ]);\n\n    const error = useMemo(() => {\n        if (!sentEmailError) {\n            return null;\n        }\n\n        const { status } = sentEmailError;\n\n        return (\n            <Alert type={AlertType.Error}>\n                {status === 429 ? (\n                    <TranslatedString id=\"login_email.error_temporary_disabled\" />\n                ) : (\n                    <TranslatedString\n                        id={\n                            status === 404\n                                ? 'login_email.error_not_found'\n                                : 'login_email.error_server'\n                        }\n                    />\n                )}\n            </Alert>\n        );\n    }, [sentEmailError]);\n\n    const form = useMemo(() => {\n        if (sentEmailError && sentEmailError.status === 429) {\n            return null;\n        }\n\n        if (emailHasBeenRequested && sentEmail && !sentEmailError) {\n            const { expiry, sent_email } = sentEmail;\n\n            return (\n                <p>\n                    <TranslatedHtml\n                        data={{\n                            email: formEmail,\n                            minutes: Math.round(expiry / 60),\n                        }}\n                        id={\n                            sent_email === 'sign_in'\n                                ? 'login_email.sent_text'\n                                : 'customer.reset_password_before_login_error'\n                        }\n                    />\n                </p>\n            );\n        }\n\n        if (emailHasBeenRequested && !sentEmail) {\n            return <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} />;\n        }\n\n        return (\n            <>\n                <p>\n                    <TranslatedString id=\"login_email.text\" />\n                </p>\n                <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} />\n            </>\n        );\n    }, [sentEmailError, emailHasBeenRequested, sentEmail, formEmail]);\n\n    return (\n        <Modal\n            additionalBodyClassName=\"modal--withText\"\n            additionalModalClassName=\"modal--medium\"\n            header={\n                <ModalHeader>\n                    <TranslatedString id={modalHeaderStringId} />\n                </ModalHeader>\n            }\n            isOpen={isOpen}\n            onRequestClose={onRequestClose}\n            shouldShowCloseButton={true}\n        >\n            <Form>\n                <LoadingSpinner isLoading={isSendingEmail && !email} />\n                {error}\n                {form}\n                {footer}\n            </Form>\n        </Modal>\n    );\n};\n\nexport default withLanguage(\n    withFormik<EmailLoginFormProps & WithLanguageProps, EmailLoginFormValues>({\n        mapPropsToValues: ({ email = '' }) => ({\n            email,\n        }),\n        handleSubmit: (values, { props: { onSendLoginEmail = noop } }) => {\n            onSendLoginEmail(values);\n        },\n        validationSchema: ({ language }: WithLanguageProps) =>\n            getEmailValidationSchema({ language }),\n    })(memo(EmailLoginForm)),\n);\n","import React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\n\nimport { CheckboxFormField, Fieldset } from '../ui/form';\n\nconst PrivacyPolicyCheckboxFieldLink: FunctionComponent<{ url: string }> = ({ url }) => (\n    <CheckboxFormField\n        labelContent={<TranslatedHtml data={{ url }} id=\"privacy_policy.label\" />}\n        name=\"privacyPolicy\"\n        testId=\"privacy-policy-checkbox\"\n    />\n);\n\nconst PrivacyPolicyFieldset: FunctionComponent<{ url: string }> = ({ url }) => (\n    <Fieldset additionalClassName=\"checkout-privacy-policy\">\n        <PrivacyPolicyCheckboxFieldLink url={url} />\n    </Fieldset>\n);\n\nconst PrivacyPolicyAutoConsent: FunctionComponent<{ url: string }> = ({ url }) => (\n    <p>\n        <TranslatedHtml data={{ url }} id=\"privacy_policy_auto_consent.label\" />\n    </p>\n);\n\nconst PrivacyPolicyField: FunctionComponent<{ url: string; isExpressPrivacyPolicy: boolean }> = ({\n    url,\n    isExpressPrivacyPolicy,\n}) => {\n    if (isExpressPrivacyPolicy) {\n        return <PrivacyPolicyAutoConsent url={url} />;\n    }\n\n    return <PrivacyPolicyFieldset url={url} />;\n};\n\nexport default memo(PrivacyPolicyField);\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\nimport { boolean, BooleanSchema, object, ObjectSchema } from 'yup';\n\nexport interface PrivacyPolicyValidatonSchemaProps {\n    isRequired: boolean;\n    language: LanguageService;\n}\n\nexport default function getPrivacyPolicyValidationSchema({\n    isRequired,\n    language,\n}: PrivacyPolicyValidatonSchemaProps): ObjectSchema<{ privacyPolicy?: boolean }> {\n    const schemaFields: {\n        privacyPolicy?: BooleanSchema;\n    } = {};\n\n    if (isRequired) {\n        schemaFields.privacyPolicy = boolean().oneOf(\n            [true],\n            language.translate('privacy_policy.required_error'),\n        );\n    }\n\n    return object(schemaFields);\n}\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\n\nimport { Input, Label } from '../ui/form';\n\nexport type SubscribeFieldProps = FieldProps<boolean> & {\n    requiresMarketingConsent: boolean;\n};\n\nconst SubscribeField: FunctionComponent<SubscribeFieldProps> = ({\n    field,\n    requiresMarketingConsent,\n}) => (\n    <>\n        <Input\n            {...field}\n            checked={field.value}\n            className=\"form-checkbox\"\n            id={field.name}\n            testId=\"should-subscribe-checkbox\"\n            type=\"checkbox\"\n        />\n\n        <Label htmlFor={field.name}>\n            <TranslatedHtml\n                id={\n                    requiresMarketingConsent\n                        ? 'customer.guest_marketing_consent'\n                        : 'customer.guest_subscribe_to_newsletter_text'\n                }\n            />\n        </Label>\n    </>\n);\n\nexport default memo(SubscribeField);\n","import classNames from 'classnames';\nimport { FieldProps, FormikProps, withFormik } from 'formik';\nimport React, { FunctionComponent, memo, ReactNode, useCallback } from 'react';\nimport { object, string } from 'yup';\n\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\n\nimport { getPrivacyPolicyValidationSchema, PrivacyPolicyField } from '../privacyPolicy';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { BasicFormField, Fieldset, Form, Legend } from '../ui/form';\n\nimport EmailField from './EmailField';\nimport SubscribeField from './SubscribeField';\n\nexport interface GuestFormProps {\n    canSubscribe: boolean;\n    checkoutButtons?: ReactNode;\n    continueAsGuestButtonLabelId: string;\n    requiresMarketingConsent: boolean;\n    defaultShouldSubscribe: boolean;\n    email?: string;\n    isLoading: boolean;\n    privacyPolicyUrl?: string;\n    isExpressPrivacyPolicy: boolean;\n    isFloatingLabelEnabled?: boolean;\n    onChangeEmail(email: string): void;\n    onContinueAsGuest(data: GuestFormValues): void;\n    onShowLogin(): void;\n}\n\nexport interface GuestFormValues {\n    email: string;\n    shouldSubscribe: boolean;\n}\n\nconst GuestForm: FunctionComponent<\n    GuestFormProps & WithLanguageProps & FormikProps<GuestFormValues>\n> = ({\n    canSubscribe,\n    checkoutButtons,\n    continueAsGuestButtonLabelId,\n    isLoading,\n    onChangeEmail,\n    onShowLogin,\n    privacyPolicyUrl,\n    requiresMarketingConsent,\n    isExpressPrivacyPolicy,\n    isFloatingLabelEnabled,\n}) => {\n    const renderField = useCallback(\n        (fieldProps: FieldProps<boolean>) => (\n            <SubscribeField {...fieldProps} requiresMarketingConsent={requiresMarketingConsent} />\n        ),\n        [requiresMarketingConsent],\n    );\n\n    return (\n        <Form\n            className=\"checkout-form\"\n            id=\"checkout-customer-guest\"\n            testId=\"checkout-customer-guest\"\n        >\n            <Fieldset\n                legend={\n                    <Legend hidden>\n                        <TranslatedString id=\"customer.guest_customer_text\" />\n                    </Legend>\n                }\n            >\n                <div className=\"customerEmail-container\">\n                    <div className=\"customerEmail-body\">\n                        <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} onChange={onChangeEmail}/>\n\n                        {(canSubscribe || requiresMarketingConsent) && (\n                            <BasicFormField name=\"shouldSubscribe\" render={renderField} />\n                        )}\n                    </div>\n\n                    <div\n                        className={classNames('form-actions customerEmail-action', {\n                            'customerEmail-floating--enabled': isFloatingLabelEnabled,\n                        })}\n                    >\n                        <Button\n                            className=\"customerEmail-button\"\n                            id=\"checkout-customer-continue\"\n                            isLoading={isLoading}\n                            testId=\"customer-continue-as-guest-button\"\n                            type=\"submit\"\n                            variant={ButtonVariant.Primary}\n                        >\n                            <TranslatedString id={continueAsGuestButtonLabelId} />\n                        </Button>\n                    </div>\n                </div>\n\n                {privacyPolicyUrl && (\n                    <PrivacyPolicyField isExpressPrivacyPolicy={isExpressPrivacyPolicy} url={privacyPolicyUrl} />\n                )}\n\n                {!isLoading && (\n                    <p>\n                        <TranslatedString id=\"customer.login_text\" />{' '}\n                        <a\n                            data-test=\"customer-continue-button\"\n                            id=\"checkout-customer-login\"\n                            onClick={onShowLogin}\n                        >\n                            <TranslatedString id=\"customer.login_action\" />\n                        </a>\n                    </p>\n                )}\n\n                {checkoutButtons}\n            </Fieldset>\n        </Form>\n    );\n};\n\nexport default withLanguage(\n    withFormik<GuestFormProps & WithLanguageProps, GuestFormValues>({\n        mapPropsToValues: ({\n            email = '',\n            defaultShouldSubscribe = false,\n            requiresMarketingConsent,\n        }) => ({\n            email,\n            shouldSubscribe: requiresMarketingConsent ? false : defaultShouldSubscribe,\n            privacyPolicy: false,\n        }),\n        handleSubmit: (values, { props: { onContinueAsGuest } }) => {\n            onContinueAsGuest(values);\n        },\n        validationSchema: ({ language, privacyPolicyUrl, isExpressPrivacyPolicy }: GuestFormProps & WithLanguageProps) => {\n            const email = string()\n                .email(language.translate('customer.email_invalid_error'))\n                .max(256)\n                .required(language.translate('customer.email_required_error'));\n\n            const baseSchema = object({ email });\n\n            if (privacyPolicyUrl && !isExpressPrivacyPolicy) {\n                return baseSchema.concat(\n                    getPrivacyPolicyValidationSchema({\n                        isRequired: !!privacyPolicyUrl,\n                        language,\n                    }),\n                );\n            }\n\n            return baseSchema;\n        },\n    })(memo(GuestForm)),\n);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconEye: FunctionComponent = () => (\n    <svg viewBox=\"0 0 576 512\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M288 144a110.94 110.94 0 0 0-31.24 5 55.4 55.4 0 0 1 7.24 27 56 56 0 0 1-56 56 55.4 55.4 0 0 1-27-7.24A111.71 111.71 0 1 0 288 144zm284.52 97.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400c-98.65 0-189.09-55-237.93-144C98.91 167 189.34 112 288 112s189.09 55 237.93 144C477.1 345 386.66 400 288 400z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconEye);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconEyeSlash: FunctionComponent = () => (\n    <svg viewBox=\"0 0 640 512\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M634 471L36 3.51A16 16 0 0 0 13.51 6l-10 12.49A16 16 0 0 0 6 41l598 467.49a16 16 0 0 0 22.49-2.49l10-12.49A16 16 0 0 0 634 471zM296.79 146.47l134.79 105.38C429.36 191.91 380.48 144 320 144a112.26 112.26 0 0 0-23.21 2.47zm46.42 219.07L208.42 260.16C210.65 320.09 259.53 368 320 368a113 113 0 0 0 23.21-2.46zM320 112c98.65 0 189.09 55 237.93 144a285.53 285.53 0 0 1-44 60.2l37.74 29.5a333.7 333.7 0 0 0 52.9-75.11 32.35 32.35 0 0 0 0-29.19C550.29 135.59 442.93 64 320 64c-36.7 0-71.71 7-104.63 18.81l46.41 36.29c18.94-4.3 38.34-7.1 58.22-7.1zm0 288c-98.65 0-189.08-55-237.93-144a285.47 285.47 0 0 1 44.05-60.19l-37.74-29.5a333.6 333.6 0 0 0-52.89 75.1 32.35 32.35 0 0 0 0 29.19C89.72 376.41 197.08 448 320 448c36.7 0 71.71-7.05 104.63-18.81l-46.41-36.28C359.28 397.2 339.89 400 320 400z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconEyeSlash);\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { FormField, TextInput } from '../ui/form';\nimport Label from '../ui/form/Label';\nimport { IconEye, IconEyeSlash } from '../ui/icon';\nimport { Toggle } from '../ui/toggle';\n\ninterface WithFloatingLabel {\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst PasswordField: FunctionComponent<WithFloatingLabel> = ({ isFloatingLabelEnabled = false }) => {\n    const renderInput = useCallback(\n        (props: FieldProps) => (\n            <Toggle openByDefault={false}>\n                {({ isOpen, toggle }) => (\n                    <div className=\"form-field-password\">\n                        <TextInput\n                            {...props.field}\n                            additionalClassName=\"form-input--withIcon\"\n                            id={props.field.name}\n                            isFloatingLabelEnabled={isFloatingLabelEnabled}\n                            type={isOpen ? 'text' : 'password'}\n                        />\n                        {isFloatingLabelEnabled && (\n                            <Label\n                                htmlFor={props.field.name}\n                                id={`${props.field.name}-label`}\n                                isFloatingLabelEnabled={true}\n                            >\n                                <TranslatedString id=\"customer.password_label\" />\n                            </Label>\n                        )}\n                        <a\n                            className=\"form-toggle-password form-input-icon\"\n                            href=\"#\"\n                            onClick={toggle}\n                        >\n                            {isOpen ? <IconEye /> : <IconEyeSlash />}\n                        </a>\n                    </div>\n                )}\n            </Toggle>\n        ),\n        [isFloatingLabelEnabled],\n    );\n\n    const labelContent = useMemo(() => <TranslatedString id=\"customer.password_label\" />, []);\n\n    return <FormField input={renderInput} isFloatingLabelEnabled={isFloatingLabelEnabled} labelContent={isFloatingLabelEnabled ? null : labelContent} name=\"password\" />;\n};\n\nexport default memo(PasswordField);\n","import { FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\nimport { object, string } from 'yup';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport {\n    TranslatedHtml,\n    TranslatedLink,\n    TranslatedString,\n    withLanguage,\n    WithLanguageProps,\n} from '@bigcommerce/checkout/locale';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Fieldset, Form, Legend } from '../ui/form';\n\nimport CustomerViewType from './CustomerViewType';\nimport EmailField from './EmailField';\nimport getEmailValidationSchema from './getEmailValidationSchema';\nimport mapErrorMessage from './mapErrorMessage';\nimport PasswordField from './PasswordField';\n\nexport interface LoginFormProps {\n    canCancel?: boolean;\n    continueAsGuestButtonLabelId: string;\n    email?: string;\n    forgotPasswordUrl: string;\n    isSignInEmailEnabled?: boolean;\n    isSendingSignInEmail?: boolean;\n    isSigningIn?: boolean;\n    isExecutingPaymentMethodCheckout?: boolean;\n    signInError?: Error;\n    signInEmailError?: Error;\n    viewType?: Omit<CustomerViewType, 'guest'>;\n    passwordlessLogin?: boolean;\n    shouldShowCreateAccountLink?: boolean;\n    isFloatingLabelEnabled?: boolean;\n    onCancel?(): void;\n    onCreateAccount?(): void;\n    onChangeEmail?(email: string): void;\n    onSignIn(data: LoginFormValues): void;\n    onSendLoginEmail?(): void;\n    onContinueAsGuest?(): void;\n}\n\nexport interface LoginFormValues {\n    email: string;\n    password: string;\n}\n\nconst LoginForm: FunctionComponent<\n    LoginFormProps & WithLanguageProps & FormikProps<LoginFormValues>\n> = ({\n    canCancel,\n    continueAsGuestButtonLabelId,\n    forgotPasswordUrl,\n    email,\n    isSignInEmailEnabled,\n    isSigningIn,\n    isExecutingPaymentMethodCheckout,\n    language,\n    onCancel = noop,\n    onChangeEmail,\n    onContinueAsGuest,\n    onCreateAccount = noop,\n    onSendLoginEmail = noop,\n    signInError,\n    shouldShowCreateAccountLink,\n    isFloatingLabelEnabled,\n    viewType = CustomerViewType.Login,\n}) => {\n    const changeEmailLink = useCallback(() => {\n        if (!email) {\n            return null;\n        }\n\n        return (\n            <p className=\"optimizedCheckout-contentSecondary\">\n                <TranslatedLink\n                    data={{ email }}\n                    id=\"customer.guest_could_login_change_email\"\n                    onClick={onCancel}\n                    testId=\"change-email\"\n                />\n            </p>\n        );\n    }, [email, onCancel]);\n\n    return (\n        <Form\n            className=\"checkout-form\"\n            id=\"checkout-customer-returning\"\n            testId=\"checkout-customer-returning\"\n        >\n            <Fieldset\n                legend={\n                    <Legend hidden>\n                        <TranslatedString id=\"customer.returning_customer_text\" />\n                    </Legend>\n                }\n            >\n                {signInError && (\n                    <Alert testId=\"customer-login-error-message\" type={AlertType.Error}>\n                        {mapErrorMessage(signInError, (key) => language.translate(key))}\n                    </Alert>\n                )}\n\n                {viewType === CustomerViewType.SuggestedLogin && (\n                    <Alert type={AlertType.Info}>\n                        <TranslatedHtml data={{ email }} id=\"customer.guest_could_login\" />\n                    </Alert>\n                )}\n\n                {viewType === CustomerViewType.CancellableEnforcedLogin && (\n                    <Alert type={AlertType.Info}>\n                        <TranslatedHtml data={{ email }} id=\"customer.guest_must_login\" />\n                    </Alert>\n                )}\n\n                {viewType === CustomerViewType.EnforcedLogin && (\n                    <Alert type={AlertType.Error}>\n                        <TranslatedLink\n                            id=\"customer.guest_temporary_disabled\"\n                            onClick={onCreateAccount}\n                        />\n                    </Alert>\n                )}\n\n                {(viewType === CustomerViewType.Login ||\n                    viewType === CustomerViewType.EnforcedLogin) && (\n                    <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} onChange={onChangeEmail} />\n                )}\n\n                <PasswordField isFloatingLabelEnabled={isFloatingLabelEnabled} />\n\n                <p className=\"form-legend-container\">\n                    <span>\n                        { isSignInEmailEnabled &&\n                            <TranslatedLink\n                                id=\"login_email.link\"\n                                onClick={ onSendLoginEmail }\n                                testId=\"customer-signin-link\"\n                            />\n                        }\n                        { !isSignInEmailEnabled &&\n                            <a\n                                data-test=\"forgot-password-link\"\n                                href={ forgotPasswordUrl }\n                                rel=\"noopener noreferrer\"\n                                target=\"_blank\"\n                            >\n                                <TranslatedString id=\"customer.forgot_password_action\" />\n                            </a>\n                        }\n                    </span>\n                    { viewType === CustomerViewType.Login && shouldShowCreateAccountLink &&\n                        <span>\n                            <TranslatedLink\n                                id=\"customer.create_account_to_continue_text\"\n                                onClick={onCreateAccount}\n                            />\n                        </span>\n                    }\n                </p>\n\n                <div className=\"form-actions\">\n                    <Button\n                        disabled={isSigningIn || isExecutingPaymentMethodCheckout}\n                        isLoading={isSigningIn || isExecutingPaymentMethodCheckout}\n                        id=\"checkout-customer-continue\"\n                        testId=\"customer-continue-button\"\n                        type=\"submit\"\n                        variant={ButtonVariant.Primary}\n                    >\n                        <TranslatedString id=\"customer.sign_in_action\" />\n                    </Button>\n\n                    {viewType === CustomerViewType.SuggestedLogin && (\n                        <a\n                            className=\"button optimizedCheckout-buttonSecondary\"\n                            data-test=\"customer-guest-continue\"\n                            href=\"#\"\n                            id=\"checkout-guest-continue\"\n                            onClick={preventDefault(onContinueAsGuest)}\n                        >\n                            <TranslatedString id={continueAsGuestButtonLabelId} />\n                        </a>\n                    )}\n\n                    {canCancel &&\n                        viewType !== CustomerViewType.EnforcedLogin &&\n                        viewType !== CustomerViewType.SuggestedLogin && (\n                            <a\n                                className=\"button optimizedCheckout-buttonSecondary\"\n                                data-test=\"customer-cancel-button\"\n                                href=\"#\"\n                                id=\"checkout-customer-cancel\"\n                                onClick={preventDefault(onCancel)}\n                            >\n                                <TranslatedString\n                                    id={\n                                        viewType === CustomerViewType.CancellableEnforcedLogin\n                                            ? 'login_email.use_another_email'\n                                            : 'common.cancel_action'\n                                    }\n                                />\n                            </a>\n                        )}\n                </div>\n\n                {viewType === CustomerViewType.SuggestedLogin && changeEmailLink()}\n            </Fieldset>\n        </Form>\n    );\n};\n\nexport default withLanguage(\n    withFormik<LoginFormProps & WithLanguageProps, LoginFormValues>({\n        mapPropsToValues: ({ email = '' }) => ({\n            email,\n            password: '',\n        }),\n        handleSubmit: (values, { props: { onSignIn } }) => {\n            onSignIn(values);\n        },\n        validationSchema: ({ language }: LoginFormProps & WithLanguageProps) =>\n            getEmailValidationSchema({ language }).concat(\n                object({\n                    password: string().required(\n                        language.translate('customer.password_required_error'),\n                    ),\n                }),\n            ),\n    })(memo(LoginForm)),\n);\n","export default function mapErrorMessage(\n    error: any, // TODO: Export `RequestError`\n    translate: (key: string) => string,\n): string {\n    const type = error.body && error.body.type;\n\n    switch (type) {\n        case 'throttled_login':\n            return translate('customer.sign_in_throttled_error');\n\n        case 'reset_password_before_login':\n            return translate('customer.reset_password_before_login_error');\n\n        default:\n            return translate('customer.sign_in_error');\n    }\n}\n","import { CustomerAccountRequestBody } from '@bigcommerce/checkout-sdk';\n\nimport { mapCustomFormFieldsFromFormValues } from '../formFields';\n\nimport { CreateAccountFormValues } from './getCreateCustomerValidationSchema';\n\nexport default function mapCreateAccountFromFormValues({\n    acceptsMarketingEmails,\n    customFields,\n    ...values\n}: CreateAccountFormValues): CustomerAccountRequestBody {\n    return {\n        ...values,\n        acceptsMarketingEmails: acceptsMarketingEmails && acceptsMarketingEmails.length > 0,\n        customFields: mapCustomFormFieldsFromFormValues(customFields),\n    };\n}\n","import { CustomerInitializeOptions, CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\nimport { FieldProps, FormikProps, withFormik } from 'formik';\nimport React, { FunctionComponent, memo, ReactNode, useCallback, useEffect, useState } from 'react';\n\nimport { getAppliedStyles } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport { CustomerSkeleton } from '@bigcommerce/checkout/ui';\n\nimport CheckoutStepStatus from '../checkout/CheckoutStepStatus';\nimport { getPrivacyPolicyValidationSchema, PrivacyPolicyField } from '../privacyPolicy';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { BasicFormField, Fieldset, Form, Legend } from '../ui/form';\n\nimport { GuestFormValues } from './GuestForm';\nimport SubscribeField from './SubscribeField';\n\nexport interface StripeGuestFormProps {\n    canSubscribe: boolean;\n    checkoutButtons?: ReactNode;\n    step: CheckoutStepStatus;\n    continueAsGuestButtonLabelId: string;\n    email?: string;\n    isLoading: boolean;\n    isExpressPrivacyPolicy: boolean;\n    requiresMarketingConsent: boolean;\n    defaultShouldSubscribe: boolean;\n    privacyPolicyUrl?: string;\n    onChangeEmail(email: string): void;\n    onContinueAsGuest(data: GuestFormValues): void;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onShowLogin(): void;\n}\n\nconst StripeGuestForm: FunctionComponent<StripeGuestFormProps & FormikProps<GuestFormValues>> = ({\n    continueAsGuestButtonLabelId,\n    isLoading,\n    initialize,\n    isExpressPrivacyPolicy,\n    deinitialize,\n    onChangeEmail,\n    onShowLogin,\n    onContinueAsGuest,\n    canSubscribe,\n    checkoutButtons,\n    requiresMarketingConsent,\n    privacyPolicyUrl,\n    step,\n    status\n}) => {\n\n    const [continueAsAGuestButton, setContinueAsAGuestButton] = useState(true);\n    const [emailValue, setEmailValue] = useState('');\n    const [authentication, setAuthentication] = useState(false);\n    const [isStripeLoading, setIsStripeLoading] = useState(true);\n    const [isNewAuth, setIsNewAuth] = useState(false);\n    const handleOnClickSubmitButton = () => {\n        onContinueAsGuest({\n            email: emailValue,\n            shouldSubscribe: !!status?.shouldSubscribe,\n        });\n    };\n    const setEmailCallback = useCallback((authenticated: boolean, email: string) => {\n        onChangeEmail(email);\n        setEmailValue(email);\n        setContinueAsAGuestButton(!email);\n        setAuthentication(authenticated);\n\n        if(!authenticated){\n            setIsNewAuth(true);\n        }\n    }, [setContinueAsAGuestButton, onChangeEmail]);\n\n    useEffect(() => {\n        if ((!step.isComplete || isNewAuth) && emailValue && authentication) {\n            handleOnClickSubmitButton();\n        }\n    }, [emailValue, authentication, isNewAuth]);\n\n    useEffect(() => {\n        if (status?.valSuccess) {\n            handleOnClickSubmitButton();\n        }\n    }, [status?.valSuccess]);\n\n    const handleLoading = useCallback((mounted: boolean) => {\n        setIsStripeLoading(mounted);\n    }, []);\n\n    const stripeDeinitialize = () => {\n        deinitialize({\n            methodId: 'stripeupe',\n        });\n    };\n\n    const stripeInitialize = () => {\n        initialize( {\n            methodId: 'stripeupe',\n            stripeupe: {\n                container: 'stripeupeLink',\n                onEmailChange: setEmailCallback,\n                isLoading: handleLoading,\n                getStyles: getStripeStyles,\n                gatewayId: 'stripeupe',\n                methodId: 'card',\n            },\n        })};\n\n    useEffect(() => {\n        stripeInitialize();\n\n        return () => stripeDeinitialize();\n    }, []);\n\n    const getStylesFromElement = (\n        id: string,\n        properties: string[]) => {\n        const parentContainer = document.getElementById(id);\n\n        if (parentContainer) {\n            return getAppliedStyles(parentContainer, properties);\n        }\n\n            return undefined;\n\n    };\n\n    const containerId = 'stripe-card-component-field';\n\n    const getStripeStyles: () => (Record<string, string> | undefined) = useCallback( () => {\n        const formInput = getStylesFromElement(`${containerId}--input`, ['color', 'background-color', 'border-color', 'box-shadow']);\n        const formLabel = getStylesFromElement(`${containerId}--label`, ['color']);\n        const formError = getStylesFromElement(`${containerId}--error`, ['color']);\n\n        return formLabel && formInput && formError ? {\n            labelText: formLabel.color,\n            fieldText: formInput.color,\n            fieldPlaceholderText: formInput.color,\n            fieldErrorText: formError.color,\n            fieldBackground: formInput['background-color'],\n            fieldInnerShadow: formInput['box-shadow'],\n            fieldBorder: formInput['border-color'],\n        } : undefined;\n    }, [])\n\n    const renderCheckoutThemeStylesForStripeUPE = () => {\n        return (\n            <div\n                className=\"optimizedCheckout-form-input\"\n                id={ `${containerId}--input` }\n                placeholder=\"1111\"\n            >\n                <div\n                    className=\"form-field--error\"\n                >\n                    <div\n                        className=\"optimizedCheckout-form-label\"\n                        id={ `${containerId}--error` }\n                    />\n                </div>\n                <div\n                    className=\"optimizedCheckout-form-label\"\n                    id={ `${containerId}--label` }\n                />\n            </div>\n        );\n    };\n\n    const renderField = useCallback((fieldProps: FieldProps<boolean>) => (\n        <SubscribeField\n            { ...fieldProps }\n            requiresMarketingConsent={ requiresMarketingConsent }\n        />\n    ), [\n        requiresMarketingConsent,\n    ]);\n\n    const buttonText = authentication && !isNewAuth? 'customer.continue_as_stripe_customer_action' : continueAsGuestButtonLabelId;\n\n    return (\n        <>\n            <CustomerSkeleton isLoading={isStripeLoading}/>\n            <Form\n                className=\"checkout-form\"\n                id=\"checkout-customer-guest\"\n                testId=\"checkout-customer-guest\"\n            >\n                <div className=\"checkout-form\" style={ {display: isStripeLoading ? 'none' : undefined} }>\n                    <Fieldset\n                        legend={ !authentication &&\n                            <Legend hidden>\n                                <TranslatedString id=\"customer.guest_customer_text\"/>\n                            </Legend>\n                        }\n                    >\n                        <div className=\"customerEmail-container\">\n                            <div className=\"customerEmail-body\">\n                                <div id=\"stripeupeLink\"/>\n                                <br/>\n                                { (canSubscribe || requiresMarketingConsent) && <BasicFormField\n                                    name=\"shouldSubscribe\"\n                                    render={ renderField }\n                                /> }\n                            </div>\n\n                            <div className=\"form-actions customerEmail-action\">\n                                { (!authentication || (authentication && !isNewAuth )) && <Button\n                                    className=\"stripeCustomerEmail-button\"\n                                    disabled={ continueAsAGuestButton }\n                                    id=\"stripe-checkout-customer-continue\"\n                                    isLoading={ isLoading }\n                                    testId=\"stripe-customer-continue-as-guest-button\"\n                                    type=\"submit\"\n                                    variant={ ButtonVariant.Primary }\n                                >\n                                    <TranslatedString id={ buttonText }/>\n                                </Button> }\n                            </div>\n                        </div>\n\n                        {privacyPolicyUrl && (\n                            <PrivacyPolicyField isExpressPrivacyPolicy={isExpressPrivacyPolicy} url={privacyPolicyUrl} />\n                        )}\n\n                        {\n                            !isLoading && <p>\n                                <TranslatedString id=\"customer.login_text\"/>\n                                { ' ' }\n                                <a\n                                    data-test=\"customer-continue-button\"\n                                    id=\"checkout-customer-login\"\n                                    onClick={ onShowLogin }\n                                >\n                                    <TranslatedString id=\"customer.login_action\"/>\n                                </a>\n                            </p>\n                        }\n                        { !authentication && checkoutButtons }\n                    </Fieldset>\n                </div>\n                { renderCheckoutThemeStylesForStripeUPE() }\n            </Form>\n        </>\n    );\n};\n\nexport default withLanguage(\n    withFormik<StripeGuestFormProps, GuestFormValues>({\n            mapPropsToValues: ({\n                email = '',\n                defaultShouldSubscribe = false,\n                requiresMarketingConsent,\n            }) => ({\n                email,\n                shouldSubscribe: requiresMarketingConsent ? false : defaultShouldSubscribe,\n                privacyPolicy: false,\n            }),\n            handleSubmit: ( values, { setStatus }) => {\n                setStatus({\n                    valSuccess: true,\n                    shouldSubscribe: values.shouldSubscribe,\n                  });\n            },\n            validationSchema: ({ language, privacyPolicyUrl, isExpressPrivacyPolicy }: StripeGuestFormProps & WithLanguageProps) => {\n                if (privacyPolicyUrl && !isExpressPrivacyPolicy) {\n                    return getPrivacyPolicyValidationSchema({\n                            isRequired: !!privacyPolicyUrl,\n                            language,\n                        })\n                }\n            },\n        })(memo(StripeGuestForm))\n)\n\n","import { withFormik, FieldProps, FormikProps } from 'formik';\nimport React, { memo, useCallback, FunctionComponent, ReactNode } from 'react';\nimport { object, string } from 'yup';\n\nimport { withLanguage, TranslatedHtml, TranslatedString, WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport { getPrivacyPolicyValidationSchema, PrivacyPolicyField } from '../privacyPolicy';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { BasicFormField, Fieldset, Form, Legend  } from '../ui/form';\n\nimport EmailField from './EmailField';\nimport SubscribeField from './SubscribeField';\n\nexport interface SubscriptionFormProps {\n    canSubscribe: boolean;\n    checkoutButtons?: ReactNode;\n    continueAsGuestButtonLabelId: string;\n    requiresMarketingConsent: boolean;\n    defaultShouldSubscribe: boolean;\n    email?: string;\n    isLoading: boolean;\n    privacyPolicyUrl?: string;\n    onChangeEmail(email: string): void;\n    onContinueAsGuest(data: GuestFormValues): void;\n    onShowLogin(): void;\n    onCreateAccount(): void;\n}\n\nexport interface GuestFormValues {\n    email: string;\n    shouldSubscribe: boolean;\n}\n\nconst SubscriptionForm: FunctionComponent<SubscriptionFormProps & WithLanguageProps & FormikProps<GuestFormValues>> = ({\n    canSubscribe,\n    checkoutButtons,\n    continueAsGuestButtonLabelId,\n    isLoading,\n    onChangeEmail,\n    onShowLogin,\n    onCreateAccount,\n    privacyPolicyUrl,\n    requiresMarketingConsent,\n}) => {\n\n    const renderField = useCallback((fieldProps: FieldProps<boolean>) => (\n        <SubscribeField\n            { ...fieldProps }\n            requiresMarketingConsent={ requiresMarketingConsent }\n        />\n    ), [\n        requiresMarketingConsent,\n    ]);\n\n    return (\n        <div\n            className=\"checkout-form\"\n        >\n            <p>\n                Create an account to purchase this subscription. It&apos;s fast, easy and you&apos;ll be able to make changes to your subscription online anytime.\n            </p>\n\n            <Button\n                // className=\"customerEmail-button\"\n                onClick={ onCreateAccount }\n                variant={ ButtonVariant.Primary }\n            >\n                <TranslatedString id={ 'customer.create_account_action' } />\n            </Button>\n            {\n                !isLoading && <p>\n                    <TranslatedString id=\"customer.login_text\" />\n                    { ' ' }\n                    <a\n                        data-test=\"customer-continue-button\"\n                        id=\"checkout-customer-login\"\n                        onClick={ onShowLogin }\n                    >\n                        <TranslatedString id=\"customer.login_action\" />\n                    </a>\n                </p>\n            }\n        </div>\n    );\n};\n\nexport default withLanguage(withFormik<SubscriptionFormProps & WithLanguageProps, GuestFormValues>({\n    mapPropsToValues: ({\n        email = '',\n        defaultShouldSubscribe = false,\n        requiresMarketingConsent,\n    }) => ({\n        email,\n        shouldSubscribe: requiresMarketingConsent ? false : defaultShouldSubscribe,\n        privacyPolicy: false,\n    }),\n    handleSubmit: (values, { props: { onContinueAsGuest } }) => {\n        onContinueAsGuest(values);\n    },\n    validationSchema: ({ language, privacyPolicyUrl }: SubscriptionFormProps & WithLanguageProps) => {\n        const email = string()\n            .email(language.translate('customer.email_invalid_error'))\n            .max(256)\n            .required(language.translate('customer.email_required_error'));\n\n        const baseSchema = object({ email });\n\n        if (privacyPolicyUrl) {\n            return baseSchema.concat(getPrivacyPolicyValidationSchema({\n                isRequired: !!privacyPolicyUrl,\n                language,\n            }));\n        }\n\n        return baseSchema;\n    },\n})(memo(SubscriptionForm)));\n","import {\n    Cart,\n    CheckoutPaymentMethodExecutedOptions,\n    CheckoutSelectors,\n    CustomerAccountRequestBody,\n    CustomerCredentials,\n    CustomerInitializeOptions,\n    CustomerRequestOptions,\n    Customer as CustomerType,\n    ExecutePaymentMethodCheckoutOptions,\n    FormField,\n    GuestCredentials,\n    SignInEmail,\n    StoreConfig,\n} from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { Component, ReactNode } from 'react';\n\nimport { AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { isPaypalConnectMethod } from '@bigcommerce/checkout/paypal-connect-integration';\nimport { CustomerSkeleton } from '@bigcommerce/checkout/ui';\n\nimport { withAnalytics } from '../analytics';\nimport { withCheckout } from '../checkout';\nimport CheckoutStepStatus from '../checkout/CheckoutStepStatus';\nimport { isErrorWithType } from '../common/error';\nimport { isFloatingLabelEnabled } from '../common/utility';\nimport { PaymentMethodId } from '../payment/paymentMethod';\n\nimport CheckoutButtonList from './CheckoutButtonList';\nimport CreateAccountForm from './CreateAccountForm';\nimport CustomerViewType from './CustomerViewType';\nimport EmailLoginForm, { EmailLoginFormValues } from './EmailLoginForm';\nimport { CreateAccountFormValues } from './getCreateCustomerValidationSchema';\nimport GuestForm, { GuestFormValues } from './GuestForm';\nimport LoginForm from './LoginForm';\nimport mapCreateAccountFromFormValues from './mapCreateAccountFromFormValues';\nimport StripeGuestForm from './StripeGuestForm';\n\nimport { trackLogin } from '../common/tracking';\nimport withRecurly from '../recurly/withRecurly';\nimport { RecurlyContextProps } from '../recurly/RecurlyContext';\nimport SubscriptionForm from \"./SubscriptionForm\";\n\nexport interface CustomerProps {\n    viewType: CustomerViewType;\n    step: CheckoutStepStatus;\n    isEmbedded?: boolean;\n    isSubscribed: boolean;\n    isWalletButtonsOnTop: boolean;\n    cart?: Cart;\n    checkEmbeddedSupport?(methodIds: string[]): void;\n    onChangeViewType?(viewType: CustomerViewType): void;\n    onAccountCreated?(): void;\n    onContinueAsGuest?(): void;\n    onContinueAsGuestError?(error: Error): void;\n    onReady?(): void;\n    onSubscribeToNewsletter(subscribe: boolean): void;\n    onSignIn?(): void;\n    onSignInError?(error: Error): void;\n    onUnhandledError?(error: Error): void;\n}\n\nexport interface WithCheckoutCustomerProps {\n    canSubscribe: boolean;\n    customer?: CustomerType;\n    customerAccountFields: FormField[];\n    checkoutButtonIds: string[];\n    defaultShouldSubscribe: boolean;\n    email?: string;\n    firstName?: string;\n    forgotPasswordUrl: string;\n    isContinuingAsGuest: boolean;\n    isCreatingAccount: boolean;\n    isExecutingPaymentMethodCheckout: boolean;\n    isGuestEnabled: boolean;\n    hasBillingId: boolean;\n    isInitializing: boolean;\n    isSendingSignInEmail: boolean;\n    isSignInEmailEnabled: boolean;\n    isSigningIn: boolean;\n    privacyPolicyUrl?: string;\n    providerWithCustomCheckout?: string;\n    requiresMarketingConsent: boolean;\n    signInEmail?: SignInEmail;\n    signInEmailError?: Error;\n    isAccountCreationEnabled: boolean;\n    isPaymentDataRequired: boolean;\n    createAccountError?: Error;\n    signInError?: Error;\n    useFloatingLabel?: boolean;\n    cart?: Cart;\n    isFloatingLabelEnabled?: boolean;\n    isExpressPrivacyPolicy: boolean;\n    clearError(error: Error): Promise<CheckoutSelectors>;\n    continueAsGuest(credentials: GuestCredentials): Promise<CheckoutSelectors>;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n    sendLoginEmail(params: { email: string }): Promise<CheckoutSelectors>;\n    signIn(credentials: CustomerCredentials): Promise<CheckoutSelectors>;\n    createAccount(values: CustomerAccountRequestBody): Promise<CheckoutSelectors>;\n}\n\nexport interface CustomerState {\n    isEmailLoginFormOpen: boolean;\n    isReady: boolean;\n    hasRequestedLoginEmail: boolean;\n}\n\nclass Customer extends Component<CustomerProps & WithCheckoutCustomerProps & AnalyticsContextProps & RecurlyContextProps, CustomerState> {\n    state: CustomerState = {\n        isEmailLoginFormOpen: false,\n        isReady: false,\n        hasRequestedLoginEmail: false,\n    };\n\n    private draftEmail?: string;\n\n    async componentDidMount(): Promise<void> {\n        const {\n            initializeCustomer,\n            email,\n            onReady = noop,\n            onUnhandledError = noop,\n            providerWithCustomCheckout,\n        } = this.props;\n\n        this.draftEmail = email;\n\n        try {\n            if (providerWithCustomCheckout && providerWithCustomCheckout !== PaymentMethodId.StripeUPE) {\n                await initializeCustomer({methodId: providerWithCustomCheckout});\n            }\n        } catch (error) {\n            onUnhandledError(error);\n        }\n\n        this.setState({ isReady: true });\n\n        onReady();\n    }\n\n    async componentWillUnmount(): Promise<void> {\n        const {\n            deinitializeCustomer = noop,\n            providerWithCustomCheckout,\n            onUnhandledError = noop,\n        } = this.props;\n\n        try {\n            await deinitializeCustomer({ methodId: providerWithCustomCheckout });\n        } catch (error) {\n            onUnhandledError(error);\n        }\n    }\n\n    render(): ReactNode {\n        const { viewType, isLoadingRecurly } = this.props;\n        const { isEmailLoginFormOpen, isReady } = this.state;\n        const shouldRenderGuestForm = viewType === CustomerViewType.Guest;\n        const shouldRenderCreateAccountForm = viewType === CustomerViewType.CreateAccount;\n        const shouldRenderSubscriptionForm = viewType === CustomerViewType.Subscription;\n        const shouldRenderLoginForm = !shouldRenderGuestForm && !shouldRenderCreateAccountForm && !shouldRenderSubscriptionForm;\n\n        return (\n            <CustomerSkeleton isLoading={ !isReady || isLoadingRecurly }>\n                {isEmailLoginFormOpen && this.renderEmailLoginLinkForm()}\n                {shouldRenderLoginForm && this.renderLoginForm()}\n                {shouldRenderGuestForm && this.renderGuestForm()}\n                {shouldRenderCreateAccountForm && this.renderCreateAccountForm()}\n                { shouldRenderSubscriptionForm && this.renderSubscriptionForm() }\n            </CustomerSkeleton>\n        );\n    }\n\n    private renderGuestForm(): ReactNode {\n        const {\n            canSubscribe,\n            checkEmbeddedSupport,\n            checkoutButtonIds,\n            deinitializeCustomer,\n            email,\n            initializeCustomer,\n            isContinuingAsGuest = false,\n            isExecutingPaymentMethodCheckout = false,\n            isInitializing = false,\n            isSubscribed,\n            isWalletButtonsOnTop,\n            privacyPolicyUrl,\n            requiresMarketingConsent,\n            providerWithCustomCheckout,\n            onUnhandledError = noop,\n            step,\n            isFloatingLabelEnabled,\n            isExpressPrivacyPolicy,\n            isPaymentDataRequired,\n        } = this.props;\n        const checkoutButtons = isWalletButtonsOnTop || !isPaymentDataRequired\n          ? null\n          : <CheckoutButtonList\n            checkEmbeddedSupport={checkEmbeddedSupport}\n            deinitialize={deinitializeCustomer}\n            initialize={initializeCustomer}\n            isInitializing={isInitializing}\n            methodIds={checkoutButtonIds}\n            onError={onUnhandledError}\n          />;\n\n        const isLoadingGuestForm = isWalletButtonsOnTop ?\n            isContinuingAsGuest || isExecutingPaymentMethodCheckout :\n            isContinuingAsGuest || isInitializing || isExecutingPaymentMethodCheckout;\n\n        return (\n            providerWithCustomCheckout === PaymentMethodId.StripeUPE ?\n                <StripeGuestForm\n                    canSubscribe={canSubscribe}\n                    checkoutButtons={checkoutButtons}\n                    continueAsGuestButtonLabelId=\"customer.continue\"\n                    defaultShouldSubscribe={isSubscribed}\n                    deinitialize={deinitializeCustomer}\n                    email={this.draftEmail || email}\n                    initialize={initializeCustomer}\n                    isExpressPrivacyPolicy={isExpressPrivacyPolicy}\n                    isLoading={isContinuingAsGuest || isInitializing || isExecutingPaymentMethodCheckout}\n                    onChangeEmail={this.handleChangeEmail}\n                    onContinueAsGuest={this.handleContinueAsGuest}\n                    onShowLogin={this.handleShowLogin}\n                    privacyPolicyUrl={privacyPolicyUrl}\n                    requiresMarketingConsent={requiresMarketingConsent}\n                    step={step}\n                />\n                :\n            <GuestForm\n                canSubscribe={canSubscribe}\n                checkoutButtons={checkoutButtons}\n                continueAsGuestButtonLabelId=\"customer.continue\"\n                defaultShouldSubscribe={isSubscribed}\n                email={this.draftEmail || email}\n                isExpressPrivacyPolicy={isExpressPrivacyPolicy}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                isLoading={isLoadingGuestForm}\n                onChangeEmail={this.handleChangeEmail}\n                onContinueAsGuest={this.handleContinueAsGuest}\n                onShowLogin={this.handleShowLogin}\n                privacyPolicyUrl={privacyPolicyUrl}\n                requiresMarketingConsent={requiresMarketingConsent}\n            />\n        );\n    }\n\n    private renderEmailLoginLinkForm(): ReactNode {\n        const { isEmailLoginFormOpen, hasRequestedLoginEmail } = this.state;\n\n        const { isSendingSignInEmail, signInEmailError, signInEmail, isFloatingLabelEnabled } =\n            this.props;\n\n        return (\n            <EmailLoginForm\n                email={this.draftEmail}\n                emailHasBeenRequested={hasRequestedLoginEmail}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                isOpen={isEmailLoginFormOpen}\n                isSendingEmail={isSendingSignInEmail}\n                onRequestClose={this.closeEmailLoginFormForm}\n                onSendLoginEmail={this.handleSendLoginEmail}\n                sentEmail={signInEmail}\n                sentEmailError={signInEmailError}\n            />\n        );\n    }\n\n    private closeEmailLoginFormForm: () => void = () => {\n        this.setState({\n            isEmailLoginFormOpen: false,\n            hasRequestedLoginEmail: false,\n        });\n    };\n\n    private renderCreateAccountForm(): ReactNode {\n        const {\n            customerAccountFields,\n            isExecutingPaymentMethodCheckout,\n            isCreatingAccount,\n            createAccountError,\n            requiresMarketingConsent,\n            isFloatingLabelEnabled,\n        } = this.props;\n\n        return (\n            <CreateAccountForm\n                createAccountError={createAccountError}\n                formFields={customerAccountFields}\n                isCreatingAccount={isCreatingAccount}\n                isExecutingPaymentMethodCheckout={isExecutingPaymentMethodCheckout}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                onCancel={this.handleCancelCreateAccount}\n                onSubmit={this.handleCreateAccount}\n                requiresMarketingConsent={requiresMarketingConsent}\n            />\n        );\n    }\n\n    private renderLoginForm(): ReactNode {\n        const {\n            isEmbedded,\n            email,\n            forgotPasswordUrl,\n            isSignInEmailEnabled,\n            isGuestEnabled,\n            isSendingSignInEmail,\n            isSigningIn,\n            isExecutingPaymentMethodCheckout,\n            isAccountCreationEnabled,\n            providerWithCustomCheckout,\n            signInError,\n            isFloatingLabelEnabled,\n            viewType,\n        } = this.props;\n\n        return (\n            <LoginForm\n                canCancel={isGuestEnabled}\n                continueAsGuestButtonLabelId={\n                    providerWithCustomCheckout\n                        ? 'customer.continue'\n                        : 'customer.continue_as_guest_action'\n                }\n                email={this.draftEmail || email}\n                forgotPasswordUrl={forgotPasswordUrl}\n                isExecutingPaymentMethodCheckout={isExecutingPaymentMethodCheckout}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                isSendingSignInEmail={isSendingSignInEmail}\n                isSignInEmailEnabled={isSignInEmailEnabled && !isEmbedded}\n                isSigningIn={isSigningIn}\n                onCancel={this.handleCancelSignIn}\n                onChangeEmail={this.handleChangeEmail}\n                onContinueAsGuest={this.executePaymentMethodCheckoutOrContinue}\n                onCreateAccount={this.showCreateAccount}\n                onSendLoginEmail={this.handleEmailLoginClicked}\n                onSignIn={this.handleSignIn}\n                shouldShowCreateAccountLink={isAccountCreationEnabled}\n                signInError={signInError}\n                viewType={viewType}\n            />\n        );\n    }\n\n    private handleEmailLoginClicked: () => void = async () => {\n        const { viewType } = this.props;\n\n        try {\n            if (viewType !== CustomerViewType.Login && this.draftEmail) {\n                await this.handleSendLoginEmail({ email: this.draftEmail });\n            }\n        } finally {\n            this.setState({\n                isEmailLoginFormOpen: true,\n            });\n        }\n    };\n\n    private handleSendLoginEmail: (values: EmailLoginFormValues) => Promise<void> = async (\n        values,\n    ) => {\n        const { sendLoginEmail } = this.props;\n\n        try {\n            await sendLoginEmail(values);\n        } finally {\n            this.setState({\n                hasRequestedLoginEmail: true,\n            });\n        }\n    };\n\n    private handleContinueAsGuest: (formValues: GuestFormValues) => Promise<void> = async (\n        formValues,\n    ) => {\n        const {\n            canSubscribe,\n            continueAsGuest,\n            hasBillingId,\n            defaultShouldSubscribe,\n            onChangeViewType = noop,\n            onContinueAsGuest = noop,\n            onContinueAsGuestError = noop,\n            onSubscribeToNewsletter,\n        } = this.props;\n\n        const email = formValues.email.trim();\n        const updateSubscriptionWhenUnchecked =\n            hasBillingId || defaultShouldSubscribe ? false : undefined;\n\n        try {\n            const { data } = await continueAsGuest({\n                email,\n                acceptsMarketingNewsletter:\n                    canSubscribe && formValues.shouldSubscribe\n                        ? true\n                        : updateSubscriptionWhenUnchecked,\n                acceptsAbandonedCartEmails: formValues.shouldSubscribe\n                    ? true\n                    : updateSubscriptionWhenUnchecked,\n            });\n\n            onSubscribeToNewsletter(formValues.shouldSubscribe);\n\n            const customer = data.getCustomer();\n\n            if (customer && customer.shouldEncourageSignIn && customer.isGuest && !customer.isStripeLinkAuthenticated) {\n                return onChangeViewType(CustomerViewType.SuggestedLogin);\n            }\n\n            await this.executePaymentMethodCheckoutOrContinue();\n\n            this.draftEmail = undefined;\n        } catch (error) {\n            if (\n                isErrorWithType(error) &&\n                (error.type === 'update_subscriptions' ||\n                    error.type === 'payment_method_client_invalid')\n            ) {\n                this.draftEmail = undefined;\n\n                onContinueAsGuest();\n            }\n\n            if (isErrorWithType(error) && error.status === 429) {\n                return onChangeViewType(CustomerViewType.EnforcedLogin);\n            }\n\n            if (isErrorWithType(error) && error.status === 403) {\n                return onChangeViewType(CustomerViewType.CancellableEnforcedLogin);\n            }\n\n            onContinueAsGuestError(error);\n        }\n    };\n\n    private handleSignIn: (credentials: CustomerCredentials) => Promise<void> = async (\n        credentials,\n    ) => {\n        const {\n            executePaymentMethodCheckout,\n            signIn,\n            onSignIn = noop,\n            onSignInError = noop,\n            providerWithCustomCheckout,\n        } = this.props;\n\n        try {\n            await signIn(credentials);\n\n            if (isPaypalConnectMethod(providerWithCustomCheckout)) {\n                await executePaymentMethodCheckout({\n                    methodId: providerWithCustomCheckout,\n                    continueWithCheckoutCallback: onSignIn,\n                });\n            } else {\n                onSignIn();\n            }\n\n            this.draftEmail = undefined;\n\n            const {\n              customer,\n            } = this.props;\n\n            if(customer) trackLogin(customer);\n        } catch (error) {\n            onSignInError(error);\n        }\n    };\n\n    private handleCreateAccount: (values: CreateAccountFormValues) => void = async (values) => {\n        const {\n            executePaymentMethodCheckout,\n            createAccount = noop,\n            onAccountCreated = noop,\n            providerWithCustomCheckout,\n        } = this.props;\n\n        await createAccount(mapCreateAccountFromFormValues(values));\n\n        if (isPaypalConnectMethod(providerWithCustomCheckout)) {\n            await executePaymentMethodCheckout({\n                methodId: providerWithCustomCheckout,\n                continueWithCheckoutCallback: onAccountCreated,\n            });\n        } else {\n            onAccountCreated();\n        }\n    };\n\n    private showCreateAccount: () => void = () => {\n        const { onChangeViewType = noop } = this.props;\n\n        onChangeViewType(CustomerViewType.CreateAccount);\n    };\n\n    private handleCancelCreateAccount: () => void = () => {\n        const { clearError, onChangeViewType = noop, createAccountError } = this.props;\n\n        if (createAccountError) {\n            clearError(createAccountError);\n        }\n\n        onChangeViewType(CustomerViewType.Login);\n    };\n\n    private handleCancelSignIn: () => void = () => {\n        const { clearError, onChangeViewType = noop, signInError, hasSubscription } = this.props;\n\n        if (signInError) {\n            clearError(signInError);\n        }\n\n        onChangeViewType(hasSubscription ? CustomerViewType.Subscription : CustomerViewType.Guest);\n    };\n\n    private handleChangeEmail: (email: string) => void = (email) => {\n        const { analyticsTracker } = this.props;\n\n        this.draftEmail = email;\n        analyticsTracker.customerEmailEntry(email);\n    };\n\n    private handleShowLogin: () => void = () => {\n        const { onChangeViewType = noop } = this.props;\n\n        onChangeViewType(CustomerViewType.Login);\n    };\n\n    private executePaymentMethodCheckoutOrContinue: () => void = async () => {\n        const {\n            executePaymentMethodCheckout,\n            onContinueAsGuest = noop,\n            providerWithCustomCheckout\n        } = this.props;\n\n        if (providerWithCustomCheckout && providerWithCustomCheckout !== PaymentMethodId.StripeUPE) {\n            await executePaymentMethodCheckout({\n                methodId: providerWithCustomCheckout,\n                continueWithCheckoutCallback: onContinueAsGuest,\n                checkoutPaymentMethodExecuted: (payload) => this.checkoutPaymentMethodExecuted(payload)\n            });\n        } else {\n            onContinueAsGuest();\n        }\n    };\n\n    private checkoutPaymentMethodExecuted(payload?: CheckoutPaymentMethodExecutedOptions) {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.customerPaymentMethodExecuted(payload);\n    }\n\n    private renderSubscriptionForm(): ReactNode {\n        const {\n            canSubscribe,\n            checkEmbeddedSupport,\n            checkoutButtonIds,\n            defaultShouldSubscribe,\n            deinitializeCustomer,\n            email,\n            initializeCustomer,\n            isContinuingAsGuest = false,\n            isExecutingPaymentMethodCheckout = false,\n            isInitializing = false,\n            privacyPolicyUrl,\n            providerWithCustomCheckout,\n            requiresMarketingConsent,\n            onUnhandledError = noop,\n        } = this.props;\n\n        return (\n            <SubscriptionForm\n                canSubscribe={ canSubscribe }\n                checkoutButtons={\n                    <CheckoutButtonList\n                        checkEmbeddedSupport={ checkEmbeddedSupport }\n                        deinitialize={ deinitializeCustomer }\n                        initialize={ initializeCustomer }\n                        isInitializing={ isInitializing }\n                        methodIds={ checkoutButtonIds }\n                        onError={ onUnhandledError }\n                    />\n                }\n                continueAsGuestButtonLabelId={ !!providerWithCustomCheckout ? 'customer.continue' : 'customer.continue_as_guest_action' }\n                defaultShouldSubscribe={ defaultShouldSubscribe }\n                email={ this.draftEmail || email }\n                isLoading={ isContinuingAsGuest || isInitializing || isExecutingPaymentMethodCheckout }\n                onChangeEmail={ this.handleChangeEmail }\n                onContinueAsGuest={ this.handleContinueAsGuest }\n                onCreateAccount={ this.showCreateAccount }\n                onShowLogin={ this.handleShowLogin }\n                privacyPolicyUrl={ privacyPolicyUrl }\n                requiresMarketingConsent={ requiresMarketingConsent }\n            />\n        );\n    }\n}\n\nexport function mapToWithCheckoutCustomerProps({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutCustomerProps | null {\n    const {\n        data: {\n            getBillingAddress,\n            getCustomerAccountFields,\n            getCheckout,\n            getCustomer,\n            getSignInEmail,\n            getConfig,\n            getCart,\n            isPaymentDataRequired,\n        },\n        errors: { getSignInError, getSignInEmailError, getCreateCustomerAccountError },\n        statuses: {\n            isContinuingAsGuest,\n            isExecutingPaymentMethodCheckout,\n            isInitializingCustomer,\n            isSigningIn,\n            isSendingSignInEmail,\n            isCreatingCustomerAccount,\n        },\n    } = checkoutState;\n\n    const billingAddress = getBillingAddress();\n    const checkout = getCheckout();\n    const customer = getCustomer();\n    const signInEmail = getSignInEmail();\n    const config = getConfig();\n    const cart = getCart();\n\n    if (!checkout || !config) {\n        return null;\n    }\n\n    const {\n        checkoutSettings: {\n            privacyPolicyUrl,\n            requiresMarketingConsent,\n            isSignInEmailEnabled,\n            isAccountCreationEnabled,\n            isExpressPrivacyPolicy,\n        },\n    } = config as StoreConfig & { checkoutSettings: { isAccountCreationEnabled: boolean } };\n\n    return {\n        customerAccountFields: getCustomerAccountFields(),\n        canSubscribe: config.shopperConfig.showNewsletterSignup,\n        checkoutButtonIds: config.checkoutSettings.remoteCheckoutProviders,\n        clearError: checkoutService.clearError,\n        createAccount: checkoutService.createCustomerAccount,\n        continueAsGuest: checkoutService.continueAsGuest,\n        customer,\n        sendLoginEmail: checkoutService.sendSignInEmail,\n        defaultShouldSubscribe: config.shopperConfig.defaultNewsletterSignup,\n        deinitializeCustomer: checkoutService.deinitializeCustomer,\n        executePaymentMethodCheckout: checkoutService.executePaymentMethodCheckout,\n        email: billingAddress?.email || customer?.email,\n        firstName: customer?.firstName,\n        forgotPasswordUrl: config.links.forgotPasswordLink,\n        initializeCustomer: checkoutService.initializeCustomer,\n        isCreatingAccount: isCreatingCustomerAccount(),\n        createAccountError: getCreateCustomerAccountError(),\n        hasBillingId: !!billingAddress?.id,\n        isContinuingAsGuest: isContinuingAsGuest(),\n        isExecutingPaymentMethodCheckout: isExecutingPaymentMethodCheckout(),\n        isInitializing: isInitializingCustomer(),\n        isSignInEmailEnabled,\n        isAccountCreationEnabled,\n        isGuestEnabled: config.checkoutSettings.guestCheckoutEnabled,\n        isSigningIn: isSigningIn(),\n        isSendingSignInEmail: isSendingSignInEmail(),\n        signInEmail,\n        signInEmailError: getSignInEmailError(),\n        privacyPolicyUrl,\n        providerWithCustomCheckout: config.checkoutSettings.providerWithCustomCheckout || undefined,\n        requiresMarketingConsent,\n        signIn: checkoutService.signInCustomer,\n        signInError: getSignInError(),\n        useFloatingLabel: isFloatingLabelEnabled(config.checkoutSettings),\n        cart,\n        isFloatingLabelEnabled: isFloatingLabelEnabled(config.checkoutSettings),\n        isExpressPrivacyPolicy,\n        isPaymentDataRequired: isPaymentDataRequired(),\n    };\n}\n\nexport default withRecurly(props => props)(withAnalytics(withCheckout(mapToWithCheckoutCustomerProps)(Customer)));\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconTag: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M21.41 11.58l-9-9C12.05 2.22 11.55 2 11 2H4c-1.1 0-2 .9-2 2v7c0 .55.22 1.05.59 1.42l9 9c.36.36.86.58 1.41.58.55 0 1.05-.22 1.41-.59l7-7c.37-.36.59-.86.59-1.41 0-.55-.23-1.06-.59-1.42zM5.5 7C4.67 7 4 6.33 4 5.5S4.67 4 5.5 4 7 4.67 7 5.5 6.33 7 5.5 7z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconTag);\n","import DOMPurify from 'dompurify';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { IconTag } from '../ui/icon';\n\nexport interface PromotionBannerProps {\n    message: string;\n}\n\nconst PromotionBanner: FunctionComponent<PromotionBannerProps> = ({ message }) => (\n    <Alert\n        additionalClassName=\"optimizedCheckout-discountBanner\"\n        icon={<IconTag />}\n        type={AlertType.Info}\n    >\n        <span\n            dangerouslySetInnerHTML={{\n                __html: DOMPurify.sanitize(message),\n            }}\n            data-test=\"promotion-banner-message\"\n        />\n    </Alert>\n);\n\nexport default memo(PromotionBanner);\n","import { Banner, Promotion } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport PromotionBanner from './PromotionBanner';\nimport './PromotionBannerList.scss';\n\nexport interface PromotionBannerListProps {\n    promotions?: Promotion[];\n}\n\nconst PromotionBannerList: FunctionComponent<PromotionBannerListProps> = ({ promotions }) => {\n    const banners = (promotions || []).reduce(\n        (result, promotion) => [...result, ...promotion.banners],\n        [] as Banner[],\n    );\n\n    if (!banners.length) {\n        return null;\n    }\n\n    return (\n        <div className=\"discountBanner\">\n            <ul className=\"discountBannerList\">\n                {banners.map((banner, index) => (\n                    <PromotionBanner key={index} message={banner.text} />\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default memo(PromotionBannerList);\n","import { Consignment, LineItemMap } from '@bigcommerce/checkout-sdk';\nimport { some } from 'lodash';\n\nimport hasUnassignedLineItems from './hasUnassignedLineItems';\n\nexport default function isUsingMultiShipping(\n    consignments: Consignment[],\n    lineItems: LineItemMap,\n): boolean {\n    if (consignments.length > 1) {\n        return true;\n    }\n\n    if (\n        some(consignments, (consignment) => consignment.lineItemIds.length) &&\n        hasUnassignedLineItems(consignments, lineItems)\n    ) {\n        return true;\n    }\n\n    return false;\n}\n","import { Cart, Consignment } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { isPayPalConnectAddress, PoweredByPaypalConnectLabel, usePayPalConnectAddress } from '@bigcommerce/checkout/paypal-connect-integration';\n\nimport { AddressType, StaticAddress } from '../address';\n\nimport { StaticShippingOption } from './shippingOption';\nimport './StaticConsignment.scss';\nimport StaticConsignmentItemList from './StaticConsignmentItemList';\n\ninterface StaticConsignmentProps {\n    consignment: Consignment;\n    cart: Cart;\n    compactView?: boolean;\n}\n\nconst StaticConsignment: FunctionComponent<StaticConsignmentProps> = ({\n    consignment,\n    cart,\n    compactView,\n}) => {\n    const { isPayPalAxoEnabled, paypalConnectAddresses } = usePayPalConnectAddress();\n    const { shippingAddress: address, selectedShippingOption } = consignment;\n\n    const showPayPalConnectAddressLabel = isPayPalAxoEnabled && isPayPalConnectAddress(address, paypalConnectAddresses);\n\n    return (\n        <div className=\"staticConsignment\">\n            <StaticAddress address={address} type={AddressType.Shipping} />\n\n            {showPayPalConnectAddressLabel && <PoweredByPaypalConnectLabel />}\n\n            {!compactView && <StaticConsignmentItemList cart={cart} consignment={consignment} />}\n\n            {selectedShippingOption && (\n                <div>\n                    <div className=\"shippingOption shippingOption--alt shippingOption--selected\">\n                        <StaticShippingOption\n                            displayAdditionalInformation={false}\n                            method={selectedShippingOption}\n                        />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default memo(StaticConsignment);\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class ShippingOptionExpiredError extends CustomError {\n    constructor() {\n        super({\n            name: 'SHIPPING_OPTION_EXPIRED',\n            message: getLanguageService().translate('shipping.shipping_option_expired_error'),\n            title: getLanguageService().translate('shipping.shipping_option_expired_heading'),\n        });\n\n        setPrototypeOf(this, ShippingOptionExpiredError.prototype);\n    }\n}\n","import React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nexport interface LoadingNotificationProps {\n    isLoading: boolean;\n}\n\nconst LoadingNotification: FunctionComponent<LoadingNotificationProps> = ({ isLoading }) => {\n    if (!isLoading) {\n        return null;\n    }\n\n    return (\n        <div className=\"loadingNotification\">\n            <div className=\"loadingNotification-label optimizedCheckout-loadingToaster\">\n                <div className=\"spinner\" />\n\n                <span aria-live=\"assertive\" className=\"label\" role=\"alert\">\n                    <TranslatedString id=\"common.loading_text\" />\n                </span>\n            </div>\n        </div>\n    );\n};\n\nexport default memo(LoadingNotification);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconCheck: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconCheck);\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button, ButtonSize, ButtonVariant } from '../ui/button';\nimport { IconCheck } from '../ui/icon';\n\nimport CheckoutStepType from './CheckoutStepType';\n\nexport interface CheckoutStepHeaderProps {\n    heading: ReactNode;\n    isActive?: boolean;\n    isComplete?: boolean;\n    isEditable?: boolean;\n    summary?: ReactNode;\n    type: CheckoutStepType;\n    onEdit?(type: CheckoutStepType): void;\n}\n\nconst CheckoutStepHeader: FunctionComponent<CheckoutStepHeaderProps> = ({\n    heading,\n    isActive,\n    isComplete,\n    isEditable,\n    onEdit,\n    summary,\n    type,\n}) => {\n    return (\n        <div\n            className={classNames('stepHeader', {\n                'is-readonly': !isEditable,\n                'is-clickable': isEditable && !isActive,\n            })}\n            onClick={preventDefault(isEditable && onEdit ? () => onEdit(type) : noop)}\n        >\n            <div className=\"stepHeader-figure stepHeader-column\">\n                <IconCheck\n                    additionalClassName={classNames(\n                        'stepHeader-counter',\n                        'optimizedCheckout-step',\n                        { 'stepHeader-counter--complete': isComplete },\n                    )}\n                />\n\n                <h2 className=\"stepHeader-title optimizedCheckout-headingPrimary\">{heading}</h2>\n            </div>\n\n            <div\n                className=\"stepHeader-body stepHeader-column optimizedCheckout-contentPrimary\"\n                data-test=\"step-info\"\n            >\n                {!isActive && isComplete && summary}\n            </div>\n\n            {isEditable && !isActive && (\n                <div className=\"stepHeader-actions stepHeader-column\">\n                    <Button\n                        aria-expanded={isActive}\n                        size={ButtonSize.Tiny}\n                        testId=\"step-edit-button\"\n                        variant={ButtonVariant.Secondary}\n                    >\n                        <TranslatedString id=\"common.edit_action\" />\n                    </Button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default memo(CheckoutStepHeader);\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { Component, createRef, ReactNode } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { isMobileView, MobileView } from '../ui/responsive';\n\nimport CheckoutStepHeader from './CheckoutStepHeader';\nimport CheckoutStepType from './CheckoutStepType';\n\nexport interface CheckoutStepProps {\n    heading?: ReactNode;\n    isActive?: boolean;\n    isBusy: boolean;\n    isComplete?: boolean;\n    isEditable?: boolean;\n    suggestion?: ReactNode;\n    summary?: ReactNode;\n    type: CheckoutStepType;\n    onExpanded?(step: CheckoutStepType): void;\n    onEdit?(step: CheckoutStepType): void;\n}\n\nexport interface CheckoutStepState {\n    isClosed: boolean;\n}\n\nexport default class CheckoutStep extends Component<CheckoutStepProps, CheckoutStepState> {\n    state = {\n        isClosed: true,\n    };\n\n    private containerRef = createRef<HTMLLIElement>();\n    private contentRef = createRef<HTMLDivElement>();\n    private timeoutRef?: number;\n    private timeoutDelay?: number;\n\n    componentDidMount(): void {\n        const { isActive } = this.props;\n\n        if (isActive) {\n            this.focusStep();\n        }\n    }\n\n    componentDidUpdate(prevProps: Readonly<CheckoutStepProps>): void {\n        const { isActive } = this.props;\n\n        if (isActive && isActive !== prevProps.isActive) {\n            this.focusStep();\n        }\n    }\n\n    componentWillUnmount(): void {\n        if (this.timeoutRef) {\n            window.clearTimeout(this.timeoutRef);\n\n            this.timeoutRef = undefined;\n        }\n    }\n\n    render(): ReactNode {\n        const { heading, isActive, isComplete, isEditable, onEdit, suggestion, summary, type } =\n            this.props;\n\n        const { isClosed } = this.state;\n\n        return (\n            <li\n                className={classNames('checkout-step', 'optimizedCheckout-checkoutStep', {\n                    [`checkout-step--${type}`]: !!type,\n                })}\n                ref={this.containerRef}\n            >\n                <div className=\"checkout-view-header\">\n                    <CheckoutStepHeader\n                        heading={heading}\n                        isActive={isActive}\n                        isComplete={isComplete}\n                        isEditable={isEditable}\n                        onEdit={onEdit}\n                        summary={summary}\n                        type={type}\n                    />\n                </div>\n\n                {suggestion && isClosed && !isActive && (\n                    <div className=\"checkout-suggestion\" data-test=\"step-suggestion\">\n                        {suggestion}\n                    </div>\n                )}\n\n                {this.renderContent()}\n            </li>\n        );\n    }\n\n    private renderContent(): ReactNode {\n        const { children, isActive, isBusy } = this.props;\n\n        return (\n            <MobileView>\n                {(matched) => (\n                    <CSSTransition\n                        addEndListener={this.handleTransitionEnd}\n                        classNames=\"checkout-view-content\"\n                        enter={!matched}\n                        exit={!matched}\n                        in={isActive}\n                        mountOnEnter\n                        onExited={ this.onAnimationEnd }\n                        timeout={ {} }\n                        unmountOnExit\n                    >\n                        <div\n                            aria-busy={isBusy}\n                            className=\"checkout-view-content\"\n                            ref={this.contentRef}\n                        >\n                            {isActive ? children : null}\n                        </div>\n                    </CSSTransition>\n                )}\n            </MobileView>\n        );\n    }\n\n    private focusStep(): void {\n        const delay = isMobileView() ? 0 : this.getTransitionDelay();\n\n        this.setState({ isClosed: false });\n\n        this.timeoutRef = window.setTimeout(() => {\n            const input = this.getChildInput();\n            const position = this.getScrollPosition();\n            const { type, onExpanded = noop } = this.props;\n\n            if (input) {\n                input.focus();\n            }\n\n            if (position !== undefined && !isNaN(position)) {\n                window.scrollTo(0, position);\n            }\n\n            onExpanded(type);\n\n            this.timeoutRef = undefined;\n        }, delay);\n    }\n\n    private getChildInput(): HTMLElement | undefined {\n        const container = this.containerRef.current;\n\n        if (!container) {\n            return;\n        }\n\n        const input = container.querySelector<HTMLElement>('input, select, textarea');\n\n        return input || undefined;\n    }\n\n    private getScrollPosition(): number | undefined {\n        const container = this.getParentContainer();\n        const { isComplete } = this.props;\n\n        if (!container || window !== window.top) {\n            return;\n        }\n\n        const topOffset = isComplete ? 0 : window.innerHeight / 5;\n        const containerOffset =\n            container.getBoundingClientRect().top + (window.scrollY || window.pageYOffset);\n\n        return containerOffset - topOffset;\n    }\n\n    // For now, we need to find the parent container because `CheckoutStep`\n    // isn't the outer container yet. Once both the header and body are\n    // moved inside this component, we can remove the lookup.\n    private getParentContainer(): HTMLElement | undefined {\n        let container: HTMLElement | null = this.containerRef.current;\n\n        while (container && container.parentElement) {\n            if (container.parentElement.classList.contains('checkout-step')) {\n                return container.parentElement;\n            }\n\n            container = container.parentElement;\n        }\n\n        return this.containerRef.current ? this.containerRef.current : undefined;\n    }\n\n    private getTransitionDelay(): number {\n        if (this.timeoutDelay !== undefined) {\n            return this.timeoutDelay;\n        }\n\n        // Cache the result to avoid unnecessary reflow\n        this.timeoutDelay =\n            parseFloat(\n                this.contentRef.current\n                    ? getComputedStyle(this.contentRef.current).transitionDuration\n                    : '0s',\n            ) * 1000;\n\n        return this.timeoutDelay;\n    }\n\n    private handleTransitionEnd: (node: HTMLElement, done: () => void) => void = (node, done) => {\n        node.addEventListener('transitionend', ({ target }) => {\n            if (target === node) {\n                done();\n            }\n        });\n    };\n\n    private onAnimationEnd = (): void => {\n        const { isActive } = this.props;\n\n        if (!isActive) {\n            this.setState({ isClosed: true });\n        }\n    }\n}\n","import { MOBILE_MAX_WIDTH } from './breakpoints';\n\nlet query: MediaQueryList;\n\nexport default function isMobileView() {\n    query = window.matchMedia(`(max-width: ${MOBILE_MAX_WIDTH}px)`);\n\n    return query.matches;\n}\n","enum CheckoutStepType {\n    Billing = 'billing',\n    Customer = 'customer',\n    Payment = 'payment',\n    Shipping = 'shipping',\n}\n\nexport default CheckoutStepType;\n","import { Cart, StoreConfig } from '@bigcommerce/checkout-sdk';\n\nconst itemsRequireShipping = (cart?: Cart, config?: StoreConfig) => {\n    if (!cart) {\n        return false;\n    }\n\n    if (cart.lineItems.physicalItems.some((lineItem) => lineItem.isShippingRequired)) {\n        return true;\n    }\n\n    if (\n        config &&\n        config.checkoutSettings.features['CHECKOUT-4936.enable_custom_item_shipping'] &&\n        cart.lineItems.customItems\n    ) {\n        return cart.lineItems.customItems.length > 0;\n    }\n\n    return false;\n};\n\nexport default itemsRequireShipping;\n","import { CheckoutSelectors } from '@bigcommerce/checkout-sdk';\nimport { compact } from 'lodash';\nimport { createSelector } from 'reselect';\n\nimport { isValidAddress } from '../address';\nimport { EMPTY_ARRAY } from '../common/utility';\nimport { SUPPORTED_METHODS } from '../customer';\nimport { PaymentMethodId } from '../payment/paymentMethod';\nimport {\n    hasSelectedShippingOptions,\n    hasUnassignedLineItems,\n    itemsRequireShipping,\n} from '../shipping';\n\nimport CheckoutStepType from './CheckoutStepType';\n\nconst getCustomerStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getCheckout(),\n    ({ data }: CheckoutSelectors) => data.getCustomer(),\n    ({ data }: CheckoutSelectors) => data.getBillingAddress(),\n    ({ data }: CheckoutSelectors) => data.getConfig(),\n    (checkout, customer, billingAddress, config) => {\n        const hasEmail = !!(\n            (customer && customer.email) ||\n            (billingAddress && billingAddress.email)\n        );\n        const isUsingWallet =\n            checkout && checkout.payments\n                ? checkout.payments.some(\n                      (payment) => SUPPORTED_METHODS.indexOf(payment.providerId) >= 0,\n                  )\n                : false;\n        const isGuest = !!(customer && customer.isGuest);\n        const isComplete = hasEmail || isUsingWallet;\n        const isEditable = isComplete && !isUsingWallet && isGuest;\n\n        // StripeLink is a UX that is only available with StripeUpe and will only be displayed for BC guest users,\n        // it uses its own components in the customer and shipping steps, unfortunately in order to preserve the UX\n        // when reloading the checkout page it's necessary to refill the stripe components with the information saved.\n        // In this step, we require that the customer strategy be reloaded the first time.\n        const isUsingStripeLinkAndCheckoutPageIsReloaded = !isUsingWallet &&\n            config?.checkoutSettings.providerWithCustomCheckout === PaymentMethodId.StripeUPE && hasEmail && isGuest;\n\n        if (isUsingStripeLinkAndCheckoutPageIsReloaded) {\n            return {\n                type: CheckoutStepType.Customer,\n                isActive: false,\n                isComplete: customer?.isStripeLinkAuthenticated !== undefined ?? isComplete,\n                isEditable,\n                isRequired: true,\n            };\n        }\n\n        return {\n            type: CheckoutStepType.Customer,\n            isActive: false,\n            isComplete,\n            isEditable,\n            isRequired: true,\n        };\n    },\n);\n\nconst getBillingStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getCheckout(),\n    ({ data }: CheckoutSelectors) => data.getBillingAddress(),\n    ({ data }: CheckoutSelectors) => {\n        const billingAddress = data.getBillingAddress();\n\n        return billingAddress\n            ? data.getBillingAddressFields(billingAddress.countryCode)\n            : EMPTY_ARRAY;\n    },\n    (checkout, billingAddress, billingAddressFields) => {\n        const hasAddress = billingAddress\n            ? isValidAddress(billingAddress, billingAddressFields)\n            : false;\n        const isUsingWallet =\n            checkout && checkout.payments\n                ? checkout.payments.some(\n                      (payment) => SUPPORTED_METHODS.indexOf(payment.providerId) >= 0,\n                  )\n                : false;\n        const isComplete = hasAddress || isUsingWallet;\n        const isUsingAmazonPay =\n            checkout && checkout.payments\n                ? checkout.payments.some((payment) => payment.providerId === 'amazonpay')\n                : false;\n\n        if (isUsingAmazonPay) {\n            const billingAddressCustomFields = billingAddressFields.filter(\n                ({ custom }: { custom: boolean }) => custom,\n            );\n            const hasCustomFields = billingAddressCustomFields.length > 0;\n            const isAmazonPayBillingStepComplete =\n                billingAddress && hasCustomFields\n                    ? isValidAddress(billingAddress, billingAddressCustomFields)\n                    : true;\n\n            return {\n                type: CheckoutStepType.Billing,\n                isActive: false,\n                isComplete: isAmazonPayBillingStepComplete,\n                isEditable: isAmazonPayBillingStepComplete && hasCustomFields,\n                isRequired: true,\n            };\n        }\n\n        return {\n            type: CheckoutStepType.Billing,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete && !isUsingWallet,\n            isRequired: true,\n        };\n    },\n);\n\nconst getShippingStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getShippingAddress(),\n    ({ data }: CheckoutSelectors) => data.getConsignments(),\n    ({ data }: CheckoutSelectors) => data.getCart(),\n    ({ data }: CheckoutSelectors) => {\n        const shippingAddress = data.getShippingAddress();\n\n        return shippingAddress\n            ? data.getShippingAddressFields(shippingAddress.countryCode)\n            : EMPTY_ARRAY;\n    },\n    ({ data }: CheckoutSelectors) => data.getConfig(),\n    (shippingAddress, consignments, cart, shippingAddressFields, config) => {\n        const hasAddress = shippingAddress\n            ? isValidAddress(shippingAddress, shippingAddressFields)\n            : false;\n        const hasOptions = consignments ? hasSelectedShippingOptions(consignments) : false;\n        const hasUnassignedItems =\n            cart && consignments ? hasUnassignedLineItems(consignments, cart.lineItems) : true;\n        const isComplete = hasAddress && hasOptions && !hasUnassignedItems;\n        const isRequired = itemsRequireShipping(cart, config);\n\n        return {\n            type: CheckoutStepType.Shipping,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete && isRequired,\n            isRequired,\n        };\n    },\n);\n\nconst getPaymentStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getOrder(),\n    (order) => {\n        const isComplete = order ? order.isComplete : false;\n\n        return {\n            type: CheckoutStepType.Payment,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete,\n            isRequired: true,\n        };\n    },\n);\n\nconst getCheckoutStepStatuses = createSelector(\n    getCustomerStepStatus,\n    getShippingStepStatus,\n    getBillingStepStatus,\n    getPaymentStepStatus,\n    (customerStep, shippingStep, billingStep, paymentStep) => {\n        const steps = compact([customerStep, shippingStep, billingStep, paymentStep]);\n\n        const defaultActiveStep =\n            steps.find((step) => !step.isComplete && step.isRequired) || steps[steps.length - 1];\n\n        return steps.map((step, index) => {\n            const isPrevStepComplete = steps\n                .slice(0, index)\n                .every((prevStep) => prevStep.isComplete || !prevStep.isRequired);\n\n            return {\n                ...step,\n                isActive: defaultActiveStep.type === step.type,\n                isBusy: false,\n                // A step is only editable if its previous step is complete or not required\n                isEditable: isPrevStepComplete && step.isEditable,\n            };\n        });\n    },\n);\n\nexport default getCheckoutStepStatuses;\n","import {\n    Address,\n    Cart,\n    CartChangedError,\n    CheckoutParams,\n    CheckoutSelectors,\n    Consignment,\n    Customer as CustomerType,\n    CustomItem,\n    DigitalItem,\n    EmbeddedCheckoutMessenger,\n    EmbeddedCheckoutMessengerOptions,\n    FlashMessage,\n    GiftCertificateItem,\n    PhysicalItem,\n    Promotion,\n    RequestOptions\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { find, findIndex } from 'lodash';\nimport React, { Component, lazy, ReactNode } from 'react';\n\nimport { AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\nimport { ExtensionContextProps, withExtension } from '@bigcommerce/checkout/checkout-extension';\nimport { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport { AddressFormSkeleton, ChecklistSkeleton } from '@bigcommerce/checkout/ui';\n\nimport { withAnalytics } from '../analytics';\nimport { StaticBillingAddress } from '../billing';\nimport { EmptyCartMessage } from '../cart';\nimport { withCheckout } from '../checkout';\nimport { CustomError, ErrorModal, isCustomError } from '../common/error';\nimport { retry } from '../common/utility';\nimport {\n    CheckoutButtonContainer,\n    CheckoutSuggestion,\n    Customer,\n    CustomerInfo,\n    CustomerSignOutEvent,\n    CustomerViewType,\n} from '../customer';\nimport { EmbeddedCheckoutStylesheet, isEmbedded } from '../embeddedCheckout';\nimport { PromotionBannerList } from '../promotion';\nimport { hasSelectedShippingOptions, isUsingMultiShipping, StaticConsignment } from '../shipping';\nimport { ShippingOptionExpiredError } from '../shipping/shippingOption';\nimport { LazyContainer, LoadingNotification, LoadingOverlay } from '../ui/loading';\nimport { MobileView } from '../ui/responsive';\n\nimport CheckoutStep from './CheckoutStep';\nimport CheckoutStepStatus from './CheckoutStepStatus';\nimport CheckoutStepType from './CheckoutStepType';\nimport CheckoutSupport from './CheckoutSupport';\nimport mapToCheckoutProps from './mapToCheckoutProps';\nimport navigateToOrderConfirmation from './navigateToOrderConfirmation';\n\nimport { trackAddCoupon, trackAddShippingInfo, trackCheckoutProgress, CouponData, PromotionData, ShippingData, trackUserChange } from '../common/tracking';\nimport withRecurly from '../recurly/withRecurly';\nimport { RecurlyContextProps } from '../recurly/RecurlyContext';\n\nconst Billing = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"billing\" */\n                '../billing/Billing'\n            ),\n    ),\n);\n\nconst CartSummary = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"cart-summary\" */\n                '../cart/CartSummary'\n            ),\n    ),\n);\n\nconst CartSummaryDrawer = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"cart-summary-drawer\" */\n                '../cart/CartSummaryDrawer'\n            ),\n    ),\n);\n\nconst Payment = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"payment\" */\n                '../payment/Payment'\n            ),\n    ),\n);\n\nconst Shipping = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"shipping\" */\n                '../shipping/Shipping'\n            ),\n    ),\n);\n\nexport interface CheckoutProps {\n    checkoutId: string;\n    containerId: string;\n    embeddedStylesheet: EmbeddedCheckoutStylesheet;\n    embeddedSupport: CheckoutSupport;\n    errorLogger: ErrorLogger;\n    createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\n}\n\nexport interface CheckoutState {\n    activeStepType?: CheckoutStepType;\n    isBillingSameAsShipping: boolean;\n    customerViewType?: CustomerViewType;\n    defaultStepType?: CheckoutStepType;\n    error?: Error;\n    flashMessages?: FlashMessage[];\n    isMultiShippingMode: boolean;\n    isCartEmpty: boolean;\n    isRedirecting: boolean;\n    hasSelectedShippingOptions: boolean;\n    isHidingStepNumbers: boolean;\n    isSubscribed: boolean;\n}\n\nexport interface WithCheckoutProps {\n    billingAddress?: Address;\n    cart?: Cart;\n    customer?: CustomerType;\n    consignments?: Consignment[];\n    error?: Error;\n    hasCartChanged: boolean;\n    flashMessages?: FlashMessage[];\n    isGuestEnabled: boolean;\n    isLoadingCheckout: boolean;\n    isPending: boolean;\n    isPriceHiddenFromGuests: boolean;\n    isShowingWalletButtonsOnTop: boolean;\n    loginUrl: string;\n    cartUrl: string;\n    createAccountUrl: string;\n    promotions?: Promotion[];\n    steps: CheckoutStepStatus[];\n    clearError(error?: Error): void;\n    loadCheckout(id: string, options?: RequestOptions<CheckoutParams>): Promise<CheckoutSelectors>;\n    subscribeToConsignments(subscriber: (state: CheckoutSelectors) => void): () => void;\n}\n\nclass Checkout extends Component<\n    CheckoutProps &\n        WithCheckoutProps &\n        WithLanguageProps &\n        AnalyticsContextProps &\n        RecurlyContextProps &\n        ExtensionContextProps,\n    CheckoutState\n> {\n    state: CheckoutState = {\n        isBillingSameAsShipping: true,\n        isCartEmpty: false,\n        isRedirecting: false,\n        isMultiShippingMode: false,\n        hasSelectedShippingOptions: false,\n        isHidingStepNumbers: true,\n        isSubscribed: false,\n    };\n\n    private embeddedMessenger?: EmbeddedCheckoutMessenger;\n    private unsubscribeFromConsignments?: () => void;\n    private timeoutRef?: any;\n\n    componentWillUnmount(): void {\n        if (this.unsubscribeFromConsignments) {\n            this.unsubscribeFromConsignments();\n            this.unsubscribeFromConsignments = undefined;\n        }\n        if (this.timeoutRef) {\n            window.clearTimeout(this.timeoutRef);\n\n            this.timeoutRef = undefined;\n        }\n\n        window.removeEventListener('beforeunload', this.handleBeforeExit);\n        this.handleBeforeExit();\n    }\n\n    componentDidUpdate(previousProps: any): void {\n        const {cart, consignments, customer} = this.props;\n        \n        // if customer has been updated\n        if(customer && customer?.id !== previousProps.customer?.id) {\n            trackUserChange(customer);\n        }\n\n        // if coupon has been added\n        if ( cart?.coupons.length && previousProps.cart?.coupons.length !== cart?.coupons.length ) {\n            const addedCoupon = cart?.coupons[cart?.coupons.length - 1];\n\n            trackAddCoupon(addedCoupon.code, addedCoupon.discountedAmount);\n        }\n        // if shipping tier has changed\n\n        if ( previousProps.consignments?.[0]?.selectedShippingOption?.description !== consignments?.[0]?.selectedShippingOption?.description ) {\n            const coupons: CouponData[] = [];\n\n            cart?.coupons?.forEach(coupon => {\n                coupons.push({\n                    coupon: coupon.code,\n                    discount: coupon.discountedAmount,\n                });\n            });\n\n            const shippingInfo: ShippingData = {\n                currency: cart?.currency.code,\n                value: cart?.cartAmount,\n                shipping_tier: consignments?.[0]?.selectedShippingOption?.description,\n                coupons,\n                items: [],\n            };\n\n            const cartItemLists = [\n                cart?.lineItems.customItems,\n                cart?.lineItems.digitalItems,\n                cart?.lineItems.giftCertificates,\n                cart?.lineItems.physicalItems,\n            ];\n\n            cartItemLists.forEach(itemList => {\n                itemList?.forEach((item: CustomItem | DigitalItem | GiftCertificateItem | PhysicalItem) => {\n                    const itemCoupons: CouponData[] = [];\n                    const itemPromotions: PromotionData[] = [];\n\n                    const itemQuantity = 'quantity' in item ? item.quantity : 1;\n                    const itemFullPrice = 'listPrice' in item ? item.listPrice : item.amount;\n                    const itemDiscountedPrice = ('salePrice' in item ? item.salePrice : itemFullPrice) - ('couponAmount' in item ? (item.couponAmount / itemQuantity) : 0);\n\n                    if ( 'discounts' in item ) {\n                        let itemCouponIndex = 0;\n\n                        item.discounts.forEach(({id, discountedAmount}: {id?: string | number; discountedAmount: number}) => {\n                            if ( id === 'coupon' ) {\n                                itemCoupons.push({coupon: coupons[itemCouponIndex]?.coupon, discount: discountedAmount / itemQuantity});\n                                itemCouponIndex++;\n                            } else {\n                                itemPromotions.push({id, discount: discountedAmount / itemQuantity});\n                            }\n                        });\n                    }\n\n                    shippingInfo.items.push({\n                        item_id: 'productId' in item ? item.productId : undefined,\n                        item_name: item.name,\n                        item_variant: 'options' in item ? item.options?.[0]?.value : undefined,\n                        currency: cart?.currency.code,\n                        item_brand: 'brand' in item ? item.brand ?? 'MitoQ' : undefined,\n                        price: parseFloat(itemDiscountedPrice.toFixed(2)),\n                        quantity: itemQuantity,\n                        coupons: itemCoupons,\n                        promotions: itemPromotions,\n                    });\n                });\n            });\n            trackAddShippingInfo(shippingInfo);\n        }\n    }\n\n    async componentDidMount(): Promise<void> {\n        const {\n            analyticsTracker,\n            checkoutId,\n            containerId,\n            createEmbeddedMessenger,\n            embeddedStylesheet,\n            extensionService,\n            loadCheckout,\n            subscribeToConsignments,\n            isExtensionEnabled,\n        } = this.props;\n\n        try {\n            const { data } = await loadCheckout(checkoutId, {\n                params: {\n                    include: [\n                        'cart.lineItems.physicalItems.categoryNames',\n                        'cart.lineItems.digitalItems.categoryNames',\n                    ] as any, // FIXME: Currently the enum is not exported so it can't be used here.\n                },\n            });\n            const { links: { siteLink = '' } = {} } = data.getConfig() || {};\n            const errorFlashMessages = data.getFlashMessages('error') || [];\n\n            if (errorFlashMessages.length) {\n                const { language } = this.props;\n\n                this.setState({\n                    error: new CustomError({\n                        title:\n                            errorFlashMessages[0].title ||\n                            language.translate('common.error_heading'),\n                        message: errorFlashMessages[0].message,\n                        data: {},\n                        name: 'default',\n                    }),\n                });\n            }\n\n            const messenger = createEmbeddedMessenger({ parentOrigin: siteLink });\n\n            this.unsubscribeFromConsignments = subscribeToConsignments(\n                this.handleConsignmentsUpdated,\n            );\n            this.embeddedMessenger = messenger;\n            messenger.receiveStyles((styles) => embeddedStylesheet.append(styles));\n            messenger.postFrameLoaded({ contentId: containerId });\n            messenger.postLoaded();\n\n            analyticsTracker.checkoutBegin();\n\n            const consignments = data.getConsignments();\n            const cart = data.getCart();\n\n            const hasMultiShippingEnabled =\n                data.getConfig()?.checkoutSettings.hasMultiShippingEnabled;\n            const checkoutBillingSameAsShippingEnabled =\n                data.getConfig()?.checkoutSettings.checkoutBillingSameAsShippingEnabled ?? true;\n            const removeStepNumbersFlag =\n              data.getConfig()?.checkoutSettings.features['CHECKOUT-7255.remove_checkout_step_numbers'] ??\n              false;\n            const defaultNewsletterSignupOption =\n                data.getConfig()?.shopperConfig.defaultNewsletterSignup ??\n                false;\n            const isMultiShippingMode =\n                !!cart &&\n                !!consignments &&\n                hasMultiShippingEnabled &&\n                isUsingMultiShipping(consignments, cart.lineItems);\n\n            this.setState({\n                isBillingSameAsShipping: checkoutBillingSameAsShippingEnabled,\n                isHidingStepNumbers: removeStepNumbersFlag,\n                isSubscribed: defaultNewsletterSignupOption,\n            });\n\n            if (isMultiShippingMode) {\n                this.setState({ isMultiShippingMode }, this.handleReady);\n            } else {\n                this.handleReady();\n            }\n\n            window.addEventListener('beforeunload', this.handleBeforeExit);\n\n            if (isExtensionEnabled()) {\n                await extensionService.loadExtensions();\n            }\n        } catch (error) {\n            if (error instanceof Error) {\n                this.handleUnhandledError(error);\n            }\n        }\n    }\n\n    render(): ReactNode {\n        const { error, isHidingStepNumbers } = this.state;\n        let errorModal = null;\n\n        if (error) {\n            if (isCustomError(error)) {\n                errorModal = (\n                    <ErrorModal\n                        error={error}\n                        onClose={this.handleCloseErrorModal}\n                        title={error.title}\n                    />\n                );\n            } else {\n                errorModal = <ErrorModal error={error} onClose={this.handleCloseErrorModal} />;\n            }\n        }\n\n        return (\n            <div className={classNames({ 'is-embedded': isEmbedded(), 'remove-checkout-step-numbers': isHidingStepNumbers })}>\n                <div className=\"layout optimizedCheckout-contentPrimary\">\n                    {this.renderContent()}\n                </div>\n                {errorModal}\n            </div>\n        );\n    }\n\n    private renderContent(): ReactNode {\n        const { isPending, loginUrl, promotions = [], steps, isShowingWalletButtonsOnTop, extensionState } = this.props;\n\n        const { activeStepType, defaultStepType, isCartEmpty, isRedirecting } = this.state;\n\n        if (isCartEmpty) {\n            return <EmptyCartMessage loginUrl={loginUrl} waitInterval={3000} />;\n        }\n\n        const isPaymentStepActive = activeStepType\n            ? activeStepType === CheckoutStepType.Payment\n            : defaultStepType === CheckoutStepType.Payment;\n\n        return (\n            <LoadingOverlay hideContentWhenLoading isLoading={isRedirecting}>\n                <MobileView>\n                    { matched => {\n                        if (matched) {\n                            if (!this.timeoutRef) {\n                                this.timeoutRef = setTimeout(() => {\n                                    const checkoutHeader = document.querySelector(\".checkoutHeader\");\n                                    if (checkoutHeader !== null) {\n                                        checkoutHeader.scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"nearest\"});\n                                    }\n                                }, 1000);\n                            }\n\n\n                            return <div className=\"cart-summary-wrapper-mobile layout-cart\">\n                                <LazyContainer>\n                                    <CartSummary />\n                                </LazyContainer>\n                            </div>;\n                        } else {\n                            return <span></span>;\n                        }\n\n                    } }\n                </MobileView>\n                <div className=\"layout-main\">\n                    <LoadingNotification isLoading={(!isShowingWalletButtonsOnTop && isPending) || extensionState.isShowingLoadingIndicator} />\n\n                    <PromotionBannerList promotions={promotions} />\n\n                    {isShowingWalletButtonsOnTop && (\n                        <CheckoutButtonContainer\n                            checkEmbeddedSupport={this.checkEmbeddedSupport}\n                            isPaymentStepActive={isPaymentStepActive}\n                            onUnhandledError={this.handleUnhandledError}\n                        />\n                    )}\n\n                    <ol className=\"checkout-steps\">\n                        {steps\n                            .filter((step) => step.isRequired)\n                            .map((step) =>\n                                this.renderStep({\n                                    ...step,\n                                    isActive: activeStepType\n                                        ? activeStepType === step.type\n                                        : defaultStepType === step.type,\n                                    isBusy: isPending,\n                                }),\n                            )}\n                    </ol>\n                </div>\n\n                {this.renderCartSummary()}\n            </LoadingOverlay>\n        );\n    }\n\n    private renderStep(step: CheckoutStepStatus): ReactNode {\n        switch (step.type) {\n            case CheckoutStepType.Customer:\n                return this.renderCustomerStep(step);\n\n            case CheckoutStepType.Shipping:\n                return this.renderShippingStep(step);\n\n            case CheckoutStepType.Billing:\n                return this.renderBillingStep(step);\n\n            case CheckoutStepType.Payment:\n                return this.renderPaymentStep(step);\n\n            default:\n                return null;\n        }\n    }\n\n    private renderCustomerStep(step: CheckoutStepStatus): ReactNode {\n        const { isGuestEnabled, isShowingWalletButtonsOnTop, hasSubscription } = this.props;\n        const {\n            customerViewType = hasSubscription ? CustomerViewType.Subscription : isGuestEnabled ? CustomerViewType.Guest : CustomerViewType.Login,\n            isSubscribed,\n        } = this.state;\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"customer.customer_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n                suggestion={<CheckoutSuggestion />}\n                summary={\n                    <CustomerInfo\n                        onSignOut={this.handleSignOut}\n                        onSignOutError={this.handleError}\n                    />\n                }\n            >\n                <Customer\n                    checkEmbeddedSupport={this.checkEmbeddedSupport}\n                    isEmbedded={isEmbedded()}\n                    isSubscribed={isSubscribed}\n                    isWalletButtonsOnTop = {isShowingWalletButtonsOnTop }\n                    onAccountCreated={this.navigateToNextIncompleteStep}\n                    onChangeViewType={this.setCustomerViewType}\n                    onContinueAsGuest={this.navigateToNextIncompleteStep}\n                    onContinueAsGuestError={this.handleError}\n                    onReady={this.handleReady}\n                    onSignIn={this.navigateToNextIncompleteStep}\n                    onSignInError={this.handleError}\n                    onSubscribeToNewsletter={this.handleNewsletterSubscription}\n                    onUnhandledError={this.handleUnhandledError}\n                    step={step}\n                    viewType={customerViewType}\n                />\n            </CheckoutStep>\n        );\n    }\n\n    private renderShippingStep(step: CheckoutStepStatus): ReactNode {\n        const { hasCartChanged, cart, consignments = [] } = this.props;\n\n        const { isBillingSameAsShipping, isMultiShippingMode } = this.state;\n\n        if (!cart) {\n            return;\n        }\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"shipping.shipping_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n                summary={consignments.map((consignment) => (\n                    <div className=\"staticConsignmentContainer\" key={consignment.id}>\n                        <StaticConsignment\n                            cart={cart}\n                            compactView={consignments.length < 2}\n                            consignment={consignment}\n                        />\n                    </div>\n                ))}\n            >\n                <LazyContainer loadingSkeleton={<AddressFormSkeleton />}>\n                    <Shipping\n                        cartHasChanged={hasCartChanged}\n                        isBillingSameAsShipping={isBillingSameAsShipping}\n                        isMultiShippingMode={isMultiShippingMode}\n                        navigateNextStep={this.handleShippingNextStep}\n                        onCreateAccount={this.handleShippingCreateAccount}\n                        onReady={this.handleReady}\n                        onSignIn={this.handleShippingSignIn}\n                        onToggleMultiShipping={this.handleToggleMultiShipping}\n                        onUnhandledError={this.handleUnhandledError}\n                        step={step}\n                    />\n                </LazyContainer>\n            </CheckoutStep>\n        );\n    }\n\n    private renderBillingStep(step: CheckoutStepStatus): ReactNode {\n        const { billingAddress } = this.props;\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"billing.billing_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n                summary={billingAddress && <StaticBillingAddress address={billingAddress} />}\n            >\n                <LazyContainer loadingSkeleton={<AddressFormSkeleton />}>\n                    <Billing\n                        navigateNextStep={this.navigateToNextIncompleteStep}\n                        onReady={this.handleReady}\n                        onUnhandledError={this.handleUnhandledError}\n                    />\n                </LazyContainer>\n            </CheckoutStep>\n        );\n    }\n\n    private renderPaymentStep(step: CheckoutStepStatus): ReactNode {\n        const { consignments, cart, errorLogger } = this.props;\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"payment.payment_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n            >\n                <LazyContainer loadingSkeleton={<ChecklistSkeleton />}>\n                    <Payment\n                        checkEmbeddedSupport={this.checkEmbeddedSupport}\n                        errorLogger={errorLogger}\n                        isEmbedded={isEmbedded()}\n                        isUsingMultiShipping={\n                            cart && consignments\n                                ? isUsingMultiShipping(consignments, cart.lineItems)\n                                : false\n                        }\n                        onCartChangedError={this.handleCartChangedError}\n                        onFinalize={this.navigateToOrderConfirmation}\n                        onReady={this.handleReady}\n                        onSubmit={this.navigateToOrderConfirmation}\n                        onSubmitError={this.handleError}\n                        onUnhandledError={this.handleUnhandledError}\n                    />\n                </LazyContainer>\n            </CheckoutStep>\n        );\n    }\n\n    private renderCartSummary(): ReactNode {\n        return (\n            <MobileView>\n                {(matched) => {\n                    if (matched) {\n                        return <span></span>;\n                    }\n\n                    return (\n                        <aside className=\"layout-cart\">\n                            <LazyContainer>\n                                <CartSummary />\n                            </LazyContainer>\n                        </aside>\n                    );\n                }}\n            </MobileView>\n        );\n    }\n\n    private navigateToStep(type: CheckoutStepType, options?: { isDefault?: boolean }): void {\n        const { clearError, error, steps } = this.props;\n        const { activeStepType } = this.state;\n        const step = find(steps, { type });\n\n        if (!step) {\n            return;\n        }\n\n        if (activeStepType === step.type) {\n            return;\n        }\n\n        if (options && options.isDefault) {\n            this.setState({ defaultStepType: step.type });\n        } else {\n            this.setState({ activeStepType: step.type });\n        }\n\n        if (error) {\n            clearError(error);\n        }\n    }\n\n    private handleToggleMultiShipping: () => void = () => {\n        const { isMultiShippingMode } = this.state;\n\n        this.setState({ isMultiShippingMode: !isMultiShippingMode });\n    };\n\n    private navigateToNextIncompleteStep: (options?: { isDefault?: boolean }) => void = (\n        options,\n    ) => {\n        const { steps, analyticsTracker } = this.props;\n        const activeStepIndex = findIndex(steps, { isActive: true });\n        const activeStep = activeStepIndex >= 0 && steps[activeStepIndex];\n\n        if (!activeStep) {\n            return;\n        }\n\n        const previousStep = steps[Math.max(activeStepIndex - 1, 0)];\n\n        if (previousStep) {\n            analyticsTracker.trackStepCompleted(previousStep.type);\n        }\n\n        this.navigateToStep(activeStep.type, options);\n    };\n\n    private navigateToOrderConfirmation: (orderId?: number) => void = (orderId) => {\n        const { steps, analyticsTracker } = this.props;\n\n        analyticsTracker.trackStepCompleted(steps[steps.length - 1].type);\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postComplete();\n        }\n\n        this.setState({ isRedirecting: true }, () => {\n            navigateToOrderConfirmation(orderId);\n        });\n    };\n\n    private checkEmbeddedSupport: (methodIds: string[]) => boolean = (methodIds) => {\n        const { embeddedSupport } = this.props;\n\n        return embeddedSupport.isSupported(...methodIds);\n    };\n\n    private handleCartChangedError: (error: CartChangedError) => void = () => {\n        this.navigateToStep(CheckoutStepType.Shipping);\n    };\n\n    private handleConsignmentsUpdated: (state: CheckoutSelectors) => void = ({ data }) => {\n        const { hasSelectedShippingOptions: prevHasSelectedShippingOptions, activeStepType, defaultStepType } =\n            this.state;\n\n        const { steps } = this.props;\n\n        const newHasSelectedShippingOptions = hasSelectedShippingOptions(\n            data.getConsignments() || [],\n        );\n\n        const isDefaultStepPaymentOrBilling =\n            !activeStepType &&\n            (defaultStepType === CheckoutStepType.Payment ||\n                defaultStepType === CheckoutStepType.Billing);\n\n        const isShippingStepFinished =\n            findIndex(steps, { type: CheckoutStepType.Shipping }) <\n                findIndex(steps, { type: activeStepType }) || isDefaultStepPaymentOrBilling;\n\n        if (\n            prevHasSelectedShippingOptions &&\n            !newHasSelectedShippingOptions &&\n            isShippingStepFinished\n        ) {\n            this.navigateToStep(CheckoutStepType.Shipping);\n            this.setState({ error: new ShippingOptionExpiredError() });\n        }\n\n        this.setState({ hasSelectedShippingOptions: newHasSelectedShippingOptions });\n    };\n\n    private handleCloseErrorModal: () => void = () => {\n        this.setState({ error: undefined });\n    };\n\n    private handleExpanded: (type: CheckoutStepType) => void = (type) => {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.trackStepViewed(type);\n        trackCheckoutProgress(type);\n    };\n\n    private handleUnhandledError: (error: Error) => void = (error) => {\n        this.handleError(error);\n\n        // For errors that are not caught and handled by child components, we\n        // handle them here by displaying a generic error modal to the shopper.\n        this.setState({ error });\n    };\n\n    private handleError: (error: Error) => void = (error) => {\n        const { errorLogger } = this.props;\n\n        errorLogger.log(error);\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postError(error);\n        }\n    };\n\n    private handleEditStep: (type: CheckoutStepType) => void = (type) => {\n        this.navigateToStep(type);\n    };\n\n    private handleReady: () => void = () => {\n        this.navigateToNextIncompleteStep({ isDefault: true });\n    };\n\n    private handleNewsletterSubscription: (subscribed: boolean) => void = (subscribed) => {\n        this.setState({ isSubscribed: subscribed });\n    }\n\n    private handleSignOut: (event: CustomerSignOutEvent) => void = ({ isCartEmpty }) => {\n        const { loginUrl, cartUrl, isPriceHiddenFromGuests, isGuestEnabled, hasSubscription } = this.props;\n\n        if (isPriceHiddenFromGuests) {\n            if (window.top) {\n                return (window.top.location.href = cartUrl);\n            }\n        }\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postSignedOut();\n        }\n\n        if (hasSubscription) {\n            this.setCustomerViewType(CustomerViewType.Subscription);\n        } else if (isGuestEnabled) {\n            this.setCustomerViewType(CustomerViewType.Guest);\n        }\n\n        if (isCartEmpty) {\n            this.setState({ isCartEmpty: true });\n\n            if (!isEmbedded()) {\n                if (window.top) {\n                    return window.top.location.assign(loginUrl);\n                }\n            }\n        }\n\n        this.navigateToStep(CheckoutStepType.Customer);\n    };\n\n    private handleShippingNextStep: (isBillingSameAsShipping: boolean) => void = (\n        isBillingSameAsShipping,\n    ) => {\n        this.setState({ isBillingSameAsShipping });\n\n        if (isBillingSameAsShipping) {\n            this.navigateToNextIncompleteStep();\n        } else {\n            this.navigateToStep(CheckoutStepType.Billing);\n        }\n    };\n\n    private handleShippingSignIn: () => void = () => {\n        this.setCustomerViewType(CustomerViewType.Login);\n    };\n\n    private handleShippingCreateAccount: () => void = () => {\n        this.setCustomerViewType(CustomerViewType.CreateAccount);\n    };\n\n    private setCustomerViewType: (viewType: CustomerViewType) => void = (customerViewType) => {\n        const { createAccountUrl } = this.props;\n\n        if (customerViewType === CustomerViewType.CreateAccount && isEmbedded()) {\n            if (window.top) {\n                window.top.location.replace(createAccountUrl);\n            }\n\n            return;\n        }\n\n        this.navigateToStep(CheckoutStepType.Customer);\n        this.setState({ customerViewType });\n    };\n\n    private handleBeforeExit: () => void = () => {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.exitCheckout();\n    }\n}\n\nexport default withExtension(withRecurly(props => props)(withAnalytics(withLanguage(withCheckout(mapToCheckoutProps)(Checkout)))));\n","import { CheckoutSelectors, CustomError } from '@bigcommerce/checkout-sdk';\nimport { createSelector } from 'reselect';\n\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { EMPTY_ARRAY } from '../common/utility';\n\nimport { WithCheckoutProps } from './Checkout';\nimport getCheckoutStepStatuses from './getCheckoutStepStatuses';\n\nexport default function mapToCheckoutProps({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutProps {\n    const { data, errors, statuses } = checkoutState;\n    const { promotions = EMPTY_ARRAY } = data.getCheckout() || {};\n    const submitOrderError = errors.getSubmitOrderError() as CustomError;\n    const {\n        checkoutSettings: {\n            guestCheckoutEnabled: isGuestEnabled = false,\n            checkoutUserExperienceSettings = {\n                walletButtonsOnTop: false,\n                floatingLabelEnabled: false,\n            } ,\n        } = {},\n        links: {\n            loginLink: loginUrl = '',\n            createAccountLink: createAccountUrl = '',\n            cartLink: cartUrl = '',\n        } = {},\n        displaySettings: { hidePriceFromGuests: isPriceHiddenFromGuests = false } = {},\n    } = data.getConfig() || {};\n\n    const subscribeToConsignmentsSelector = createSelector(\n        ({ checkoutService: { subscribe } }: CheckoutContextProps) => subscribe,\n        (subscribe) => (subscriber: (state: CheckoutSelectors) => void) => {\n            return subscribe(subscriber, ({ data: { getConsignments } }) => getConsignments());\n        },\n    );\n\n    const walletButtonsOnTopFlag = Boolean(checkoutUserExperienceSettings.walletButtonsOnTop);\n\n    return {\n        billingAddress: data.getBillingAddress(),\n        cart: data.getCart(),\n        customer: data.getCustomer(),\n        clearError: checkoutService.clearError,\n        consignments: data.getConsignments(),\n        hasCartChanged: submitOrderError && submitOrderError.type === 'cart_changed', // TODO: Need to clear the error once it's displayed\n        isGuestEnabled,\n        isLoadingCheckout: statuses.isLoadingCheckout(),\n        isPending: statuses.isPending(),\n        isPriceHiddenFromGuests,\n        isShowingWalletButtonsOnTop: walletButtonsOnTopFlag,\n        loadCheckout: checkoutService.loadCheckout,\n        loginUrl,\n        cartUrl,\n        createAccountUrl,\n        promotions,\n        subscribeToConsignments: subscribeToConsignmentsSelector({\n            checkoutService,\n            checkoutState,\n        }),\n        steps: data.getCheckout() ? getCheckoutStepStatuses(checkoutState) : EMPTY_ARRAY,\n    };\n}\n","/* eslint-disable */\n// @ts-nocheck\nimport { createCheckoutService, createEmbeddedCheckoutMessenger } from '@bigcommerce/checkout-sdk';\nimport { BrowserOptions } from '@sentry/browser';\nimport React, { Component } from 'react';\nimport ReactModal from 'react-modal';\nimport RecurlyProvider from \"../recurly/RecurlyProvider\";\nimport { AnalyticsProvider } from '@bigcommerce/checkout/analytics';\nimport { ExtensionProvider } from '@bigcommerce/checkout/checkout-extension';\nimport { ErrorBoundary, ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { getLanguageService, LocaleProvider } from '@bigcommerce/checkout/locale';\nimport { CheckoutProvider } from '@bigcommerce/checkout/payment-integration-api';\n\nimport '../../scss/App.scss';\n\nimport { createErrorLogger } from '../common/error';\nimport {\n    createEmbeddedCheckoutStylesheet,\n    createEmbeddedCheckoutSupport,\n} from '../embeddedCheckout';\n\nimport Checkout from './Checkout';\n\nexport interface CheckoutAppProps {\n    checkoutId: string;\n    containerId: string;\n    publicPath?: string;\n    sentryConfig?: BrowserOptions;\n    sentrySampleRate?: number;\n}\n\nexport default class CheckoutApp extends Component<CheckoutAppProps> {\n    private checkoutService = createCheckoutService({\n        locale: getLanguageService().getLocale(),\n        shouldWarnMutation: process.env.NODE_ENV === 'development',\n    });\n    private embeddedStylesheet = createEmbeddedCheckoutStylesheet();\n    private embeddedSupport = createEmbeddedCheckoutSupport(getLanguageService());\n    private errorLogger: ErrorLogger;\n\n    constructor(props: Readonly<CheckoutAppProps>) {\n        super(props);\n\n        this.errorLogger = createErrorLogger(\n            { sentry: props.sentryConfig },\n            {\n                errorTypes: ['UnrecoverableError'],\n                publicPath: props.publicPath,\n                sampleRate: props.sentrySampleRate ? props.sentrySampleRate : 0.1,\n            },\n        );\n    }\n\n    componentDidMount(): void {\n        const { containerId } = this.props;\n\n        ReactModal.setAppElement(`#${containerId}`);\n\n        const initGTM = () => {\n            (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':\n            new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],\n            j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=\n            'https://gtmss.mitoq.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);\n            })(window,document,'script','dataLayer','GTM-98LH');\n        }\n\n        setTimeout(initGTM, 5000);\n    }\n\n    render() {\n        return (\n            <ErrorBoundary logger={this.errorLogger}>\n                <LocaleProvider checkoutService={this.checkoutService}>\n                    <CheckoutProvider checkoutService={this.checkoutService}>\n                        <RecurlyProvider>\n                        <AnalyticsProvider checkoutService={this.checkoutService}>\n                            <ExtensionProvider checkoutService={this.checkoutService}>\n                                <Checkout\n                                    {...this.props}\n                                    createEmbeddedMessenger={createEmbeddedCheckoutMessenger}\n                                    embeddedStylesheet={this.embeddedStylesheet}\n                                    embeddedSupport={this.embeddedSupport}\n                                    errorLogger={this.errorLogger}\n                                />\n                            </ExtensionProvider>\n                        </AnalyticsProvider>\n                        </RecurlyProvider>\n                    </CheckoutProvider>\n                </LocaleProvider>\n            </ErrorBoundary>\n        );\n    }\n}\n","import { createMappableInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\nimport { CheckoutContext, CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nexport type WithCheckoutProps = CheckoutContextProps;\n\nconst withCheckout = createMappableInjectHoc(CheckoutContext, {\n    displayNamePrefix: 'WithCheckout',\n});\n\nexport default withCheckout;\n","export default class CustomError extends Error {\n    static shouldReport: boolean;\n\n    data: any;\n    title: string;\n    type: string;\n\n    constructor({\n        data = {},\n        message = '',\n        title = '',\n        name = '',\n    }: {\n        data?: any;\n        message?: string;\n        title?: string;\n        name?: string;\n    }) {\n        super();\n\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, CustomError);\n        } else {\n            this.stack = new Error().stack;\n        }\n\n         \n        this.data = data;\n        this.message = message;\n        this.name = name;\n        this.title = title;\n        this.type = 'custom';\n    }\n\n    // todo: remove these methods when all error types has specific subclasses.\n    // they are only provided for compatibility with errors defined in `app.errors.ts` while we transition\n    // to proper error subclasses.\n    protected setDefaultValues({\n        name,\n        defaultError,\n        defaultTitle,\n    }: {\n        name: string;\n        defaultError: string;\n        defaultTitle: string;\n    }): void {\n        this.name = this.name || name;\n        this.message = this.message || defaultError;\n        this.title = this.title || defaultTitle;\n    }\n}\n","import React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './ErrorCode.scss';\n\nexport interface ErrorCodeProps {\n    code: string;\n    label?: ReactNode;\n}\n\nconst ErrorCode: FunctionComponent<ErrorCodeProps> = ({ code, label }) => {\n    return (\n        <div className=\"errorCode\">\n            <span className=\"errorCode-label\">\n                {label ?? <TranslatedString id=\"common.error_code\" />}\n            </span>{' '}\n            <span className=\"errorCode-value\">{code}</span>\n        </div>\n    );\n};\n\nexport default memo(ErrorCode);\n","import { RequestError } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { PureComponent, ReactNode, SyntheticEvent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button, ButtonSize } from '../../ui/button';\nimport { IconError, IconSize } from '../../ui/icon';\nimport { Modal, ModalHeader } from '../../ui/modal';\n\nimport computeErrorCode from './computeErrorCode';\nimport ErrorCode from './ErrorCode';\nimport isCustomError from './isCustomError';\nimport isRequestError from './isRequestError';\n\nexport interface ErrorModalProps {\n    error?: Error | RequestError;\n    message?: ReactNode;\n    title?: ReactNode;\n    shouldShowErrorCode?: boolean;\n    onClose?(event: Event, props: ErrorModalOnCloseProps): void;\n}\n\nexport interface ErrorModalOnCloseProps {\n    error: Error;\n}\n\nexport default class ErrorModal extends PureComponent<ErrorModalProps> {\n    private aria = {\n        labelledby: 'errorModalMessage',\n    };\n\n    render(): ReactNode {\n        const { error } = this.props;\n\n        return (\n            <Modal\n                additionalModalClassName=\"modal--error\"\n                aria={this.aria}\n                footer={this.renderFooter()}\n                header={this.renderHeader()}\n                isOpen={!!error}\n                onRequestClose={this.handleOnRequestClose}\n            >\n                {this.renderBody()}\n            </Modal>\n        );\n    }\n\n    private renderHeader(): ReactNode {\n        const { error, title = error && isCustomError(error) && error.title } = this.props;\n\n        return (\n            <ModalHeader>\n                <IconError\n                    additionalClassName=\"icon--error modal-header-icon\"\n                    size={IconSize.Small}\n                />\n                <span aria-live=\"assertive\" role=\"alert\">\n                    {title || <TranslatedString id=\"common.error_heading\" />}\n                </span>\n            </ModalHeader>\n        );\n    }\n\n    private renderBody(): ReactNode {\n        const { error, message = error && error.message } = this.props;\n\n        return (\n            <>\n                {message && (\n                    <p aria-live=\"assertive\" id=\"errorModalMessage\" role=\"alert\">\n                        {message}\n                    </p>\n                )}\n\n                <div className=\"optimizedCheckout-contentSecondary\">{this.renderErrorCode()}</div>\n            </>\n        );\n    }\n\n    private renderFooter(): ReactNode {\n        return (\n            <Button onClick={this.handleOnRequestClose} size={ButtonSize.Small}>\n                <TranslatedString id=\"common.ok_action\" />\n            </Button>\n        );\n    }\n\n    private renderErrorCode(): ReactNode {\n        const { error, shouldShowErrorCode = true } = this.props;\n\n        if (!error || !shouldShowErrorCode) {\n            return;\n        }\n\n        if (isRequestError(error) && error.headers?.['x-request-id']) {\n            return (\n                <ErrorCode\n                    code={error.headers['x-request-id']}\n                    label={<TranslatedString id=\"common.request_id\" />}\n                />\n            );\n        }\n\n        const errorCode = computeErrorCode(error);\n\n        if (!errorCode) {\n            return;\n        }\n\n        return <ErrorCode code={errorCode} />;\n    }\n\n    private handleOnRequestClose: (event: SyntheticEvent) => void = (event) => {\n        const { error, onClose = noop } = this.props;\n\n        if (error) {\n            onClose(event.nativeEvent, { error });\n        }\n    };\n}\n","import HashStatic from 'object-hash';\n\nexport default function computeErrorCode(value: any): string | undefined {\n    try {\n        return HashStatic(value).toUpperCase();\n    } catch (error) {}\n}\n","import CustomError from './CustomError';\n\n// todo: remove this method in favour of creating proper subclasses for each error type.\n// it's only provided for compatibility with errors defined in `app.errors.ts` while we transition\n// to proper error subclasses.\nexport default function createCustomErrorType({\n    name,\n    defaultError = '',\n    defaultTitle = '',\n    shouldReport = false,\n}: {\n    name: string;\n    defaultError?: string;\n    defaultTitle?: string;\n    shouldReport?: boolean;\n}) {\n    class CustomErrorType extends CustomError {\n        constructor(data = {}, errorMessage = '', errorTitle = '') {\n            super({\n                data,\n                message: errorMessage,\n                title: errorTitle,\n            });\n\n            // todo: this should use new.taget.prototype in the parent class once we can make it work\n            setPrototypeOf(this, CustomErrorType.prototype);\n\n            this.setDefaultValues({\n                name,\n                defaultError,\n                defaultTitle,\n            });\n        }\n    }\n\n    CustomErrorType.shouldReport = shouldReport;\n\n    return CustomErrorType;\n}\n\nexport function setPrototypeOf(object: any, prototype: any) {\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(object, prototype);\n    } else {\n        object.__proto__ = prototype;\n    }\n\n    return object;\n}\n","import { BrowserOptions } from '@sentry/browser';\n\nexport default interface ErrorLogger {\n    /**\n     * Logs an error in, tagging it with an error code.\n     *\n     * @param error The error object to be logged\n     * @param tags The tags attached to the log entry\n     * @param level The level of the log\n     * @param meta Any extra meta data\n     */\n    log(error: Error, tags?: ErrorTags, level?: ErrorLevelType, meta?: ErrorMeta): void;\n}\n\nexport interface ErrorLoggerOptions {\n    errorTypes?: string[];\n    publicPath?: string;\n    sampleRate?: number;\n}\n\nexport interface ErrorLoggerServiceConfig {\n    sentry?: BrowserOptions;\n}\n\nexport interface ErrorTags {\n    /**\n     * A code that identifies uniquely each error type\n     */\n    errorCode: string;\n}\n\nexport interface ErrorMeta {\n    [key: string]: unknown;\n}\n\nexport enum ErrorLevelType {\n    Info = 'info',\n    Warning = 'warning',\n    Error = 'error',\n    Debug = 'debug',\n}\n","import {\n  ErrorLevelType,\n  ErrorLogger,\n  ErrorMeta,\n  ErrorTags,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nexport interface ConsoleErrorLoggerOptions {\n    console?: Console;\n    errorTypes?: string[];\n}\n\n// tslint:disable:no-console\nexport default class ConsoleErrorLogger implements ErrorLogger {\n    private console: Console;\n\n    constructor(options?: ConsoleErrorLoggerOptions) {\n        const { console: customConsole = console } = options || {};\n\n        this.console = customConsole;\n    }\n\n    log(\n        error: Error,\n        tags?: ErrorTags,\n        level: ErrorLevelType = ErrorLevelType.Error,\n        meta?: ErrorMeta,\n    ): void {\n        switch (level) {\n            case ErrorLevelType.Error:\n                return this.console.error(error, tags, meta);\n\n            case ErrorLevelType.Info:\n                return this.console.info(error, tags, meta);\n\n            case ErrorLevelType.Warning:\n                return this.console.warn(error, tags, meta);\n\n            default:\n                return this.console.log(error, tags, meta);\n        }\n    }\n}\n","import { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\n\nexport default class NoopErrorLogger implements ErrorLogger {\n    log() {}\n}\n","import {\n    BrowserOptions,\n    captureException,\n    Event,\n    init,\n    Integrations,\n    SeverityLevel,\n    StackFrame,\n    withScope,\n} from '@sentry/browser';\nimport { RewriteFrames } from '@sentry/integrations';\nimport { EventHint, Exception } from '@sentry/types';\n\nimport {\n    ErrorLevelType,\n    ErrorLogger,\n    ErrorMeta,\n    ErrorTags,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nimport computeErrorCode from './computeErrorCode';\nimport ConsoleErrorLogger from './ConsoleErrorLogger';\nimport NoopErrorLogger from './NoopErrorLogger';\n\nconst FILENAME_PREFIX = 'app://';\n\nexport interface SentryErrorLoggerOptions {\n    consoleLogger?: ConsoleErrorLogger;\n    errorTypes?: string[];\n    publicPath?: string;\n    sampleRate?: number;\n}\n\nexport enum SeverityLevelEnum {\n    DEBUG = 'debug',\n    ERROR = 'error',\n    INFO = 'info',\n    WARNING = 'warning',\n}\n\nexport default class SentryErrorLogger implements ErrorLogger {\n    private consoleLogger: ErrorLogger;\n    private publicPath: string;\n\n    constructor(config: BrowserOptions, options?: SentryErrorLoggerOptions) {\n        const {\n            consoleLogger = new NoopErrorLogger(),\n            publicPath = '',\n            sampleRate = 0.1,\n        } = options || {};\n\n        this.consoleLogger = consoleLogger;\n        this.publicPath = publicPath;\n\n        init({\n            sampleRate,\n            beforeSend: this.handleBeforeSend,\n            denyUrls: [\n                ...(config.denyUrls || []),\n                'polyfill~checkout',\n                'sentry~checkout',\n            ],\n            integrations: [\n                new Integrations.GlobalHandlers({\n                    onerror: false,\n                    onunhandledrejection: true,\n                }),\n                new RewriteFrames({\n                    iteratee: this.handleRewriteFrame,\n                }),\n            ],\n            ...config,\n        });\n    }\n\n    log(\n        error: Error,\n        tags?: ErrorTags,\n        level: ErrorLevelType = ErrorLevelType.Error,\n        payload?: ErrorMeta,\n    ): void {\n        this.consoleLogger.log(error, tags, level);\n\n        withScope((scope) => {\n            const { errorCode = computeErrorCode(error) } = tags || {};\n\n            if (errorCode) {\n                scope.setTags({ errorCode });\n            }\n\n            scope.setLevel(this.mapToSentryLevel(level));\n\n            if (payload) {\n                scope.setExtras(payload);\n            }\n\n            scope.setFingerprint(['{{ default }}']);\n\n            captureException(error);\n        });\n    }\n\n    private mapToSentryLevel(level: ErrorLevelType): SeverityLevel {\n        switch (level) {\n            case ErrorLevelType.Info:\n                return SeverityLevelEnum.INFO;\n\n            case ErrorLevelType.Warning:\n                return SeverityLevelEnum.WARNING;\n\n            case ErrorLevelType.Debug:\n                return SeverityLevelEnum.DEBUG;\n\n            case ErrorLevelType.Error:\n            default:\n                return SeverityLevelEnum.ERROR;\n        }\n    }\n\n    /**\n     * Ignore exceptions that don't have a stacktrace at all, or have a stacktrace that references files external to\n     * this app. For example, if the exception is caused by a piece of third party code, one of the frames in the\n     * stacktrace will reference a file that is not a part of the app. This behaviour is different to the whitelist\n     * config provided by Sentry, as the latter only examines the topmost frame in the stacktrace. The config is not\n     * sufficient for us because some stores have customisation code built on top of our code, resulting in a stacktrace\n     * whose topmost frame is ours but frames below it are not.\n     */\n    private shouldReportExceptions(exceptions: Exception[], originalException: unknown): boolean {\n        // Ignore exceptions that are not an instance of Error because they are most likely not thrown by our own code,\n        // as we have a lint rule that prevents us from doing so. Although these exceptions don't actually have a\n        // stacktrace, meaning that the condition below should theoretically cover the scenario, but we still need this\n        // condition because Sentry client creates a \"synthentic\" stacktrace for them using the information it has.\n        if (!exceptions.length || !(originalException instanceof Error)) {\n            return false;\n        }\n\n        return exceptions.every((exception) => {\n            if (!exception.stacktrace?.frames?.length) {\n                return false;\n            }\n\n            return exception.stacktrace.frames.every((frame) =>\n                frame.filename?.startsWith(FILENAME_PREFIX),\n            );\n        });\n    }\n\n    private handleBeforeSend: (event: Event, hint?: EventHint) => Event | null = (event, hint) => {\n        if (event.exception) {\n            if (\n                !this.shouldReportExceptions(\n                    event.exception.values ?? [],\n                    hint?.originalException ?? null,\n                )\n            ) {\n                return null;\n            }\n\n            return event;\n        }\n\n        return event;\n    };\n\n    private handleRewriteFrame: (frame: StackFrame) => StackFrame = (frame) => {\n        if (this.publicPath && frame.filename) {\n            // We want to remove the base path of the filename, otherwise we\n            // will need to specify it when we upload the sourcemaps so that the\n            // filenames can match up.\n            const filename = frame.filename.replace(new RegExp(`^${this.publicPath}/?`), '');\n\n            // `frame` needs to be modified in-place (based on the example in\n            // their documentation).\n            if (filename !== frame.filename) {\n                frame.filename = `${FILENAME_PREFIX}/${filename}`;\n            }\n        }\n\n        return frame;\n    };\n}\n","import {\n  ErrorLogger,\n  ErrorLoggerOptions,\n  ErrorLoggerServiceConfig,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nimport ConsoleErrorLogger from './ConsoleErrorLogger';\nimport NoopErrorLogger from './NoopErrorLogger';\nimport SentryErrorLogger from './SentryErrorLogger';\n\nexport default function createErrorLogger(\n    serviceConfig?: ErrorLoggerServiceConfig,\n    options?: ErrorLoggerOptions,\n): ErrorLogger {\n    if (serviceConfig && serviceConfig.sentry) {\n        return new SentryErrorLogger(serviceConfig.sentry, {\n            ...options,\n            consoleLogger: new ConsoleErrorLogger(options),\n        });\n    }\n\n    if (process.env.NODE_ENV === 'test') {\n        return new NoopErrorLogger();\n    }\n\n    return new ConsoleErrorLogger(options);\n}\n","import CustomError from './CustomError';\n\nexport default function isCustomError(error: Error): error is CustomError {\n    const customError = error as CustomError;\n\n    return (\n        typeof customError.title !== 'undefined' &&\n        typeof customError.data !== 'undefined' &&\n        typeof customError.type !== 'undefined'\n    );\n}\n","import { RequestError } from '@bigcommerce/checkout-sdk';\n\ninterface ErrorWithType extends RequestError {\n    type: string;\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction hasOwnProperty<X extends {}, Y extends PropertyKey>(\n    obj: X,\n    key: Y,\n): obj is X & Record<Y, unknown> {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport default function isErrorWithType(error: unknown): error is ErrorWithType {\n    return (\n        typeof error === 'object' &&\n        error !== null &&\n        hasOwnProperty(error, 'type') &&\n        typeof error.type === 'string'\n    );\n}\n","import { RequestError } from '@bigcommerce/checkout-sdk';\n\nexport default function isRequestError(error: unknown): error is RequestError {\n    const requestError = error as RequestError;\n\n    return requestError.type === 'request';\n}\n","import { ComponentType } from 'react';\n\nimport { ResolvableComponent } from '.';\n\nexport default function isResolvableComponent<TProps, TIdentifier>(\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Component: ComponentType<TProps>,\n): Component is ResolvableComponent<TProps, TIdentifier> {\n    return 'resolveIds' in Component;\n}\n","import { ComponentType } from 'react';\n\nimport { isResolvableComponent } from '@bigcommerce/checkout/payment-integration-api';\n\ninterface ResolveResult<TProps> {\n    component: ComponentType<TProps>;\n    matches: number;\n    default: boolean;\n}\n\nexport default function resolveComponent<TResolveId extends Record<string, unknown>, TProps>(\n    query: TResolveId,\n    components: Record<string, ComponentType<TProps>>,\n): ComponentType<TProps> | undefined {\n    const results: Array<ResolveResult<TProps>> = [];\n\n    for (const [_, Component] of Object.entries(components)) {\n        if (!isResolvableComponent<TProps, TResolveId>(Component)) {\n            continue;\n        }\n\n        for (const resolverId of Component.resolveIds) {\n            const result = { component: Component, matches: 0, default: false };\n\n            for (const [key, value] of Object.entries(resolverId)) {\n                if (key in query && query[key] !== value) {\n                    result.matches = 0;\n                    break;\n                }\n\n                if (query[key] === value) {\n                    result.matches++;\n                }\n\n                if (key === 'default' && value === true) {\n                    result.default = true;\n                }\n            }\n\n            results.push(result);\n        }\n    }\n\n    const matched = results\n        .sort((a, b) => b.matches - a.matches)\n        .filter((result) => result.matches > 0)[0];\n\n    return matched?.component ?? results.find((result) => result.default)?.component;\n}\n","// SOURCE: http://country.io/phone.json\n\nconst countryCodesToDialingCodes: { [k: string]: string } = {\n  BD: '880',\n  BE: '32',\n  BF: '226',\n  BG: '359',\n  BA: '387',\n  BB: '+1-246',\n  WF: '681',\n  BL: '590',\n  BM: '+1-441',\n  BN: '673',\n  BO: '591',\n  BH: '973',\n  BI: '257',\n  BJ: '229',\n  BT: '975',\n  JM: '+1-876',\n  BV: '',\n  BW: '267',\n  WS: '685',\n  BQ: '599',\n  BR: '55',\n  BS: '+1-242',\n  JE: '+44-1534',\n  BY: '375',\n  BZ: '501',\n  RU: '7',\n  RW: '250',\n  RS: '381',\n  TL: '670',\n  RE: '262',\n  TM: '993',\n  TJ: '992',\n  RO: '40',\n  TK: '690',\n  GW: '245',\n  GU: '+1-671',\n  GT: '502',\n  GS: '',\n  GR: '30',\n  GQ: '240',\n  GP: '590',\n  JP: '81',\n  GY: '592',\n  GG: '+44-1481',\n  GF: '594',\n  GE: '995',\n  GD: '+1-473',\n  GB: '44',\n  GA: '241',\n  SV: '503',\n  GN: '224',\n  GM: '220',\n  GL: '299',\n  GI: '350',\n  GH: '233',\n  OM: '968',\n  TN: '216',\n  JO: '962',\n  HR: '385',\n  HT: '509',\n  HU: '36',\n  HK: '852',\n  HN: '504',\n  HM: ' ',\n  VE: '58',\n  PR: '+1-787 and 1-939',\n  PS: '970',\n  PW: '680',\n  PT: '351',\n  SJ: '47',\n  PY: '595',\n  IQ: '964',\n  PA: '507',\n  PF: '689',\n  PG: '675',\n  PE: '51',\n  PK: '92',\n  PH: '63',\n  PN: '870',\n  PL: '48',\n  PM: '508',\n  ZM: '260',\n  EH: '212',\n  EE: '372',\n  EG: '20',\n  ZA: '27',\n  EC: '593',\n  IT: '39',\n  VN: '84',\n  SB: '677',\n  ET: '251',\n  SO: '252',\n  ZW: '263',\n  SA: '966',\n  ES: '34',\n  ER: '291',\n  ME: '382',\n  MD: '373',\n  MG: '261',\n  MF: '590',\n  MA: '212',\n  MC: '377',\n  UZ: '998',\n  MM: '95',\n  ML: '223',\n  MO: '853',\n  MN: '976',\n  MH: '692',\n  MK: '389',\n  MU: '230',\n  MT: '356',\n  MW: '265',\n  MV: '960',\n  MQ: '596',\n  MP: '+1-670',\n  MS: '+1-664',\n  MR: '222',\n  IM: '+44-1624',\n  UG: '256',\n  TZ: '255',\n  MY: '60',\n  MX: '52',\n  IL: '972',\n  FR: '33',\n  IO: '246',\n  SH: '290',\n  FI: '358',\n  FJ: '679',\n  FK: '500',\n  FM: '691',\n  FO: '298',\n  NI: '505',\n  NL: '31',\n  NO: '47',\n  NA: '264',\n  VU: '678',\n  NC: '687',\n  NE: '227',\n  NF: '672',\n  NG: '234',\n  NZ: '64',\n  NP: '977',\n  NR: '674',\n  NU: '683',\n  CK: '682',\n  XK: '',\n  CI: '225',\n  CH: '41',\n  CO: '57',\n  CN: '86',\n  CM: '237',\n  CL: '56',\n  CC: '61',\n  CA: '1',\n  CG: '242',\n  CF: '236',\n  CD: '243',\n  CZ: '420',\n  CY: '357',\n  CX: '61',\n  CR: '506',\n  CW: '599',\n  CV: '238',\n  CU: '53',\n  SZ: '268',\n  SY: '963',\n  SX: '599',\n  KG: '996',\n  KE: '254',\n  SS: '211',\n  SR: '597',\n  KI: '686',\n  KH: '855',\n  KN: '+1-869',\n  KM: '269',\n  ST: '239',\n  SK: '421',\n  KR: '82',\n  SI: '386',\n  KP: '850',\n  KW: '965',\n  SN: '221',\n  SM: '378',\n  SL: '232',\n  SC: '248',\n  KZ: '7',\n  KY: '+1-345',\n  SG: '65',\n  SE: '46',\n  SD: '249',\n  DO: '+1-809 and 1-829',\n  DM: '+1-767',\n  DJ: '253',\n  DK: '45',\n  VG: '+1-284',\n  DE: '49',\n  YE: '967',\n  DZ: '213',\n  US: '1',\n  UY: '598',\n  YT: '262',\n  UM: '1',\n  LB: '961',\n  LC: '+1-758',\n  LA: '856',\n  TV: '688',\n  TW: '886',\n  TT: '+1-868',\n  TR: '90',\n  LK: '94',\n  LI: '423',\n  LV: '371',\n  TO: '676',\n  LT: '370',\n  LU: '352',\n  LR: '231',\n  LS: '266',\n  TH: '66',\n  TF: '',\n  TG: '228',\n  TD: '235',\n  TC: '+1-649',\n  LY: '218',\n  VA: '379',\n  VC: '+1-784',\n  AE: '971',\n  AD: '376',\n  AG: '+1-268',\n  AF: '93',\n  AI: '+1-264',\n  VI: '+1-340',\n  IS: '354',\n  IR: '98',\n  AM: '374',\n  AL: '355',\n  AO: '244',\n  AQ: '',\n  AS: '+1-684',\n  AR: '54',\n  AU: '61',\n  AT: '43',\n  AW: '297',\n  IN: '91',\n  AX: '+358-18',\n  AZ: '994',\n  IE: '353',\n  ID: '62',\n  UA: '380',\n  QA: '974',\n  MZ: '258',\n};\n\nexport default countryCodesToDialingCodes;\n","import countryDialingCodes from '../utility/countryDialingCodes';\n\ndeclare global {\n  interface Window {\n    dataLayer: any[];\n  }\n}\n\ninterface Customer {\n  id?: number;\n  customerId?: number;\n  email?: string;\n  firstName?: string;\n  lastName?: string;\n  phoneNumber?: string;\n  addresses?: any[];\n}\n\ninterface GTMUser {\n  user_id?: number | string;\n  is_guest: boolean | string | number;\n  email?: string;\n  first_name?: string;\n  last_name?: string;\n  phone?: Array<number | string>;\n  city?: string[];\n  state_region?: string[];\n  zip_code?: string[];\n  country?: string[];\n}\n\nfunction transformPhoneNumber(phone: string | number, countryCode: string): string {\n  const removeLeadZeros = (phone: string) => {\n    return parseInt(phone, 10).toString();\n  };\n  // convert to numbers\n  const phoneOnlyNumbers = phone.toString().replace(/\\D/g, '');\n\n  if (phoneOnlyNumbers === '') return phone.toString();\n\n  // country dialing code\n  const dialingCode = countryDialingCodes[countryCode];\n  // check if already has country dialing code (if phone starts with + or 00)\n  const hasDialingCode =\n    phone.toString().startsWith('+') ||\n    phone.toString().startsWith('00') ||\n    phone.toString().startsWith(dialingCode);\n  // prefix\n  let prefix = '';\n\n  if (!hasDialingCode) {\n    prefix = dialingCode;\n  }\n\n  // add prefix (if exists) to phone\n  const phoneWithCountryCode = `${prefix.replace(/\\D/g, '')}${removeLeadZeros(phoneOnlyNumbers)}`;\n\n  // return\n  return removeLeadZeros(phoneWithCountryCode);\n}\n\nfunction transformUserData(user: Customer): GTMUser {\n  if (user?.id || user?.customerId) {\n    const city: Set<string> = new Set();\n    const stateRegion: Set<string> = new Set();\n    const zipCode: Set<string> = new Set();\n    const country: Set<string> = new Set();\n    const phone: Set<string> = new Set();\n\n    if (user.addresses) {\n      for (const address of user.addresses) {\n        const isUSCountry = address.countryCode === 'US';\n        const isUKCountry = address.countryCode === 'GB';\n\n        if (address.city !== '') {\n          city.add(address.city.toLowerCase().replace(' ', ''));\n        }\n\n        if (address.stateOrProvince !== '') {\n          // convert state to ANSI abbreviation code if in US and abbreviation code it exists\n          const stateOrProvince = address.stateOrProvince.toLowerCase();\n          const stateOrProvinceAbbreviation =\n            isUSCountry && address.stateOrProvinceCode.toLowerCase();\n\n          stateRegion.add(stateOrProvinceAbbreviation || stateOrProvince.replace(' ', ''));\n        }\n\n        if (address.postalCode !== '') {\n          const postalCode = address.postalCode.toLowerCase().replace(' ', '').replace('-', '');\n          const firstFiveDigits = postalCode.substring(0, 5);\n\n          zipCode.add(isUSCountry || isUKCountry ? firstFiveDigits : postalCode);\n        }\n\n        if (address.countryCode !== '') {\n          country.add(address.countryCode.toLowerCase().replace(' ', ''));\n        }\n\n        if (address.phone !== '' && address.countryCode !== '') {\n          phone.add(transformPhoneNumber(address.phone, address.countryCode));\n        }\n      }\n    }\n\n    return {\n      user_id: user.id ?? user.customerId,\n      email: user.email,\n      is_guest: false,\n      phone: Array.from(phone),\n      first_name: user.firstName,\n      last_name: user.lastName,\n      city: Array.from(city),\n      state_region: Array.from(stateRegion),\n      zip_code: Array.from(zipCode),\n      country: Array.from(country),\n    };\n  }\n\n  const returnData = user?.email ? { is_guest: true, email: user.email } : { is_guest: true };\n\n  return returnData;\n}\n\nexport function track(data: any) {\n  window.dataLayer = window.dataLayer || [];\n  window.dataLayer.push(data);\n}\n\nexport interface CouponData {\n  coupon: string;\n  discount: number;\n}\n\nexport interface PromotionData {\n  id?: string | number;\n  discount: number;\n}\n\ninterface AddCouponData {\n  event: string;\n  ecommerce: CouponData;\n}\n\nexport function trackAddCoupon(coupon: string, discount: number) {\n  const data: AddCouponData = {\n    event: 'add_coupon',\n    ecommerce: { coupon, discount },\n  };\n\n  track({ ecommerce: null });\n  track(data);\n}\n\ninterface Item {\n  item_name: string;\n  item_id?: number | string;\n  item_variant?: string;\n  currency?: string;\n  index?: number;\n  item_brand?: string;\n  item_list_id?: number;\n  item_list_name?: string;\n  price: number;\n  quantity: number;\n  coupons: CouponData[];\n  promotions: PromotionData[];\n}\n\nexport interface ShippingData {\n  currency?: string;\n  value?: string | number;\n  shipping_tier?: string;\n  coupons: CouponData[];\n  items: Item[];\n}\n\ninterface AddShippingInfoData {\n  event: string;\n  ecommerce: ShippingData;\n}\n\nexport function trackAddShippingInfo(info: ShippingData) {\n  const data: AddShippingInfoData = {\n    event: 'add_shipping_info',\n    ecommerce: info,\n  };\n\n  track({ ecommerce: null });\n  track(data);\n}\n\ninterface CheckoutProgressData {\n  event: string;\n  event_info: {\n    form_name: string;\n    form_step_name: string;\n  };\n}\n\nexport function trackCheckoutProgress(stepName: string) {\n  const data: CheckoutProgressData = {\n    event: 'checkout_progress',\n    event_info: {\n      form_name: 'checkout',\n      form_step_name: stepName,\n    },\n  };\n\n  track(data);\n}\n\nexport interface OrderData {\n  purchase: {\n    transaction_id: string | number;\n    affiliation: string | undefined;\n    value: number | undefined;\n    tax: number | undefined;\n    shipping: number | string | undefined;\n    currency: string | undefined;\n    coupons: CouponData[];\n    items: Item[];\n  };\n}\n\ninterface PurchaseData {\n  event: string;\n  ecommerce: OrderData;\n}\n\nexport function trackPurchase(info: OrderData) {\n  const data: PurchaseData = {\n    event: 'purchase',\n    ecommerce: info,\n  };\n\n  track({ ecommerce: null });\n  track(data);\n}\n\ninterface UserChangeData {\n  event: string;\n  user: GTMUser;\n}\n\nexport function trackUserChange(user: Customer) {\n  const data: UserChangeData = {\n    event: 'logged_in_user_change',\n    user: transformUserData(user),\n  };\n\n  track(data);\n}\n\ninterface LoginData {\n  event: string;\n  user: GTMUser;\n}\n\nexport function trackLogin(user: Customer) {\n  const data: LoginData = {\n    event: 'login',\n    user: transformUserData(user),\n  };\n\n  track(data);\n}\n\nexport function trackGuest(email: string) {\n  const data = { event: 'guest_purchase', user: { email } };\n\n  track(data);\n}\n\ninterface SignUpData {\n  event: string;\n  event_info: {\n    form_name: string;\n    sign_up_location: string;\n  };\n  user: GTMUser;\n}\n\nexport function trackSignUp(location: string, user: Customer) {\n  const data: SignUpData = {\n    event: 'sign_up',\n    event_info: {\n      form_name: 'create_account',\n      sign_up_location: location,\n    },\n    user: transformUserData(user),\n  };\n\n  track(data);\n}\n","// NOTE: For now, need to coerce the type as mutable array / object. Otherwise,\n// we'll need to change the props of all components as readonly.\nexport const EMPTY_ARRAY = Object.freeze([]) as never[];\nexport const EMPTY_OBJECT = Object.freeze({}) as any;\n","export default function isBuyNowCart(): boolean {\n    const lastPathName = window.location.pathname.split('/').pop();\n\n    return !(lastPathName === 'checkout' || lastPathName === 'embedded-checkout');\n}\n","import { CheckoutSettings } from '@bigcommerce/checkout-sdk';\n\nexport default function isFloatingLabelEnabled(checkoutSettings: CheckoutSettings): boolean {\n    return Boolean(checkoutSettings.checkoutUserExperienceSettings.floatingLabelEnabled);\n}\n","const DEFAULT_OPTIONS = {\n    count: 5,\n    interval: 1000,\n};\n\nexport interface RetryOptions {\n    count?: number;\n    interval?: number;\n}\n\nexport default async function retry<T>(fn: () => Promise<T>, options?: RetryOptions): Promise<T> {\n    const { count, interval } = { ...DEFAULT_OPTIONS, ...options };\n\n    try {\n        return await fn();\n    } catch (error) {\n        if (count === 1) {\n            throw error;\n        }\n\n        await new Promise((resolve) => setTimeout(resolve, interval));\n\n        return retry(fn, { interval, count: count - 1 });\n    }\n}\n","import React, { FunctionComponent } from 'react';\n\nimport { withCurrency, WithCurrencyProps } from '@bigcommerce/checkout/locale';\n\nexport interface ShopperCurrencyProps {\n    amount: number;\n}\n\nconst ShopperCurrency: FunctionComponent<ShopperCurrencyProps & WithCurrencyProps> = ({\n    amount,\n    currency,\n}) => <>{currency.toCustomerCurrency(amount)}</>;\n\nexport default withCurrency(ShopperCurrency);\n","import { CustomerPasswordRequirements, ShopperConfig } from '@bigcommerce/checkout-sdk';\n\nexport interface PasswordRequirements {\n    minLength: number;\n    alpha: RegExp;\n    numeric: RegExp;\n    description?: string;\n}\n\nexport function getPasswordRequirementsFromConfig(config: ShopperConfig): PasswordRequirements {\n    const {\n        passwordRequirements: { minlength, error: description, alpha, numeric },\n    } = config;\n\n    return getPasswordRequirements({\n        minlength,\n        description,\n        alpha,\n        numeric,\n    });\n}\n\nexport default function getPasswordRequirements({\n    minlength,\n    description,\n    alpha,\n    numeric,\n}: CustomerPasswordRequirements): PasswordRequirements {\n    const allSlashes = new RegExp('/', 'g');\n\n    return {\n        minLength: minlength,\n        description,\n        alpha: new RegExp(alpha.replace(allSlashes, '')),\n        numeric: new RegExp(numeric.replace(allSlashes, '')),\n    };\n}\n","import { assign, kebabCase, map, pickBy } from 'lodash';\n\nexport default function toCSSRule(\n    selector: string,\n    ...styles: Array<{ [key: string]: any } | undefined>\n): string {\n    const mergedStyles = assign({}, ...styles);\n    const props = map(\n        pickBy(mergedStyles, (value) => typeof value === 'string'),\n        (value, key) => `${kebabCase(key)}: ${value};`,\n    ).join(' ');\n\n    return `${selector} {${props}}`;\n}\n","import { EmbeddedCheckoutStyles } from '@bigcommerce/checkout-sdk';\n\nimport { toCSSRule } from '../common/dom';\n\nexport default class EmbeddedCheckoutStyleParser {\n    parse(styles: EmbeddedCheckoutStyles): string[] {\n        const rules: string[] = [];\n\n        if (styles.body) {\n            rules.push(toCSSRule('body', styles.body));\n            rules.push(toCSSRule('.optimizedCheckout-overlay', styles.body));\n        }\n\n        if (styles.text) {\n            rules.push(toCSSRule('.optimizedCheckout-contentPrimary', styles.text));\n        }\n\n        if (styles.secondaryText) {\n            rules.push(toCSSRule('.optimizedCheckout-contentSecondary', styles.secondaryText));\n        }\n\n        if (styles.heading) {\n            rules.push(toCSSRule('.optimizedCheckout-headingPrimary', styles.heading));\n        }\n\n        if (styles.secondaryHeading) {\n            rules.push(toCSSRule('.optimizedCheckout-headingSecondary', styles.secondaryHeading));\n        }\n\n        if (styles.link) {\n            rules.push(toCSSRule('a', styles.link));\n            rules.push(toCSSRule('a:focus', styles.link, styles.link.focus));\n            rules.push(toCSSRule('a:hover', styles.link, styles.link.hover));\n        }\n\n        if (styles.label) {\n            rules.push(toCSSRule('.optimizedCheckout-form-label', styles.label));\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-label',\n                    styles.label,\n                    styles.label.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .form-inlineMessage',\n                    styles.label,\n                    styles.label.error,\n                ),\n            );\n        }\n\n        if (styles.button) {\n            rules.push(toCSSRule('.optimizedCheckout-buttonPrimary', styles.button));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:active',\n                    styles.button,\n                    styles.button.active,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:focus',\n                    styles.button,\n                    styles.button.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:hover',\n                    styles.button,\n                    styles.button.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:active',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:focus',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:hover',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled].is-active',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled].is-loading',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n        }\n\n        if (styles.secondaryButton) {\n            rules.push(toCSSRule('.optimizedCheckout-buttonSecondary', styles.secondaryButton));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.active,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:focus',\n                    styles.secondaryButton,\n                    styles.secondaryButton.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:hover',\n                    styles.secondaryButton,\n                    styles.secondaryButton.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:focus',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:hover',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled].is-active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled].is-loading',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n        }\n\n        if (styles.input) {\n            rules.push(toCSSRule('.optimizedCheckout-form-input', styles.input));\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-input:focus', styles.input, styles.input.focus),\n            );\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-input:hover', styles.input, styles.input.hover),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-input::placeholder',\n                    styles.input,\n                    styles.input.placeholder,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input:focus',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input:hover',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n        }\n\n        if (styles.select) {\n            rules.push(toCSSRule('.optimizedCheckout-form-select', styles.select));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-select:focus',\n                    styles.select,\n                    styles.select.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-select:hover',\n                    styles.select,\n                    styles.select.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select:focus',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select:hover',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n        }\n\n        if (styles.checkbox) {\n            rules.push(toCSSRule('.optimizedCheckout-form-checkbox', styles.checkbox));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checkbox:focus',\n                    styles.checkbox,\n                    styles.checkbox.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checkbox:hover',\n                    styles.checkbox,\n                    styles.checkbox.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox:focus',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox:hover',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n        }\n\n        if (styles.radio) {\n            rules.push(toCSSRule('.optimizedCheckout-form-radio', styles.radio));\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-radio:focus', styles.radio, styles.radio.focus),\n            );\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-radio:hover', styles.radio, styles.radio.hover),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio:focus',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio:hover',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n        }\n\n        if (styles.step) {\n            rules.push(toCSSRule('.optimizedCheckout-checkoutStep', styles.step));\n            rules.push(toCSSRule('.optimizedCheckout-step', styles.step.icon));\n        }\n\n        if (styles.checklist) {\n            rules.push(toCSSRule('.optimizedCheckout-form-checklist', styles.checklist));\n            rules.push(toCSSRule('.optimizedCheckout-form-checklist-item', styles.checklist));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checklist-item:hover',\n                    styles.checklist,\n                    styles.checklist.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checklist-item--selected',\n                    styles.checklist,\n                    styles.checklist.checked,\n                ),\n            );\n        }\n\n        if (styles.discountBanner) {\n            rules.push(toCSSRule('.optimizedCheckout-discountBanner', styles.discountBanner));\n        }\n\n        if (styles.loadingBanner) {\n            rules.push(toCSSRule('.optimizedCheckout-loadingToaster', styles.loadingBanner));\n        }\n\n        if (styles.orderSummary) {\n            rules.push(toCSSRule('.optimizedCheckout-orderSummary', styles.orderSummary));\n            rules.push(\n                toCSSRule('.optimizedCheckout-orderSummary-cartSection', styles.orderSummary),\n            );\n        }\n\n        return rules;\n    }\n}\n","import { EmbeddedCheckoutStyles } from '@bigcommerce/checkout-sdk';\n\nimport { appendStylesheet } from '../common/dom';\n\nimport EmbeddedCheckoutStyleParser from './EmbeddedCheckoutStyleParser';\n\nexport default class EmbeddedCheckoutStylesheet {\n    private _parser: EmbeddedCheckoutStyleParser;\n\n    constructor(embeddedCheckoutStyleParser: EmbeddedCheckoutStyleParser) {\n        this._parser = embeddedCheckoutStyleParser;\n    }\n\n    append(styles: EmbeddedCheckoutStyles): HTMLStyleElement {\n        return appendStylesheet(this._parser.parse(styles));\n    }\n}\n","export default function appendStylesheet(rules: string[]): HTMLStyleElement {\n    const style = document.createElement('style');\n\n    document.head.appendChild(style);\n\n    if (style.sheet instanceof CSSStyleSheet) {\n        const { sheet } = style;\n\n        rules.forEach((rule, index) => {\n            sheet.insertRule(rule, index);\n        });\n    }\n\n    return style;\n}\n","import EmbeddedCheckoutStyleParser from './EmbeddedCheckoutStyleParser';\nimport EmbeddedCheckoutStylesheet from './EmbeddedCheckoutStylesheet';\n\nexport default function createEmbeddedCheckoutStylesheet() {\n    const embeddedCheckoutStyleParser = new EmbeddedCheckoutStyleParser();\n\n    return new EmbeddedCheckoutStylesheet(embeddedCheckoutStyleParser);\n}\n","export default function isEmbedded(pathname: string = document.location.pathname): boolean {\n    const basePath = `/${pathname.split('/')[1]}`;\n\n    return basePath === '/embedded-checkout';\n}\n","import { FormField } from '@bigcommerce/checkout-sdk';\nimport { memoize } from '@bigcommerce/memoize';\nimport {\n    array,\n    ArraySchema,\n    date,\n    number,\n    NumberSchema,\n    object,\n    ObjectSchema,\n    Schema,\n    string,\n} from 'yup';\n\nimport { DynamicFormFieldType } from '../ui/form';\n\nexport type TranslateValidationErrorFunction = (\n    validationType: 'max' | 'min' | 'required' | 'invalid',\n    field: {\n        name: string;\n        label: string;\n        min?: number;\n        max?: number;\n    },\n) => string | undefined;\n\nexport interface FormFieldsValidationSchemaOptions {\n    formFields: FormField[];\n    translate?: TranslateValidationErrorFunction;\n}\n\nexport interface CustomFormFieldValues {\n    customFields: CustomFormFields;\n}\n\nexport interface CustomFormFields {\n    [id: string]: string | string[] | number;\n}\n\nexport default memoize(function getCustomFormFieldsValidationSchema({\n    formFields,\n    translate = () => undefined,\n}: FormFieldsValidationSchemaOptions): ObjectSchema<CustomFormFieldValues> {\n    return object({\n        customFields: object(\n            formFields\n                .filter(({ custom }) => !!custom)\n                .reduce((schema, { name, label, required, fieldType, type, min, max }) => {\n                    let maxValue: number | undefined;\n                    let minValue: number | undefined;\n\n                    if (type === 'date') {\n                        schema[name] = date()\n                            // Transform NaN values to undefined to avoid empty string (empty input) to fail date\n                            // validation when it's optional\n                            .strict(true)\n                            .nullable(true)\n                            .transform((value, originalValue) =>\n                                originalValue === '' ? null : value,\n                            );\n                    } else if (type === 'integer') {\n                        schema[name] = number()\n                            // Transform NaN values to undefined to avoid empty string (empty input) to fail number\n                            // validation when it's optional\n                            .strict(true)\n                            .transform((value) => (isNaN(value) ? undefined : value));\n\n                        maxValue = typeof max === 'number' ? max : undefined;\n                        minValue = typeof min === 'number' ? min : undefined;\n                    } else if (fieldType === DynamicFormFieldType.checkbox) {\n                        schema[name] = array();\n                    } else {\n                        schema[name] = string();\n                    }\n\n                    if (maxValue !== undefined) {\n                        schema[name] = (schema[name] as NumberSchema).max(\n                            maxValue,\n                            translate('max', { label, name, max: maxValue + 1 }),\n                        );\n                    }\n\n                    if (minValue !== undefined) {\n                        schema[name] = (schema[name] as NumberSchema).min(\n                            minValue,\n                            translate('min', { label, name, min: minValue - 1 }),\n                        );\n                    }\n\n                    if (required) {\n                        const requiredErrorMessage = translate('required', { name, label });\n\n                        schema[name] =\n                            fieldType === DynamicFormFieldType.checkbox\n                                ? (schema[name] as ArraySchema<string>).min(1, requiredErrorMessage)\n                                : (schema[name] as ArraySchema<string>).required(\n                                      requiredErrorMessage,\n                                  );\n                    }\n\n                    return schema;\n                }, {} as { [key: string]: Schema<any> }),\n        ).nullable(true),\n    }) as ObjectSchema<CustomFormFieldValues>;\n});\n","import { forIn, isDate, padStart } from 'lodash';\n\nexport default function mapCustomFormFieldsFromFormValues(customFieldsObject: {\n    [id: string]: any;\n}): Array<{ fieldId: string; fieldValue: string }> {\n    const customFields: Array<{ fieldId: string; fieldValue: string }> = [];\n\n    forIn(customFieldsObject, (value, key) => {\n        let fieldValue: string;\n\n        if (isDate(value)) {\n            const padMonth = padStart((value.getMonth() + 1).toString(), 2, '0');\n            const padDay = padStart(value.getDate().toString(), 2, '0');\n\n            fieldValue = `${value.getFullYear()}-${padMonth}-${padDay}`;\n        } else {\n            fieldValue = value;\n        }\n\n        customFields.push({\n            fieldId: key,\n            fieldValue,\n        });\n    });\n\n    return customFields;\n}\n","import React, { FunctionComponent, useEffect } from 'react';\n\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nconst CheckoutButton: FunctionComponent<CheckoutButtonProps> = ({\n    checkoutService: { deinitializeCustomer, initializeCustomer },\n    containerId,\n    methodId,\n    onUnhandledError,\n}) => {\n    useEffect(() => {\n        initializeCustomer({\n            methodId,\n            [methodId]: {\n                container: containerId,\n                onUnhandledError,\n            },\n        }).catch(onUnhandledError);\n\n        return () => {\n            deinitializeCustomer({ methodId }).catch(onUnhandledError);\n        };\n    }, [containerId, deinitializeCustomer, initializeCustomer, methodId, onUnhandledError]);\n\n    return <div id={containerId} />;\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    CheckoutButton,\n    [],\n);\n","import setPrototypeOf from '../setPrototypeOf';\n\nimport CustomError from './CustomError';\n\nexport default class EmbeddedCheckoutUnsupportedError extends CustomError {\n    constructor(message: string) {\n        super({\n            name: 'EMBEDDED_CHECKOUT_UNSUPPORTED_ERROR',\n            message,\n        });\n\n        setPrototypeOf(this, EmbeddedCheckoutUnsupportedError.prototype);\n    }\n}\n","export default function setPrototypeOf<T extends object>(object: T, prototype: object): T {\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(object, prototype);\n    } else if (hasProto(object)) {\n        // eslint-disable-next-line no-proto\n        object.__proto__ = prototype;\n    }\n\n    return object;\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction hasProto(object: object): object is object & { __proto__: object } {\n    return '__proto__' in object;\n}\n","export default class CustomError extends Error {\n    static shouldReport: boolean;\n\n    data: any;\n    title: any;\n    type: string;\n\n    constructor({\n        data = {},\n        message = '',\n        title = '',\n        name = '',\n    }: {\n        data?: any;\n        message?: string;\n        title?: string;\n        name?: string;\n    }) {\n        super();\n\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, CustomError);\n        } else {\n            this.stack = new Error().stack;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        this.data = data;\n        this.message = message;\n        this.name = name;\n        this.title = title;\n        this.type = 'custom';\n    }\n}\n","import React, { FunctionComponent } from 'react';\n\nimport { CheckoutButton } from '@bigcommerce/checkout/checkout-button-integration';\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    EmbeddedCheckoutUnsupportedError,\n    isEmbedded,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nconst GooglePayButton: FunctionComponent<CheckoutButtonProps> = (props) => {\n    const { language, onUnhandledError } = props;\n\n    if (isEmbedded()) {\n        onUnhandledError(\n            new EmbeddedCheckoutUnsupportedError(\n                language.translate('embedded_checkout.unsupported_error', {\n                    methods: 'googlepay',\n                }),\n            ),\n        );\n\n        return null;\n    }\n\n    return <CheckoutButton {...props} />;\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    GooglePayButton,\n    [\n        { id: 'googlepayadyenv2' },\n        { id: 'googlepayadyenv3' },\n        { id: 'googlepayauthorizenet' },\n        { id: 'googlepaybnz' },\n        { id: 'googlepaybraintree' },\n        { id: 'googlepaypaypalcommerce' },\n        { id: 'googlepaycheckoutcom' },\n        { id: 'googlepaycybersourcev2' },\n        { id: 'googlepayorbital' },\n        { id: 'googlepaystripe' },\n        { id: 'googlepaystripeupe' },\n        { id: 'googlepayworldpayaccess' },\n    ],\n);\n","export default function isEmbedded(pathname: string = document.location.pathname): boolean {\n    const basePath = `/${pathname.split('/')[1]}`;\n\n    return basePath === '/embedded-checkout';\n}\n","import {\n    CheckoutPayment,\n    GiftCertificateOrderPayment,\n    OrderPayment,\n} from '@bigcommerce/checkout-sdk';\n\nexport default function isGiftCertificatePayment(\n    payment: OrderPayment | CheckoutPayment,\n): payment is GiftCertificateOrderPayment {\n    return payment.providerId === 'giftcertificate';\n}\n","// `document.currentScript` can only be called at the global level as it only\n// holds a reference to the script when it is initially processed.\nconst path = document.currentScript ? (document.currentScript as HTMLScriptElement).src : undefined;\n\nexport default function getCurrentScriptPath(): string | undefined {\n    return path;\n}\n","import getCurrentScriptPath from './getCurrentScriptPath';\n\nexport default function configurePublicPath(publicPath?: string): string {\n    if (!publicPath) {\n        const scriptPath = getCurrentScriptPath();\n\n        if (!scriptPath) {\n            throw new Error(\n                'Unable to configure the public path of the application because it is not specified and it cannot be inferred using the path of the current script.',\n            );\n        }\n\n        __webpack_public_path__ = `${scriptPath.split('/').slice(0, -1).join('/')}/`;\n\n        return __webpack_public_path__;\n    }\n\n    __webpack_public_path__ = publicPath.substr(-1) === '/' ? publicPath : `${publicPath}/`;\n\n    return __webpack_public_path__;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { configurePublicPath } from '../common/bundler';\n\nimport { CheckoutAppProps } from './CheckoutApp';\n\nexport type RenderCheckoutOptions = CheckoutAppProps;\nexport type RenderCheckout = typeof renderCheckout;\n\nexport default function renderCheckout({\n    containerId,\n    publicPath,\n    ...props\n}: RenderCheckoutOptions): void {\n    const configuredPublicPath = configurePublicPath(publicPath);\n\n    // We want to use `require` here because we want to set up the public path\n    // first before importing the app component and its dependencies.\n    const { default: CheckoutApp } = require('./CheckoutApp');\n\n    // We want to use `require` here because we only want to import the package\n    // in development mode.\n    if (process.env.NODE_ENV === 'development') {\n        const whyDidYouRender = require('@welldone-software/why-did-you-render');\n\n        whyDidYouRender(React, {\n            collapseGroups: true,\n        });\n    }\n\n    if (window.recurly) {\n        window.recurly.configure(window.RECURLY_PUBLIC_KEY);\n    }\n\n    ReactDOM.render(\n        <CheckoutApp containerId={containerId} publicPath={configuredPublicPath} {...props} />,\n        document.getElementById(containerId),\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { configurePublicPath } from '../common/bundler';\n\nimport { OrderConfirmationAppProps } from './OrderConfirmationApp';\n\nexport type RenderOrderConfirmationOptions = OrderConfirmationAppProps;\nexport type RenderOrderConfirmation = typeof renderOrderConfirmation;\n\nexport default function renderOrderConfirmation({\n    containerId,\n    publicPath,\n    ...props\n}: RenderOrderConfirmationOptions): void {\n    const configuredPublicPath = configurePublicPath(publicPath);\n\n    // We want to use `require` here because we want to set up the public path\n    // first before importing the app component and its dependencies.\n    const { default: OrderConfirmationApp } = require('./OrderConfirmationApp');\n\n    // We want to use `require` here because we only want to import the package\n    // in development mode.\n    if (process.env.NODE_ENV === 'development') {\n        const whyDidYouRender = require('@welldone-software/why-did-you-render');\n\n        whyDidYouRender(React, {\n            collapseGroups: true,\n        });\n    }\n\n    ReactDOM.render(\n        <OrderConfirmationApp\n            containerId={containerId}\n            publicPath={configuredPublicPath}\n            {...props}\n        />,\n        document.getElementById(containerId),\n    );\n}\n","import { createRequestSender, RequestSender } from '@bigcommerce/request-sender';\n\nimport { CreatedCustomer, CreatedCustomerResponse } from './CreatedCustomer';\n\nexport interface CustomerCreateRequestBody {\n    confirmPassword: string;\n    newsletter: boolean;\n    orderId: number;\n    password: string;\n}\n\nexport default class AccountService {\n    constructor(private requestSender: RequestSender = createRequestSender()) {}\n\n    create(body: CustomerCreateRequestBody): Promise<CreatedCustomer> {\n        return this.requestSender\n            .put<CreatedCustomerResponse>('/internalapi/v1/checkout/customer', { body })\n            .then((response) => response.body.data.customer);\n    }\n}\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { FormField, TextInput } from '../ui/form';\n\nexport interface PasswordField {\n    minLength: number;\n}\n\nconst SignUpPasswordField: FunctionComponent<PasswordField> = ({ minLength }) => {\n    const renderPasswordInput = useCallback(\n        ({ field }: FieldProps<string>) => <TextInput {...field} id={field.name} type=\"password\" />,\n        [],\n    );\n\n    const renderPasswordConfirmationInput = useCallback(\n        ({ field }: FieldProps<string>) => <TextInput {...field} id={field.name} type=\"password\" />,\n        [],\n    );\n\n    const passwordLabelContent = useMemo(\n        () => (\n            <>\n                <TranslatedString id=\"customer.password_label\" />{' '}\n                <small>\n                    {`${minLength}-`}\n                    <TranslatedString id=\"customer.password_minimum_character_label\" />\n                </small>\n            </>\n        ),\n        [minLength],\n    );\n\n    const passwordConfirmationLabelContent = useMemo(\n        () => <TranslatedString id=\"customer.password_confirmation_label\" />,\n        [],\n    );\n\n    return (\n        <>\n            <FormField\n                input={renderPasswordInput}\n                labelContent={passwordLabelContent}\n                name=\"password\"\n            />\n\n            <FormField\n                input={renderPasswordConfirmationInput}\n                labelContent={passwordConfirmationLabelContent}\n                name=\"confirmPassword\"\n            />\n        </>\n    );\n};\n\nexport default memo(SignUpPasswordField);\n","import { FormikProps, withFormik } from 'formik';\nimport React, { FunctionComponent, memo } from 'react';\nimport { object, ref, string } from 'yup';\n\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\n\nimport { PasswordRequirements } from '../customer';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Fieldset, Form, Legend } from '../ui/form';\n\nimport SignUpPasswordField from './SignUpPasswordField';\n\nexport interface SignUpFormProps {\n    isSigningUp?: boolean;\n    customerCanBeCreated: boolean;\n    passwordRequirements: PasswordRequirements;\n    onSignUp(data: SignUpFormValues): void;\n}\n\nexport interface SignUpFormValues {\n    password: string;\n    confirmPassword: string;\n}\n\nconst GuestSignUpForm: FunctionComponent<\n    SignUpFormProps & WithLanguageProps & FormikProps<SignUpFormValues>\n> = ({ isSigningUp, customerCanBeCreated, passwordRequirements: { minLength } }) => (\n    <Fieldset\n        legend={\n            <Legend>\n                <TranslatedString\n                    id={\n                        customerCanBeCreated\n                            ? 'customer.create_account_text'\n                            : 'customer.set_password_text'\n                    }\n                />\n            </Legend>\n        }\n    >\n        {!customerCanBeCreated && (\n            <p>\n                <TranslatedString id=\"customer.account_created_text\" />\n            </p>\n        )}\n\n        <Form className=\"guest-signup form\">\n            <SignUpPasswordField minLength={minLength} />\n\n            <div className=\"form-actions\">\n                <Button\n                    id=\"createAccountButton\"\n                    isLoading={isSigningUp}\n                    type=\"submit\"\n                    variant={ButtonVariant.Primary}\n                >\n                    <TranslatedString\n                        id={\n                            customerCanBeCreated\n                                ? 'customer.create_account_action'\n                                : 'customer.set_password_action'\n                        }\n                    />\n                </Button>\n            </div>\n        </Form>\n    </Fieldset>\n);\n\nexport default withLanguage(\n    withFormik<SignUpFormProps & WithLanguageProps, SignUpFormValues>({\n        mapPropsToValues: () => ({\n            password: '',\n            confirmPassword: '',\n        }),\n        handleSubmit: (values, { props: { onSignUp } }) => {\n            onSignUp(values);\n        },\n        validationSchema: ({\n            language,\n            passwordRequirements: { description, numeric, alpha, minLength },\n        }: SignUpFormProps & WithLanguageProps) =>\n            object({\n                password: string()\n                    .required(description || language.translate('customer.password_required_error'))\n                    .matches(\n                        numeric,\n                        description ||\n                            language.translate('customer.password_number_required_error'),\n                    )\n                    .matches(\n                        alpha,\n                        description ||\n                            language.translate('customer.password_letter_required_error'),\n                    )\n                    .min(\n                        minLength,\n                        description ||\n                            language.translate('customer.password_under_minimum_length_error'),\n                    )\n                    .max(100, language.translate('customer.password_over_maximum_length_error')),\n                confirmPassword: string()\n                    .required(language.translate('customer.password_confirmation_required_error'))\n                    .oneOf(\n                        [ref('password')],\n                        language.translate('customer.password_confirmation_error'),\n                    ),\n            }),\n    })(memo(GuestSignUpForm)),\n);\n","import React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Alert, AlertType } from '../ui/alert';\n\nconst PasswordSavedSuccessAlert: FunctionComponent = () => (\n    <Alert type={AlertType.Success}>\n        <strong>\n            <TranslatedString id=\"customer.set_password_success\" />\n        </strong>\n    </Alert>\n);\n\nexport default PasswordSavedSuccessAlert;\n","import React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Alert, AlertType } from '../ui/alert';\n\nconst SignedUpSuccessAlert: FunctionComponent = () => (\n    <Alert type={AlertType.Success}>\n        <strong>\n            <TranslatedString id=\"customer.create_account_success\" />\n        </strong>\n    </Alert>\n);\n\nexport default SignedUpSuccessAlert;\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class AccountCreationRequirementsError extends CustomError {\n    constructor(data: Error, requirements: string) {\n        super({\n            name: 'ACCOUNT_CREATION_REQUIREMENTS_ERROR',\n            message: requirements,\n            title: getLanguageService().translate(\n                'customer.create_account_requirements_error_heading',\n            ),\n            data,\n        });\n\n        setPrototypeOf(this, AccountCreationRequirementsError.prototype);\n    }\n}\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class AccountCreationFailedError extends CustomError {\n    constructor(data: Error) {\n        super({\n            name: 'ACCOUNT_CREATION_FAILED',\n            message: getLanguageService().translate('customer.create_account_error'),\n            data,\n        });\n\n        setPrototypeOf(this, AccountCreationFailedError.prototype);\n    }\n}\n","import { GatewayOrderPayment, Order, OrderPayment } from '@bigcommerce/checkout-sdk';\n\nimport { isGiftCertificatePayment } from '../giftCertificate';\nimport { isStoreCreditPayment } from '../payment/storeCredit';\n\nexport interface PaymentInstructionsProps {\n    order: Order;\n}\n\nfunction isDefaultOrderPayment(payment: OrderPayment): payment is GatewayOrderPayment {\n    return !isGiftCertificatePayment(payment) && !isStoreCreditPayment(payment);\n}\n\nfunction getPaymentInstructions(order: Order): string {\n    const gatewayPayment = (order.payments || []).find(isDefaultOrderPayment);\n    const instructions = gatewayPayment && gatewayPayment.detail.instructions;\n\n    return instructions || '';\n}\n\nexport default getPaymentInstructions;\n","import { GiftCertificate, OrderPayments } from '@bigcommerce/checkout-sdk';\n\nimport isGiftCertificatePayment from './isGiftCertificatePayment';\n\nexport default function mapFromPayments(payments: OrderPayments): GiftCertificate[] {\n    return payments.filter(isGiftCertificatePayment).map(({ amount, detail }) => ({\n        code: detail.code,\n        remaining: detail.remaining,\n        used: amount,\n        balance: amount + detail.remaining,\n        purchaseDate: '',\n    }));\n}\n","import { OrderPayment } from '@bigcommerce/checkout-sdk';\n\nimport { isStoreCreditPayment } from '../payment/storeCredit';\n\nexport default function getStoreCreditAmount(payments?: OrderPayment[]): number {\n    return (payments || [])\n        .filter(isStoreCreditPayment)\n        .reduce((total, payment) => total + payment.amount, 0);\n}\n","import { Order } from '@bigcommerce/checkout-sdk';\n\nimport { mapFromPayments } from '../giftCertificate';\n\nimport getStoreCreditAmount from './getStoreCreditAmount';\nimport { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\n\nexport default function mapToOrderSummarySubtotalsProps({\n    baseAmount,\n    discountAmount,\n    isTaxIncluded,\n    shippingCostBeforeDiscount,\n    payments,\n    handlingCostTotal,\n    giftWrappingCostTotal,\n    coupons,\n    taxes,\n    fees,\n}: Order): OrderSummarySubtotalsProps {\n    return {\n        subtotalAmount: baseAmount,\n        shippingAmount: shippingCostBeforeDiscount,\n        giftWrappingAmount: giftWrappingCostTotal,\n        discountAmount,\n        storeCreditAmount: getStoreCreditAmount(payments),\n        handlingAmount: handlingCostTotal,\n        coupons,\n        giftCertificates: payments && mapFromPayments(payments),\n        taxes,\n        isTaxIncluded,\n        fees,\n    };\n}\n","import React, { FunctionComponent } from 'react';\n\nconst OrderConfirmationSection: FunctionComponent = ({ children }) => (\n    <section className=\"orderConfirmation-section\">{children}</section>\n);\n\nexport default OrderConfirmationSection;\n","import React, { FunctionComponent } from 'react';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nexport interface MandateTextComponentProps {\n    mandateText: {\n        [key: string]: string;\n    },\n    methodId: string;\n    providerId: string;\n}\n\nexport const MandateTextComponent: FunctionComponent<MandateTextComponentProps> = ({\n    mandateText,\n    providerId,\n    methodId,\n}) => {\n    if (!Object.keys(mandateText).length) {\n        return null;\n    }\n\n    return (\n        <ul data-test='order-confirmation-mandate-text-list'>\n            {Object.entries(mandateText).map((field, index) => {\n                return (\n                    <li key={index} data-test={`order-confirmation-mandate-text-list-item-${index}`}>\n                        <TranslatedString\n                            id={`order_confirmation.mandate.${providerId}.${methodId}.${field[0]}`}\n                        />:\n                        <b>\n                            {` ${field[1]}`}\n                        </b>\n                    </li>\n                )\n            })}\n        </ul>\n    )\n}\n","import React, { FunctionComponent } from 'react';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { MandateTextComponent } from './MandateTextComponent';\nimport { GatewayOrderPayment } from '@bigcommerce/checkout-sdk';\n\nexport interface PaymentsWithMandatesProps {\n    paymentsWithMandates: GatewayOrderPayment[];\n}\n\nexport const PaymentsWithMandates: FunctionComponent<PaymentsWithMandatesProps> = ({\n    paymentsWithMandates,\n}) => <>\n    {paymentsWithMandates.map((payment) => {\n        if (payment?.mandate?.url) {\n            return (\n                <a\n                    data-test=\"order-confirmation-mandate-link-text\"\n                    href={payment.mandate.url}\n                    key={`${payment.providerId}-${payment.methodId}-mandate`}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                >\n                    <TranslatedString\n                        id={`order_confirmation.mandate.${payment.providerId}.${payment.methodId}`}\n                    />\n                </a>\n            );\n        } else if (payment?.mandate?.id) {\n            return (\n                <p\n                    data-test=\"order-confirmation-mandate-id-text\"\n                    key={`${payment.providerId}-${payment.methodId}-mandate`}\n                >\n                    <TranslatedString\n                        data={{ mandate: payment.mandate.id }}\n                        id={`order_confirmation.mandate.${payment.providerId}.${payment.methodId}`}\n                    />\n                </p>\n            );\n        } else if (payment?.mandate?.mandateText && payment.methodId) {\n            return <MandateTextComponent\n                key='mandateTextList'\n                mandateText={payment.mandate.mandateText}\n                methodId={payment.methodId}\n                providerId={payment.providerId}\n            />\n        }\n    })}\n</>\n","import { GatewayOrderPayment, GiftCertificateOrderPayment, Order, StoreConfig } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\n\nimport OrderConfirmationSection from './OrderConfirmationSection';\nimport { PaymentsWithMandates } from './PaymentsWithMandates';\n\nexport interface OrderStatusProps {\n    config: StoreConfig;\n    supportEmail: string;\n    supportPhoneNumber?: string;\n    order: Order;\n}\n\ntype PaymentWithMandate = GatewayOrderPayment &\n    Required<Pick<GatewayOrderPayment, 'mandate' | 'methodId'>>;\n\nconst isPaymentWithMandate = (\n    payment: GatewayOrderPayment | GiftCertificateOrderPayment,\n): payment is PaymentWithMandate => !!payment.methodId && 'mandate' in payment && !!payment.mandate;\n\nconst OrderStatus: FunctionComponent<OrderStatusProps> = ({\n    config,\n    order,\n    supportEmail,\n    supportPhoneNumber,\n}) => {\n    const paymentsWithMandates = order.payments?.filter(isPaymentWithMandate) || [];\n\n    return (\n        <OrderConfirmationSection>\n            {order.orderId && (\n                <p data-test=\"order-confirmation-order-number-text\">\n                    <TranslatedHtml\n                        data={{ orderNumber: order.orderId }}\n                        id=\"order_confirmation.order_number_text\"\n                    />\n                </p>\n            )}\n\n            <p data-test=\"order-confirmation-order-status-text\">\n                <OrderStatusMessage\n                    config={config}\n                    orderNumber={order.orderId}\n                    orderStatus={order.status}\n                    supportEmail={supportEmail}\n                    supportPhoneNumber={supportPhoneNumber}\n                />\n            </p>\n            <PaymentsWithMandates\n                paymentsWithMandates={paymentsWithMandates}\n            />\n            {order.hasDigitalItems && (\n                <p data-test=\"order-confirmation-digital-items-text\">\n                    <TranslatedHtml\n                        id={\n                            order.isDownloadable\n                                ? 'order_confirmation.order_with_downloadable_digital_items_text'\n                                : 'order_confirmation.order_without_downloadable_digital_items_text'\n                        }\n                    />\n                </p>\n            )}\n        </OrderConfirmationSection>\n    );\n};\n\ninterface OrderStatusMessageProps {\n    config: StoreConfig;\n    orderNumber: number;\n    orderStatus: string;\n    supportEmail?: string;\n    supportPhoneNumber?: string;\n}\n\nconst OrderStatusMessage: FunctionComponent<OrderStatusMessageProps> = ({\n    config,\n    orderNumber,\n    orderStatus,\n    supportEmail,\n    supportPhoneNumber,\n}) => {\n    switch (orderStatus) {\n        case 'MANUAL_VERIFICATION_REQUIRED':\n        case 'AWAITING_PAYMENT':\n            return <TranslatedHtml id=\"order_confirmation.order_pending_review_text\" />;\n\n        case 'PENDING':\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail }}\n                    id=\"order_confirmation.order_pending_status_text\"\n                />\n            );\n\n        case 'INCOMPLETE':\n            if (config.checkoutSettings.features['CHECKOUT-6891.update_incomplete_order_wording_on_order_confirmation_page']) {\n                return (\n                    <TranslatedHtml\n                        data={{ orderNumber, supportEmail }}\n                        id=\"order_confirmation.order_incomplete_status_with_unsuccessful_payment_text\"\n                    />\n                );\n            }\n\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail }}\n                    id=\"order_confirmation.order_incomplete_status_text\"\n                />\n            );\n\n        default:\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail, supportPhoneNumber }}\n                    id={\n                        supportPhoneNumber\n                            ? 'order_confirmation.order_with_support_number_text'\n                            : 'order_confirmation.order_without_support_number_text'\n                    }\n                />\n            );\n    }\n};\n\nexport default memo(OrderStatus);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconPrint: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconPrint);\n","import { throttle } from 'lodash';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { IconPrint } from '../ui/icon';\n\nexport interface PrintLinkProps {\n    className?: string;\n}\n\nconst PRINT_MODAL_THROTTLE = 500;\n\nconst PrintLink: FunctionComponent<PrintLinkProps> = ({ className }) => {\n    const handleClick = useCallback(\n        throttle(() => {\n            window.print();\n        }, PRINT_MODAL_THROTTLE),\n        [],\n    );\n\n    if (typeof window.print !== 'function') {\n        return null;\n    }\n\n    return (\n        <a\n            className={className || 'cart-header-link'}\n            href=\"#\"\n            id=\"cart-print-link\"\n            onClick={preventDefault(handleClick)}\n        >\n            <IconPrint /> <TranslatedString id=\"cart.print_action\" />\n        </a>\n    );\n};\n\nexport default memo(PrintLink);\n","import React, { FunctionComponent } from 'react';\n\nexport interface HeaderProps {\n    testId?: string;\n}\n\nconst PrimaryHeader: FunctionComponent<HeaderProps> = ({ children, testId }) => (\n    <h1 className=\"optimizedCheckout-headingPrimary\" data-test={testId}>\n        {children}\n    </h1>\n);\n\nexport default PrimaryHeader;\n","import React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { PrimaryHeader } from '../ui/header';\n\nexport interface HeaderProps {\n    name?: string;\n}\n\nconst ThankYouHeader: FunctionComponent<HeaderProps> = ({ name }) => (\n    <PrimaryHeader testId=\"order-confirmation-heading\">\n        {name && (\n            <TranslatedString data={{ name }} id=\"order_confirmation.thank_you_customer_heading\" />\n        )}\n\n        {!name && <TranslatedString id=\"order_confirmation.thank_you_heading\" />}\n    </PrimaryHeader>\n);\n\nexport default memo(ThankYouHeader);\n","import React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nconst OrderIncompleteHeader: FunctionComponent = () => (\n    <h3 className=\"optimizedCheckout-headingOrderIncomplete\" data-test=\"order-confirmation-heading\">\n        <TranslatedString id=\"order_confirmation.order_incomplete_status_heading\" />\n    </h3>\n);\n\nexport default memo(OrderIncompleteHeader);\n","import {\n    CheckoutSelectors, CustomItem, DigitalItem,\n    EmbeddedCheckoutMessenger,\n    EmbeddedCheckoutMessengerOptions, GiftCertificateItem,\n    Order, PhysicalItem,\n    ShopperConfig,\n    StoreConfig,\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport DOMPurify from 'dompurify';\nimport React, { Component, lazy, ReactNode } from 'react';\n\nimport { AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\nimport { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { withAnalytics } from '../analytics';\nimport { withCheckout } from '../checkout';\nimport { ErrorModal } from '../common/error';\nimport { retry } from '../common/utility';\nimport { getPasswordRequirementsFromConfig } from '../customer';\nimport { EmbeddedCheckoutStylesheet, isEmbedded } from '../embeddedCheckout';\nimport {\n    CreatedCustomer,\n    GuestSignUpForm,\n    PasswordSavedSuccessAlert,\n    SignedUpSuccessAlert,\n    SignUpFormValues,\n} from '../guestSignup';\nimport {\n    AccountCreationFailedError,\n    AccountCreationRequirementsError,\n} from '../guestSignup/errors';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { LazyContainer, LoadingSpinner } from '../ui/loading';\nimport { MobileView } from '../ui/responsive';\n\nimport getPaymentInstructions from './getPaymentInstructions';\nimport mapToOrderSummarySubtotalsProps from './mapToOrderSummarySubtotalsProps';\nimport OrderConfirmationSection from './OrderConfirmationSection';\nimport OrderStatus from './OrderStatus';\nimport PrintLink from './PrintLink';\nimport ThankYouHeader from './ThankYouHeader';\nimport {CouponData, OrderData, PromotionData, trackGuest, trackPurchase, trackSignUp} from \"../common/tracking\";\nimport OrderIncompleteHeader from './OrderIncompleteHeader';\n\nconst OrderSummary = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"order-summary\" */\n                './OrderSummary'\n            ),\n    ),\n);\n\nconst OrderSummaryDrawer = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"order-summary-drawer\" */\n                './OrderSummaryDrawer'\n            ),\n    ),\n);\n\nexport interface OrderConfirmationState {\n    error?: Error;\n    hasSignedUp?: boolean;\n    isSigningUp?: boolean;\n}\n\nexport interface OrderConfirmationProps {\n    containerId: string;\n    embeddedStylesheet: EmbeddedCheckoutStylesheet;\n    errorLogger: ErrorLogger;\n    orderId: number;\n    createAccount(values: SignUpFormValues): Promise<CreatedCustomer>;\n    createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\n}\n\ninterface WithCheckoutOrderConfirmationProps {\n    order?: Order;\n    config?: StoreConfig;\n    loadOrder(orderId: number): Promise<CheckoutSelectors>;\n    isLoadingOrder(): boolean;\n}\n\nclass OrderConfirmation extends Component<\n    OrderConfirmationProps & WithCheckoutOrderConfirmationProps & AnalyticsContextProps,\n    OrderConfirmationState\n> {\n    state: OrderConfirmationState = {};\n\n    private embeddedMessenger?: EmbeddedCheckoutMessenger;\n\n    componentDidMount(): void {\n        const {\n            containerId,\n            createEmbeddedMessenger,\n            embeddedStylesheet,\n            loadOrder,\n            orderId,\n            analyticsTracker\n        } = this.props;\n\n        loadOrder(orderId)\n            .then(({ data }) => {\n                const { links: { siteLink = '' } = {} } = data.getConfig() || {};\n                const messenger = createEmbeddedMessenger({ parentOrigin: siteLink });\n\n                this.embeddedMessenger = messenger;\n\n                messenger.receiveStyles((styles) => embeddedStylesheet.append(styles));\n                messenger.postFrameLoaded({ contentId: containerId });\n\n                analyticsTracker.orderPurchased();\n\n                const {config, order} = this.props;\n                const isGuest = !order?.customerId;\n\n                if (isGuest && order?.billingAddress.email) {\n                    trackGuest(order?.billingAddress.email);\n                }\n\n                const coupons: CouponData[] = [];\n                order?.coupons?.forEach(coupon => {\n                    coupons.push({\n                        coupon: coupon.code,\n                        discount: coupon.discountedAmount,\n                    });\n                });\n                const purchaseData: OrderData = {\n                    purchase: {\n                        transaction_id: orderId,\n                        affiliation: config?.storeProfile.storeName,\n                        value: order?.orderAmount,\n                        tax: order?.taxTotal,\n                        shipping: order?.shippingCostTotal,\n                        currency: order?.currency.code,\n                        coupons,\n                        items: [],\n                    },\n                };\n                const cartItemLists = [\n                    order?.lineItems.customItems,\n                    order?.lineItems.digitalItems,\n                    order?.lineItems.giftCertificates,\n                    order?.lineItems.physicalItems,\n                ];\n                cartItemLists.forEach(itemList => {\n                    itemList?.forEach((item: CustomItem | DigitalItem | GiftCertificateItem | PhysicalItem) => {\n                        const itemCoupons: CouponData[] = [];\n                        const itemPromotions: PromotionData[] = [];\n\n                        const itemQuantity = 'quantity' in item ? item.quantity : 1;\n\n                        if ( 'discounts' in item ) {\n                            let itemCouponIndex = 0;\n                            Object.keys(item.discounts).forEach((id: any) => {\n                                const discountedAmount = item.discounts[id] as unknown as number ; // item.discounts is of type {[key: string]: number} but incorrectly typed\n                                if ( id === 'coupon' ) {\n                                    itemCoupons.push({coupon: coupons[itemCouponIndex]?.coupon, discount: discountedAmount / itemQuantity});\n                                    itemCouponIndex++;\n                                } else {\n                                    itemPromotions.push({id, discount: discountedAmount / itemQuantity});\n                                }\n                            });\n                        }\n\n                        const itemFullPrice = 'listPrice' in item ? item.listPrice : item.amount;\n                        const itemDiscountedPrice = ('salePrice' in item ? item.salePrice : itemFullPrice) - (itemCoupons?.length ? itemCoupons.reduce((partialSum, coupon) => partialSum + coupon.discount, 0) : 0);\n\n                        purchaseData.purchase.items.push({\n                            item_id: 'productId' in item ? item.productId : undefined,\n                            item_name: item.name,\n                            item_variant: 'options' in item ? item.options?.[0]?.value : undefined,\n                            currency: order?.currency.code,\n                            item_brand: 'brand' in item ? item.brand ?? 'MitoQ' : undefined,\n                            price: parseFloat(itemDiscountedPrice.toFixed(2)),\n                            quantity: itemQuantity,\n                            coupons: itemCoupons,\n                            promotions: itemPromotions,\n                        });\n                    });\n                });\n                trackPurchase(purchaseData);\n            })\n            .catch(this.handleUnhandledError);\n    }\n\n    render(): ReactNode {\n        const { order, config, isLoadingOrder } = this.props;\n\n        if (!order || !config || isLoadingOrder()) {\n            return <LoadingSpinner isLoading={true} />;\n        }\n\n        const paymentInstructions = getPaymentInstructions(order);\n        const {\n            storeProfile: { orderEmail, storePhoneNumber },\n            shopperConfig,\n            links: { siteLink },\n        } = config;\n\n        const header = order.status === 'INCOMPLETE' && config.checkoutSettings.features['CHECKOUT-6891.update_incomplete_order_wording_on_order_confirmation_page']\n            ? <OrderIncompleteHeader />\n            : <ThankYouHeader name={order.billingAddress.firstName} />;\n\n        return (\n            <div\n                className={classNames('layout optimizedCheckout-contentPrimary', {\n                    'is-embedded': isEmbedded(),\n                })}\n            >\n                <div className=\"layout-main\">\n                    <div className=\"orderConfirmation\">\n                        { header }\n\n                        <OrderStatus\n                            config={config}\n                            order={order}\n                            supportEmail={orderEmail}\n                            supportPhoneNumber={storePhoneNumber}\n                        />\n\n                        {paymentInstructions && (\n                            <OrderConfirmationSection>\n                                <div\n                                    dangerouslySetInnerHTML={{\n                                        __html: DOMPurify.sanitize(paymentInstructions),\n                                    }}\n                                    data-test=\"payment-instructions\"\n                                />\n                            </OrderConfirmationSection>\n                        )}\n\n                        {this.renderGuestSignUp({\n                            shouldShowPasswordForm: order.customerCanBeCreated,\n                            customerCanBeCreated: !order.customerId,\n                            shopperConfig,\n                        })}\n\n                        <div className=\"continueButtonContainer\">\n                            <form action={siteLink} method=\"get\" target=\"_top\">\n                                <Button type=\"submit\" variant={ButtonVariant.Secondary}>\n                                    <TranslatedString id=\"order_confirmation.continue_shopping\" />\n                                </Button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n\n                {this.renderOrderSummary()}\n                {this.renderErrorModal()}\n            </div>\n        );\n    }\n\n    private renderGuestSignUp({\n        customerCanBeCreated,\n        shouldShowPasswordForm,\n        shopperConfig,\n    }: {\n        customerCanBeCreated: boolean;\n        shouldShowPasswordForm: boolean;\n        shopperConfig: ShopperConfig;\n    }): ReactNode {\n        const { isSigningUp, hasSignedUp } = this.state;\n\n        const { order } = this.props;\n\n        return (\n            <>\n                {shouldShowPasswordForm && !hasSignedUp && (\n                    <GuestSignUpForm\n                        customerCanBeCreated={customerCanBeCreated}\n                        isSigningUp={isSigningUp}\n                        onSignUp={this.handleSignUp}\n                        passwordRequirements={getPasswordRequirementsFromConfig(shopperConfig)}\n                    />\n                )}\n\n                {hasSignedUp &&\n                    (order?.customerId ? <PasswordSavedSuccessAlert /> : <SignedUpSuccessAlert />)}\n            </>\n        );\n    }\n\n    private renderOrderSummary(): ReactNode {\n        const { order, config } = this.props;\n\n        if (!order || !config) {\n            return null;\n        }\n\n        const { currency, shopperCurrency } = config;\n\n        return (\n            <MobileView>\n                {(matched) => {\n                    if (matched) {\n                        return (\n                            <LazyContainer>\n                                <OrderSummaryDrawer\n                                    {...mapToOrderSummarySubtotalsProps(order)}\n                                    headerLink={\n                                        <PrintLink className=\"modal-header-link cart-modal-link\" />\n                                    }\n                                    isUpdatedCartSummayModal={false}\n                                    lineItems={order.lineItems}\n                                    shopperCurrency={shopperCurrency}\n                                    storeCurrency={currency}\n                                    total={order.orderAmount}\n                                />\n                            </LazyContainer>\n                        );\n                    }\n\n                    return (\n                        <aside className=\"layout-cart\">\n                            <LazyContainer>\n                                <OrderSummary\n                                    headerLink={<PrintLink />}\n                                    {...mapToOrderSummarySubtotalsProps(order)}\n                                    lineItems={order.lineItems}\n                                    shopperCurrency={shopperCurrency}\n                                    storeCurrency={currency}\n                                    total={order.orderAmount}\n                                />\n                            </LazyContainer>\n                        </aside>\n                    );\n                }}\n            </MobileView>\n        );\n    }\n\n    private renderErrorModal(): ReactNode {\n        const { error } = this.state;\n\n        return (\n            <ErrorModal\n                error={error}\n                onClose={this.handleErrorModalClose}\n                shouldShowErrorCode={false}\n            />\n        );\n    }\n\n    private handleErrorModalClose: () => void = () => {\n        this.setState({ error: undefined });\n    };\n\n    private handleSignUp: (values: SignUpFormValues) => void = ({ password, confirmPassword }) => {\n        const { createAccount, config } = this.props;\n\n        const shopperConfig = config && config.shopperConfig;\n        const passwordRequirements =\n            (shopperConfig &&\n                shopperConfig.passwordRequirements &&\n                shopperConfig.passwordRequirements.error) ||\n            '';\n\n        this.setState({\n            isSigningUp: true,\n        });\n\n        createAccount({\n            password,\n            confirmPassword,\n        })\n            .then((customer: CreatedCustomer) => {\n                this.setState({\n                    hasSignedUp: true,\n                    isSigningUp: false,\n                });\n                trackSignUp('Purchase confirmation', customer);\n            })\n            .catch((error) => {\n                this.setState({\n                    error:\n                        error.status < 500\n                            ? new AccountCreationRequirementsError(error, passwordRequirements)\n                            : new AccountCreationFailedError(error),\n                    hasSignedUp: false,\n                    isSigningUp: false,\n                });\n            });\n    };\n\n    private handleUnhandledError: (error: Error) => void = (error) => {\n        const { errorLogger } = this.props;\n\n        this.setState({ error });\n        errorLogger.log(error);\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postError(error);\n        }\n    };\n}\n\nexport function mapToOrderConfirmationProps(\n    context: CheckoutContextProps,\n): WithCheckoutOrderConfirmationProps | null {\n    const {\n        checkoutState: {\n            data: { getOrder, getConfig },\n            statuses: { isLoadingOrder },\n        },\n        checkoutService,\n    } = context;\n\n    const config = getConfig();\n    const order = getOrder();\n\n    return {\n        config,\n        isLoadingOrder,\n        loadOrder: checkoutService.loadOrder,\n        order,\n    };\n}\n\nexport default withAnalytics(withCheckout(mapToOrderConfirmationProps)(OrderConfirmation));\n","import { createCheckoutService, createEmbeddedCheckoutMessenger } from '@bigcommerce/checkout-sdk';\nimport { BrowserOptions } from '@sentry/browser';\nimport React, { Component, ReactNode } from 'react';\nimport ReactModal from 'react-modal';\n\nimport { AnalyticsProvider } from '@bigcommerce/checkout/analytics';\nimport '../../scss/App.scss';\nimport { ErrorBoundary, ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { getLanguageService, LocaleProvider } from '@bigcommerce/checkout/locale';\nimport { CheckoutProvider } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { createErrorLogger } from '../common/error';\nimport { createEmbeddedCheckoutStylesheet } from '../embeddedCheckout';\nimport { AccountService, CreatedCustomer, SignUpFormValues } from '../guestSignup';\n\nimport OrderConfirmation from './OrderConfirmation';\n\nexport interface OrderConfirmationAppProps {\n    containerId: string;\n    orderId: number;\n    publicPath?: string;\n    sentryConfig?: BrowserOptions;\n    sentrySampleRate?: number;\n}\n\nclass OrderConfirmationApp extends Component<OrderConfirmationAppProps> {\n    private accountService = new AccountService();\n    private checkoutService = createCheckoutService({\n        locale: getLanguageService().getLocale(),\n        shouldWarnMutation: process.env.NODE_ENV === 'development',\n    });\n    private embeddedStylesheet = createEmbeddedCheckoutStylesheet();\n    private errorLogger: ErrorLogger;\n\n    constructor(props: Readonly<OrderConfirmationAppProps>) {\n        super(props);\n\n        this.errorLogger = createErrorLogger(\n            { sentry: props.sentryConfig },\n            {\n                errorTypes: ['UnrecoverableError'],\n                publicPath: props.publicPath,\n                sampleRate: props.sentrySampleRate ? props.sentrySampleRate : 0.1,\n            },\n        );\n    }\n\n    componentDidMount(): void {\n        const { containerId } = this.props;\n\n        ReactModal.setAppElement(`#${containerId}`);\n    }\n\n    render(): ReactNode {\n        return (\n            <ErrorBoundary logger={this.errorLogger}>\n                <LocaleProvider checkoutService={this.checkoutService}>\n                    <CheckoutProvider checkoutService={this.checkoutService}>\n                        <AnalyticsProvider checkoutService={ this.checkoutService }>\n                            <OrderConfirmation\n                                {...this.props}\n                                createAccount={this.createAccount}\n                                createEmbeddedMessenger={createEmbeddedCheckoutMessenger}\n                                embeddedStylesheet={this.embeddedStylesheet}\n                                errorLogger={this.errorLogger}\n                            />\n                        </AnalyticsProvider>\n                    </CheckoutProvider>\n                </LocaleProvider>\n            </ErrorBoundary>\n        );\n    }\n\n    private createAccount: (values: SignUpFormValues) => Promise<CreatedCustomer> = ({\n        password,\n        confirmPassword,\n    }) => {\n        const { orderId } = this.props;\n\n        return this.accountService.create({\n            orderId,\n            newsletter: false,\n            password,\n            confirmPassword,\n        });\n    };\n}\n\nexport default OrderConfirmationApp;\n","import { PaymentMethodId as PaymentMethodIdOriginal } from '@bigcommerce/checkout/payment-integration-api';\n\nenum PaymentMethodIdExtended {\n    Recurly = 'recurly',\n}\n\ntype PaymentMethodId = PaymentMethodIdOriginal & PaymentMethodIdExtended;\n\nconst PaymentMethodId = {\n    ...PaymentMethodIdOriginal,\n    ...PaymentMethodIdExtended\n}\n\nexport default PaymentMethodId;\n","import { CheckoutPayment, OrderPayment } from '@bigcommerce/checkout-sdk';\n\nexport default function isStoreCreditPayment(payment: OrderPayment | CheckoutPayment): boolean {\n    return payment.providerId === 'storecredit';\n}\n","import { CustomerData, Elements } from '@recurly/recurly-js';\nimport { createContext } from 'react';\n\nexport interface RecurlyContextProps {\n    isLoadingRecurly: boolean;\n    hasSubscription: boolean;\n    isSubmitting: boolean;\n    submitOrder(elements: Elements, customerInformation: CustomerData): Promise<any>;\n    resubmitRecurlyOrder(customerInformation: CustomerData, secureToken: any): Promise<any>;\n}\n\nconst RecurlyContext = createContext<RecurlyContextProps | undefined>(undefined);\n\nexport default RecurlyContext;\n","export const recurlyId = window.RECURLY_PUBLIC_KEY ?? process.env.RECURLY_PUBLIC_KEY;\n\n// @ts-ignore\nexport const apiEndpoint = window.FRONTEND_API_ENDPOINT ?? process.env.FRONTEND_API_ENDPOINT;\n// @ts-ignore\nexport const recurlyBcAppId = window.RECURLY_BC_APP_ID ?? process.env.RECURLY_BC_APP_ID;\nexport default {recurlyId, apiEndpoint, recurlyBcAppId};\n","import { createInjectHoc, createMappableInjectHoc, InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport RecurlyContext, { RecurlyContextProps } from './RecurlyContext';\n\nconst withRecurly = createMappableInjectHoc(RecurlyContext, {\n    displayNamePrefix: 'WithRecurly',\n});\n\nexport default withRecurly;\n","import { Cart, Consignment } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport findLineItems from './findLineItems';\nimport getLineItemsCount from './getLineItemsCount';\n\nexport interface StaticConsignmentItemListProps {\n    consignment: Consignment;\n    cart: Cart;\n}\n\nconst StaticConsignmentItemList: FunctionComponent<StaticConsignmentItemListProps> = ({\n    cart,\n    consignment,\n}) => {\n    const lineItems = findLineItems(cart, consignment);\n\n    return (\n        <div className=\"staticConsignment-items\">\n            <strong>\n                <TranslatedString\n                    data={{ count: getLineItemsCount(lineItems) }}\n                    id=\"cart.item_count_text\"\n                />\n            </strong>\n\n            <ul>\n                {lineItems.map((item) => (\n                    <li key={item.id}>{`${item.quantity} x ${item.name}`}</li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default memo(StaticConsignmentItemList);\n","import { Cart, Consignment, PhysicalItem } from '@bigcommerce/checkout-sdk';\nimport { compact, find, isNil, map } from 'lodash';\n\nexport default function findLineItems(cart: Cart, consignment: Consignment): PhysicalItem[] {\n    return compact(\n        map(consignment.lineItemIds, (itemId) =>\n            find(\n                cart.lineItems.physicalItems,\n                (item) => item.id === itemId && isNil(item.parentId),\n            ),\n        ),\n    );\n}\n","import { LineItem } from '@bigcommerce/checkout-sdk';\nimport { reduce } from 'lodash';\n\nexport default function getLineItemsCount(lineItems: LineItem[]): number {\n    return reduce(lineItems, (total, item) => total + item.quantity, 0);\n}\n","import { Consignment } from '@bigcommerce/checkout-sdk';\nimport { every } from 'lodash';\n\nexport default function hasSelectedShippingOptions(consignments: Consignment[]): boolean {\n    if (!consignments.length) {\n        return false;\n    }\n\n    return every(\n        consignments,\n        (consignment) =>\n            consignment.selectedShippingOption &&\n            consignment.selectedShippingOption.id &&\n            // Selected option is available\n            consignment.availableShippingOptions &&\n            consignment.availableShippingOptions.filter(\n                ({ id }) => id === consignment.selectedShippingOption?.id,\n            ).length,\n    );\n}\n","import { Consignment, LineItemMap } from '@bigcommerce/checkout-sdk';\nimport { reduce } from 'lodash';\n\nexport default function hasUnassignedLineItems(\n    consignments: Consignment[],\n    lineItems: LineItemMap,\n): boolean {\n    const totalAssigned = reduce(\n        consignments,\n        (total, consignment) => total + consignment.lineItemIds.length,\n        0,\n    );\n\n    return totalAssigned < lineItems.physicalItems.filter((item) => !item.addedByPromotion).length;\n}\n","import React, { memo } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Toggle } from '../../ui/toggle';\n\ninterface ShippingOptionAdditionalDescriptionProps {\n    description: string;\n}\n\nconst ShippingOptionAdditionalDescription: React.FunctionComponent<\n    ShippingOptionAdditionalDescriptionProps\n> = ({ description }) => {\n    const CHRACTER_LIMIT = 45;\n\n    return (\n        <div className=\"shippingOption-additionalDescription--container\">\n            <Toggle openByDefault={description.length < CHRACTER_LIMIT}>\n                {({ isOpen, toggle }) => (\n                    <>\n                        <span\n                            className={`shippingOption-additionalDescription ${\n                                isOpen\n                                    ? 'shippingOption-additionalDescription--expanded'\n                                    : 'shippingOption-additionalDescription--collapsed'\n                            }`}\n                        >\n                            {description}\n                        </span>\n                        {!isOpen && (\n                            <a className=\"shippingOption-readMore\" onClick={preventDefault(toggle)}>\n                                <TranslatedString id=\"common.show_more\" />\n                            </a>\n                        )}\n                    </>\n                )}\n            </Toggle>\n        </div>\n    );\n};\n\nexport default memo(ShippingOptionAdditionalDescription);\n","import { ShippingOption } from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { ShopperCurrency } from '../../currency';\n\nimport ShippingOptionAdditionalDescription from './ShippingOptionAdditionalDescription';\nimport './StaticShippingOption.scss';\n\ninterface StaticShippingOptionProps {\n    displayAdditionalInformation?: boolean;\n    method: ShippingOption;\n}\n\nconst StaticShippingOption: React.FunctionComponent<StaticShippingOptionProps> = ({\n    displayAdditionalInformation = true,\n    method,\n}) => {\n    return (\n        <div className=\"shippingOption shippingOption--alt\">\n            {method.imageUrl && (\n                <span className=\"shippingOption-figure\">\n                    <img\n                        alt={method.description}\n                        className=\"shippingOption-img\"\n                        src={method.imageUrl}\n                    />\n                </span>\n            )}\n            <span className=\"shippingOption-desc\">\n                {method.description}\n                {method.transitTime && (\n                    <span className=\"shippingOption-transitTime\">{method.transitTime}</span>\n                )}\n                {method.additionalDescription && displayAdditionalInformation && (\n                    <ShippingOptionAdditionalDescription\n                        description={method.additionalDescription}\n                    />\n                )}\n            </span>\n            <span className=\"shippingOption-price\">\n                <ShopperCurrency amount={method.cost} />\n            </span>\n        </div>\n    );\n};\n\nexport default StaticShippingOption;\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconSuccess: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconSuccess);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconInfo: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconInfo);\n","import classNames from 'classnames';\nimport React, { FunctionComponent, ReactNode } from 'react';\n\nimport { IconError, IconInfo, IconSuccess } from '../icon';\n\nexport interface AlertProps {\n    additionalClassName?: string;\n    icon?: ReactNode;\n    testId?: string;\n    type?: AlertType;\n}\n\nexport enum AlertType {\n    Error = 'error',\n    Info = 'info',\n    Success = 'success',\n    Warning = 'warning',\n}\n\nfunction renderDefaultIcon(type?: AlertType): ReactNode {\n    switch (type) {\n        case AlertType.Error:\n        case AlertType.Warning:\n            return <IconError />;\n\n        case AlertType.Success:\n            return <IconSuccess />;\n\n        case AlertType.Info:\n        default:\n            return <IconInfo />;\n    }\n}\n\nconst Alert: FunctionComponent<AlertProps> = ({\n    additionalClassName,\n    children,\n    icon,\n    testId,\n    type,\n}) => (\n    <div\n        className={classNames(\n            'alertBox',\n            additionalClassName,\n            { 'alertBox--info': type === AlertType.Info || !type },\n            { 'alertBox--error': type === AlertType.Error },\n            { 'alertBox--success': type === AlertType.Success },\n            { 'alertBox--warning': type === AlertType.Warning },\n        )}\n        data-test={testId}\n    >\n        <div className=\"alertBox-column alertBox-icon\">{icon || renderDefaultIcon(type)}</div>\n\n        <div aria-live=\"assertive\" className=\"alertBox-column alertBox-message\" role=\"alert\">\n            {children}\n        </div>\n    </div>\n);\n\nexport default Alert;\n","import classNames from 'classnames';\nimport React, { ButtonHTMLAttributes, FunctionComponent } from 'react';\n\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n    isFullWidth?: boolean;\n    isLoading?: boolean;\n    size?: ButtonSize;\n    testId?: string;\n    variant?: ButtonVariant;\n}\n\nexport enum ButtonVariant {\n    Primary = 'primary',\n    Secondary = 'secondary',\n    Action = 'action',\n}\n\nexport enum ButtonSize {\n    Small = 'small',\n    Tiny = 'tiny',\n    Large = 'large',\n}\n\nfunction getClassName(\n    props: Pick<ButtonProps, 'className' | 'isFullWidth' | 'isLoading' | 'size' | 'variant'>,\n) {\n    const { className, isFullWidth, isLoading, size, variant } = props;\n\n    return classNames(\n        'button',\n        className,\n        { 'button--primary': variant === ButtonVariant.Primary },\n        { 'button--tertiary': variant === ButtonVariant.Secondary },\n        { 'button--action': variant === ButtonVariant.Action },\n        { 'button--small': size === ButtonSize.Small },\n        { 'button--tiny': size === ButtonSize.Tiny },\n        { 'button--large': size === ButtonSize.Large },\n        { 'button--slab': isFullWidth },\n        {\n            'optimizedCheckout-buttonPrimary':\n                variant === ButtonVariant.Primary || variant === ButtonVariant.Action,\n        },\n        { 'optimizedCheckout-buttonSecondary': variant === ButtonVariant.Secondary },\n        { 'is-loading': isLoading },\n    );\n}\n\nconst Button: FunctionComponent<ButtonProps> = ({\n    children,\n    className,\n    disabled,\n    isFullWidth,\n    isLoading,\n    size,\n    testId,\n    type,\n    variant,\n    ...rest\n}) => (\n    <button\n        {...rest}\n        className={getClassName({ className, isFullWidth, isLoading, size, variant })}\n        data-test={testId}\n        disabled={disabled || isLoading}\n        type={type || 'button'}\n    >\n        {children}\n    </button>\n);\n\nexport default Button;\n","import { Field, FieldConfig, FieldProps, getIn } from 'formik';\nimport { isDate, noop } from 'lodash';\nimport React, {\n    Component,\n    createElement,\n    FunctionComponent,\n    memo,\n    useCallback,\n    useMemo,\n} from 'react';\nimport shallowEqual from 'shallowequal';\n\nimport FormFieldContainer from './FormFieldContainer';\n\nexport interface BasicFormFieldProps extends FieldConfig {\n    additionalClassName?: string;\n    className?: string;\n    testId?: string;\n    onChange?(value: any): void;\n}\n\nconst BasicFormField: FunctionComponent<BasicFormFieldProps> = ({\n    additionalClassName,\n    className,\n    component,\n    render,\n    testId,\n    onChange,\n    ...rest\n}) => {\n    const renderInnerField = useCallback(\n        (props: FieldProps) => (\n            <InnerField\n                {...props}\n                additionalClassName={additionalClassName}\n                className={className}\n                component={component}\n                onChange={onChange}\n                render={render}\n                testId={testId}\n            />\n        ),\n        [additionalClassName, className, component, render, testId, onChange],\n    );\n\n    return <Field {...rest} render={renderInnerField} />;\n};\n\ntype InnerFieldProps = Omit<BasicFormFieldProps, keyof FieldConfig> & InnerFieldInputProps;\n\nconst InnerField: FunctionComponent<InnerFieldProps> = memo(\n    ({ additionalClassName, component, field, form, onChange, render, testId }) => {\n        const input = useMemo(\n            () => (\n                <InnerFieldInput\n                    component={component}\n                    field={field}\n                    form={form}\n                    onChange={onChange}\n                    render={render}\n                />\n            ),\n            [field, form, onChange, component, render],\n        );\n\n        return (\n            <FormFieldContainer\n                additionalClassName={additionalClassName}\n                hasError={getIn(form.errors, field.name)}\n                testId={testId}\n            >\n                {input}\n            </FormFieldContainer>\n        );\n    },\n    (\n        { form: prevForm, field: prevField, ...prevProps },\n        { form: nextForm, field: nextField, ...nextProps },\n    ) =>\n        shallowEqual(prevProps, nextProps) &&\n        shallowEqual(prevForm, nextForm) &&\n        shallowEqual(prevField, nextField),\n);\n\ntype InnerFieldInputProps = FieldProps &\n    Pick<FieldConfig, 'component' | 'render'> & {\n        onChange?(value: string): void;\n    };\n\nclass InnerFieldInput extends Component<InnerFieldInputProps> {\n    componentDidUpdate({ field: prevField }: InnerFieldInputProps) {\n        const {\n            field: { value },\n            onChange = noop,\n        } = this.props;\n        const comparableValue = isDate(value) ? value.getTime() : value;\n        const comparablePrevValue = isDate(prevField.value)\n            ? prevField.value.getTime()\n            : prevField.value;\n\n        if (comparableValue !== comparablePrevValue) {\n            onChange(value);\n        }\n    }\n\n    render() {\n        const { component = 'input', field, render } = this.props;\n\n        if (render) {\n            return (render as any)(this.props);\n        }\n\n        if (typeof component === 'string') {\n            return createElement(component as any, field);\n        }\n\n        return createElement(component as any, this.props);\n    }\n}\n\nexport default memo(BasicFormField);\n","import { FieldProps } from 'formik';\nimport { kebabCase } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode, useCallback } from 'react';\n\nimport BasicFormField from './BasicFormField';\nimport CheckboxInput from './CheckboxInput';\nimport FormFieldError from './FormFieldError';\n\nexport interface CheckboxFormFieldProps {\n    additionalClassName?: string;\n    disabled?: boolean;\n    name: string;\n    id?: string;\n    labelContent: ReactNode;\n    onChange?(isChecked: boolean): void;\n    testId?: string;\n}\n\nconst CheckboxFormField: FunctionComponent<CheckboxFormFieldProps> = ({\n    additionalClassName,\n    disabled = false,\n    labelContent,\n    onChange,\n    name,\n    id,\n    testId,\n}) => {\n    const renderField = useCallback(\n        ({ field }: FieldProps) => (\n            <>\n                <CheckboxInput\n                    {...field}\n                    checked={!!field.value}\n                    disabled={disabled}\n                    id={id || field.name}\n                    label={labelContent}\n                    testId={testId}\n                />\n\n                <FormFieldError\n                    errorId={`${id ?? name}-field-error-message`}\n                    name={name}\n                    testId={`${kebabCase(name)}-field-error-message`}\n                />\n            </>\n        ),\n        [disabled, id, labelContent, name],\n    );\n\n    return (\n        <BasicFormField\n            additionalClassName={additionalClassName}\n            name={name}\n            onChange={onChange}\n            render={renderField}\n        />\n    );\n};\n\nexport default memo(CheckboxFormField);\n","import classNames from 'classnames';\nimport React, { forwardRef, ReactNode, Ref } from 'react';\n\nimport Input, { InputProps } from './Input';\nimport Label from './Label';\n\nexport interface CheckboxInputProps extends InputProps {\n    additionalClassName?: string;\n    label: ReactNode;\n    value: string;\n    checked: boolean;\n}\n\nconst CheckboxInput = forwardRef(\n    (\n        { additionalClassName, label, id, testId, ...rest }: CheckboxInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <>\n            <Input\n                {...rest}\n                className={classNames(\n                    'form-checkbox',\n                    'optimizedCheckout-form-checkbox',\n                    additionalClassName,\n                )}\n                id={id}\n                ref={ref}\n                type=\"checkbox\"\n                testId={testId}\n            />\n            <Label htmlFor={id}>{label}</Label>\n        </>\n    ),\n);\n\nexport default CheckboxInput;\n","import classNames from 'classnames';\nimport React, { forwardRef, ReactNode, Ref } from 'react';\n\nimport Input, { InputProps } from './Input';\nimport Label from './Label';\n\nexport interface RadioInputProps extends InputProps {\n    additionalClassName?: string;\n    label: ReactNode;\n    value: string;\n    checked: boolean;\n}\n\nconst RadioInput = forwardRef(\n    (\n        { additionalClassName, label, value, checked, id, ...rest }: RadioInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <>\n            <Input\n                {...rest}\n                checked={checked}\n                className={classNames(\n                    'form-radio',\n                    'optimizedCheckout-form-radio',\n                    additionalClassName,\n                )}\n                id={id}\n                ref={ref}\n                type=\"radio\"\n                value={value}\n            />\n            <Label htmlFor={id}>{label}</Label>\n        </>\n    ),\n);\n\nexport default RadioInput;\n","import { FormFieldItem } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { isDate, noop } from 'lodash';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\nimport ReactDatePicker from 'react-datepicker';\n\nimport { withDate, WithDateProps } from '@bigcommerce/checkout/locale';\n\nimport { IconChevronDown } from '../icon';\n\nimport CheckboxInput from './CheckboxInput';\nimport DynamicFormFieldType from './DynamicFormFieldType';\nimport { InputProps } from './Input';\nimport RadioInput from './RadioInput';\nimport TextArea from './TextArea';\nimport TextInput from './TextInput';\n\nexport interface DynamicInputProps extends InputProps {\n    id: string;\n    additionalClassName?: string;\n    value?: string | string[];\n    rows?: number;\n    fieldType?: DynamicFormFieldType;\n    options?: FormFieldItem[];\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst DynamicInput: FunctionComponent<DynamicInputProps & WithDateProps> = ({\n    additionalClassName,\n    date,\n    fieldType,\n    id,\n    name,\n    onChange = noop,\n    options,\n    placeholder,\n    isFloatingLabelEnabled,\n    value,\n    ...rest\n}) => {\n    const { inputFormat } = date;\n    const handleDateChange = useCallback(\n        (dateValue, event) =>\n            onChange({\n                ...event,\n                target: {\n                    name,\n                    value: dateValue,\n                },\n            }),\n        [onChange, name],\n    );\n\n    switch (fieldType) {\n        case DynamicFormFieldType.dropdown:\n            return (\n                <>\n                    <div\n                        className={classNames(\n                            { 'dropdown-chevron': !isFloatingLabelEnabled },\n                            { 'floating-select-chevron': isFloatingLabelEnabled },\n                        )}>\n                        <IconChevronDown />\n                    </div>\n                    <select\n                        {...(rest as any)}\n                        className={classNames(\n                            { 'floating-select': isFloatingLabelEnabled },\n                            'form-select optimizedCheckout-form-select',\n                        )}\n                        data-test={`${id}-select`}\n                        id={id}\n                        name={name}\n                        onChange={onChange}\n                        value={value === null ? '' : value}\n                    >\n                        {placeholder && <option value=\"\">{placeholder}</option>}\n                        {options &&\n                            options.map(({ label, value: optionValue }) => (\n                                <option key={optionValue} value={optionValue}>\n                                    {label}\n                                </option>\n                            ))}\n                    </select>\n                </>\n            );\n\n        case DynamicFormFieldType.radio:\n            if (!options || !options.length) {\n                return null;\n            }\n\n            return (\n                <>\n                    {options.map(({ label, value: optionValue }) => (\n                        <RadioInput\n                            {...rest}\n                            checked={optionValue === value}\n                            id={`${id}-${optionValue}`}\n                            key={optionValue}\n                            label={label}\n                            name={name}\n                            onChange={onChange}\n                            testId={`${id}-${optionValue}-radio`}\n                            value={optionValue}\n                        />\n                    ))}\n                </>\n            );\n\n        case DynamicFormFieldType.checkbox:\n            if (!options || !options.length) {\n                return null;\n            }\n\n            return (\n                <>\n                    {options.map(({ label, value: optionValue }) => (\n                        <CheckboxInput\n                            {...rest}\n                            checked={Array.isArray(value) ? value.includes(optionValue) : false}\n                            id={`${id}-${optionValue}`}\n                            key={optionValue}\n                            label={label}\n                            name={name}\n                            onChange={onChange}\n                            testId={`${id}-${optionValue}-checkbox`}\n                            value={optionValue}\n                        />\n                    ))}\n                </>\n            );\n\n        case DynamicFormFieldType.date:\n            return (\n                <ReactDatePicker\n                    {...(rest as any)}\n                    autoComplete=\"off\"\n                    // FIXME: we can avoid this by simply using onChangeRaw, but it's not being triggered properly\n                    // https://github.com/Hacker0x01/react-datepicker/issues/1357\n                    // onChangeRaw={ rest.onChange }\n                    calendarClassName=\"optimizedCheckout-contentPrimary\"\n                    className={classNames('form-input optimizedCheckout-form-input', {\n                        'floating-input': isFloatingLabelEnabled,\n                    })}\n                    dateFormat={inputFormat}\n                    maxDate={rest.max ? new Date(`${rest.max}T00:00:00Z`) : undefined}\n                    minDate={rest.min ? new Date(`${rest.min}T00:00:00Z`) : undefined}\n                    name={name}\n                    onChange={handleDateChange}\n                    placeholderText={inputFormat.toUpperCase()}\n                    popperClassName=\"optimizedCheckout-contentPrimary\"\n                    selected={isDate(value) ? value : undefined}\n                />\n            );\n\n        case DynamicFormFieldType.multiline:\n            return (\n                <TextArea\n                    {...(rest as any)}\n                    id={id}\n                    isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    name={name}\n                    onChange={onChange}\n                    testId={`${id}-text`}\n                    type={fieldType}\n                    value={value}\n                />\n            );\n\n        default:\n            return (\n                <TextInput\n                    {...rest}\n                    id={id}\n                    isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    name={name}\n                    onChange={onChange}\n                    placeholder={placeholder}\n                    testId={`${id}-${\n                        fieldType === DynamicFormFieldType.password ? 'password' : 'text'\n                    }`}\n                    type={fieldType}\n                    value={value}\n                />\n            );\n    }\n};\n\nexport default memo(withDate(DynamicInput));\n","import React, { FunctionComponent, memo, MouseEvent, useCallback } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './MultiCheckboxControl.scss';\n\nexport interface MultiCheckboxControlProps {\n    testId?: string;\n    onSelectedAll(): void;\n    onSelectedNone(): void;\n}\n\nconst MultiCheckboxControl: FunctionComponent<MultiCheckboxControlProps> = ({\n    testId,\n    onSelectedAll,\n    onSelectedNone,\n}) => {\n    const handleSelectAllClick = useCallback(\n        (event: MouseEvent) => {\n            event.preventDefault();\n            onSelectedAll();\n        },\n        [onSelectedAll],\n    );\n\n    const handleSelectNoneClick = useCallback(\n        (event: MouseEvent) => {\n            event.preventDefault();\n            onSelectedNone();\n        },\n        [onSelectedNone],\n    );\n\n    return (\n        <ul className=\"multiCheckbox--controls\">\n            <li className=\"multiCheckbox--control\">\n                <TranslatedString id=\"address.select\" />\n            </li>\n\n            <li className=\"multiCheckbox--control\">\n                <a\n                    data-test={`${testId}Checkbox-all-button`}\n                    href=\"#\"\n                    onClick={handleSelectAllClick}\n                >\n                    <TranslatedString id=\"address.select_all\" />\n                </a>\n            </li>\n\n            <li className=\"multiCheckbox--control\">\n                <a\n                    data-test={`${testId}Checkbox-none-button`}\n                    href=\"#\"\n                    onClick={handleSelectNoneClick}\n                >\n                    <TranslatedString id=\"address.select_none\" />\n                </a>\n            </li>\n        </ul>\n    );\n};\n\nexport default memo(MultiCheckboxControl);\n","import { FormFieldItem } from '@bigcommerce/checkout-sdk';\nimport { FieldArray, FieldArrayRenderProps, getIn } from 'formik';\nimport { difference, kebabCase, noop, pick } from 'lodash';\nimport React, { ChangeEvent, FunctionComponent, memo, ReactNode, useCallback } from 'react';\n\nimport DynamicFormFieldType from './DynamicFormFieldType';\nimport DynamicInput from './DynamicInput';\nimport FormFieldContainer from './FormFieldContainer';\nimport FormFieldError from './FormFieldError';\nimport MultiCheckboxControl from './MultiCheckboxControl';\n\nexport interface CheckboxGroupFormFieldProps {\n    id: string;\n    label: ReactNode;\n    name: string;\n    options: FormFieldItem[];\n    onChange?(values: string[]): void;\n}\n\ntype MultiCheckboxFormFieldProps = CheckboxGroupFormFieldProps &\n    Pick<FieldArrayRenderProps, 'push' | 'remove' | 'pop' | 'form'>;\n\nconst MultiCheckboxFormField: FunctionComponent<MultiCheckboxFormFieldProps> = ({\n    form: { values, errors },\n    id,\n    label,\n    name,\n    onChange = noop,\n    options,\n    push,\n    remove,\n}) => {\n    const handleSelectAll = useCallback(() => {\n        const checkedValues: string[] = getIn(values, name) || [];\n\n        difference(\n            options.map(({ value }) => value),\n            checkedValues,\n        ).forEach((val) => push(val));\n\n        onChange(getIn(values, name));\n    }, [name, onChange, options, push, values]);\n\n    const handleSelectNone = useCallback(() => {\n        const checkedValues: string[] = getIn(values, name) || [];\n\n        checkedValues.forEach(() => remove(0));\n\n        onChange(getIn(values, name));\n    }, [name, onChange, remove, values]);\n\n    const handleInputChange = useCallback(\n        (event: ChangeEvent<HTMLInputElement>) => {\n            const checkedValues: string[] = getIn(values, name) || [];\n            const { value, checked } = event.target;\n\n            if (checked) {\n                push(value);\n            } else {\n                remove(checkedValues.indexOf(value));\n            }\n\n            onChange(getIn(values, name));\n        },\n        [name, onChange, push, remove, values],\n    );\n\n    return (\n        <FormFieldContainer hasError={getIn(errors, name) && getIn(errors, name).length}>\n            {label}\n\n            {options.length > 1 && (\n                <MultiCheckboxControl\n                    onSelectedAll={handleSelectAll}\n                    onSelectedNone={handleSelectNone}\n                    testId={id}\n                />\n            )}\n\n            <DynamicInput\n                fieldType={DynamicFormFieldType.checkbox}\n                id={id}\n                name={name}\n                onChange={handleInputChange}\n                options={options}\n                value={getIn(values, name) || []}\n            />\n\n            <FormFieldError\n                errorId={`${id ?? name}-field-error-message`}\n                name={name}\n                testId={`${kebabCase(name)}-field-error-message`}\n            />\n        </FormFieldContainer>\n    );\n};\n\nconst CheckboxGroupFormField: FunctionComponent<CheckboxGroupFormFieldProps> = ({\n    id,\n    label,\n    name,\n    onChange,\n    options,\n}) => {\n    const renderField = useCallback(\n        (renderProps: FieldArrayRenderProps) => (\n            <MultiCheckboxFormField\n                id={id}\n                label={label}\n                name={name}\n                onChange={onChange}\n                options={options}\n                {...pick(renderProps, ['form', 'pop', 'push', 'remove'])}\n            />\n        ),\n        [id, label, name, onChange, options],\n    );\n\n    return <FieldArray name={name} render={renderField} />;\n};\n\nexport default memo(CheckboxGroupFormField);\n","import { FormField as FormFieldType } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { FieldProps } from 'formik';\nimport { includes } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport CheckboxGroupFormField from './CheckboxGroupFormField';\nimport DynamicFormFieldType from './DynamicFormFieldType';\nimport DynamicInput from './DynamicInput';\nimport FormField from './FormField';\nimport Label from './Label';\n\nexport interface DynamicFormFieldOption {\n    code: string;\n    name: string;\n}\n\nexport interface DynamicFormFieldProps {\n    field: FormFieldType;\n    inputId?: string;\n    extraClass?: string;\n    autocomplete?: string;\n    parentFieldName?: string;\n    placeholder?: string;\n    label?: ReactNode;\n    isFloatingLabelEnabled?: boolean;\n    onChange?(value: string | string[]): void;\n}\n\nconst DynamicFormField: FunctionComponent<DynamicFormFieldProps> = ({\n    field: {\n        fieldType,\n        type,\n        secret,\n        name,\n        label: fieldLabel,\n        required,\n        options,\n        max,\n        min,\n        maxLength,\n    },\n    parentFieldName,\n    onChange,\n    placeholder,\n    inputId,\n    autocomplete,\n    label,\n    extraClass,\n    isFloatingLabelEnabled,\n}) => {\n    const fieldInputId = inputId || name;\n    const fieldName = parentFieldName ? `${parentFieldName}.${name}` : name;\n    const isFloatingLabelSupportedFieldType = Boolean(\n        isFloatingLabelEnabled &&\n            (includes(['text', 'password', 'dropdown', 'date', 'multiline'], fieldType) ||\n                !fieldType),\n    );\n    const labelComponent = useMemo(\n        () => (\n            <Label\n                htmlFor={fieldInputId}\n                id={`${fieldInputId}-label`}\n                isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n            >\n                {label || fieldLabel}\n                {!required && (\n                    <>\n                        {' '}\n                        <small className=\"optimizedCheckout-contentSecondary\">\n                            <TranslatedString id=\"common.optional_text\" />\n                        </small>\n                    </>\n                )}\n            </Label>\n        ),\n        [fieldInputId, fieldLabel, required, isFloatingLabelSupportedFieldType, label],\n    );\n\n    const dynamicFormFieldType = useMemo((): DynamicFormFieldType => {\n        if (fieldType === 'text') {\n            if (type === 'integer') {\n                return DynamicFormFieldType.number;\n            }\n\n            if (includes(name, 'phone') || includes(name, 'tel')) {\n                return DynamicFormFieldType.telephone;\n            }\n\n            return secret ? DynamicFormFieldType.password : DynamicFormFieldType.text;\n        }\n\n        return fieldType as DynamicFormFieldType;\n    }, [fieldType, type, secret, name]);\n\n    const renderInput = useCallback(\n        ({ field }: FieldProps<string>) => (\n            <DynamicInput\n                {...field}\n                aria-labelledby={`${fieldInputId}-label ${fieldInputId}-field-error-message`}\n                autoComplete={autocomplete}\n                fieldType={dynamicFormFieldType}\n                id={fieldInputId}\n                isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n                max={max}\n                maxLength={maxLength || undefined}\n                min={min}\n                options={options && options.items}\n                placeholder={placeholder || (options && options.helperLabel)}\n                rows={options && (options as any).rows}\n            />\n        ),\n        [\n            fieldInputId,\n            max,\n            maxLength,\n            min,\n            options,\n            placeholder,\n            dynamicFormFieldType,\n            autocomplete,\n        ],\n    );\n\n    return (\n        <div\n            className={classNames(\n                'dynamic-form-field',\n                { 'floating-form-field': isFloatingLabelSupportedFieldType },\n                extraClass,\n            )}\n        >\n            {fieldType === DynamicFormFieldType.checkbox ? (\n                <CheckboxGroupFormField\n                    id={fieldInputId}\n                    label={labelComponent}\n                    name={fieldName}\n                    onChange={onChange}\n                    options={(options && options.items) || []}\n                />\n            ) : (\n                <FormField\n                    id={fieldInputId}\n                    input={renderInput}\n                    isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n                    label={labelComponent}\n                    name={fieldName}\n                    onChange={onChange}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default memo(DynamicFormField);\n","enum DynamicFormFieldType {\n    telephone = 'tel',\n    dropdown = 'dropdown',\n    number = 'number',\n    password = 'password',\n    checkbox = 'checkbox',\n    multiline = 'multiline',\n    date = 'date',\n    radio = 'radio',\n    text = 'text',\n}\n\nexport default DynamicFormFieldType;\n","import classNames from 'classnames';\nimport React, { FieldsetHTMLAttributes, forwardRef, ReactNode, Ref } from 'react';\n\nexport interface FieldsetProps extends FieldsetHTMLAttributes<HTMLFieldSetElement> {\n    additionalClassName?: string;\n    testId?: string;\n    legend?: ReactNode;\n}\n\nconst Fieldset = forwardRef(\n    (\n        { additionalClassName, children, className, legend, testId, ...rest }: FieldsetProps,\n        ref: Ref<HTMLFieldSetElement>,\n    ) => (\n        <fieldset\n            {...rest}\n            className={className || classNames('form-fieldset', additionalClassName)}\n            data-test={testId}\n            ref={ref}\n        >\n            {legend}\n\n            <div className=\"form-body\">{children}</div>\n        </fieldset>\n    ),\n);\n\nexport default Fieldset;\n","import { memoizeOne } from '@bigcommerce/memoize';\nimport { Form as FormikForm, FormikFormProps } from 'formik';\nimport { values } from 'lodash';\nimport React, { createRef, FunctionComponent, memo, useCallback, useRef } from 'react';\n\nimport { FormContextType, FormProvider } from '@bigcommerce/checkout/ui';\n\nexport interface FormProps extends FormikFormProps {\n    testId?: string;\n}\n\nconst Form: FunctionComponent<FormProps> = ({ className, testId, ...rest }) => {\n    const ref = useRef({ containerRef: createRef<HTMLDivElement>() });\n\n    const focusOnError = () => {\n        const { current } = ref.current.containerRef;\n\n        if (!current) {\n            return;\n        }\n\n        const errorInputSelectors = [\n            '.form-field--error input',\n            '.form-field--error textarea',\n            '.form-field--error select',\n        ];\n\n        const erroredFormField = current.querySelector<HTMLElement>(errorInputSelectors.join(', '));\n\n        if (erroredFormField) {\n            erroredFormField.focus({ preventScroll: true });\n\n            try {\n                erroredFormField.offsetParent?.scrollIntoView({\n                    behavior: 'smooth',\n                    block: 'center',\n                    inline: 'center',\n                });\n            } catch {\n                erroredFormField.offsetParent?.scrollIntoView();\n            }\n        }\n    };\n\n    const handleSubmitCapture = useCallback(\n        memoizeOne((setSubmitted: FormContextType['setSubmitted']) => {\n            return () => {\n                setSubmitted(true);\n\n                // use timeout to allow Formik validation to happen\n                setTimeout(() => focusOnError());\n            };\n        }),\n        [focusOnError],\n    );\n\n    const renderContent = useCallback(\n        memoizeOne(({ setSubmitted }: FormContextType) => {\n            return (\n                <div ref={ref.current.containerRef}>\n                    <FormikForm\n                        {...rest}\n                        className={className}\n                        data-test={testId}\n                        noValidate\n                        onSubmitCapture={handleSubmitCapture(setSubmitted)}\n                    />\n                </div>\n            );\n        }),\n        [className, handleSubmitCapture, testId, ...values(rest)],\n    );\n\n    return <FormProvider>{renderContent}</FormProvider>;\n};\n\nexport default memo(Form);\n","import { FieldProps } from 'formik';\nimport { kebabCase } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode, useCallback } from 'react';\n\nimport BasicFormField from './BasicFormField';\nimport FormFieldError from './FormFieldError';\nimport Label from './Label';\n\nexport interface FormFieldProps {\n    additionalClassName?: string;\n    name: string;\n    label?: ReactNode | ((fieldName: string) => ReactNode);\n    labelContent?: ReactNode;\n    footer?: ReactNode;\n    id?: string;\n    isFloatingLabelEnabled?: boolean;\n    input(field: FieldProps<string>): ReactNode;\n    onChange?(value: string): void;\n}\n\nconst FormField: FunctionComponent<FormFieldProps> = ({\n    additionalClassName,\n    labelContent,\n    label,\n    onChange,\n    footer,\n    input,\n    name,\n    id,\n    isFloatingLabelEnabled,\n}) => {\n    const renderField = useCallback(\n        (props) => (\n            <>\n                {isFloatingLabelEnabled && input(props)}\n\n                {label && (typeof label === 'function' ? label(name) : label)}\n                {labelContent && !label && (\n                    <Label\n                        htmlFor={name}\n                        id={`${id ?? name}-label`}\n                        isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    >\n                        {labelContent}\n                    </Label>\n                )}\n\n                {!isFloatingLabelEnabled && input(props)}\n\n                <FormFieldError\n                    errorId={`${id ?? name}-field-error-message`}\n                    name={name}\n                    testId={`${kebabCase(name)}-field-error-message`}\n                />\n\n                {footer}\n            </>\n        ),\n        [label, labelContent, id, input, name, footer, isFloatingLabelEnabled],\n    );\n\n    return (\n        <BasicFormField\n            additionalClassName={additionalClassName}\n            name={name}\n            onChange={onChange}\n            render={renderField}\n        />\n    );\n};\n\nexport default memo(FormField);\n","import classNames from 'classnames';\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { FormContext } from '@bigcommerce/checkout/ui';\n\nexport interface FormFieldContainerProps {\n    additionalClassName?: string;\n    children: ReactNode;\n    className?: string;\n    hasError?: boolean;\n    testId?: string;\n}\n\nconst FormFieldContainer: FunctionComponent<FormFieldContainerProps> = ({\n    additionalClassName,\n    children,\n    className,\n    hasError,\n    testId,\n}) => (\n    <FormContext.Consumer>\n        {({ isSubmitted }) => (\n            <div\n                className={\n                    className ||\n                    classNames('form-field', additionalClassName, {\n                        'form-field--error': hasError && isSubmitted,\n                    })\n                }\n                data-test={testId}\n            >\n                {children}\n            </div>\n        )}\n    </FormContext.Consumer>\n);\n\nexport default memo(FormFieldContainer);\n","import { ErrorMessage } from 'formik';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\n\nimport { FormContext } from '@bigcommerce/checkout/ui';\n\nexport interface FormFieldErrorProps {\n    name: string;\n    testId?: string;\n    errorId: string;\n}\n\nconst FormFieldError: FunctionComponent<FormFieldErrorProps> = ({ name, testId, errorId }) => {\n    const renderMessage = useCallback(\n        (message: string) => (\n            <ul className=\"form-field-errors\" data-test={testId}>\n                <li className=\"form-field-error\">\n                    <label\n                        aria-live=\"polite\"\n                        className=\"form-inlineMessage\"\n                        htmlFor={name}\n                        id={errorId}\n                        role=\"alert\"\n                    >\n                        {message}\n                    </label>\n                </li>\n            </ul>\n        ),\n        [errorId, name, testId],\n    );\n\n    return (\n        <FormContext.Consumer>\n            {({ isSubmitted }) =>\n                isSubmitted && <ErrorMessage name={name} render={renderMessage} />\n            }\n        </FormContext.Consumer>\n    );\n};\n\nexport default memo(FormFieldError);\n","import classNames from 'classnames';\nimport { includes } from 'lodash';\nimport React, { forwardRef, InputHTMLAttributes, Ref } from 'react';\n\nexport interface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n    testId?: string;\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst Input = forwardRef(\n    (\n        { className, testId, placeholder, name, isFloatingLabelEnabled, ...rest }: InputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => {\n        const floatingLabelDisabledFieldNames = ['orderComment', 'redeemableCode'];\n\n        return (\n            <input\n                {...{\n                    ...rest,\n                    className: classNames(className, {\n                        'floating-input':\n                            isFloatingLabelEnabled && !includes(floatingLabelDisabledFieldNames, name),\n                    }),\n                    name,\n                }}\n                data-test={testId}\n                placeholder={isFloatingLabelEnabled ? ' ' : placeholder}\n                ref={ref}\n            />\n        );\n    },\n);\n\nexport default Input;\n","import classNames from 'classnames';\nimport React, { FunctionComponent, LabelHTMLAttributes } from 'react';\n\nexport interface LabelProps extends LabelHTMLAttributes<HTMLLabelElement> {\n    testId?: string;\n    hidden?: boolean;\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst Label: FunctionComponent<LabelProps> = ({\n    children,\n    className,\n    hidden,\n    testId,\n    isFloatingLabelEnabled,\n    ...rest\n}) => (\n    <label\n        { ...rest }\n        className={ classNames(\n            { 'floating-label': isFloatingLabelEnabled },\n            className || 'form-label',\n            { 'is-srOnly': hidden },\n            'optimizedCheckout-form-label'\n        ) }\n        data-test={ testId }\n    >\n        { children }\n    </label>\n);\n\nexport default Label;\n","import classNames from 'classnames';\nimport React, { FunctionComponent } from 'react';\n\nexport interface LegendProps extends React.HTMLAttributes<HTMLLegendElement> {\n    hidden?: boolean;\n    testId?: string;\n}\n\nconst Legend: FunctionComponent<LegendProps> = ({\n    children,\n    className,\n    hidden,\n    testId,\n    ...rest\n}) => (\n    <legend\n        {...rest}\n        className={classNames(\n            className || 'form-legend',\n            { 'is-srOnly': hidden },\n            { 'optimizedCheckout-headingSecondary': !hidden },\n        )}\n        data-test={testId}\n    >\n        {children}\n    </legend>\n);\n\nexport default Legend;\n","import classNames from 'classnames';\nimport React, { forwardRef, Ref, TextareaHTMLAttributes } from 'react';\n\nexport interface TextAreaProps extends TextareaHTMLAttributes<HTMLTextAreaElement> {\n    additionalClassName?: string;\n    testId?: string;\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst TextArea = forwardRef(\n    (\n        { additionalClassName, testId, className, isFloatingLabelEnabled, ...rest }: TextAreaProps,\n        ref: Ref<HTMLTextAreaElement>,\n    ) => {\n        return (\n            <textarea\n                {...rest}\n                className={\n                    className ||\n                    classNames(\n                        { 'floating-textarea': isFloatingLabelEnabled },\n                        'form-input',\n                        'optimizedCheckout-form-input',\n                        additionalClassName,\n                    )\n                }\n                data-test={testId}\n                ref={ref}\n            />\n        );\n    },\n);\n\nexport default TextArea;\n","import classNames from 'classnames';\nimport React, { forwardRef, Ref } from 'react';\n\nimport Input, { InputProps } from './Input';\n\nexport interface TextInputProps extends InputProps {\n    additionalClassName?: string;\n    appearFocused?: boolean;\n    type?: 'text' | 'password' | 'tel' | 'email' | 'number';\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst TextInput = forwardRef(\n    (\n        {\n            additionalClassName,\n            isFloatingLabelEnabled,\n            appearFocused,\n            type = 'text',\n            ...rest\n        }: TextInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <Input\n            {...rest}\n            className={classNames(\n                'form-input',\n                'optimizedCheckout-form-input',\n                { 'form-input--focus': appearFocused },\n                { 'optimizedCheckout-form-input--focus': appearFocused },\n                additionalClassName,\n            )}\n            isFloatingLabelEnabled={isFloatingLabelEnabled}\n            ref={ref}\n            type={type}\n        />\n    ),\n);\n\nexport default TextInput;\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconBolt: FunctionComponent = () => (\n    <svg\n        aria-labelledby=\"iconCardBoltTitle\"\n        data-test=\"bolt-icon\"\n        height=\"12\"\n        role=\"img\"\n        viewBox=\"0 0 12 12\"\n        width=\"12\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <title id=\"iconCardBoltTitle\">Bolt</title>\n        <path d=\"M0 7.502h7.5v4.5L12 4.502H4.5V0z\" fill=\"#FFFFFF\" id=\"mark\" />\n    </svg>\n);\n\nexport default withIconContainer(IconBolt);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconChevronDown: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconChevronDown);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconClose: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconClose);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconError: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconError);\n","import classNames from 'classnames';\nimport React, { ComponentType, memo } from 'react';\n\nexport enum IconSize {\n    Regular = 'regular',\n    Small = 'small',\n    Medium = 'medium',\n    Large = 'large',\n}\n\nexport interface IconProps {\n    additionalClassName?: string;\n    size?: IconSize;\n    testId?: string;\n}\n\nexport default function withIconContainer<TProps extends Record<string, any>>(\n    OriginalComponent: ComponentType<TProps>,\n): ComponentType<TProps & IconProps> {\n    return memo(({ additionalClassName, size, testId, ...rest }) => (\n        <div\n            className={classNames(\n                'icon',\n                additionalClassName,\n                size === IconSize.Small ? 'icon--small' : null,\n                size === IconSize.Large ? 'icon--large' : null,\n                size === IconSize.Medium ? 'icon--medium' : null,\n            )}\n            data-test={testId}\n        >\n            <OriginalComponent {...(rest as TProps)} />\n        </div>\n    ));\n}\n","import React, { FunctionComponent, ReactNode, Suspense } from 'react';\n\nimport { ErrorBoundary } from '@bigcommerce/checkout/error-handling-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './LazyContainer.scss';\nimport LoadingSpinner from './LoadingSpinner';\n\nexport interface LazyContainerProps {\n    children: ReactNode;\n    loadingSkeleton?: ReactNode;\n}\n\nconst filterError = (error: Error) => error.name === 'ChunkLoadError';\n\nconst LazyContainer: FunctionComponent<LazyContainerProps> = ({ loadingSkeleton, children }) => (\n    <ErrorBoundary\n        fallback={\n            <div className=\"lazyContainer-error\">\n                <TranslatedString id=\"common.unstable_network_error\" />\n            </div>\n        }\n        filter={filterError}\n    >\n        <Suspense fallback={loadingSkeleton || <LoadingSpinner isLoading />}>{children}</Suspense>\n    </ErrorBoundary>\n);\n\nexport default LazyContainer;\n","import React, { FunctionComponent } from 'react';\n\nimport LoadingSpinner from './LoadingSpinner';\n\nexport interface LoadingOverlayProps {\n    isLoading: boolean;\n    hideContentWhenLoading?: boolean;\n    unmountContentWhenLoading?: boolean;\n}\n\nconst LoadingOverlay: FunctionComponent<LoadingOverlayProps> = ({\n    children,\n    hideContentWhenLoading,\n    unmountContentWhenLoading,\n    isLoading,\n}) => {\n    if (hideContentWhenLoading || unmountContentWhenLoading) {\n        return (\n            <>\n                <LoadingSpinner isLoading={isLoading} />\n                {unmountContentWhenLoading && isLoading ? null : (\n                    <div\n                        style={{\n                            display: hideContentWhenLoading && isLoading ? 'none' : undefined,\n                        }}\n                    >\n                        {children}\n                    </div>\n                )}\n            </>\n        );\n    }\n\n    return (\n        <div className=\"loadingOverlay-container\">\n            {children}\n            {isLoading && <div className=\"loadingOverlay optimizedCheckout-overlay\" />}\n        </div>\n    );\n};\n\nexport default LoadingOverlay;\n","import React, { FunctionComponent, memo } from 'react';\n\nexport interface LoadingSpinnerProps {\n    isLoading: boolean;\n}\n\nconst LoadingSpinner: FunctionComponent<LoadingSpinnerProps> = ({ isLoading }) => {\n    if (!isLoading) {\n        return null;\n    }\n\n    return (\n        <div className=\"loadingSpinner loadingOverlay-container\" style={{ height: 100 }}>\n            <div className=\"loadingOverlay optimizedCheckout-overlay\" />\n        </div>\n    );\n};\n\nexport default memo(LoadingSpinner);\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, KeyboardEvent, MouseEvent, ReactNode, useCallback } from 'react';\nimport ReactModal from 'react-modal';\nimport { Omit } from 'utility-types';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\n\nimport { IconClose } from '../icon';\n\nexport type ModalProps = Omit<\n    ReactModal.Props,\n    'bodyOpenClassName' | 'className' | 'closeTimeoutMS' | 'overlayClassName'\n> & {\n    children: ReactNode;\n    closeButtonLabel?: string | ReactNode;\n    footer?: ReactNode;\n    header?: ReactNode;\n    additionalHeaderClassName?: string;\n    additionalBodyClassName?: string;\n    additionalModalClassName?: string;\n    shouldShowCloseButton?: boolean;\n};\n\nconst Modal: FunctionComponent<ModalProps> = ({\n    children,\n    closeButtonLabel = 'Close',\n    footer,\n    header,\n    additionalHeaderClassName,\n    additionalBodyClassName,\n    additionalModalClassName,\n    onRequestClose = noop,\n    shouldShowCloseButton = false,\n    ...rest\n}) => {\n    const handleClose = useCallback(\n        (event: MouseEvent | KeyboardEvent) => {\n            onRequestClose(event);\n        },\n        [onRequestClose],\n    );\n\n    return (\n        <ReactModal\n            {...rest}\n            ariaHideApp={process.env.NODE_ENV !== 'test'}\n            bodyOpenClassName=\"has-activeModal\"\n            className={{\n                base: classNames(\n                    'modal optimizedCheckout-contentPrimary',\n                    additionalModalClassName,\n                ),\n                afterOpen: 'modal--afterOpen',\n                beforeClose: 'modal--beforeClose',\n            }}\n            closeTimeoutMS={200}\n            onRequestClose={onRequestClose}\n            overlayClassName={{\n                base: 'modalOverlay',\n                afterOpen: 'modalOverlay--afterOpen',\n                beforeClose: 'modalOverlay--beforeClose',\n            }}\n            shouldCloseOnEsc={true}\n            shouldCloseOnOverlayClick={false}\n        >\n            <div className={classNames('modal-header', additionalHeaderClassName)}>\n                {header}\n\n                {shouldShowCloseButton && (\n                     \n                    <a\n                        className=\"modal-close\"\n                        data-test=\"modal-close-button\"\n                        href=\"#\"\n                        onClick={preventDefault(handleClose)}\n                    >\n                        {closeButtonLabel && <span className=\"is-srOnly\">{closeButtonLabel}</span>}\n\n                        <IconClose />\n                    </a>\n                )}\n            </div>\n\n            <div\n                className={classNames('modal-body', additionalBodyClassName)}\n                data-test=\"modal-body\"\n            >\n                {children}\n            </div>\n\n            {Boolean(footer) && (\n                <div className=\"modal-footer\" data-test=\"modal-footer\">\n                    {footer}\n                </div>\n            )}\n        </ReactModal>\n    );\n};\n\nexport default Modal;\n","import classNames from 'classnames';\nimport React, { FunctionComponent } from 'react';\n\ninterface ModalHeaderProps {\n    children: React.ReactNode;\n    additionalClassName?: string;\n}\n\nconst ModalHeader: FunctionComponent<ModalHeaderProps> = ({ children, additionalClassName }) => (\n    <h2\n        className={classNames(\n            'modal-header-title optimizedCheckout-headingSecondary',\n            additionalClassName,\n        )}\n        data-test=\"modal-heading\"\n    >\n        {children}\n    </h2>\n);\n\nexport default ModalHeader;\n","import React, { FunctionComponent, memo } from 'react';\nimport Media, { MediaQueryObject, MultiQueryProps } from 'react-media';\n\nimport { MOBILE_MAX_WIDTH } from './breakpoints';\n\nconst queries = {\n    print: 'print',\n    mobile: `screen and (max-width: ${MOBILE_MAX_WIDTH}px)`,\n};\n\nconst ViewPicker: FunctionComponent<Pick<MultiQueryProps<MediaQueryObject>, 'children'>> = ({\n    children,\n}) => {\n    return <Media queries={queries}>{children}</Media>;\n};\n\nexport default memo(ViewPicker);\n","import React, { FunctionComponent, memo } from 'react';\n\nimport ViewPicker from './ViewPicker';\n\nconst MobileView: FunctionComponent<{ children(matched: boolean): React.ReactNode }> = ({\n    children,\n}) => {\n    return (\n        <ViewPicker>\n            {(matches: { mobile: boolean }) => {\n                return children(matches.mobile);\n            }}\n        </ViewPicker>\n    );\n};\n\nexport default memo(MobileView);\n","// These values have to match with screensizes.scss\nexport const MOBILE_MAX_WIDTH = 968;\nexport const SMALL_SCREEN_MAX_WIDTH = 551;\n","import { Component, ReactNode } from 'react';\n\nexport interface ToggleProps {\n    openByDefault?: boolean;\n    children(props: any): ReactNode;\n}\n\nexport interface ToggleState {\n    isOpen: boolean;\n}\n\nexport default class Toggle extends Component<ToggleProps, ToggleState> {\n    constructor(props: ToggleProps) {\n        super(props);\n\n        this.state = { isOpen: !!props.openByDefault };\n    }\n\n    render(): ReactNode {\n        const { children } = this.props;\n        const { isOpen } = this.state;\n\n        return children({\n            isOpen,\n            toggle: this.toggle,\n        });\n    }\n\n    private toggle: (event: Event) => void = (event) => {\n        const { isOpen } = this.state;\n\n        event.preventDefault();\n\n        this.setState({ isOpen: !isOpen });\n    };\n}\n","import { kebabCase } from 'lodash';\n\nexport default function getAppliedStyles(\n    element: HTMLElement,\n    properties: string[],\n): { [key: string]: string } {\n    const declaration = window.getComputedStyle(element);\n\n    return properties.reduce(\n        (result, propertyName) => ({\n            ...result,\n            [propertyName]: declaration.getPropertyValue(kebabCase(propertyName)),\n        }),\n        {},\n    );\n}\n","export default function parseAnchor(text: string): string[] {\n    const div = document.createElement('div');\n\n    div.innerHTML = text;\n\n    const anchor = div.querySelector('a');\n\n    if (!anchor) {\n        return [];\n    }\n\n    const anchorSiblings = div.innerHTML.split(anchor.outerHTML);\n\n    return [anchorSiblings[0], anchor.text, anchorSiblings[1]];\n}\n","import { SyntheticEvent } from 'react';\n\nexport default function preventDefault<\n    TFunc extends (event: TEvent, ...args: any[]) => any,\n    TEvent extends SyntheticEvent,\n>(fn?: TFunc): (event: TEvent) => void {\n    return (event) => {\n        event.preventDefault();\n\n        if (fn) {\n            fn(event);\n        }\n    };\n}\n","import React, { ReactNode } from 'react';\n\nimport ErrorLogger from './ErrorLogger';\n\nexport interface ErrorBoundaryProps {\n    children: ReactNode;\n    fallback?: ReactNode;\n    logger?: ErrorLogger;\n    filter?(error: Error): boolean;\n}\n\ninterface ErrorBoundaryState {\n    error?: Error;\n}\n\nclass ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n    static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n        return { error };\n    }\n\n    // eslint-disable-next-line @typescript-eslint/member-ordering\n    state: ErrorBoundaryState = {};\n\n    componentDidCatch(error: Error): void {\n        const { filter = () => true, logger } = this.props;\n\n        if (!filter(error)) {\n            throw error;\n        }\n\n        if (logger) {\n            logger.log(error);\n        }\n    }\n\n    render(): ReactNode {\n        const { children, fallback, filter = () => true } = this.props;\n\n        const { error } = this.state;\n\n        if (error && filter(error)) {\n            return fallback || null;\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorBoundary;\n","import { isEmpty, pickBy } from 'lodash';\nimport React, { ComponentType, Context, FunctionComponent, memo, useContext } from 'react';\n\nimport InjectHoc from './InjectHoc';\n\nexport interface InjectHocOptions<TInjectedProps> {\n    displayNamePrefix?: string;\n    pickProps?(value: TInjectedProps[keyof TInjectedProps], key: keyof TInjectedProps): boolean;\n}\n\nexport default function createInjectHoc<\n    TInjectedProps extends object | undefined,\n    TPickedProps extends Partial<TInjectedProps> = TInjectedProps,\n>(\n    ContextComponent: Context<TInjectedProps>,\n    options?: InjectHocOptions<TInjectedProps>,\n): InjectHoc<NonNullable<TPickedProps>> {\n    return <TProps extends TPickedProps>(OriginalComponent: ComponentType<TProps>) => {\n        const { displayNamePrefix = '', pickProps = () => true } = options || {};\n\n        const InnerDecoratedComponent: FunctionComponent<TProps> = memo((props) => (\n            <OriginalComponent {...props} />\n        ));\n\n        const DecoratedComponent = (props: Omit<TProps, keyof NonNullable<TPickedProps>>) => {\n            const context = useContext(ContextComponent);\n            const injectedProps = pickBy(context, (value, key) =>\n                pickProps(value, key as keyof TInjectedProps),\n            );\n\n            if (isEmpty(injectedProps)) {\n                return null;\n            }\n\n            const mergedProps = { ...injectedProps, ...props } as unknown as TProps;\n\n            return <InnerDecoratedComponent {...mergedProps} />;\n        };\n\n        if (displayNamePrefix) {\n            DecoratedComponent.displayName = `${displayNamePrefix}(${\n                OriginalComponent.displayName || OriginalComponent.name\n            })`;\n        }\n\n        return DecoratedComponent;\n    };\n}\n","import React, { ComponentType, Context, FunctionComponent, memo, useContext, useMemo } from 'react';\nimport { Omit } from 'utility-types';\n\nimport { MatchedProps } from './InjectHoc';\nimport MappableInjectHoc, { MapToProps, MapToPropsFactory } from './MappableInjectHoc';\n\nfunction isMapToPropsFactory<TContextProps, TMappedProps, TOwnProps>(\n    mapToProps:\n        | MapToProps<TContextProps, TMappedProps, TOwnProps>\n        | MapToPropsFactory<TContextProps, TMappedProps, TOwnProps>,\n): mapToProps is MapToPropsFactory<TContextProps, TMappedProps, TOwnProps> {\n    return mapToProps.length === 0;\n}\n\nexport default function createMappableInjectHoc<TContextProps>(\n    ContextComponent: Context<TContextProps>,\n    options?: { displayNamePrefix?: string },\n): MappableInjectHoc<NonNullable<TContextProps>> {\n    return <TMappedProps, TOwnProps>(\n        mapToPropsOrFactory:\n            | MapToProps<NonNullable<TContextProps>, TMappedProps, TOwnProps>\n            | MapToPropsFactory<NonNullable<TContextProps>, TMappedProps, TOwnProps>,\n    ) => {\n        return <TProps extends MatchedProps<TMappedProps, TProps>>(\n            OriginalComponent: ComponentType<TProps>,\n        ) => {\n            const InnerDecoratedComponent: FunctionComponent<TProps> = memo((props) => (\n                <OriginalComponent {...props} />\n            ));\n\n            const DecoratedComponent: FunctionComponent<Omit<TProps, keyof TMappedProps>> = (\n                props,\n            ) => {\n                const context = useContext(ContextComponent);\n\n                const mapToProps = useMemo(\n                    () =>\n                        isMapToPropsFactory(mapToPropsOrFactory)\n                            ? mapToPropsOrFactory()\n                            : mapToPropsOrFactory,\n                    [],\n                );\n\n                const mappedProps = context\n                    ? mapToProps(context, props as unknown as TOwnProps)\n                    : context;\n\n                if (!mappedProps) {\n                    return null;\n                }\n\n                const mergedProps = { ...mappedProps, ...props } as unknown as TProps;\n\n                return <InnerDecoratedComponent {...mergedProps} />;\n            };\n\n            if (options && options.displayNamePrefix && OriginalComponent) {\n                DecoratedComponent.displayName = `${options.displayNamePrefix}(${\n                    OriginalComponent.displayName || OriginalComponent.name\n                })`;\n            }\n\n            return DecoratedComponent;\n        };\n    };\n}\n","import { CurrencyService, LanguageService } from '@bigcommerce/checkout-sdk';\nimport { createContext, useContext } from 'react';\n\nexport interface LocaleContextType {\n    language: LanguageService;\n    date?: {\n        inputFormat: string;\n    };\n    currency?: CurrencyService;\n}\n\nconst LocaleContext = createContext<LocaleContextType | undefined>(undefined);\n\nexport default LocaleContext;\n\nexport function useLocale() {\n    const context = useContext(LocaleContext);\n\n    if (!context) {\n        throw new Error('useLocale must be used within a LocaleContextProvider');\n    }\n\n    return context;\n}\n","import { CheckoutService, createCurrencyService, StoreConfig } from '@bigcommerce/checkout-sdk';\nimport { memoizeOne } from '@bigcommerce/memoize';\nimport React, { Component, ReactNode } from 'react';\n\nimport getLanguageService from './getLanguageService';\nimport LocaleContext from './LocaleContext';\n\nexport interface LocaleProviderProps {\n    checkoutService: CheckoutService;\n}\n\nexport interface LocaleProviderState {\n    config?: StoreConfig;\n}\n\nclass LocaleProvider extends Component<LocaleProviderProps> {\n    state: Readonly<LocaleProviderState> = {};\n\n    private languageService = getLanguageService();\n    private unsubscribe?: () => void;\n\n    private getContextValue = memoizeOne((config?: StoreConfig) => {\n        return {\n            currency: config ? createCurrencyService(config) : undefined,\n            date: config\n                ? {\n                      inputFormat: config.inputDateFormat,\n                  }\n                : undefined,\n            language: this.languageService,\n        };\n    });\n\n    componentDidMount(): void {\n        const { checkoutService } = this.props;\n\n        this.unsubscribe = checkoutService.subscribe(\n            ({ data }) => {\n                this.setState({ config: data.getConfig() });\n            },\n            ({ data }) => data.getConfig(),\n        );\n    }\n\n    componentWillUnmount(): void {\n        if (this.unsubscribe) {\n            this.unsubscribe();\n            this.unsubscribe = undefined;\n        }\n    }\n\n    render(): ReactNode {\n        const { children } = this.props;\n        const { config } = this.state;\n\n        return (\n            <LocaleContext.Provider value={this.getContextValue(config)}>\n                {children}\n            </LocaleContext.Provider>\n        );\n    }\n}\n\nexport default LocaleProvider;\n","import DOMPurify from 'dompurify';\nimport React, { FunctionComponent } from 'react';\n\nimport { useLocale } from './LocaleContext';\n\nexport interface TranslatedHtmlProps {\n    id: string;\n    data?: any;\n}\n\nexport const TranslatedHtml: FunctionComponent<TranslatedHtmlProps> = ({ data, id }) => {\n    const { language } = useLocale();\n\n    return (\n        <span\n            dangerouslySetInnerHTML={{\n                __html: DOMPurify.sanitize(language.translate(id, data), { ADD_ATTR: ['target'] }),\n            }}\n        />\n    );\n};\n\nexport default TranslatedHtml;\n","import React, { FunctionComponent, MouseEventHandler } from 'react';\n\nimport { parseAnchor, preventDefault } from '@bigcommerce/checkout/dom-utils';\n\nimport { useLocale } from './LocaleContext';\nimport { TranslatedStringProps } from './TranslatedString';\n\nexport type TranslatedLinkProps = TranslatedStringProps & {\n    testId?: string;\n    onClick: MouseEventHandler;\n};\n\nconst TranslatedLink: FunctionComponent<TranslatedLinkProps> = ({ data, id, onClick, testId }) => {\n    const { language } = useLocale();\n    const translatedString = language.translate(id, data);\n    const parsedString = parseAnchor(translatedString);\n\n    return parsedString.length ? (\n        <>\n            {parsedString[0]}\n            <a data-test={testId} href=\"#\" onClick={preventDefault(onClick)}>\n                {parsedString[1]}\n            </a>\n            {parsedString[2]}\n        </>\n    ) : (\n        <>{translatedString}</>\n    );\n};\n\nexport default TranslatedLink;\n","import React, { FunctionComponent } from 'react';\n\nimport { useLocale } from './LocaleContext';\n\nexport interface TranslatedStringProps {\n    id: string;\n    data?: any;\n}\n\nconst TranslatedString: FunctionComponent<TranslatedStringProps> = ({ data, id }) => {\n    const { language } = useLocale();\n\n    return <>{language.translate(id, data)}</>;\n};\n\nexport default TranslatedString;\n","import FALLBACK_TRANSLATIONS from './en.json';\n\nexport const FALLBACK_LOCALE = 'en';\n\nexport { FALLBACK_TRANSLATIONS };\n","import { createLanguageService, LanguageConfig, LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { FALLBACK_LOCALE, FALLBACK_TRANSLATIONS } from './translations';\n\nlet languageService: LanguageService | undefined;\n\nexport default function getLanguageService(): LanguageService {\n    languageService =\n        languageService ??\n        createLanguageService({\n            fallbackLocale: FALLBACK_LOCALE,\n            fallbackTranslations: FALLBACK_TRANSLATIONS,\n        });\n\n    return languageService;\n}\n\nexport type InitializeLanguageService = typeof initializeLanguageService;\n\nexport function initializeLanguageService(config: LanguageConfig): LanguageService {\n    languageService = createLanguageService({\n        ...config,\n        defaultLocale: config.locale,\n        defaultTranslations: config.defaultTranslations,\n        fallbackLocale: FALLBACK_LOCALE,\n        fallbackTranslations: FALLBACK_TRANSLATIONS,\n    });\n\n    return languageService;\n}\n","import { CurrencyService } from '@bigcommerce/checkout-sdk';\n\nimport { createInjectHoc, InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithCurrencyProps {\n    currency: CurrencyService;\n}\n\nconst withCurrency: InjectHoc<WithCurrencyProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'WithCurrency',\n    pickProps: (value, key) => key === 'currency' && !!value,\n});\n\nexport default withCurrency;\n","import { createInjectHoc, InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithDateProps {\n    date: {\n        inputFormat: string;\n    };\n}\n\nconst withDate: InjectHoc<WithDateProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'withDate',\n    pickProps: (value, key) => key === 'date' && !!value,\n});\n\nexport default withDate;\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { createInjectHoc, InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithLanguageProps {\n    language: LanguageService;\n}\n\nconst withLanguage: InjectHoc<WithLanguageProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'WithLanguage',\n    pickProps: (value, key) => key === 'language' && !!value,\n});\n\nexport default withLanguage;\n","enum PaymentMethodId {\n    Adyen = 'adyen',\n    AdyenV2 = 'adyenv2',\n    AdyenV2GooglePay = 'googlepayadyenv2',\n    AdyenV3GooglePay = 'googlepayadyenv3',\n    AdyenV3 = 'adyenv3',\n    Affirm = 'affirm',\n    Afterpay = 'afterpay',\n    AmazonPay = 'amazonpay',\n    ApplePay = 'applepay',\n    Barclaycard = 'barclaycard',\n    BlueSnapV2 = 'bluesnapv2',\n    BlueSnapDirect = 'bluesnapdirect',\n    Boleto = 'boleto',\n    Bolt = 'bolt',\n    Braintree = 'braintree',\n    BraintreeAch = 'braintreeach',\n    BraintreeVenmo = 'braintreevenmo',\n    AuthorizeNetGooglePay = 'googlepayauthorizenet',\n    BNZGooglePay = 'googlepaybnz',\n    BraintreeAcceleratedCheckout = 'braintreeacceleratedcheckout',\n    BraintreeGooglePay = 'googlepaybraintree',\n    PayPalCommerceGooglePay = 'googlepaypaypalcommerce',\n    BraintreeVisaCheckout = 'braintreevisacheckout',\n    BraintreeLocalPaymentMethod = 'braintreelocalmethods',\n    BraintreePaypalCredit = 'braintreepaypalcredit',\n    CBAMPGS = 'cba_mpgs',\n    CCAvenueMars = 'ccavenuemars',\n    ChasePay = 'chasepay',\n    Checkoutcom = 'checkoutcom',\n    CheckoutcomGooglePay = 'googlepaycheckoutcom',\n    Clearpay = 'clearpay',\n    Converge = 'converge',\n    CybersourceV2GooglePay = 'googlepaycybersourcev2',\n    DigitalRiver = 'digitalriver',\n    Fawry = 'fawry',\n    Humm = 'humm',\n    Ideal = 'ideal',\n    Klarna = 'klarna',\n    Laybuy = 'laybuy',\n    Masterpass = 'masterpass',\n    Mollie = 'mollie',\n    Moneris = 'moneris',\n    Opy = 'opy',\n    OrbitalGooglePay = 'googlepayorbital',\n    Oxxo = 'oxxo',\n    PaypalExpress = 'paypalexpress',\n    PaypalPaymentsPro = 'paypal',\n    PaypalCommerce = 'paypalcommerce',\n    PaypalCommerceCredit = 'paypalcommercecredit',\n    PaypalCommerceCreditCards = 'paypalcommercecreditcards',\n    PaypalCommerceAlternativeMethod = 'paypalcommercealternativemethods',\n    PaypalCommerceVenmo = 'paypalcommercevenmo',\n    Qpay = 'qpay',\n    Quadpay = 'quadpay',\n    SagePay = 'sagepay',\n    Sepa = 'sepa',\n    Sezzle = 'sezzle',\n    SquareV2 = 'squarev2',\n    StripeGooglePay = 'googlepaystripe',\n    StripeUPEGooglePay = 'googlepaystripeupe',\n    StripeV3 = 'stripev3',\n    StripeUPE = 'stripeupe',\n    WorldpayAccess = 'worldpayaccess',\n    WorldpayAccessGooglePay = 'googlepayworldpayaccess',\n    Zip = 'zip',\n}\n\nexport default PaymentMethodId;\n","import { CheckoutSelectors, CheckoutService } from '@bigcommerce/checkout-sdk';\nimport { createContext, useContext } from 'react';\n\nexport interface CheckoutContextProps {\n    checkoutService: CheckoutService;\n    checkoutState: CheckoutSelectors;\n}\n\nconst CheckoutContext = createContext<CheckoutContextProps | undefined>(undefined);\n\nexport function useCheckout() {\n    const context = useContext(CheckoutContext);\n\n    if (!context) {\n        throw new Error('useCheckout must be used within a CheckoutContextProvider');\n    }\n\n    return context;\n}\n\nexport default CheckoutContext;\n","import { CheckoutSelectors, CheckoutService } from '@bigcommerce/checkout-sdk';\nimport { memoizeOne } from '@bigcommerce/memoize';\nimport React, { Component, ReactNode } from 'react';\n\nimport CheckoutContext from './CheckoutContext';\n\nexport interface CheckoutProviderProps {\n    checkoutService: CheckoutService;\n}\n\nexport interface CheckoutProviderState {\n    checkoutState: CheckoutSelectors;\n}\n\nexport default class CheckoutProvider extends Component<\n    CheckoutProviderProps,\n    CheckoutProviderState\n> {\n    state: Readonly<CheckoutProviderState>;\n\n    private unsubscribe?: () => void;\n\n    private getContextValue = memoizeOne(\n        (checkoutService: CheckoutService, checkoutState: CheckoutSelectors) => {\n            return {\n                checkoutService,\n                checkoutState,\n            };\n        },\n    );\n\n    constructor(props: Readonly<CheckoutProviderProps>) {\n        super(props);\n\n        this.state = {\n            checkoutState: props.checkoutService.getState(),\n        };\n    }\n\n    componentDidMount(): void {\n        const { checkoutService } = this.props;\n\n        this.unsubscribe = checkoutService.subscribe((checkoutState) =>\n            this.setState({ checkoutState }),\n        );\n    }\n\n    componentWillUnmount(): void {\n        if (this.unsubscribe) {\n            this.unsubscribe();\n            this.unsubscribe = undefined;\n        }\n    }\n\n    render(): ReactNode {\n        const { checkoutService, children } = this.props;\n        const { checkoutState } = this.state;\n\n        return (\n            <CheckoutContext.Provider value={this.getContextValue(checkoutService, checkoutState)}>\n                {children}\n            </CheckoutContext.Provider>\n        );\n    }\n}\n","import React, { ComponentType } from 'react';\n\nimport ResolvableComponent from './ResolvableComponent';\n\nexport default function toResolvableComponent<TProps extends Record<string, any>, TIdentifier>(\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Component: ComponentType<TProps>,\n    resolveIds: TIdentifier[],\n): ResolvableComponent<TProps, TIdentifier> {\n    return Object.assign((props: TProps) => <Component {...props} />, { resolveIds });\n}\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconPayPalConnect: FunctionComponent = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"70\" height=\"12\" viewBox=\"0 0 70 12\" fill=\"none\">\n        <path\n            d=\"M2.75845 7.01162V3.64258H1.44776C0.64798 3.64258 0 4.38005 0 5.29085V9.99776C0 10.9086 0.64798 11.646 1.44776 11.646H8.02498C8.82476 11.646 9.47274 10.9086 9.47274 9.99776V8.65989H4.2062C3.40643 8.65989 2.75845 7.92128 2.75845 7.01162Z\"\n            fill=\"#313131\"\n        />\n        <path\n            d=\"M10.7825 0.655762H4.20533C3.40555 0.655762 2.75757 1.39323 2.75757 2.30403V3.64191H8.0241C8.82388 3.64191 9.47186 4.37938 9.47186 5.29018V8.65922H10.7825C11.5823 8.65922 12.2303 7.92174 12.2303 7.01095V2.30403C12.2303 1.39437 11.5823 0.655762 10.7825 0.655762Z\"\n            fill=\"#5B5B5B\"\n        />\n        <path\n            d=\"M8.02508 3.64258H2.75854V7.01162C2.75854 7.92242 3.40653 8.65989 4.2063 8.65989H9.47284V5.29085C9.4717 4.38005 8.82372 3.64258 8.02508 3.64258Z\"\n            fill=\"#DBDBDB\"\n        />\n        <path\n            d=\"M15.0747 5.57183C15.0747 2.61287 17.0379 0.354004 20.0682 0.354004C22.3124 0.354004 23.8689 1.50383 24.4863 3.20081C24.4999 3.24272 24.5146 3.29937 24.5146 3.34128C24.5146 3.48175 24.4024 3.56558 24.2201 3.56558H22.9298C22.7474 3.56558 22.6352 3.49535 22.5514 3.32769C22.0609 2.43049 21.1909 1.88333 20.0546 1.88333C18.0631 1.88333 16.9133 3.49648 16.9133 5.57183C16.9133 7.6619 18.1198 9.24673 20.1113 9.24673C21.303 9.24673 22.0745 8.64407 22.5661 7.8998C22.6647 7.74573 22.7768 7.6755 22.9445 7.6755H24.1645C24.3469 7.6755 24.4591 7.73214 24.4591 7.8862C24.4591 7.92812 24.4455 7.98476 24.4172 8.055C23.8145 9.47104 22.3135 10.7761 20.041 10.7761C17.0526 10.7761 15.0747 8.54551 15.0747 5.57183Z\"\n            fill=\"#252525\"\n        />\n        <path\n            d=\"M25.2576 6.90474C25.2576 4.59037 26.7869 2.96362 29.1001 2.96362C31.4281 2.96362 32.9574 4.59037 32.9574 6.90474C32.9574 9.1772 31.4564 10.804 29.0718 10.804C26.7019 10.804 25.2576 9.16361 25.2576 6.90474ZM31.1483 6.89115C31.1483 5.43206 30.3632 4.39439 29.0729 4.39439C27.7962 4.39439 27.0112 5.43206 27.0112 6.89115C27.0112 8.39215 27.7826 9.37319 29.0729 9.37319C30.3768 9.37432 31.1483 8.39215 31.1483 6.89115Z\"\n            fill=\"#252525\"\n        />\n        <path\n            d=\"M34.191 10.2569V3.53918C34.1775 3.32847 34.2896 3.21632 34.4992 3.21632H35.4949C35.7056 3.21632 35.8178 3.32847 35.8178 3.53918V3.66492C35.8178 3.81899 35.8042 3.97305 35.8042 4.12825C35.8042 4.14185 35.8042 4.14185 35.8178 4.14185C36.2664 3.46894 36.9823 2.97729 38.1174 2.97729C39.8008 2.97729 40.7819 4.11353 40.7819 6.00649V10.2557C40.7819 10.4664 40.6697 10.5786 40.459 10.5786H39.393C39.1823 10.5786 39.0702 10.4664 39.0702 10.2557V6.77681C39.0702 5.33245 38.719 4.40693 37.5692 4.40693C36.4046 4.40693 35.9005 5.31886 35.9005 6.46868V10.2557C35.9005 10.4664 35.7883 10.5786 35.5776 10.5786H34.5116C34.3032 10.5797 34.191 10.4676 34.191 10.2569Z\"\n            fill=\"#252525\"\n        />\n        <path\n            d=\"M42.3959 10.2569V3.53918C42.3823 3.32847 42.4944 3.21632 42.704 3.21632H43.6998C43.9105 3.21632 44.0226 3.32847 44.0226 3.53918V3.66492C44.0226 3.81899 44.009 3.97305 44.009 4.12825C44.009 4.14185 44.009 4.14185 44.0226 4.14185C44.4712 3.46894 45.1872 2.97729 46.3223 2.97729C48.0057 2.97729 48.9867 4.11353 48.9867 6.00649V10.2557C48.9867 10.4664 48.8745 10.5786 48.6638 10.5786H47.5978C47.3871 10.5786 47.275 10.4664 47.275 10.2557V6.77681C47.275 5.33245 46.9238 4.40693 45.774 4.40693C44.6094 4.40693 44.1053 5.31886 44.1053 6.46868V10.2557C44.1053 10.4664 43.9932 10.5786 43.7825 10.5786H42.7165C42.508 10.5797 42.3959 10.4676 42.3959 10.2569Z\"\n            fill=\"#252525\"\n        />\n        <path\n            d=\"M50.1392 6.87716C50.1392 4.63302 51.6538 2.96436 53.8979 2.96436C56.2542 2.96436 57.5026 4.71798 57.5026 6.86356V7.00403C57.5026 7.21474 57.3621 7.32689 57.1661 7.32689L51.8509 7.3133C51.963 8.51976 52.7764 9.38864 53.9693 9.38864C54.6841 9.38864 55.1893 9.12243 55.5122 8.68742C55.6243 8.54695 55.7365 8.47672 55.9053 8.47672H56.9713C57.1537 8.47672 57.2794 8.56054 57.2794 8.67269C57.2794 8.71461 57.2794 8.75652 57.1808 8.95364C56.6756 9.96412 55.5677 10.8047 53.9273 10.8047C51.6254 10.8036 50.1392 9.1768 50.1392 6.87716ZM55.7909 6.09097C55.6787 5.08162 54.9775 4.29543 53.8832 4.29543C52.8172 4.29543 52.0457 4.92642 51.9052 6.09097H55.7909Z\"\n            fill=\"#252525\"\n        />\n        <path\n            d=\"M58.189 6.89115C58.189 4.64701 59.69 2.96362 61.976 2.96362C63.7296 2.96362 64.8795 3.91747 65.3281 5.29159C65.3417 5.33351 65.3564 5.39015 65.3564 5.43206C65.3564 5.58613 65.2306 5.65636 65.0483 5.65636H63.912C63.7296 5.65636 63.6175 5.57253 63.5337 5.40374C63.2255 4.78635 62.7339 4.39326 61.9488 4.39326C60.7152 4.39326 59.9437 5.43093 59.9437 6.8617C59.9437 8.37629 60.7152 9.38678 62.0191 9.38678C62.7622 9.38678 63.3094 9.02201 63.6175 8.46126C63.7013 8.30719 63.8135 8.22336 63.9959 8.22336H65.0199C65.2023 8.22336 65.3428 8.2936 65.3428 8.41934C65.3428 8.46125 65.3292 8.50317 65.2861 8.61532C64.8228 9.84898 63.7013 10.8028 61.9477 10.8028C59.6197 10.804 58.189 9.14888 58.189 6.89115Z\"\n            fill=\"#252525\"\n        />\n        <path\n            d=\"M66.9131 8.72776V4.4921H66.128C65.9173 4.4921 65.8052 4.37995 65.8052 4.16924V3.53825C65.8052 3.32755 65.9173 3.2154 66.128 3.2154H66.9131V1.54673C66.9131 1.33603 67.0252 1.22388 67.2359 1.22388H68.3019C68.5126 1.22388 68.6248 1.33603 68.6248 1.54673V3.2154H69.6772C69.8879 3.2154 70.0001 3.32755 70.0001 3.53825V4.16924C70.0001 4.37995 69.8879 4.4921 69.6772 4.4921H68.6248V8.46154C68.6248 9.14917 68.8355 9.37347 69.3396 9.37347C69.4801 9.37347 69.522 9.35987 69.6206 9.35987C69.8029 9.35987 69.9015 9.4437 69.9015 9.69633V10.3556C69.9015 10.7057 69.6489 10.7204 69.2558 10.7204C67.7695 10.7193 66.9131 10.2707 66.9131 8.72776Z\"\n            fill=\"#252525\"\n        />\n    </svg>\n);\n\nexport default withIconContainer(IconPayPalConnect);\n","import React from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { IconPayPalConnect } from '@bigcommerce/checkout/ui';\n\nimport './PoweredByPaypalConnectLabel.scss';\n\nconst PoweredByPaypalConnectLabel = () => (\n    <div className=\"powered-by-paypal-connect-label\">\n        <TranslatedString id=\"remote.powered_by\" />\n        <IconPayPalConnect />\n    </div>\n);\n\nexport default PoweredByPaypalConnectLabel;\n","import {\n    Address,\n    AddressRequestBody,\n    BillingAddress,\n    CustomerAddress,\n} from '@bigcommerce/checkout-sdk';\nimport { isEqual, omit } from 'lodash';\n\ntype ComparableAddress = CustomerAddress | Address | BillingAddress | AddressRequestBody;\ntype ComparableAddressFields = keyof CustomerAddress | keyof Address | keyof BillingAddress;\n\nconst normalizeAddress = (address: Partial<ComparableAddress>) => {\n    const ignoredFields: ComparableAddressFields[] = [\n        'id',\n        'shouldSaveAddress',\n        'stateOrProvince',\n        'type',\n        'email',\n        'country',\n        'customFields',\n    ];\n\n    return omit(address, ignoredFields);\n};\n\nconst isEqualToPayPalConnectAddress = (\n    bcAddress: Partial<ComparableAddress>,\n    paypalConnectAddress: Partial<ComparableAddress>,\n): boolean => isEqual(normalizeAddress(bcAddress), normalizeAddress(paypalConnectAddress));\n\nconst isPayPalConnectAddress = (address: Address, addresses: Address[]): boolean =>\n    addresses.some((paypalConnectAddress) =>\n        isEqualToPayPalConnectAddress(address, paypalConnectAddress),\n    );\n\nexport default isPayPalConnectAddress;\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nconst isPaypalConnectMethod = (methodId?: string): boolean => {\n    return (\n        methodId === PaymentMethodId.Braintree ||\n        methodId === PaymentMethodId.BraintreeAcceleratedCheckout\n    );\n};\n\nexport default isPaypalConnectMethod;\n","import { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport isPayPalConnectAddress from './is-paypal-connect-address';\nimport isPaypalConnectMethod from './is-paypal-connect-method';\n\nconst usePayPalConnectAddress = () => {\n    const { checkoutState } = useCheckout();\n    const { getConfig, getCustomer, getPaymentProviderCustomer } = checkoutState.data;\n\n    const providerWithCustomCheckout =\n        getConfig()?.checkoutSettings.providerWithCustomCheckout || '';\n    const isPayPalAxoEnabled = isPaypalConnectMethod(providerWithCustomCheckout);\n\n    const paypalConnectAddresses = getPaymentProviderCustomer()?.addresses || [];\n    const bcAddresses = getCustomer()?.addresses || [];\n\n    const mergedBcAndPayPalConnectAddresses = isPayPalAxoEnabled\n        ? [\n              ...paypalConnectAddresses,\n              ...bcAddresses.filter(\n                  (address) => !isPayPalConnectAddress(address, paypalConnectAddresses),\n              ),\n          ]\n        : bcAddresses;\n\n    const shouldShowPayPalConnectLabel = !!paypalConnectAddresses.length;\n\n    return {\n        isPayPalAxoEnabled,\n        paypalConnectAddresses,\n        shouldShowPayPalConnectLabel,\n        mergedBcAndPayPalConnectAddresses,\n    };\n};\n\nexport default usePayPalConnectAddress;\n","import React, { FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\n\nconst AddressFormSkeleton: FunctionComponent<LoadingSkeletonProps> = ({ children, isLoading }) => {\n    const skeleton = (\n        <div className=\"checkout-form\">\n            <div className=\"form-legend-container\">\n                <div className=\"address-form-heading-skeleton form-legend optimizedCheckout-headingSecondary\" />\n            </div>\n            <div className=\"address-form-skeleton\">\n                <div className=\"name-fields-skeleton\">\n                    <div className=\"skeleton-container\">\n                        <div className=\"input-skeleton\" />\n                    </div>\n                    <div className=\"skeleton-container\">\n                        <div className=\"input-skeleton\" />\n                    </div>\n                </div>\n                <div className=\"skeleton-container\">\n                    <div className=\"input-skeleton\" />\n                </div>\n            </div>\n        </div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, skeleton }} />;\n};\n\nexport default AddressFormSkeleton;\n","import classNames from 'classnames';\nimport React, { FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\n\ninterface ChecklistSkeletonProps {\n    additionalClassName?: string;\n    rows?: number;\n}\n\nconst ChecklistSkeleton: FunctionComponent<LoadingSkeletonProps & ChecklistSkeletonProps> = ({\n    additionalClassName,\n    children,\n    isLoading = true,\n    rows = 3,\n}) => {\n    const content = [];\n\n    for (let i = 0; i < rows; i += 1) {\n        content.push(\n            <div className=\"skeleton-container\" key={`checklist-skeleton-item${i}`}>\n                <div className=\"checklist-skeleton-circle\" />\n                <div className=\"checklist-skeleton-rectangle\" />\n            </div>,\n        );\n    }\n\n    const skeleton = (\n        <div className={classNames(additionalClassName, 'checklist-skeleton')}>{content}</div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, skeleton }} />;\n};\n\nexport default ChecklistSkeleton;\n","import React, { FunctionComponent, ReactNode } from 'react';\n\nexport interface LoadingSkeletonProps {\n    isLoading?: boolean;\n    renderWhileLoading?: boolean;\n    skeleton?: ReactNode;\n}\n\nexport const LoadingSkeleton: FunctionComponent<LoadingSkeletonProps> = ({\n    children,\n    isLoading = true,\n    renderWhileLoading = false,\n    skeleton,\n}) => {\n    const shouldShowChildren = renderWhileLoading || !isLoading;\n\n    return (\n        <>\n            {isLoading && skeleton}\n            {Boolean(children) && shouldShowChildren && (\n                <div\n                    className=\"loading-skeleton\"\n                    style={\n                        isLoading ? { position: 'absolute', left: '100%', top: '-100%' } : undefined\n                    }\n                >\n                    {children}\n                </div>\n            )}\n        </>\n    );\n};\n","import { isFunction, noop } from 'lodash';\nimport React, { createContext, FunctionComponent, memo, ReactNode, useMemo, useState } from 'react';\n\nexport interface FormContextType {\n    isSubmitted: boolean;\n    setSubmitted(isSubmitted: boolean): void;\n}\n\nexport const FormContext = createContext<FormContextType>({\n    isSubmitted: false,\n    setSubmitted: noop,\n});\n\ntype FormContextFunction = (props: FormContextType) => ReactNode;\n\nexport interface FormProviderProps {\n    initialIsSubmitted?: boolean;\n    children: ReactNode | FormContextFunction;\n}\n\nexport const FormProvider: FunctionComponent<FormProviderProps> = memo(\n    ({ children, initialIsSubmitted = false }) => {\n        const [isSubmitted, setSubmitted] = useState(initialIsSubmitted);\n        const contextValue = useMemo(() => ({ isSubmitted, setSubmitted }), [isSubmitted]);\n\n        return (\n            <FormContext.Provider value={contextValue}>\n                {isFunction(children) ? children({ isSubmitted, setSubmitted }) : children}\n            </FormContext.Provider>\n        );\n    },\n);\n\nexport default FormContext;\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconPayPalConnectSmall: FunctionComponent = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24px\" height=\"24px\">\n        <circle cx=\"12\" cy=\"12\" r=\"12\" fill=\"#F1F1F1\" />\n        <g>\n            <g>\n                <path\n                    fill=\"#313131\"\n                    d=\"M8.6,12.9V9.5H7.3c-0.8,0-1.4,0.7-1.4,1.6v4.7c0,0.9,0.6,1.6,1.4,1.6h6.6c0.8,0,1.4-0.7,1.4-1.6v-1.3h-5.3\n                    C9.3,14.5,8.6,13.8,8.6,12.9z\"\n                />\n                <path\n                    fill=\"#5B5B5B\"\n                    d=\"M16.7,6.5h-6.6c-0.8,0-1.4,0.7-1.4,1.6v1.3h5.3c0.8,0,1.4,0.7,1.4,1.6v3.4h1.3c0.8,0,1.4-0.7,1.4-1.6V8.2\n                    C18.1,7.2,17.5,6.5,16.7,6.5z\"\n                />\n            </g>\n            <path\n                fill=\"#DBDBDB\"\n                d=\"M13.9,9.5H8.6v3.4c0,0.9,0.6,1.6,1.4,1.6h5.3v-3.4C15.4,10.2,14.7,9.5,13.9,9.5z\"\n            />\n        </g>\n    </svg>\n);\n\nexport default withIconContainer(IconPayPalConnectSmall);\n","import classNames from 'classnames';\nimport React, { ComponentType, memo } from 'react';\n\nexport enum IconSize {\n    Regular = 'regular',\n    Small = 'small',\n    Medium = 'medium',\n    Large = 'large',\n}\n\nexport interface IconProps {\n    additionalClassName?: string;\n    size?: IconSize;\n    testId?: string;\n}\n\nexport default function withIconContainer<TProps extends Record<string, any>>(\n    OriginalComponent: ComponentType<TProps>,\n): ComponentType<TProps & IconProps> {\n    return memo(({ additionalClassName, size, testId, ...rest }) => (\n        <div\n            className={classNames(\n                'icon',\n                additionalClassName,\n                size === IconSize.Small ? 'icon--small' : null,\n                size === IconSize.Large ? 'icon--large' : null,\n                size === IconSize.Medium ? 'icon--medium' : null,\n            )}\n            data-test={testId}\n        >\n            <OriginalComponent {...(rest as TProps)} />\n        </div>\n    ));\n}\n"],"names":["createContext","undefined","createAnalyticsService","createFn","createArguments","analyticsTracker","checkoutService","children","getStepTracker","useMemo","createStepTracker","getBodlService","createBodlService","subscribe","checkoutBegin","trackCheckoutStarted","trackStepCompleted","currentStep","stepCompleted","trackStepViewed","step","orderPurchased","trackOrderComplete","customerEmailEntry","email","customerSuggestionInit","payload","customerSuggestionExecute","customerPaymentMethodExecuted","showShippingMethods","selectedPaymentMethod","methodName","clickPayButton","paymentRejected","paymentComplete","exitCheckout","AnalyticsContext","value","ExtensionContext","AddressType","address","countries","country","find","code","countryCode","states","isEmpty","subdivisions","state","stateOrProvinceCode","localizedCountry","name","localizedProvince","stateOrProvince","withCheckout","context","type","getBillingCountries","getBillingAddressFields","getShippingAddressFields","fields","memo","addressWithoutLocalization","usePayPalConnectAddress","isPayPalAxoEnabled","paypalConnectAddresses","isValid","isValidAddress","filter","field","custom","shouldShowProviderIcon","className","IconPayPalConnectSmall","firstName","lastName","phone","company","address1","address2","city","postalCode","WHITELIST_REGEXP","memoize","formFields","translate","reduce","schema","required","label","trim","matches","concat","getCustomFormFieldsValidationSchema","getTranslateAddressError","language","requiredFieldErrorTranslationIds","min","max","getFormFieldsValidationSchema","isValidSync","mapAddressToFormValues","values","addressFormValues","fieldName","fieldType","defaultValue","customFields","fieldValue","Date","getDefaultValue","split","year","month","day","Number","getValue","shouldSaveAddress","displayNamePrefix","checkoutState","checkout","getCheckout","payments","showPayPalConnectAddressLabel","payment","providerId","id","cartHasSubscription","cart","store","fetch","headers","method","body","JSON","stringify","skus","lineItems","physicalItems","map","item","sku","response","json","result","status","Error","message","hasPlan","getUser","text","jwtToken","submitOrder","data","config","getCart","getConfig","rest","useState","isLoadingRecurly","hasSubscription","isSubmitting","Promise","resolve","resubmitRecurlyOrder","recurlyState","setRecurlyState","recurlyToken","setRecurlyToken","useEffect","storeProfile","storeHash","then","customerId","useCallback","customerInformation","secureToken","reject","token","currency","cartId","threeDSecureToken","window","location","replace","orderId","e","submitRecurlyOrder","elements","recurly","err","RecurlyContext","extensionReducer","action","ExtensionActionType","SHOW_LOADING_INDICATOR","isShowingLoadingIndicator","createReloadCheckoutHandler","commandType","ExtensionCommandType","handler","loadCheckout","getState","createSetIframeStyleHandler","extension","style","extensionContainer","document","querySelector","iframe","Object","assign","createShowLoadingIndicatorHandler","dispatch","show","handlers","loadExtensions","this","renderExtension","container","region","getExtensionByRegion","registerHandlers","removeListeners","removers","remover","isRegionEnabled","Boolean","handlerProps","forEach","createHandlerFactory","handlerFactory","isCommandHandler","push","handleExtensionCommand","ExtensionProvider","useReducer","extensionState","extensionValues","isExtensionEnabled","checkoutSettings","features","extensionService","ExtensionService","isSupported","EmbeddedCheckoutUnsupportedError","prototype","CustomError","unsupportedMethods","langService","ids","indexOf","length","methods","join","UNSUPPORTED_METHODS","withExtension","isWaiting","componentDidMount","waitInterval","props","waitToken","setTimeout","setState","componentWillUnmount","clearInterval","render","loginUrl","LoadingOverlay","hideContentWhenLoading","isLoading","TranslatedHtml","url","PureComponent","CustomerViewType","buttonsCount","skeleton","Array","fill","_v","i","key","LoadingSkeleton","renderWhileLoading","isApplePayWindow","APPLE_PAY","SUPPORTED_METHODS","containerId","initialize","isShowingWalletButtonsOnTop","methodId","onError","heightOption","buttonHeight","deinitialize","navigateToOrderConfirmation","isBuyNowCart","toString","pathname","noop","localeContext","useContext","LocaleContext","initializeOptions","options","applepay","shippingLabel","subtotalLabel","onPaymentAuthorize","beautifyAmazonButton","amazonButton","shadowRoot","height","onComplete","paypalCommerceIds","sortMethodIds","methodIds","order","sort","a","b","getCustomer","isPaymentDataRequired","isInitializedCustomer","getInitializeCustomerError","availableMethodIds","remoteCheckoutProviders","customer","isGuest","initializedMethodIds","checkEmbeddedSupport","isPaymentStepActive","onUnhandledError","error","position","left","top","TranslatedString","includes","isPayPalCommerce","resolveId","ResolvedCheckoutButton","resolveComponent","deinitializeCustomer","initializeCustomer","analyticsContext","isExecutingPaymentMethodCheckout","executePaymentMethodCheckout","showSuggestion","setShowSuggestion","bolt","onInit","hasBoltAccount","fn","onClick","event","stopPropagation","provider","providerFlow","Button","IconBolt","additionalClassName","providerWithCustomCheckout","PaymentMethodId","isInitializing","hideText","supportedMethodIds","filterUnsupportedMethodIds","SUPPORTED_SIGNOUT_METHODS","isSupportedSignoutMethod","canSignOut","every","getBillingAddress","isSigningOut","billingAddress","isSignedIn","signOut","signOutCustomer","onSignOut","onSignOutError","isCartEmpty","reload","isErrorWithType","size","testId","variant","EMAIL_REGEXP","getEmailValidationSchema","getTranslateCreateCustomerError","passwordRequirements","description","numeric","alpha","minLength","password","withLanguage","withFormik","handleSubmit","onSubmit","mapPropsToValues","acceptsMarketingEmails","validationSchema","requirements","getCreateCustomerValidationSchema","getPasswordRequirements","createAccountError","isCreatingAccount","onCancel","isFloatingLabelEnabled","createAccountErrorMessage","isRequestError","splitMessage","Form","Fieldset","Alert","DynamicFormField","autocomplete","extraClass","parentFieldName","disabled","href","preventDefault","onChange","renderInput","TextInput","autoComplete","labelContent","FormField","input","onSendLoginEmail","isOpen","isSendingEmail","emailHasBeenRequested","onRequestClose","sentEmailError","sentEmail","submitForm","formEmail","modalHeaderStringId","okButton","footer","LoadingSpinner","sent_email","TranslatedLink","form","expiry","minutes","Math","round","Modal","additionalBodyClassName","additionalModalClassName","header","ModalHeader","shouldShowCloseButton","PrivacyPolicyCheckboxFieldLink","CheckboxFormField","PrivacyPolicyFieldset","PrivacyPolicyAutoConsent","getPrivacyPolicyValidationSchema","isRequired","schemaFields","privacyPolicy","oneOf","requiresMarketingConsent","Input","checked","Label","htmlFor","defaultShouldSubscribe","shouldSubscribe","onContinueAsGuest","privacyPolicyUrl","isExpressPrivacyPolicy","baseSchema","canSubscribe","checkoutButtons","continueAsGuestButtonLabelId","onChangeEmail","onShowLogin","renderField","fieldProps","legend","Legend","hidden","BasicFormField","withIconContainer","viewBox","xmlns","d","Toggle","openByDefault","toggle","onSignIn","canCancel","forgotPasswordUrl","isSignInEmailEnabled","isSigningIn","onCreateAccount","signInError","shouldShowCreateAccountLink","viewType","changeEmailLink","mapErrorMessage","rel","target","mapCreateAccountFromFormValues","mapCustomFormFieldsFromFormValues","setStatus","valSuccess","continueAsAGuestButton","setContinueAsAGuestButton","emailValue","setEmailValue","authentication","setAuthentication","isStripeLoading","setIsStripeLoading","isNewAuth","setIsNewAuth","handleOnClickSubmitButton","setEmailCallback","authenticated","isComplete","handleLoading","mounted","stripeupe","onEmailChange","getStyles","getStripeStyles","gatewayId","getStylesFromElement","properties","parentContainer","getElementById","getAppliedStyles","formInput","formLabel","formError","labelText","color","fieldText","fieldPlaceholderText","fieldErrorText","fieldBackground","fieldInnerShadow","fieldBorder","buttonText","display","placeholder","isEmailLoginFormOpen","isReady","hasRequestedLoginEmail","closeEmailLoginFormForm","handleEmailLoginClicked","draftEmail","handleSendLoginEmail","sendLoginEmail","handleContinueAsGuest","formValues","continueAsGuest","hasBillingId","onChangeViewType","onContinueAsGuestError","onSubscribeToNewsletter","updateSubscriptionWhenUnchecked","acceptsMarketingNewsletter","acceptsAbandonedCartEmails","shouldEncourageSignIn","isStripeLinkAuthenticated","executePaymentMethodCheckoutOrContinue","handleSignIn","credentials","signIn","onSignInError","continueWithCheckoutCallback","track","handleCreateAccount","createAccount","onAccountCreated","showCreateAccount","handleCancelCreateAccount","clearError","handleCancelSignIn","handleChangeEmail","handleShowLogin","checkoutPaymentMethodExecuted","onReady","shouldRenderGuestForm","shouldRenderCreateAccountForm","shouldRenderSubscriptionForm","shouldRenderLoginForm","renderEmailLoginLinkForm","renderLoginForm","renderGuestForm","renderCreateAccountForm","renderSubscriptionForm","checkoutButtonIds","isContinuingAsGuest","isSubscribed","isWalletButtonsOnTop","isLoadingGuestForm","isSendingSignInEmail","signInEmailError","signInEmail","customerAccountFields","isEmbedded","isGuestEnabled","isAccountCreationEnabled","Component","withRecurly","withAnalytics","getCustomerAccountFields","getSignInEmail","getSignInError","getSignInEmailError","getCreateCustomerAccountError","isInitializingCustomer","isCreatingCustomerAccount","shopperConfig","showNewsletterSignup","createCustomerAccount","sendSignInEmail","defaultNewsletterSignup","links","forgotPasswordLink","guestCheckoutEnabled","signInCustomer","useFloatingLabel","Customer","width","icon","dangerouslySetInnerHTML","__html","banners","promotion","banner","index","isUsingMultiShipping","consignments","some","consignment","lineItemIds","hasUnassignedLineItems","compactView","selectedShippingOption","StaticAddress","PoweredByPaypalConnectLabel","StaticConsignmentItemList","StaticShippingOption","displayAdditionalInformation","getLanguageService","title","ShippingOptionExpiredError","role","heading","isActive","isEditable","onEdit","summary","isClosed","containerRef","createRef","contentRef","handleTransitionEnd","node","done","addEventListener","onAnimationEnd","focusStep","componentDidUpdate","prevProps","timeoutRef","clearTimeout","suggestion","ref","renderContent","isBusy","MobileView","matched","CSSTransition","addEndListener","classNames","enter","exit","in","mountOnEnter","onExited","timeout","unmountOnExit","delay","matchMedia","getTransitionDelay","getChildInput","getScrollPosition","onExpanded","focus","isNaN","scrollTo","current","getParentContainer","topOffset","innerHeight","getBoundingClientRect","scrollY","pageYOffset","parentElement","classList","contains","timeoutDelay","parseFloat","getComputedStyle","transitionDuration","CheckoutStepType","lineItem","isShippingRequired","customItems","getCustomerStepStatus","createSelector","hasEmail","isUsingWallet","getBillingStepStatus","billingAddressFields","hasAddress","billingAddressCustomFields","hasCustomFields","isAmazonPayBillingStepComplete","getShippingStepStatus","getShippingAddress","getConsignments","shippingAddress","shippingAddressFields","hasOptions","hasSelectedShippingOptions","hasUnassignedItems","getPaymentStepStatus","getOrder","customerStep","shippingStep","billingStep","paymentStep","steps","compact","defaultActiveStep","isPrevStepComplete","slice","prevStep","Billing","lazy","retry","CartSummary","Payment","Shipping","isBillingSameAsShipping","isRedirecting","isMultiShippingMode","isHidingStepNumbers","handleToggleMultiShipping","navigateToNextIncompleteStep","activeStepIndex","findIndex","activeStep","previousStep","navigateToStep","embeddedMessenger","postComplete","embeddedSupport","handleCartChangedError","handleConsignmentsUpdated","prevHasSelectedShippingOptions","activeStepType","defaultStepType","newHasSelectedShippingOptions","isDefaultStepPaymentOrBilling","isShippingStepFinished","handleCloseErrorModal","handleExpanded","handleUnhandledError","handleError","log","postError","handleEditStep","handleReady","isDefault","handleNewsletterSubscription","subscribed","handleSignOut","cartUrl","isPriceHiddenFromGuests","postSignedOut","setCustomerViewType","handleShippingNextStep","handleShippingSignIn","handleShippingCreateAccount","customerViewType","createAccountUrl","handleBeforeExit","unsubscribeFromConsignments","removeEventListener","previousProps","coupons","addedCoupon","discountedAmount","coupon","discount","cartAmount","shipping_tier","items","digitalItems","giftCertificates","itemList","itemCoupons","itemPromotions","itemQuantity","quantity","itemFullPrice","listPrice","amount","itemDiscountedPrice","salePrice","couponAmount","discounts","item_id","productId","item_name","item_variant","item_brand","brand","price","toFixed","promotions","checkoutId","createEmbeddedMessenger","embeddedStylesheet","subscribeToConsignments","params","include","siteLink","errorFlashMessages","getFlashMessages","messenger","parentOrigin","receiveStyles","styles","append","postFrameLoaded","contentId","postLoaded","hasMultiShippingEnabled","checkoutBillingSameAsShippingEnabled","removeStepNumbersFlag","defaultNewsletterSignupOption","errorModal","isCustomError","ErrorModal","onClose","isPending","checkoutHeader","scrollIntoView","behavior","block","inline","LazyContainer","renderStep","renderCartSummary","renderCustomerStep","renderShippingStep","renderBillingStep","renderPaymentStep","hasCartChanged","loadingSkeleton","AddressFormSkeleton","cartHasChanged","navigateNextStep","onToggleMultiShipping","StaticBillingAddress","errorLogger","ChecklistSkeleton","onCartChangedError","onFinalize","onSubmitError","errors","statuses","submitOrderError","getSubmitOrderError","checkoutUserExperienceSettings","walletButtonsOnTop","floatingLabelEnabled","loginLink","createAccountLink","cartLink","displaySettings","hidePriceFromGuests","subscribeToConsignmentsSelector","subscriber","walletButtonsOnTopFlag","isLoadingCheckout","Checkout","createCheckoutService","locale","getLocale","shouldWarnMutation","createEmbeddedCheckoutStylesheet","createErrorLogger","sentry","sentryConfig","errorTypes","publicPath","sampleRate","sentrySampleRate","w","s","l","getTime","f","getElementsByTagName","j","createElement","async","src","parentNode","insertBefore","ErrorBoundary","logger","LocaleProvider","CheckoutProvider","AnalyticsProvider","createEmbeddedCheckoutMessenger","captureStackTrace","stack","setDefaultValues","defaultError","defaultTitle","aria","labelledby","handleOnRequestClose","nativeEvent","renderFooter","renderHeader","renderBody","IconError","renderErrorCode","shouldShowErrorCode","errorCode","computeErrorCode","toUpperCase","setPrototypeOf","object","__proto__","ErrorLevelType","customConsole","console","tags","level","meta","Info","info","Warning","warn","SeverityLevelEnum","FILENAME_PREFIX","handleBeforeSend","hint","exception","shouldReportExceptions","originalException","handleRewriteFrame","frame","filename","RegExp","consoleLogger","beforeSend","denyUrls","integrations","onerror","onunhandledrejection","iteratee","scope","setTags","setLevel","mapToSentryLevel","setExtras","setFingerprint","INFO","WARNING","Debug","DEBUG","ERROR","exceptions","stacktrace","frames","startsWith","serviceConfig","customError","obj","hasOwnProperty","call","isResolvableComponent","query","components","results","entries","resolveIds","resolverId","component","default","BD","BE","BF","BG","BA","BB","WF","BL","BM","BN","BO","BH","BI","BJ","BT","JM","BV","BW","WS","BQ","BR","BS","JE","BY","BZ","RU","RW","RS","TL","RE","TM","TJ","RO","TK","GW","GU","GT","GS","GR","GQ","GP","JP","GY","GG","GF","GE","GD","GB","GA","SV","GN","GM","GL","GI","GH","OM","TN","JO","HR","HT","HU","HK","HN","HM","VE","PR","PS","PW","PT","SJ","PY","IQ","PA","PF","PG","PE","PK","PH","PN","PL","PM","ZM","EH","EE","EG","ZA","EC","IT","VN","SB","ET","SO","ZW","SA","ES","ER","ME","MD","MG","MF","MA","MC","UZ","MM","ML","MO","MN","MH","MK","MU","MT","MW","MV","MQ","MP","MS","MR","IM","UG","TZ","MY","MX","IL","FR","IO","SH","FI","FJ","FK","FM","FO","NI","NL","NO","NA","VU","NC","NE","NF","NG","NZ","NP","NR","NU","CK","XK","CI","CH","CO","CN","CM","CL","CC","CA","CG","CF","CD","CZ","CY","CX","CR","CW","CV","CU","SZ","SY","SX","KG","KE","SS","SR","KI","KH","KN","KM","ST","SK","KR","SI","KP","KW","SN","SM","SL","SC","KZ","KY","SG","SE","SD","DO","DM","DJ","DK","VG","DE","YE","DZ","US","UY","YT","UM","LB","LC","LA","TV","TW","TT","TR","LK","LI","LV","TO","LT","LU","LR","LS","TH","TF","TG","TD","TC","LY","VA","VC","AE","AD","AG","AF","AI","VI","IS","IR","AM","AL","AO","AQ","AS","AR","AU","AT","AW","IN","AX","AZ","IE","ID","UA","QA","MZ","transformPhoneNumber","removeLeadZeros","parseInt","phoneOnlyNumbers","dialingCode","countryDialingCodes","prefix","phoneWithCountryCode","transformUserData","user","Set","stateRegion","zipCode","addresses","isUSCountry","isUKCountry","add","toLowerCase","stateOrProvinceAbbreviation","firstFiveDigits","substring","user_id","is_guest","from","first_name","last_name","state_region","zip_code","dataLayer","trackAddCoupon","ecommerce","trackAddShippingInfo","trackCheckoutProgress","stepName","event_info","form_name","form_step_name","trackPurchase","trackUserChange","trackLogin","trackGuest","trackSignUp","sign_up_location","EMPTY_ARRAY","freeze","lastPathName","pop","DEFAULT_OPTIONS","count","interval","toCustomerCurrency","getPasswordRequirementsFromConfig","minlength","allSlashes","toCSSRule","selector","mergedStyles","pickBy","kebabCase","parse","rules","secondaryText","secondaryHeading","link","hover","button","active","secondaryButton","select","checkbox","radio","checklist","discountBanner","loadingBanner","orderSummary","embeddedCheckoutStyleParser","_parser","head","appendChild","sheet","CSSStyleSheet","rule","insertRule","appendStylesheet","maxValue","minValue","strict","nullable","transform","originalValue","requiredErrorMessage","customFieldsObject","forIn","isDate","padMonth","padStart","getMonth","padDay","getDate","getFullYear","fieldId","toResolvableComponent","catch","hasProto","isGiftCertificatePayment","path","currentScript","configurePublicPath","scriptPath","substr","renderCheckout","configuredPublicPath","CheckoutApp","configure","RECURLY_PUBLIC_KEY","renderOrderConfirmation","OrderConfirmationApp","requestSender","create","put","renderPasswordInput","renderPasswordConfirmationInput","passwordLabelContent","passwordConfirmationLabelContent","confirmPassword","onSignUp","isSigningUp","customerCanBeCreated","AccountCreationRequirementsError","AccountCreationFailedError","isDefaultOrderPayment","isStoreCreditPayment","gatewayPayment","detail","instructions","mapFromPayments","remaining","used","balance","purchaseDate","getStoreCreditAmount","total","mapToOrderSummarySubtotalsProps","baseAmount","discountAmount","isTaxIncluded","shippingCostBeforeDiscount","handlingCostTotal","giftWrappingCostTotal","taxes","fees","subtotalAmount","shippingAmount","giftWrappingAmount","storeCreditAmount","handlingAmount","MandateTextComponent","mandateText","keys","PaymentsWithMandates","paymentsWithMandates","mandate","isPaymentWithMandate","OrderStatusMessage","orderNumber","orderStatus","supportEmail","supportPhoneNumber","hasDigitalItems","isDownloadable","handleClick","throttle","print","OrderSummary","OrderSummaryDrawer","handleErrorModalClose","handleSignUp","hasSignedUp","loadOrder","purchaseData","purchase","transaction_id","affiliation","storeName","orderAmount","tax","taxTotal","shipping","shippingCostTotal","partialSum","isLoadingOrder","paymentInstructions","orderEmail","storePhoneNumber","renderGuestSignUp","shouldShowPasswordForm","renderOrderSummary","renderErrorModal","shopperCurrency","headerLink","isUpdatedCartSummayModal","storeCurrency","OrderConfirmation","accountService","newsletter","PaymentMethodIdExtended","recurlyId","process","env","apiEndpoint","FRONTEND_API_ENDPOINT","recurlyBcAppId","RECURLY_BC_APP_ID","itemId","isNil","parentId","findLineItems","getLineItemsCount","availableShippingOptions","addedByPromotion","imageUrl","alt","transitTime","additionalDescription","ShopperCurrency","cost","AlertType","Success","renderDefaultIcon","ButtonVariant","ButtonSize","getClassName","isFullWidth","Primary","Secondary","Action","Small","Tiny","Large","InnerField","InnerFieldInput","hasError","getIn","prevForm","prevField","nextForm","nextField","nextProps","renderInnerField","Field","errorId","forwardRef","withDate","date","inputFormat","handleDateChange","dateValue","DynamicFormFieldType","IconChevronDown","optionValue","CheckboxInput","isArray","calendarClassName","dateFormat","maxDate","minDate","placeholderText","popperClassName","selected","TextArea","onSelectedAll","onSelectedNone","handleSelectAllClick","handleSelectNoneClick","MultiCheckboxFormField","remove","handleSelectAll","checkedValues","difference","val","handleSelectNone","handleInputChange","FormFieldContainer","FormFieldError","renderProps","pick","FieldArray","secret","fieldLabel","maxLength","inputId","fieldInputId","isFloatingLabelSupportedFieldType","labelComponent","dynamicFormFieldType","helperLabel","rows","useRef","focusOnError","erroredFormField","preventScroll","offsetParent","handleSubmitCapture","memoizeOne","setSubmitted","noValidate","onSubmitCapture","isSubmitted","renderMessage","ErrorMessage","appearFocused","IconSize","OriginalComponent","Medium","filterError","fallback","Suspense","unmountContentWhenLoading","closeButtonLabel","additionalHeaderClassName","handleClose","ariaHideApp","bodyOpenClassName","base","afterOpen","beforeClose","closeTimeoutMS","overlayClassName","shouldCloseOnEsc","shouldCloseOnOverlayClick","queries","mobile","MOBILE_MAX_WIDTH","SMALL_SCREEN_MAX_WIDTH","element","declaration","propertyName","getPropertyValue","parseAnchor","div","innerHTML","anchor","anchorSiblings","outerHTML","getDerivedStateFromError","componentDidCatch","createInjectHoc","ContextComponent","pickProps","InnerDecoratedComponent","DecoratedComponent","injectedProps","mergedProps","displayName","createMappableInjectHoc","mapToPropsOrFactory","mapToProps","isMapToPropsFactory","mappedProps","useLocale","languageService","getContextValue","createCurrencyService","inputDateFormat","unsubscribe","ADD_ATTR","translatedString","parsedString","FALLBACK_LOCALE","createLanguageService","fallbackLocale","fallbackTranslations","initializeLanguageService","defaultLocale","defaultTranslations","CheckoutContext","useCheckout","normalizeAddress","omit","paypalConnectAddress","bcAddress","isEqual","isEqualToPayPalConnectAddress","getPaymentProviderCustomer","bcAddresses","mergedBcAndPayPalConnectAddresses","shouldShowPayPalConnectLabel","content","shouldShowChildren","FormContext","FormProvider","initialIsSubmitted","contextValue","Provider","isFunction","cx","cy","r"],"sourceRoot":""}