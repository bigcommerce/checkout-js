{"version":3,"file":"904-20a39b97.js","mappings":"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","sources":["webpack://checkout/../src/index.ts","webpack://checkout/./node_modules/downshift/dist/downshift.cjs.js"],"sourcesContent":["// Compute what scrolling needs to be done on required scrolling boxes for target to be in view\n\n// The type names here are named after the spec to make it easier to find more information around what they mean:\n// To reduce churn and reduce things that need be maintained things from the official TS DOM library is used here\n// https://drafts.csswg.org/cssom-view/\n\n// For a definition on what is \"block flow direction\" exactly, check this: https://drafts.csswg.org/css-writing-modes-4/#block-flow-direction\n\n// add support for visualViewport object currently implemented in chrome\ninterface visualViewport {\n  height: number\n  width: number\n}\n\ntype ScrollLogicalPosition = 'start' | 'center' | 'end' | 'nearest'\n// This new option is tracked in this PR, which is the most likely candidate at the time: https://github.com/w3c/csswg-drafts/pull/1805\ntype ScrollMode = 'always' | 'if-needed'\n// New option that skips auto-scrolling all nodes with overflow: hidden set\n// See FF implementation: https://hg.mozilla.org/integration/fx-team/rev/c48c3ec05012#l7.18\ntype SkipOverflowHiddenElements = boolean\n\ninterface Options {\n  block?: ScrollLogicalPosition\n  inline?: ScrollLogicalPosition\n  scrollMode?: ScrollMode\n  boundary?: CustomScrollBoundary\n  skipOverflowHiddenElements?: SkipOverflowHiddenElements\n}\n\n// Custom behavior, not in any spec\ntype CustomScrollBoundaryCallback = (parent: Element) => boolean\ntype CustomScrollBoundary = Element | CustomScrollBoundaryCallback | null\ninterface CustomScrollAction {\n  el: Element\n  top: number\n  left: number\n}\n\n// @TODO better shadowdom test, 11 = document fragment\nfunction isElement(el: any): el is Element {\n  return typeof el === 'object' && el != null && el.nodeType === 1\n}\n\nfunction canOverflow(\n  overflow: string | null,\n  skipOverflowHiddenElements?: boolean\n) {\n  if (skipOverflowHiddenElements && overflow === 'hidden') {\n    return false\n  }\n\n  return overflow !== 'visible' && overflow !== 'clip'\n}\n\nfunction getFrameElement(el: Element) {\n  if (!el.ownerDocument || !el.ownerDocument.defaultView) {\n    return null\n  }\n\n  try {\n    return el.ownerDocument.defaultView.frameElement\n  } catch (e) {\n    return null\n  }\n}\n\nfunction isHiddenByFrame(el: Element): boolean {\n  const frame = getFrameElement(el)\n  if (!frame) {\n    return false\n  }\n\n  return (\n    frame.clientHeight < el.scrollHeight || frame.clientWidth < el.scrollWidth\n  )\n}\n\nfunction isScrollable(el: Element, skipOverflowHiddenElements?: boolean) {\n  if (el.clientHeight < el.scrollHeight || el.clientWidth < el.scrollWidth) {\n    const style = getComputedStyle(el, null)\n    return (\n      canOverflow(style.overflowY, skipOverflowHiddenElements) ||\n      canOverflow(style.overflowX, skipOverflowHiddenElements) ||\n      isHiddenByFrame(el)\n    )\n  }\n\n  return false\n}\n/**\n * Find out which edge to align against when logical scroll position is \"nearest\"\n * Interesting fact: \"nearest\" works similarily to \"if-needed\", if the element is fully visible it will not scroll it\n *\n * Legends:\n * ┌────────┐ ┏ ━ ━ ━ ┓\n * │ target │   frame\n * └────────┘ ┗ ━ ━ ━ ┛\n */\nfunction alignNearest(\n  scrollingEdgeStart: number,\n  scrollingEdgeEnd: number,\n  scrollingSize: number,\n  scrollingBorderStart: number,\n  scrollingBorderEnd: number,\n  elementEdgeStart: number,\n  elementEdgeEnd: number,\n  elementSize: number\n) {\n  /**\n   * If element edge A and element edge B are both outside scrolling box edge A and scrolling box edge B\n   *\n   *          ┌──┐\n   *        ┏━│━━│━┓\n   *          │  │\n   *        ┃ │  │ ┃        do nothing\n   *          │  │\n   *        ┗━│━━│━┛\n   *          └──┘\n   *\n   *  If element edge C and element edge D are both outside scrolling box edge C and scrolling box edge D\n   *\n   *    ┏ ━ ━ ━ ━ ┓\n   *   ┌───────────┐\n   *   │┃         ┃│        do nothing\n   *   └───────────┘\n   *    ┗ ━ ━ ━ ━ ┛\n   */\n  if (\n    (elementEdgeStart < scrollingEdgeStart &&\n      elementEdgeEnd > scrollingEdgeEnd) ||\n    (elementEdgeStart > scrollingEdgeStart && elementEdgeEnd < scrollingEdgeEnd)\n  ) {\n    return 0\n  }\n\n  /**\n   * If element edge A is outside scrolling box edge A and element height is less than scrolling box height\n   *\n   *          ┌──┐\n   *        ┏━│━━│━┓         ┏━┌━━┐━┓\n   *          └──┘             │  │\n   *  from  ┃      ┃     to  ┃ └──┘ ┃\n   *\n   *        ┗━ ━━ ━┛         ┗━ ━━ ━┛\n   *\n   * If element edge B is outside scrolling box edge B and element height is greater than scrolling box height\n   *\n   *        ┏━ ━━ ━┓         ┏━┌━━┐━┓\n   *                           │  │\n   *  from  ┃ ┌──┐ ┃     to  ┃ │  │ ┃\n   *          │  │             │  │\n   *        ┗━│━━│━┛         ┗━│━━│━┛\n   *          │  │             └──┘\n   *          │  │\n   *          └──┘\n   *\n   * If element edge C is outside scrolling box edge C and element width is less than scrolling box width\n   *\n   *       from                 to\n   *    ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *  ┌───┐                 ┌───┐\n   *  │ ┃ │       ┃         ┃   │     ┃\n   *  └───┘                 └───┘\n   *    ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   *\n   * If element edge D is outside scrolling box edge D and element width is greater than scrolling box width\n   *\n   *       from                 to\n   *    ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *        ┌───────────┐   ┌───────────┐\n   *    ┃   │     ┃     │   ┃         ┃ │\n   *        └───────────┘   └───────────┘\n   *    ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   */\n  if (\n    (elementEdgeStart <= scrollingEdgeStart && elementSize <= scrollingSize) ||\n    (elementEdgeEnd >= scrollingEdgeEnd && elementSize >= scrollingSize)\n  ) {\n    return elementEdgeStart - scrollingEdgeStart - scrollingBorderStart\n  }\n\n  /**\n   * If element edge B is outside scrolling box edge B and element height is less than scrolling box height\n   *\n   *        ┏━ ━━ ━┓         ┏━ ━━ ━┓\n   *\n   *  from  ┃      ┃     to  ┃ ┌──┐ ┃\n   *          ┌──┐             │  │\n   *        ┗━│━━│━┛         ┗━└━━┘━┛\n   *          └──┘\n   *\n   * If element edge A is outside scrolling box edge A and element height is greater than scrolling box height\n   *\n   *          ┌──┐\n   *          │  │\n   *          │  │             ┌──┐\n   *        ┏━│━━│━┓         ┏━│━━│━┓\n   *          │  │             │  │\n   *  from  ┃ └──┘ ┃     to  ┃ │  │ ┃\n   *                           │  │\n   *        ┗━ ━━ ━┛         ┗━└━━┘━┛\n   *\n   * If element edge C is outside scrolling box edge C and element width is greater than scrolling box width\n   *\n   *           from                 to\n   *        ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *  ┌───────────┐           ┌───────────┐\n   *  │     ┃     │   ┃       │ ┃         ┃\n   *  └───────────┘           └───────────┘\n   *        ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   *\n   * If element edge D is outside scrolling box edge D and element width is less than scrolling box width\n   *\n   *           from                 to\n   *        ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *                ┌───┐             ┌───┐\n   *        ┃       │ ┃ │       ┃     │   ┃\n   *                └───┘             └───┘\n   *        ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   *\n   */\n  if (\n    (elementEdgeEnd > scrollingEdgeEnd && elementSize < scrollingSize) ||\n    (elementEdgeStart < scrollingEdgeStart && elementSize > scrollingSize)\n  ) {\n    return elementEdgeEnd - scrollingEdgeEnd + scrollingBorderEnd\n  }\n\n  return 0\n}\n\nexport default (target: Element, options: Options): CustomScrollAction[] => {\n  //TODO: remove this hack when microbundle will support typescript >= 4.0\n  const windowWithViewport = (window as unknown) as Window & {\n    visualViewport: visualViewport\n  }\n\n  const {\n    scrollMode,\n    block,\n    inline,\n    boundary,\n    skipOverflowHiddenElements,\n  } = options\n  // Allow using a callback to check the boundary\n  // The default behavior is to check if the current target matches the boundary element or not\n  // If undefined it'll check that target is never undefined (can happen as we recurse up the tree)\n  const checkBoundary =\n    typeof boundary === 'function' ? boundary : (node: any) => node !== boundary\n\n  if (!isElement(target)) {\n    throw new TypeError('Invalid target')\n  }\n\n  // Used to handle the top most element that can be scrolled\n  const scrollingElement = document.scrollingElement || document.documentElement\n\n  // Collect all the scrolling boxes, as defined in the spec: https://drafts.csswg.org/cssom-view/#scrolling-box\n  const frames: Element[] = []\n  let cursor: Element | null = target\n  while (isElement(cursor) && checkBoundary(cursor)) {\n    // Move cursor to parent\n    cursor = cursor.parentElement\n\n    // Stop when we reach the viewport\n    if (cursor === scrollingElement) {\n      frames.push(cursor)\n      break\n    }\n\n    // Skip document.body if it's not the scrollingElement and documentElement isn't independently scrollable\n    if (\n      cursor != null &&\n      cursor === document.body &&\n      isScrollable(cursor) &&\n      !isScrollable(document.documentElement)\n    ) {\n      continue\n    }\n\n    // Now we check if the element is scrollable, this code only runs if the loop haven't already hit the viewport or a custom boundary\n    if (cursor != null && isScrollable(cursor, skipOverflowHiddenElements)) {\n      frames.push(cursor)\n    }\n  }\n\n  // Support pinch-zooming properly, making sure elements scroll into the visual viewport\n  // Browsers that don't support visualViewport will report the layout viewport dimensions on document.documentElement.clientWidth/Height\n  // and viewport dimensions on window.innerWidth/Height\n  // https://www.quirksmode.org/mobile/viewports2.html\n  // https://bokand.github.io/viewport/index.html\n  const viewportWidth = windowWithViewport.visualViewport\n    ? windowWithViewport.visualViewport.width\n    : innerWidth\n  const viewportHeight = windowWithViewport.visualViewport\n    ? windowWithViewport.visualViewport.height\n    : innerHeight\n\n  // Newer browsers supports scroll[X|Y], page[X|Y]Offset is\n  const viewportX = window.scrollX || pageXOffset\n  const viewportY = window.scrollY || pageYOffset\n\n  const {\n    height: targetHeight,\n    width: targetWidth,\n    top: targetTop,\n    right: targetRight,\n    bottom: targetBottom,\n    left: targetLeft,\n  } = target.getBoundingClientRect()\n\n  // These values mutate as we loop through and generate scroll coordinates\n  let targetBlock: number =\n    block === 'start' || block === 'nearest'\n      ? targetTop\n      : block === 'end'\n      ? targetBottom\n      : targetTop + targetHeight / 2 // block === 'center\n  let targetInline: number =\n    inline === 'center'\n      ? targetLeft + targetWidth / 2\n      : inline === 'end'\n      ? targetRight\n      : targetLeft // inline === 'start || inline === 'nearest\n\n  // Collect new scroll positions\n  const computations: CustomScrollAction[] = []\n  // In chrome there's no longer a difference between caching the `frames.length` to a var or not, so we don't in this case (size > speed anyways)\n  for (let index = 0; index < frames.length; index++) {\n    const frame = frames[index]\n\n    // @TODO add a shouldScroll hook here that allows userland code to take control\n\n    const {\n      height,\n      width,\n      top,\n      right,\n      bottom,\n      left,\n    } = frame.getBoundingClientRect()\n\n    // If the element is already visible we can end it here\n    // @TODO targetBlock and targetInline should be taken into account to be compliant with https://github.com/w3c/csswg-drafts/pull/1805/files#diff-3c17f0e43c20f8ecf89419d49e7ef5e0R1333\n    if (\n      scrollMode === 'if-needed' &&\n      targetTop >= 0 &&\n      targetLeft >= 0 &&\n      targetBottom <= viewportHeight &&\n      targetRight <= viewportWidth &&\n      targetTop >= top &&\n      targetBottom <= bottom &&\n      targetLeft >= left &&\n      targetRight <= right\n    ) {\n      // Break the loop and return the computations for things that are not fully visible\n      return computations\n    }\n\n    const frameStyle = getComputedStyle(frame)\n    const borderLeft = parseInt(frameStyle.borderLeftWidth as string, 10)\n    const borderTop = parseInt(frameStyle.borderTopWidth as string, 10)\n    const borderRight = parseInt(frameStyle.borderRightWidth as string, 10)\n    const borderBottom = parseInt(frameStyle.borderBottomWidth as string, 10)\n\n    let blockScroll: number = 0\n    let inlineScroll: number = 0\n\n    // The property existance checks for offfset[Width|Height] is because only HTMLElement objects have them, but any Element might pass by here\n    // @TODO find out if the \"as HTMLElement\" overrides can be dropped\n    const scrollbarWidth =\n      'offsetWidth' in frame\n        ? (frame as HTMLElement).offsetWidth -\n          (frame as HTMLElement).clientWidth -\n          borderLeft -\n          borderRight\n        : 0\n    const scrollbarHeight =\n      'offsetHeight' in frame\n        ? (frame as HTMLElement).offsetHeight -\n          (frame as HTMLElement).clientHeight -\n          borderTop -\n          borderBottom\n        : 0\n\n    if (scrollingElement === frame) {\n      // Handle viewport logic (document.documentElement or document.body)\n\n      if (block === 'start') {\n        blockScroll = targetBlock\n      } else if (block === 'end') {\n        blockScroll = targetBlock - viewportHeight\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(\n          viewportY,\n          viewportY + viewportHeight,\n          viewportHeight,\n          borderTop,\n          borderBottom,\n          viewportY + targetBlock,\n          viewportY + targetBlock + targetHeight,\n          targetHeight\n        )\n      } else {\n        // block === 'center' is the default\n        blockScroll = targetBlock - viewportHeight / 2\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - viewportWidth / 2\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - viewportWidth\n      } else {\n        // inline === 'nearest' is the default\n        inlineScroll = alignNearest(\n          viewportX,\n          viewportX + viewportWidth,\n          viewportWidth,\n          borderLeft,\n          borderRight,\n          viewportX + targetInline,\n          viewportX + targetInline + targetWidth,\n          targetWidth\n        )\n      }\n\n      // Apply scroll position offsets and ensure they are within bounds\n      // @TODO add more test cases to cover this 100%\n      blockScroll = Math.max(0, blockScroll + viewportY)\n      inlineScroll = Math.max(0, inlineScroll + viewportX)\n    } else {\n      // Handle each scrolling frame that might exist between the target and the viewport\n\n      if (block === 'start') {\n        blockScroll = targetBlock - top - borderTop\n      } else if (block === 'end') {\n        blockScroll = targetBlock - bottom + borderBottom + scrollbarHeight\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(\n          top,\n          bottom,\n          height,\n          borderTop,\n          borderBottom + scrollbarHeight,\n          targetBlock,\n          targetBlock + targetHeight,\n          targetHeight\n        )\n      } else {\n        // block === 'center' is the default\n        blockScroll = targetBlock - (top + height / 2) + scrollbarHeight / 2\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline - left - borderLeft\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - (left + width / 2) + scrollbarWidth / 2\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - right + borderRight + scrollbarWidth\n      } else {\n        // inline === 'nearest' is the default\n        inlineScroll = alignNearest(\n          left,\n          right,\n          width,\n          borderLeft,\n          borderRight + scrollbarWidth,\n          targetInline,\n          targetInline + targetWidth,\n          targetWidth\n        )\n      }\n\n      const { scrollLeft, scrollTop } = frame\n      // Ensure scroll coordinates are not out of bounds while applying scroll offsets\n      blockScroll = Math.max(\n        0,\n        Math.min(\n          scrollTop + blockScroll,\n          frame.scrollHeight - height + scrollbarHeight\n        )\n      )\n      inlineScroll = Math.max(\n        0,\n        Math.min(\n          scrollLeft + inlineScroll,\n          frame.scrollWidth - width + scrollbarWidth\n        )\n      )\n\n      // Cache the offset so that parent frames can scroll this into view correctly\n      targetBlock += scrollTop - blockScroll\n      targetInline += scrollLeft - inlineScroll\n    }\n\n    computations.push({ el: frame, top: blockScroll, left: inlineScroll })\n  }\n\n  return computations\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar _objectWithoutPropertiesLoose = _interopDefault(require('@babel/runtime/helpers/objectWithoutPropertiesLoose'));\nvar _extends = _interopDefault(require('@babel/runtime/helpers/extends'));\nvar _assertThisInitialized = _interopDefault(require('@babel/runtime/helpers/assertThisInitialized'));\nvar _inheritsLoose = _interopDefault(require('@babel/runtime/helpers/inheritsLoose'));\nvar PropTypes = _interopDefault(require('prop-types'));\nvar react = require('react');\nvar reactIs = require('react-is');\nvar computeScrollIntoView = _interopDefault(require('compute-scroll-into-view'));\n\nvar idCounter = 0;\n/**\n * Accepts a parameter and returns it if it's a function\n * or a noop function if it's not. This allows us to\n * accept a callback, but not worry about it if it's not\n * passed.\n * @param {Function} cb the callback\n * @return {Function} a function\n */\n\nfunction cbToCb(cb) {\n  return typeof cb === 'function' ? cb : noop;\n}\n\nfunction noop() {}\n/**\n * Scroll node into view if necessary\n * @param {HTMLElement} node the element that should scroll into view\n * @param {HTMLElement} menuNode the menu element of the component\n */\n\n\nfunction scrollIntoView(node, menuNode) {\n  if (node === null) {\n    return;\n  }\n\n  var actions = computeScrollIntoView(node, {\n    boundary: menuNode,\n    block: 'nearest',\n    scrollMode: 'if-needed'\n  });\n  actions.forEach(function (_ref) {\n    var el = _ref.el,\n        top = _ref.top,\n        left = _ref.left;\n    el.scrollTop = top;\n    el.scrollLeft = left;\n  });\n}\n/**\n * @param {HTMLElement} parent the parent node\n * @param {HTMLElement} child the child node\n * @return {Boolean} whether the parent is the child or the child is in the parent\n */\n\n\nfunction isOrContainsNode(parent, child) {\n  return parent === child || parent.contains && parent.contains(child);\n}\n/**\n * Simple debounce implementation. Will call the given\n * function once after the time given has passed since\n * it was last called.\n * @param {Function} fn the function to call after the time\n * @param {Number} time the time to wait\n * @return {Function} the debounced function\n */\n\n\nfunction debounce(fn, time) {\n  var timeoutId;\n\n  function cancel() {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n    }\n  }\n\n  function wrapper() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    cancel();\n    timeoutId = setTimeout(function () {\n      timeoutId = null;\n      fn.apply(void 0, args);\n    }, time);\n  }\n\n  wrapper.cancel = cancel;\n  return wrapper;\n}\n/**\n * This is intended to be used to compose event handlers.\n * They are executed in order until one of them sets\n * `event.preventDownshiftDefault = true`.\n * @param {...Function} fns the event handler functions\n * @return {Function} the event handler to add to an element\n */\n\n\nfunction callAllEventHandlers() {\n  for (var _len2 = arguments.length, fns = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    fns[_key2] = arguments[_key2];\n  }\n\n  return function (event) {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n\n    return fns.some(function (fn) {\n      if (fn) {\n        fn.apply(void 0, [event].concat(args));\n      }\n\n      return event.preventDownshiftDefault || event.hasOwnProperty('nativeEvent') && event.nativeEvent.preventDownshiftDefault;\n    });\n  };\n}\n\nfunction handleRefs() {\n  for (var _len4 = arguments.length, refs = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    refs[_key4] = arguments[_key4];\n  }\n\n  return function (node) {\n    refs.forEach(function (ref) {\n      if (typeof ref === 'function') {\n        ref(node);\n      } else if (ref) {\n        ref.current = node;\n      }\n    });\n  };\n}\n/**\n * This generates a unique ID for an instance of Downshift\n * @return {String} the unique ID\n */\n\n\nfunction generateId() {\n  return String(idCounter++);\n}\n/**\n * Resets idCounter to 0. Used for SSR.\n */\n\n\nfunction resetIdCounter() {\n  idCounter = 0;\n}\n/**\n * @param {Object} param the downshift state and other relevant properties\n * @return {String} the a11y status message\n */\n\n\nfunction getA11yStatusMessage(_ref2) {\n  var isOpen = _ref2.isOpen,\n      selectedItem = _ref2.selectedItem,\n      resultCount = _ref2.resultCount,\n      previousResultCount = _ref2.previousResultCount,\n      itemToString = _ref2.itemToString;\n\n  if (!isOpen) {\n    return selectedItem ? itemToString(selectedItem) : '';\n  }\n\n  if (!resultCount) {\n    return 'No results are available.';\n  }\n\n  if (resultCount !== previousResultCount) {\n    return resultCount + \" result\" + (resultCount === 1 ? ' is' : 's are') + \" available, use up and down arrow keys to navigate. Press Enter key to select.\";\n  }\n\n  return '';\n}\n/**\n * Takes an argument and if it's an array, returns the first item in the array\n * otherwise returns the argument\n * @param {*} arg the maybe-array\n * @param {*} defaultValue the value if arg is falsey not defined\n * @return {*} the arg or it's first item\n */\n\n\nfunction unwrapArray(arg, defaultValue) {\n  arg = Array.isArray(arg) ?\n  /* istanbul ignore next (preact) */\n  arg[0] : arg;\n\n  if (!arg && defaultValue) {\n    return defaultValue;\n  } else {\n    return arg;\n  }\n}\n/**\n * @param {Object} element (P)react element\n * @return {Boolean} whether it's a DOM element\n */\n\n\nfunction isDOMElement(element) {\n  // then we assume this is react\n  return typeof element.type === 'string';\n}\n/**\n * @param {Object} element (P)react element\n * @return {Object} the props\n */\n\n\nfunction getElementProps(element) {\n  return element.props;\n}\n/**\n * Throws a helpful error message for required properties. Useful\n * to be used as a default in destructuring or object params.\n * @param {String} fnName the function name\n * @param {String} propName the prop name\n */\n\n\nfunction requiredProp(fnName, propName) {\n  // eslint-disable-next-line no-console\n  console.error(\"The property \\\"\" + propName + \"\\\" is required in \\\"\" + fnName + \"\\\"\");\n}\n\nvar stateKeys = ['highlightedIndex', 'inputValue', 'isOpen', 'selectedItem', 'type'];\n/**\n * @param {Object} state the state object\n * @return {Object} state that is relevant to downshift\n */\n\nfunction pickState(state) {\n  if (state === void 0) {\n    state = {};\n  }\n\n  var result = {};\n  stateKeys.forEach(function (k) {\n    if (state.hasOwnProperty(k)) {\n      result[k] = state[k];\n    }\n  });\n  return result;\n}\n/**\n * Normalizes the 'key' property of a KeyboardEvent in IE/Edge\n * @param {Object} event a keyboardEvent object\n * @return {String} keyboard key\n */\n\n\nfunction normalizeArrowKey(event) {\n  var key = event.key,\n      keyCode = event.keyCode;\n  /* istanbul ignore next (ie) */\n\n  if (keyCode >= 37 && keyCode <= 40 && key.indexOf('Arrow') !== 0) {\n    return \"Arrow\" + key;\n  }\n\n  return key;\n}\n/**\n * Simple check if the value passed is object literal\n * @param {*} obj any things\n * @return {Boolean} whether it's object literal\n */\n\n\nfunction isPlainObject(obj) {\n  return Object.prototype.toString.call(obj) === '[object Object]';\n}\n/**\n * Returns the new index in the list, in a circular way. If next value is out of bonds from the total,\n * it will wrap to either 0 or itemCount - 1.\n *\n * @param {number} moveAmount Number of positions to move. Negative to move backwards, positive forwards.\n * @param {number} baseIndex The initial position to move from.\n * @param {number} itemCount The total number of items.\n * @returns {number} The new index after the move.\n */\n\n\nfunction getNextWrappingIndex(moveAmount, baseIndex, itemCount) {\n  var itemsLastIndex = itemCount - 1;\n\n  if (typeof baseIndex !== 'number' || baseIndex < 0 || baseIndex >= itemCount) {\n    baseIndex = moveAmount > 0 ? -1 : itemsLastIndex + 1;\n  }\n\n  var newIndex = baseIndex + moveAmount;\n\n  if (newIndex < 0) {\n    newIndex = itemsLastIndex;\n  } else if (newIndex > itemsLastIndex) {\n    newIndex = 0;\n  }\n\n  return newIndex;\n}\n\nvar cleanupStatus = debounce(function () {\n  getStatusDiv().textContent = '';\n}, 500);\n/**\n * @param {String} status the status message\n * @param {Object} documentProp document passed by the user.\n */\n\nfunction setStatus(status, documentProp) {\n  var div = getStatusDiv(documentProp);\n\n  if (!status) {\n    return;\n  }\n\n  div.textContent = status;\n  cleanupStatus();\n}\n/**\n * Get the status node or create it if it does not already exist.\n * @param {Object} documentProp document passed by the user.\n * @return {HTMLElement} the status node.\n */\n\n\nfunction getStatusDiv(documentProp) {\n  if (documentProp === void 0) {\n    documentProp = document;\n  }\n\n  var statusDiv = documentProp.getElementById('a11y-status-message');\n\n  if (statusDiv) {\n    return statusDiv;\n  }\n\n  statusDiv = documentProp.createElement('div');\n  statusDiv.setAttribute('id', 'a11y-status-message');\n  statusDiv.setAttribute('role', 'status');\n  statusDiv.setAttribute('aria-live', 'polite');\n  statusDiv.setAttribute('aria-relevant', 'additions text');\n  Object.assign(statusDiv.style, {\n    border: '0',\n    clip: 'rect(0 0 0 0)',\n    height: '1px',\n    margin: '-1px',\n    overflow: 'hidden',\n    padding: '0',\n    position: 'absolute',\n    width: '1px'\n  });\n  documentProp.body.appendChild(statusDiv);\n  return statusDiv;\n}\n\nvar unknown = process.env.NODE_ENV !== \"production\" ? '__autocomplete_unknown__' : 0;\nvar mouseUp = process.env.NODE_ENV !== \"production\" ? '__autocomplete_mouseup__' : 1;\nvar itemMouseEnter = process.env.NODE_ENV !== \"production\" ? '__autocomplete_item_mouseenter__' : 2;\nvar keyDownArrowUp = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_arrow_up__' : 3;\nvar keyDownArrowDown = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_arrow_down__' : 4;\nvar keyDownEscape = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_escape__' : 5;\nvar keyDownEnter = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_enter__' : 6;\nvar keyDownHome = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_home__' : 7;\nvar keyDownEnd = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_end__' : 8;\nvar clickItem = process.env.NODE_ENV !== \"production\" ? '__autocomplete_click_item__' : 9;\nvar blurInput = process.env.NODE_ENV !== \"production\" ? '__autocomplete_blur_input__' : 10;\nvar changeInput = process.env.NODE_ENV !== \"production\" ? '__autocomplete_change_input__' : 11;\nvar keyDownSpaceButton = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_space_button__' : 12;\nvar clickButton = process.env.NODE_ENV !== \"production\" ? '__autocomplete_click_button__' : 13;\nvar blurButton = process.env.NODE_ENV !== \"production\" ? '__autocomplete_blur_button__' : 14;\nvar controlledPropUpdatedSelectedItem = process.env.NODE_ENV !== \"production\" ? '__autocomplete_controlled_prop_updated_selected_item__' : 15;\nvar touchEnd = process.env.NODE_ENV !== \"production\" ? '__autocomplete_touchend__' : 16;\n\nvar stateChangeTypes = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  unknown: unknown,\n  mouseUp: mouseUp,\n  itemMouseEnter: itemMouseEnter,\n  keyDownArrowUp: keyDownArrowUp,\n  keyDownArrowDown: keyDownArrowDown,\n  keyDownEscape: keyDownEscape,\n  keyDownEnter: keyDownEnter,\n  keyDownHome: keyDownHome,\n  keyDownEnd: keyDownEnd,\n  clickItem: clickItem,\n  blurInput: blurInput,\n  changeInput: changeInput,\n  keyDownSpaceButton: keyDownSpaceButton,\n  clickButton: clickButton,\n  blurButton: blurButton,\n  controlledPropUpdatedSelectedItem: controlledPropUpdatedSelectedItem,\n  touchEnd: touchEnd\n});\n\nvar Downshift =\n/*#__PURE__*/\nfunction () {\n  var Downshift =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(Downshift, _Component);\n\n    function Downshift(_props) {\n      var _this = _Component.call(this, _props) || this;\n\n      _this.id = _this.props.id || \"downshift-\" + generateId();\n      _this.menuId = _this.props.menuId || _this.id + \"-menu\";\n      _this.labelId = _this.props.labelId || _this.id + \"-label\";\n      _this.inputId = _this.props.inputId || _this.id + \"-input\";\n\n      _this.getItemId = _this.props.getItemId || function (index) {\n        return _this.id + \"-item-\" + index;\n      };\n\n      _this.input = null;\n      _this.items = [];\n      _this.itemCount = null;\n      _this.previousResultCount = 0;\n      _this.timeoutIds = [];\n\n      _this.internalSetTimeout = function (fn, time) {\n        var id = setTimeout(function () {\n          _this.timeoutIds = _this.timeoutIds.filter(function (i) {\n            return i !== id;\n          });\n          fn();\n        }, time);\n\n        _this.timeoutIds.push(id);\n      };\n\n      _this.setItemCount = function (count) {\n        _this.itemCount = count;\n      };\n\n      _this.unsetItemCount = function () {\n        _this.itemCount = null;\n      };\n\n      _this.setHighlightedIndex = function (highlightedIndex, otherStateToSet) {\n        if (highlightedIndex === void 0) {\n          highlightedIndex = _this.props.defaultHighlightedIndex;\n        }\n\n        if (otherStateToSet === void 0) {\n          otherStateToSet = {};\n        }\n\n        otherStateToSet = pickState(otherStateToSet);\n\n        _this.internalSetState(_extends({\n          highlightedIndex: highlightedIndex\n        }, otherStateToSet));\n      };\n\n      _this.clearSelection = function (cb) {\n        _this.internalSetState({\n          selectedItem: null,\n          inputValue: '',\n          highlightedIndex: _this.props.defaultHighlightedIndex,\n          isOpen: _this.props.defaultIsOpen\n        }, cb);\n      };\n\n      _this.selectItem = function (item, otherStateToSet, cb) {\n        otherStateToSet = pickState(otherStateToSet);\n\n        _this.internalSetState(_extends({\n          isOpen: _this.props.defaultIsOpen,\n          highlightedIndex: _this.props.defaultHighlightedIndex,\n          selectedItem: item,\n          inputValue: _this.props.itemToString(item)\n        }, otherStateToSet), cb);\n      };\n\n      _this.selectItemAtIndex = function (itemIndex, otherStateToSet, cb) {\n        var item = _this.items[itemIndex];\n\n        if (item == null) {\n          return;\n        }\n\n        _this.selectItem(item, otherStateToSet, cb);\n      };\n\n      _this.selectHighlightedItem = function (otherStateToSet, cb) {\n        return _this.selectItemAtIndex(_this.getState().highlightedIndex, otherStateToSet, cb);\n      };\n\n      _this.internalSetState = function (stateToSet, cb) {\n        var isItemSelected, onChangeArg;\n        var onStateChangeArg = {};\n        var isStateToSetFunction = typeof stateToSet === 'function'; // we want to call `onInputValueChange` before the `setState` call\n        // so someone controlling the `inputValue` state gets notified of\n        // the input change as soon as possible. This avoids issues with\n        // preserving the cursor position.\n        // See https://github.com/downshift-js/downshift/issues/217 for more info.\n\n        if (!isStateToSetFunction && stateToSet.hasOwnProperty('inputValue')) {\n          _this.props.onInputValueChange(stateToSet.inputValue, _extends({}, _this.getStateAndHelpers(), {}, stateToSet));\n        }\n\n        return _this.setState(function (state) {\n          state = _this.getState(state);\n          var newStateToSet = isStateToSetFunction ? stateToSet(state) : stateToSet; // Your own function that could modify the state that will be set.\n\n          newStateToSet = _this.props.stateReducer(state, newStateToSet); // checks if an item is selected, regardless of if it's different from\n          // what was selected before\n          // used to determine if onSelect and onChange callbacks should be called\n\n          isItemSelected = newStateToSet.hasOwnProperty('selectedItem'); // this keeps track of the object we want to call with setState\n\n          var nextState = {}; // this is just used to tell whether the state changed\n\n          var nextFullState = {}; // we need to call on change if the outside world is controlling any of our state\n          // and we're trying to update that state. OR if the selection has changed and we're\n          // trying to update the selection\n\n          if (isItemSelected && newStateToSet.selectedItem !== state.selectedItem) {\n            onChangeArg = newStateToSet.selectedItem;\n          }\n\n          newStateToSet.type = newStateToSet.type || unknown;\n          Object.keys(newStateToSet).forEach(function (key) {\n            // onStateChangeArg should only have the state that is\n            // actually changing\n            if (state[key] !== newStateToSet[key]) {\n              onStateChangeArg[key] = newStateToSet[key];\n            } // the type is useful for the onStateChangeArg\n            // but we don't actually want to set it in internal state.\n            // this is an undocumented feature for now... Not all internalSetState\n            // calls support it and I'm not certain we want them to yet.\n            // But it enables users controlling the isOpen state to know when\n            // the isOpen state changes due to mouseup events which is quite handy.\n\n\n            if (key === 'type') {\n              return;\n            }\n\n            nextFullState[key] = newStateToSet[key]; // if it's coming from props, then we don't care to set it internally\n\n            if (!_this.isControlledProp(key)) {\n              nextState[key] = newStateToSet[key];\n            }\n          }); // if stateToSet is a function, then we weren't able to call onInputValueChange\n          // earlier, so we'll call it now that we know what the inputValue state will be.\n\n          if (isStateToSetFunction && newStateToSet.hasOwnProperty('inputValue')) {\n            _this.props.onInputValueChange(newStateToSet.inputValue, _extends({}, _this.getStateAndHelpers(), {}, newStateToSet));\n          }\n\n          return nextState;\n        }, function () {\n          // call the provided callback if it's a function\n          cbToCb(cb)(); // only call the onStateChange and onChange callbacks if\n          // we have relevant information to pass them.\n\n          var hasMoreStateThanType = Object.keys(onStateChangeArg).length > 1;\n\n          if (hasMoreStateThanType) {\n            _this.props.onStateChange(onStateChangeArg, _this.getStateAndHelpers());\n          }\n\n          if (isItemSelected) {\n            _this.props.onSelect(stateToSet.selectedItem, _this.getStateAndHelpers());\n          }\n\n          if (onChangeArg !== undefined) {\n            _this.props.onChange(onChangeArg, _this.getStateAndHelpers());\n          } // this is currently undocumented and therefore subject to change\n          // We'll try to not break it, but just be warned.\n\n\n          _this.props.onUserAction(onStateChangeArg, _this.getStateAndHelpers());\n        });\n      };\n\n      _this.rootRef = function (node) {\n        return _this._rootNode = node;\n      };\n\n      _this.getRootProps = function (_temp, _temp2) {\n        var _extends2;\n\n        var _ref = _temp === void 0 ? {} : _temp,\n            _ref$refKey = _ref.refKey,\n            refKey = _ref$refKey === void 0 ? 'ref' : _ref$refKey,\n            ref = _ref.ref,\n            rest = _objectWithoutPropertiesLoose(_ref, [\"refKey\", \"ref\"]);\n\n        var _ref2 = _temp2 === void 0 ? {} : _temp2,\n            _ref2$suppressRefErro = _ref2.suppressRefError,\n            suppressRefError = _ref2$suppressRefErro === void 0 ? false : _ref2$suppressRefErro;\n\n        // this is used in the render to know whether the user has called getRootProps.\n        // It uses that to know whether to apply the props automatically\n        _this.getRootProps.called = true;\n        _this.getRootProps.refKey = refKey;\n        _this.getRootProps.suppressRefError = suppressRefError;\n\n        var _this$getState = _this.getState(),\n            isOpen = _this$getState.isOpen;\n\n        return _extends((_extends2 = {}, _extends2[refKey] = handleRefs(ref, _this.rootRef), _extends2.role = 'combobox', _extends2['aria-expanded'] = isOpen, _extends2['aria-haspopup'] = 'listbox', _extends2['aria-owns'] = isOpen ? _this.menuId : null, _extends2['aria-labelledby'] = _this.labelId, _extends2), rest);\n      };\n\n      _this.keyDownHandlers = {\n        ArrowDown: function ArrowDown(event) {\n          var _this2 = this;\n\n          event.preventDefault();\n\n          if (this.getState().isOpen) {\n            var amount = event.shiftKey ? 5 : 1;\n            this.moveHighlightedIndex(amount, {\n              type: keyDownArrowDown\n            });\n          } else {\n            this.internalSetState({\n              isOpen: true,\n              type: keyDownArrowDown\n            }, function () {\n              var itemCount = _this2.getItemCount();\n\n              if (itemCount > 0) {\n                _this2.setHighlightedIndex(getNextWrappingIndex(1, _this2.getState().highlightedIndex, itemCount), {\n                  type: keyDownArrowDown\n                });\n              }\n            });\n          }\n        },\n        ArrowUp: function ArrowUp(event) {\n          var _this3 = this;\n\n          event.preventDefault();\n\n          if (this.getState().isOpen) {\n            var amount = event.shiftKey ? -5 : -1;\n            this.moveHighlightedIndex(amount, {\n              type: keyDownArrowUp\n            });\n          } else {\n            this.internalSetState({\n              isOpen: true,\n              type: keyDownArrowUp\n            }, function () {\n              var itemCount = _this3.getItemCount();\n\n              if (itemCount > 0) {\n                _this3.setHighlightedIndex(getNextWrappingIndex(-1, _this3.getState().highlightedIndex, itemCount), {\n                  type: keyDownArrowDown\n                });\n              }\n            });\n          }\n        },\n        Enter: function Enter(event) {\n          var _this$getState2 = this.getState(),\n              isOpen = _this$getState2.isOpen,\n              highlightedIndex = _this$getState2.highlightedIndex;\n\n          if (isOpen && highlightedIndex != null) {\n            event.preventDefault();\n            var item = this.items[highlightedIndex];\n            var itemNode = this.getItemNodeFromIndex(highlightedIndex);\n\n            if (item == null || itemNode && itemNode.hasAttribute('disabled')) {\n              return;\n            }\n\n            this.selectHighlightedItem({\n              type: keyDownEnter\n            });\n          }\n        },\n        Escape: function Escape(event) {\n          event.preventDefault();\n          this.reset({\n            type: keyDownEscape,\n            selectedItem: null,\n            inputValue: ''\n          });\n        }\n      };\n      _this.buttonKeyDownHandlers = _extends({}, _this.keyDownHandlers, {\n        ' ': function _(event) {\n          event.preventDefault();\n          this.toggleMenu({\n            type: keyDownSpaceButton\n          });\n        }\n      });\n      _this.inputKeyDownHandlers = _extends({}, _this.keyDownHandlers, {\n        Home: function Home(event) {\n          this.highlightFirstOrLastIndex(event, true, {\n            type: keyDownHome\n          });\n        },\n        End: function End(event) {\n          this.highlightFirstOrLastIndex(event, false, {\n            type: keyDownEnd\n          });\n        }\n      });\n\n      _this.getToggleButtonProps = function (_temp3) {\n        var _ref3 = _temp3 === void 0 ? {} : _temp3,\n            onClick = _ref3.onClick,\n            onPress = _ref3.onPress,\n            onKeyDown = _ref3.onKeyDown,\n            onKeyUp = _ref3.onKeyUp,\n            onBlur = _ref3.onBlur,\n            rest = _objectWithoutPropertiesLoose(_ref3, [\"onClick\", \"onPress\", \"onKeyDown\", \"onKeyUp\", \"onBlur\"]);\n\n        var _this$getState3 = _this.getState(),\n            isOpen = _this$getState3.isOpen;\n\n        var enabledEventHandlers = {\n          onClick: callAllEventHandlers(onClick, _this.buttonHandleClick),\n          onKeyDown: callAllEventHandlers(onKeyDown, _this.buttonHandleKeyDown),\n          onKeyUp: callAllEventHandlers(onKeyUp, _this.buttonHandleKeyUp),\n          onBlur: callAllEventHandlers(onBlur, _this.buttonHandleBlur)\n        };\n        var eventHandlers = rest.disabled ? {} : enabledEventHandlers;\n        return _extends({\n          type: 'button',\n          role: 'button',\n          'aria-label': isOpen ? 'close menu' : 'open menu',\n          'aria-haspopup': true,\n          'data-toggle': true\n        }, eventHandlers, {}, rest);\n      };\n\n      _this.buttonHandleKeyUp = function (event) {\n        // Prevent click event from emitting in Firefox\n        event.preventDefault();\n      };\n\n      _this.buttonHandleKeyDown = function (event) {\n        var key = normalizeArrowKey(event);\n\n        if (_this.buttonKeyDownHandlers[key]) {\n          _this.buttonKeyDownHandlers[key].call(_assertThisInitialized(_this), event);\n        }\n      };\n\n      _this.buttonHandleClick = function (event) {\n        event.preventDefault(); // handle odd case for Safari and Firefox which\n        // don't give the button the focus properly.\n\n        /* istanbul ignore if (can't reasonably test this) */\n\n        if ( _this.props.environment.document.activeElement === _this.props.environment.document.body) {\n          event.target.focus();\n        } // to simplify testing components that use downshift, we'll not wrap this in a setTimeout\n        // if the NODE_ENV is test. With the proper build system, this should be dead code eliminated\n        // when building for production and should therefore have no impact on production code.\n\n\n        if (process.env.NODE_ENV === 'test') {\n          _this.toggleMenu({\n            type: clickButton\n          });\n        } else {\n          // Ensure that toggle of menu occurs after the potential blur event in iOS\n          _this.internalSetTimeout(function () {\n            return _this.toggleMenu({\n              type: clickButton\n            });\n          });\n        }\n      };\n\n      _this.buttonHandleBlur = function (event) {\n        var blurTarget = event.target; // Save blur target for comparison with activeElement later\n        // Need setTimeout, so that when the user presses Tab, the activeElement is the next focused element, not body element\n\n        _this.internalSetTimeout(function () {\n          if (!_this.isMouseDown && (_this.props.environment.document.activeElement == null || _this.props.environment.document.activeElement.id !== _this.inputId) && _this.props.environment.document.activeElement !== blurTarget // Do nothing if we refocus the same element again (to solve issue in Safari on iOS)\n          ) {\n              _this.reset({\n                type: blurButton\n              });\n            }\n        });\n      };\n\n      _this.getLabelProps = function (props) {\n        return _extends({\n          htmlFor: _this.inputId,\n          id: _this.labelId\n        }, props);\n      };\n\n      _this.getInputProps = function (_temp4) {\n        var _ref4 = _temp4 === void 0 ? {} : _temp4,\n            onKeyDown = _ref4.onKeyDown,\n            onBlur = _ref4.onBlur,\n            onChange = _ref4.onChange,\n            onInput = _ref4.onInput,\n            onChangeText = _ref4.onChangeText,\n            rest = _objectWithoutPropertiesLoose(_ref4, [\"onKeyDown\", \"onBlur\", \"onChange\", \"onInput\", \"onChangeText\"]);\n\n        var onChangeKey;\n        var eventHandlers = {};\n        /* istanbul ignore next (preact) */\n\n        onChangeKey = 'onChange';\n\n        var _this$getState4 = _this.getState(),\n            inputValue = _this$getState4.inputValue,\n            isOpen = _this$getState4.isOpen,\n            highlightedIndex = _this$getState4.highlightedIndex;\n\n        if (!rest.disabled) {\n          var _eventHandlers;\n\n          eventHandlers = (_eventHandlers = {}, _eventHandlers[onChangeKey] = callAllEventHandlers(onChange, onInput, _this.inputHandleChange), _eventHandlers.onKeyDown = callAllEventHandlers(onKeyDown, _this.inputHandleKeyDown), _eventHandlers.onBlur = callAllEventHandlers(onBlur, _this.inputHandleBlur), _eventHandlers);\n        }\n        /* istanbul ignore if (react-native) */\n\n\n        return _extends({\n          'aria-autocomplete': 'list',\n          'aria-activedescendant': isOpen && typeof highlightedIndex === 'number' && highlightedIndex >= 0 ? _this.getItemId(highlightedIndex) : null,\n          'aria-controls': isOpen ? _this.menuId : null,\n          'aria-labelledby': _this.labelId,\n          // https://developer.mozilla.org/en-US/docs/Web/Security/Securing_your_site/Turning_off_form_autocompletion\n          // revert back since autocomplete=\"nope\" is ignored on latest Chrome and Opera\n          autoComplete: 'off',\n          value: inputValue,\n          id: _this.inputId\n        }, eventHandlers, {}, rest);\n      };\n\n      _this.inputHandleKeyDown = function (event) {\n        var key = normalizeArrowKey(event);\n\n        if (key && _this.inputKeyDownHandlers[key]) {\n          _this.inputKeyDownHandlers[key].call(_assertThisInitialized(_this), event);\n        }\n      };\n\n      _this.inputHandleChange = function (event) {\n        _this.internalSetState({\n          type: changeInput,\n          isOpen: true,\n          inputValue: event.target.value,\n          highlightedIndex: _this.props.defaultHighlightedIndex\n        });\n      };\n\n      _this.inputHandleBlur = function () {\n        // Need setTimeout, so that when the user presses Tab, the activeElement is the next focused element, not the body element\n        _this.internalSetTimeout(function () {\n          var downshiftButtonIsActive = _this.props.environment.document && !!_this.props.environment.document.activeElement && !!_this.props.environment.document.activeElement.dataset && _this.props.environment.document.activeElement.dataset.toggle && _this._rootNode && _this._rootNode.contains(_this.props.environment.document.activeElement);\n\n          if (!_this.isMouseDown && !downshiftButtonIsActive) {\n            _this.reset({\n              type: blurInput\n            });\n          }\n        });\n      };\n\n      _this.menuRef = function (node) {\n        _this._menuNode = node;\n      };\n\n      _this.getMenuProps = function (_temp5, _temp6) {\n        var _extends3;\n\n        var _ref5 = _temp5 === void 0 ? {} : _temp5,\n            _ref5$refKey = _ref5.refKey,\n            refKey = _ref5$refKey === void 0 ? 'ref' : _ref5$refKey,\n            ref = _ref5.ref,\n            props = _objectWithoutPropertiesLoose(_ref5, [\"refKey\", \"ref\"]);\n\n        var _ref6 = _temp6 === void 0 ? {} : _temp6,\n            _ref6$suppressRefErro = _ref6.suppressRefError,\n            suppressRefError = _ref6$suppressRefErro === void 0 ? false : _ref6$suppressRefErro;\n\n        _this.getMenuProps.called = true;\n        _this.getMenuProps.refKey = refKey;\n        _this.getMenuProps.suppressRefError = suppressRefError;\n        return _extends((_extends3 = {}, _extends3[refKey] = handleRefs(ref, _this.menuRef), _extends3.role = 'listbox', _extends3['aria-labelledby'] = props && props['aria-label'] ? null : _this.labelId, _extends3.id = _this.menuId, _extends3), props);\n      };\n\n      _this.getItemProps = function (_temp7) {\n        var _enabledEventHandlers;\n\n        var _ref7 = _temp7 === void 0 ? {} : _temp7,\n            onMouseMove = _ref7.onMouseMove,\n            onMouseDown = _ref7.onMouseDown,\n            onClick = _ref7.onClick,\n            onPress = _ref7.onPress,\n            index = _ref7.index,\n            _ref7$item = _ref7.item,\n            item = _ref7$item === void 0 ? process.env.NODE_ENV === 'production' ?\n        /* istanbul ignore next */\n        undefined : requiredProp('getItemProps', 'item') : _ref7$item,\n            rest = _objectWithoutPropertiesLoose(_ref7, [\"onMouseMove\", \"onMouseDown\", \"onClick\", \"onPress\", \"index\", \"item\"]);\n\n        if (index === undefined) {\n          _this.items.push(item);\n\n          index = _this.items.indexOf(item);\n        } else {\n          _this.items[index] = item;\n        }\n\n        var onSelectKey = 'onClick';\n        var customClickHandler = onClick;\n        var enabledEventHandlers = (_enabledEventHandlers = {\n          // onMouseMove is used over onMouseEnter here. onMouseMove\n          // is only triggered on actual mouse movement while onMouseEnter\n          // can fire on DOM changes, interrupting keyboard navigation\n          onMouseMove: callAllEventHandlers(onMouseMove, function () {\n            if (index === _this.getState().highlightedIndex) {\n              return;\n            }\n\n            _this.setHighlightedIndex(index, {\n              type: itemMouseEnter\n            }); // We never want to manually scroll when changing state based\n            // on `onMouseMove` because we will be moving the element out\n            // from under the user which is currently scrolling/moving the\n            // cursor\n\n\n            _this.avoidScrolling = true;\n\n            _this.internalSetTimeout(function () {\n              return _this.avoidScrolling = false;\n            }, 250);\n          }),\n          onMouseDown: callAllEventHandlers(onMouseDown, function (event) {\n            // This prevents the activeElement from being changed\n            // to the item so it can remain with the current activeElement\n            // which is a more common use case.\n            event.preventDefault();\n          })\n        }, _enabledEventHandlers[onSelectKey] = callAllEventHandlers(customClickHandler, function () {\n          _this.selectItemAtIndex(index, {\n            type: clickItem\n          });\n        }), _enabledEventHandlers); // Passing down the onMouseDown handler to prevent redirect\n        // of the activeElement if clicking on disabled items\n\n        var eventHandlers = rest.disabled ? {\n          onMouseDown: enabledEventHandlers.onMouseDown\n        } : enabledEventHandlers;\n        return _extends({\n          id: _this.getItemId(index),\n          role: 'option',\n          'aria-selected': _this.getState().highlightedIndex === index\n        }, eventHandlers, {}, rest);\n      };\n\n      _this.clearItems = function () {\n        _this.items = [];\n      };\n\n      _this.reset = function (otherStateToSet, cb) {\n        if (otherStateToSet === void 0) {\n          otherStateToSet = {};\n        }\n\n        otherStateToSet = pickState(otherStateToSet);\n\n        _this.internalSetState(function (_ref8) {\n          var selectedItem = _ref8.selectedItem;\n          return _extends({\n            isOpen: _this.props.defaultIsOpen,\n            highlightedIndex: _this.props.defaultHighlightedIndex,\n            inputValue: _this.props.itemToString(selectedItem)\n          }, otherStateToSet);\n        }, cb);\n      };\n\n      _this.toggleMenu = function (otherStateToSet, cb) {\n        if (otherStateToSet === void 0) {\n          otherStateToSet = {};\n        }\n\n        otherStateToSet = pickState(otherStateToSet);\n\n        _this.internalSetState(function (_ref9) {\n          var isOpen = _ref9.isOpen;\n          return _extends({\n            isOpen: !isOpen\n          }, isOpen && {\n            highlightedIndex: _this.props.defaultHighlightedIndex\n          }, {}, otherStateToSet);\n        }, function () {\n          var _this$getState5 = _this.getState(),\n              isOpen = _this$getState5.isOpen,\n              highlightedIndex = _this$getState5.highlightedIndex;\n\n          if (isOpen) {\n            if (_this.getItemCount() > 0 && typeof highlightedIndex === 'number') {\n              _this.setHighlightedIndex(highlightedIndex, otherStateToSet);\n            }\n          }\n\n          cbToCb(cb)();\n        });\n      };\n\n      _this.openMenu = function (cb) {\n        _this.internalSetState({\n          isOpen: true\n        }, cb);\n      };\n\n      _this.closeMenu = function (cb) {\n        _this.internalSetState({\n          isOpen: false\n        }, cb);\n      };\n\n      _this.updateStatus = debounce(function () {\n        var state = _this.getState();\n\n        var item = _this.items[state.highlightedIndex];\n\n        var resultCount = _this.getItemCount();\n\n        var status = _this.props.getA11yStatusMessage(_extends({\n          itemToString: _this.props.itemToString,\n          previousResultCount: _this.previousResultCount,\n          resultCount: resultCount,\n          highlightedItem: item\n        }, state));\n\n        _this.previousResultCount = resultCount;\n        setStatus(status, _this.props.environment.document);\n      }, 200);\n\n      // fancy destructuring + defaults + aliases\n      // this basically says each value of state should either be set to\n      // the initial value or the default value if the initial value is not provided\n      var _this$props = _this.props,\n          defaultHighlightedIndex = _this$props.defaultHighlightedIndex,\n          _this$props$initialHi = _this$props.initialHighlightedIndex,\n          _highlightedIndex = _this$props$initialHi === void 0 ? defaultHighlightedIndex : _this$props$initialHi,\n          defaultIsOpen = _this$props.defaultIsOpen,\n          _this$props$initialIs = _this$props.initialIsOpen,\n          _isOpen = _this$props$initialIs === void 0 ? defaultIsOpen : _this$props$initialIs,\n          _this$props$initialIn = _this$props.initialInputValue,\n          _inputValue = _this$props$initialIn === void 0 ? '' : _this$props$initialIn,\n          _this$props$initialSe = _this$props.initialSelectedItem,\n          _selectedItem = _this$props$initialSe === void 0 ? null : _this$props$initialSe;\n\n      var _state = _this.getState({\n        highlightedIndex: _highlightedIndex,\n        isOpen: _isOpen,\n        inputValue: _inputValue,\n        selectedItem: _selectedItem\n      });\n\n      if (_state.selectedItem != null && _this.props.initialInputValue === undefined) {\n        _state.inputValue = _this.props.itemToString(_state.selectedItem);\n      }\n\n      _this.state = _state;\n      return _this;\n    }\n\n    var _proto = Downshift.prototype;\n\n    /**\n     * Clear all running timeouts\n     */\n    _proto.internalClearTimeouts = function internalClearTimeouts() {\n      this.timeoutIds.forEach(function (id) {\n        clearTimeout(id);\n      });\n      this.timeoutIds = [];\n    }\n    /**\n     * Gets the state based on internal state or props\n     * If a state value is passed via props, then that\n     * is the value given, otherwise it's retrieved from\n     * stateToMerge\n     *\n     * This will perform a shallow merge of the given state object\n     * with the state coming from props\n     * (for the controlled component scenario)\n     * This is used in state updater functions so they're referencing\n     * the right state regardless of where it comes from.\n     *\n     * @param {Object} stateToMerge defaults to this.state\n     * @return {Object} the state\n     */\n    ;\n\n    _proto.getState = function getState(stateToMerge) {\n      var _this4 = this;\n\n      if (stateToMerge === void 0) {\n        stateToMerge = this.state;\n      }\n\n      return Object.keys(stateToMerge).reduce(function (state, key) {\n        state[key] = _this4.isControlledProp(key) ? _this4.props[key] : stateToMerge[key];\n        return state;\n      }, {});\n    }\n    /**\n     * This determines whether a prop is a \"controlled prop\" meaning it is\n     * state which is controlled by the outside of this component rather\n     * than within this component.\n     * @param {String} key the key to check\n     * @return {Boolean} whether it is a controlled controlled prop\n     */\n    ;\n\n    _proto.isControlledProp = function isControlledProp(key) {\n      return this.props[key] !== undefined;\n    };\n\n    _proto.getItemCount = function getItemCount() {\n      // things read better this way. They're in priority order:\n      // 1. `this.itemCount`\n      // 2. `this.props.itemCount`\n      // 3. `this.items.length`\n      var itemCount = this.items.length;\n\n      if (this.itemCount != null) {\n        itemCount = this.itemCount;\n      } else if (this.props.itemCount !== undefined) {\n        itemCount = this.props.itemCount;\n      }\n\n      return itemCount;\n    };\n\n    _proto.getItemNodeFromIndex = function getItemNodeFromIndex(index) {\n      return this.props.environment.document.getElementById(this.getItemId(index));\n    };\n\n    _proto.scrollHighlightedItemIntoView = function scrollHighlightedItemIntoView() {\n      /* istanbul ignore else (react-native) */\n      {\n        var node = this.getItemNodeFromIndex(this.getState().highlightedIndex);\n        this.props.scrollIntoView(node, this._menuNode);\n      }\n    };\n\n    _proto.moveHighlightedIndex = function moveHighlightedIndex(amount, otherStateToSet) {\n      var itemCount = this.getItemCount();\n\n      if (itemCount > 0) {\n        var nextHighlightedIndex = getNextWrappingIndex(amount, this.getState().highlightedIndex, itemCount);\n        this.setHighlightedIndex(nextHighlightedIndex, otherStateToSet);\n      }\n    };\n\n    _proto.highlightFirstOrLastIndex = function highlightFirstOrLastIndex(event, first, otherStateToSet) {\n      var itemsLastIndex = this.getItemCount() - 1;\n\n      if (itemsLastIndex < 0 || !this.getState().isOpen) {\n        return;\n      }\n\n      event.preventDefault();\n      this.setHighlightedIndex(first ? 0 : itemsLastIndex, otherStateToSet);\n    };\n\n    _proto.getStateAndHelpers = function getStateAndHelpers() {\n      var _this$getState6 = this.getState(),\n          highlightedIndex = _this$getState6.highlightedIndex,\n          inputValue = _this$getState6.inputValue,\n          selectedItem = _this$getState6.selectedItem,\n          isOpen = _this$getState6.isOpen;\n\n      var itemToString = this.props.itemToString;\n      var id = this.id;\n      var getRootProps = this.getRootProps,\n          getToggleButtonProps = this.getToggleButtonProps,\n          getLabelProps = this.getLabelProps,\n          getMenuProps = this.getMenuProps,\n          getInputProps = this.getInputProps,\n          getItemProps = this.getItemProps,\n          openMenu = this.openMenu,\n          closeMenu = this.closeMenu,\n          toggleMenu = this.toggleMenu,\n          selectItem = this.selectItem,\n          selectItemAtIndex = this.selectItemAtIndex,\n          selectHighlightedItem = this.selectHighlightedItem,\n          setHighlightedIndex = this.setHighlightedIndex,\n          clearSelection = this.clearSelection,\n          clearItems = this.clearItems,\n          reset = this.reset,\n          setItemCount = this.setItemCount,\n          unsetItemCount = this.unsetItemCount,\n          setState = this.internalSetState;\n      return {\n        // prop getters\n        getRootProps: getRootProps,\n        getToggleButtonProps: getToggleButtonProps,\n        getLabelProps: getLabelProps,\n        getMenuProps: getMenuProps,\n        getInputProps: getInputProps,\n        getItemProps: getItemProps,\n        // actions\n        reset: reset,\n        openMenu: openMenu,\n        closeMenu: closeMenu,\n        toggleMenu: toggleMenu,\n        selectItem: selectItem,\n        selectItemAtIndex: selectItemAtIndex,\n        selectHighlightedItem: selectHighlightedItem,\n        setHighlightedIndex: setHighlightedIndex,\n        clearSelection: clearSelection,\n        clearItems: clearItems,\n        setItemCount: setItemCount,\n        unsetItemCount: unsetItemCount,\n        setState: setState,\n        // props\n        itemToString: itemToString,\n        // derived\n        id: id,\n        // state\n        highlightedIndex: highlightedIndex,\n        inputValue: inputValue,\n        isOpen: isOpen,\n        selectedItem: selectedItem\n      };\n    } //////////////////////////// ROOT\n    ;\n\n    _proto.componentDidMount = function componentDidMount() {\n      var _this5 = this;\n\n      /* istanbul ignore if (react-native) */\n      if (process.env.NODE_ENV !== 'production' && !false && this.getMenuProps.called && !this.getMenuProps.suppressRefError) {\n        validateGetMenuPropsCalledCorrectly(this._menuNode, this.getMenuProps);\n      }\n      /* istanbul ignore if (react-native) */\n\n\n      {\n        var targetWithinDownshift = function (target, checkActiveElement) {\n          if (checkActiveElement === void 0) {\n            checkActiveElement = true;\n          }\n\n          var document = _this5.props.environment.document;\n          return [_this5._rootNode, _this5._menuNode].some(function (contextNode) {\n            return contextNode && (isOrContainsNode(contextNode, target) || checkActiveElement && isOrContainsNode(contextNode, document.activeElement));\n          });\n        }; // this.isMouseDown helps us track whether the mouse is currently held down.\n        // This is useful when the user clicks on an item in the list, but holds the mouse\n        // down long enough for the list to disappear (because the blur event fires on the input)\n        // this.isMouseDown is used in the blur handler on the input to determine whether the blur event should\n        // trigger hiding the menu.\n\n\n        var onMouseDown = function () {\n          _this5.isMouseDown = true;\n        };\n\n        var onMouseUp = function (event) {\n          _this5.isMouseDown = false; // if the target element or the activeElement is within a downshift node\n          // then we don't want to reset downshift\n\n          var contextWithinDownshift = targetWithinDownshift(event.target);\n\n          if (!contextWithinDownshift && _this5.getState().isOpen) {\n            _this5.reset({\n              type: mouseUp\n            }, function () {\n              return _this5.props.onOuterClick(_this5.getStateAndHelpers());\n            });\n          }\n        }; // Touching an element in iOS gives focus and hover states, but touching out of\n        // the element will remove hover, and persist the focus state, resulting in the\n        // blur event not being triggered.\n        // this.isTouchMove helps us track whether the user is tapping or swiping on a touch screen.\n        // If the user taps outside of Downshift, the component should be reset,\n        // but not if the user is swiping\n\n\n        var onTouchStart = function () {\n          _this5.isTouchMove = false;\n        };\n\n        var onTouchMove = function () {\n          _this5.isTouchMove = true;\n        };\n\n        var onTouchEnd = function (event) {\n          var contextWithinDownshift = targetWithinDownshift(event.target, false);\n\n          if (!_this5.isTouchMove && !contextWithinDownshift && _this5.getState().isOpen) {\n            _this5.reset({\n              type: touchEnd\n            }, function () {\n              return _this5.props.onOuterClick(_this5.getStateAndHelpers());\n            });\n          }\n        };\n\n        var environment = this.props.environment;\n        environment.addEventListener('mousedown', onMouseDown);\n        environment.addEventListener('mouseup', onMouseUp);\n        environment.addEventListener('touchstart', onTouchStart);\n        environment.addEventListener('touchmove', onTouchMove);\n        environment.addEventListener('touchend', onTouchEnd);\n\n        this.cleanup = function () {\n          _this5.internalClearTimeouts();\n\n          _this5.updateStatus.cancel();\n\n          environment.removeEventListener('mousedown', onMouseDown);\n          environment.removeEventListener('mouseup', onMouseUp);\n          environment.removeEventListener('touchstart', onTouchStart);\n          environment.removeEventListener('touchmove', onTouchMove);\n          environment.removeEventListener('touchend', onTouchEnd);\n        };\n      }\n    };\n\n    _proto.shouldScroll = function shouldScroll(prevState, prevProps) {\n      var _ref10 = this.props.highlightedIndex === undefined ? this.getState() : this.props,\n          currentHighlightedIndex = _ref10.highlightedIndex;\n\n      var _ref11 = prevProps.highlightedIndex === undefined ? prevState : prevProps,\n          prevHighlightedIndex = _ref11.highlightedIndex;\n\n      var scrollWhenOpen = currentHighlightedIndex && this.getState().isOpen && !prevState.isOpen;\n      return scrollWhenOpen || currentHighlightedIndex !== prevHighlightedIndex;\n    };\n\n    _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n      if (process.env.NODE_ENV !== 'production') {\n        validateControlledUnchanged(prevProps, this.props);\n        /* istanbul ignore if (react-native) */\n\n        if ( this.getMenuProps.called && !this.getMenuProps.suppressRefError) {\n          validateGetMenuPropsCalledCorrectly(this._menuNode, this.getMenuProps);\n        }\n      }\n\n      if (this.isControlledProp('selectedItem') && this.props.selectedItemChanged(prevProps.selectedItem, this.props.selectedItem)) {\n        this.internalSetState({\n          type: controlledPropUpdatedSelectedItem,\n          inputValue: this.props.itemToString(this.props.selectedItem)\n        });\n      }\n\n      if (!this.avoidScrolling && this.shouldScroll(prevState, prevProps)) {\n        this.scrollHighlightedItemIntoView();\n      }\n      /* istanbul ignore else (react-native) */\n\n\n      this.updateStatus();\n    };\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      this.cleanup(); // avoids memory leak\n    };\n\n    _proto.render = function render() {\n      var children = unwrapArray(this.props.children, noop); // because the items are rerendered every time we call the children\n      // we clear this out each render and it will be populated again as\n      // getItemProps is called.\n\n      this.clearItems(); // we reset this so we know whether the user calls getRootProps during\n      // this render. If they do then we don't need to do anything,\n      // if they don't then we need to clone the element they return and\n      // apply the props for them.\n\n      this.getRootProps.called = false;\n      this.getRootProps.refKey = undefined;\n      this.getRootProps.suppressRefError = undefined; // we do something similar for getMenuProps\n\n      this.getMenuProps.called = false;\n      this.getMenuProps.refKey = undefined;\n      this.getMenuProps.suppressRefError = undefined; // we do something similar for getLabelProps\n\n      this.getLabelProps.called = false; // and something similar for getInputProps\n\n      this.getInputProps.called = false;\n      var element = unwrapArray(children(this.getStateAndHelpers()));\n\n      if (!element) {\n        return null;\n      }\n\n      if (this.getRootProps.called || this.props.suppressRefError) {\n        if (process.env.NODE_ENV !== 'production' && !this.getRootProps.suppressRefError && !this.props.suppressRefError) {\n          validateGetRootPropsCalledCorrectly(element, this.getRootProps);\n        }\n\n        return element;\n      } else if (isDOMElement(element)) {\n        // they didn't apply the root props, but we can clone\n        // this and apply the props ourselves\n        return react.cloneElement(element, this.getRootProps(getElementProps(element)));\n      }\n      /* istanbul ignore else */\n\n\n      if (process.env.NODE_ENV !== 'production') {\n        // they didn't apply the root props, but they need to\n        // otherwise we can't query around the autocomplete\n        throw new Error('downshift: If you return a non-DOM element, you must apply the getRootProps function');\n      }\n      /* istanbul ignore next */\n\n\n      return undefined;\n    };\n\n    return Downshift;\n  }(react.Component);\n\n  Downshift.defaultProps = {\n    defaultHighlightedIndex: null,\n    defaultIsOpen: false,\n    getA11yStatusMessage: getA11yStatusMessage,\n    itemToString: function itemToString(i) {\n      if (i == null) {\n        return '';\n      }\n\n      if (process.env.NODE_ENV !== 'production' && isPlainObject(i) && !i.hasOwnProperty('toString')) {\n        // eslint-disable-next-line no-console\n        console.warn('downshift: An object was passed to the default implementation of `itemToString`. You should probably provide your own `itemToString` implementation. Please refer to the `itemToString` API documentation.', 'The object that was passed:', i);\n      }\n\n      return String(i);\n    },\n    onStateChange: noop,\n    onInputValueChange: noop,\n    onUserAction: noop,\n    onChange: noop,\n    onSelect: noop,\n    onOuterClick: noop,\n    selectedItemChanged: function selectedItemChanged(prevItem, item) {\n      return prevItem !== item;\n    },\n    environment: typeof window === 'undefined'\n    /* istanbul ignore next (ssr) */\n    ? {} : window,\n    stateReducer: function stateReducer(state, stateToSet) {\n      return stateToSet;\n    },\n    suppressRefError: false,\n    scrollIntoView: scrollIntoView\n  };\n  Downshift.stateChangeTypes = stateChangeTypes;\n  return Downshift;\n}();\n\nprocess.env.NODE_ENV !== \"production\" ? Downshift.propTypes = {\n  children: PropTypes.func,\n  defaultHighlightedIndex: PropTypes.number,\n  defaultIsOpen: PropTypes.bool,\n  initialHighlightedIndex: PropTypes.number,\n  initialSelectedItem: PropTypes.any,\n  initialInputValue: PropTypes.string,\n  initialIsOpen: PropTypes.bool,\n  getA11yStatusMessage: PropTypes.func,\n  itemToString: PropTypes.func,\n  onChange: PropTypes.func,\n  onSelect: PropTypes.func,\n  onStateChange: PropTypes.func,\n  onInputValueChange: PropTypes.func,\n  onUserAction: PropTypes.func,\n  onOuterClick: PropTypes.func,\n  selectedItemChanged: PropTypes.func,\n  stateReducer: PropTypes.func,\n  itemCount: PropTypes.number,\n  id: PropTypes.string,\n  environment: PropTypes.shape({\n    addEventListener: PropTypes.func,\n    removeEventListener: PropTypes.func,\n    document: PropTypes.shape({\n      getElementById: PropTypes.func,\n      activeElement: PropTypes.any,\n      body: PropTypes.any\n    })\n  }),\n  suppressRefError: PropTypes.bool,\n  scrollIntoView: PropTypes.func,\n  // things we keep in state for uncontrolled components\n  // but can accept as props for controlled components\n\n  /* eslint-disable react/no-unused-prop-types */\n  selectedItem: PropTypes.any,\n  isOpen: PropTypes.bool,\n  inputValue: PropTypes.string,\n  highlightedIndex: PropTypes.number,\n  labelId: PropTypes.string,\n  inputId: PropTypes.string,\n  menuId: PropTypes.string,\n  getItemId: PropTypes.func\n  /* eslint-enable react/no-unused-prop-types */\n\n} : void 0;\n\nfunction validateGetMenuPropsCalledCorrectly(node, _ref12) {\n  var refKey = _ref12.refKey;\n\n  if (!node) {\n    // eslint-disable-next-line no-console\n    console.error(\"downshift: The ref prop \\\"\" + refKey + \"\\\" from getMenuProps was not applied correctly on your menu element.\");\n  }\n}\n\nfunction validateGetRootPropsCalledCorrectly(element, _ref13) {\n  var refKey = _ref13.refKey;\n  var refKeySpecified = refKey !== 'ref';\n  var isComposite = !isDOMElement(element);\n\n  if (isComposite && !refKeySpecified && !reactIs.isForwardRef(element)) {\n    // eslint-disable-next-line no-console\n    console.error('downshift: You returned a non-DOM element. You must specify a refKey in getRootProps');\n  } else if (!isComposite && refKeySpecified) {\n    // eslint-disable-next-line no-console\n    console.error(\"downshift: You returned a DOM element. You should not specify a refKey in getRootProps. You specified \\\"\" + refKey + \"\\\"\");\n  }\n\n  if (!reactIs.isForwardRef(element) && !getElementProps(element)[refKey]) {\n    // eslint-disable-next-line no-console\n    console.error(\"downshift: You must apply the ref prop \\\"\" + refKey + \"\\\" from getRootProps onto your root element.\");\n  }\n}\n\nfunction validateControlledUnchanged(prevProps, nextProps) {\n  var warningDescription = \"This prop should not switch from controlled to uncontrolled (or vice versa). Decide between using a controlled or uncontrolled Downshift element for the lifetime of the component. More info: https://github.com/downshift-js/downshift#control-props\";\n  ['selectedItem', 'isOpen', 'inputValue', 'highlightedIndex'].forEach(function (propKey) {\n    if (prevProps[propKey] !== undefined && nextProps[propKey] === undefined) {\n      // eslint-disable-next-line no-console\n      console.error(\"downshift: A component has changed the controlled prop \\\"\" + propKey + \"\\\" to be uncontrolled. \" + warningDescription);\n    } else if (prevProps[propKey] === undefined && nextProps[propKey] !== undefined) {\n      // eslint-disable-next-line no-console\n      console.error(\"downshift: A component has changed the uncontrolled prop \\\"\" + propKey + \"\\\" to be controlled. \" + warningDescription);\n    }\n  });\n}\n\nfunction getElementIds(generateDefaultId, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      id = _ref.id,\n      labelId = _ref.labelId,\n      menuId = _ref.menuId,\n      getItemId = _ref.getItemId,\n      toggleButtonId = _ref.toggleButtonId;\n\n  var uniqueId = id === undefined ? \"downshift-\" + generateDefaultId() : id;\n  return {\n    labelId: labelId || uniqueId + \"-label\",\n    menuId: menuId || uniqueId + \"-menu\",\n    getItemId: getItemId || function (index) {\n      return uniqueId + \"-item-\" + index;\n    },\n    toggleButtonId: toggleButtonId || uniqueId + \"-toggle-button\"\n  };\n}\n\nfunction getNextWrappingIndex$1(moveAmount, baseIndex, itemsLength, circular) {\n  if (baseIndex === -1) {\n    return moveAmount > 0 ? 0 : itemsLength - 1;\n  }\n\n  var nextIndex = baseIndex + moveAmount;\n\n  if (nextIndex < 0) {\n    return circular ? itemsLength - 1 : 0;\n  }\n\n  if (nextIndex >= itemsLength) {\n    return circular ? 0 : itemsLength - 1;\n  }\n\n  return nextIndex;\n}\n\nfunction getItemIndexByCharacterKey(keysSoFar, highlightedIndex, items, itemToStringParam) {\n  var newHighlightedIndex = -1;\n  var itemStrings = items.map(function (item) {\n    return itemToStringParam(item).toLowerCase();\n  });\n  var startPosition = highlightedIndex + 1;\n  newHighlightedIndex = itemStrings.slice(startPosition).findIndex(function (itemString) {\n    return itemString.startsWith(keysSoFar);\n  });\n\n  if (newHighlightedIndex > -1) {\n    return newHighlightedIndex + startPosition;\n  } else {\n    return itemStrings.slice(0, startPosition).findIndex(function (itemString) {\n      return itemString.startsWith(keysSoFar);\n    });\n  }\n}\n\nfunction getState(state, props) {\n  return Object.keys(state).reduce(function (prevState, key) {\n    // eslint-disable-next-line no-param-reassign\n    prevState[key] = key in props ? props[key] : state[key];\n    return prevState;\n  }, {});\n}\n\nfunction getItemIndex(index, item, items) {\n  if (index !== undefined) {\n    return index;\n  }\n\n  if (items.length === 0) {\n    return -1;\n  }\n\n  return items.indexOf(item);\n}\n\nfunction itemToString(item) {\n  return item ? String(item) : '';\n}\n\nfunction getPropTypesValidator(caller, propTypes) {\n  // istanbul ignore next\n  return function (options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    Object.entries(propTypes).forEach(function (_ref2) {\n      var key = _ref2[0];\n      PropTypes.checkPropTypes(propTypes, options, key, caller.name);\n    });\n  };\n}\n\nfunction isAcceptedCharacterKey(key) {\n  return /^\\S{1}$/.test(key);\n}\n\nfunction capitalizeString(string) {\n  return \"\" + string.slice(0, 1).toUpperCase() + string.slice(1);\n}\n\nfunction invokeOnChangeHandler(propKey, props, state, changes) {\n  var handler = \"on\" + capitalizeString(propKey) + \"Change\";\n\n  if (props[handler] && changes[propKey] !== undefined && changes[propKey] !== state[propKey]) {\n    props[handler](changes);\n  }\n}\n\nfunction callOnChangeProps(props, state, changes) {\n  Object.keys(state).forEach(function (stateKey) {\n    invokeOnChangeHandler(stateKey, props, state, changes);\n  });\n\n  if (props.onStateChange && changes !== undefined) {\n    props.onStateChange(changes);\n  }\n}\n\nfunction useEnhancedReducer(reducer, initialState, props) {\n  var enhancedReducer = react.useCallback(function (state, action) {\n    state = getState(state, action.props);\n    var stateReducer = action.props.stateReducer;\n    var changes = reducer(state, action);\n    var newState = stateReducer(state, _extends({}, action, {\n      changes: changes\n    }));\n    callOnChangeProps(action.props, state, newState);\n    return newState;\n  }, [reducer]);\n\n  var _useReducer = react.useReducer(enhancedReducer, initialState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  return [getState(state, props), dispatch];\n}\n\nvar lastId = 0; // istanbul ignore next\n\nvar genId = function () {\n  return ++lastId;\n};\n/**\n * Autogenerate IDs to facilitate WAI-ARIA and server rendering.\n * Taken from @reach/auto-id\n * @see https://github.com/reach/reach-ui/blob/6e9dbcf716d5c9a3420e062e5bac1ac4671d01cb/packages/auto-id/src/index.js\n */\n// istanbul ignore next\n\n\nfunction useId() {\n  var _useState = react.useState(null),\n      id = _useState[0],\n      setId = _useState[1];\n\n  react.useEffect(function () {\n    return setId(genId());\n  }, []);\n  return id;\n}\n/**\n * Checks if nextElement receives focus after the blur event.\n *\n * @param {FocusEvent} event The blur event.\n * @param {Element} nextElement The element to check that receive focus next.\n * @returns {boolean} If the focus lands on nextElement.\n */\n\n\nfunction focusLandsOnElement(event, nextElement) {\n  return event.relatedTarget === nextElement || // https://github.com/downshift-js/downshift/issues/832 - workaround for Firefox.\n  event.nativeEvent && (nextElement === event.nativeEvent.explicitOriginalTarget || nextElement.contains(event.nativeEvent.explicitOriginalTarget));\n}\n\nvar defaultStateValues = {\n  highlightedIndex: -1,\n  isOpen: false,\n  selectedItem: null\n};\n\nfunction getA11yStatusMessage$1(_ref) {\n  var isOpen = _ref.isOpen,\n      items = _ref.items;\n\n  if (!items) {\n    return '';\n  }\n\n  var resultCount = items.length;\n\n  if (isOpen) {\n    if (resultCount === 0) {\n      return 'No results are available';\n    }\n\n    return resultCount + \" result\" + (resultCount === 1 ? ' is' : 's are') + \" available, use up and down arrow keys to navigate. Press Enter key to select.\";\n  }\n\n  return '';\n}\n\nfunction getA11ySelectionMessage(_ref2) {\n  var selectedItem = _ref2.selectedItem,\n      itemToString = _ref2.itemToString;\n  return itemToString(selectedItem) + \" has been selected.\";\n}\n\nfunction getHighlightedIndexOnOpen(props, state, offset) {\n  var items = props.items,\n      initialHighlightedIndex = props.initialHighlightedIndex,\n      defaultHighlightedIndex = props.defaultHighlightedIndex;\n  var selectedItem = state.selectedItem,\n      highlightedIndex = state.highlightedIndex; // initialHighlightedIndex will give value to highlightedIndex on initial state only.\n\n  if (initialHighlightedIndex !== undefined && highlightedIndex > -1) {\n    return initialHighlightedIndex;\n  }\n\n  if (defaultHighlightedIndex !== undefined) {\n    return defaultHighlightedIndex;\n  }\n\n  if (selectedItem) {\n    if (offset === 0) {\n      return items.indexOf(selectedItem);\n    }\n\n    return getNextWrappingIndex$1(offset, items.indexOf(selectedItem), items.length, false);\n  }\n\n  if (offset === 0) {\n    return -1;\n  }\n\n  return offset < 0 ? items.length - 1 : 0;\n}\n\nfunction getDefaultValue(props, propKey) {\n  var defaultPropKey = \"default\" + capitalizeString(propKey);\n\n  if (defaultPropKey in props) {\n    return props[defaultPropKey];\n  }\n\n  return defaultStateValues[propKey];\n}\n\nfunction getInitialValue(props, propKey) {\n  if (propKey in props) {\n    return props[propKey];\n  }\n\n  var initialPropKey = \"initial\" + capitalizeString(propKey);\n\n  if (initialPropKey in props) {\n    return props[initialPropKey];\n  }\n\n  return getDefaultValue(props, propKey);\n}\n\nfunction getInitialState(props) {\n  var selectedItem = getInitialValue(props, 'selectedItem');\n  var highlightedIndex = getInitialValue(props, 'highlightedIndex');\n  var isOpen = getInitialValue(props, 'isOpen');\n  return {\n    highlightedIndex: highlightedIndex < 0 && selectedItem ? props.items.indexOf(selectedItem) : highlightedIndex,\n    isOpen: isOpen,\n    selectedItem: selectedItem,\n    keysSoFar: ''\n  };\n}\n\nvar propTypes = {\n  items: PropTypes.array.isRequired,\n  itemToString: PropTypes.func,\n  getA11yStatusMessage: PropTypes.func,\n  getA11ySelectionMessage: PropTypes.func,\n  circularNavigation: PropTypes.bool,\n  highlightedIndex: PropTypes.number,\n  defaultHighlightedIndex: PropTypes.number,\n  initialHighlightedIndex: PropTypes.number,\n  isOpen: PropTypes.bool,\n  defaultIsOpen: PropTypes.bool,\n  initialIsOpen: PropTypes.bool,\n  selectedItem: PropTypes.any,\n  initialSelectedItem: PropTypes.any,\n  defaultSelectedItem: PropTypes.any,\n  id: PropTypes.string,\n  labelId: PropTypes.string,\n  menuId: PropTypes.string,\n  getItemId: PropTypes.func,\n  toggleButtonId: PropTypes.string,\n  stateReducer: PropTypes.func,\n  onSelectedItemChange: PropTypes.func,\n  onHighlightedIndexChange: PropTypes.func,\n  onStateChange: PropTypes.func,\n  onIsOpenChange: PropTypes.func,\n  environment: PropTypes.shape({\n    addEventListener: PropTypes.func,\n    removeEventListener: PropTypes.func,\n    document: PropTypes.shape({\n      getElementById: PropTypes.func,\n      activeElement: PropTypes.any,\n      body: PropTypes.any\n    })\n  })\n};\n\nvar MenuKeyDownArrowDown = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_arrow_down__' : 0;\nvar MenuKeyDownArrowUp = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_arrow_up__' : 1;\nvar MenuKeyDownEscape = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_escape__' : 2;\nvar MenuKeyDownHome = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_home__' : 3;\nvar MenuKeyDownEnd = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_end__' : 4;\nvar MenuKeyDownEnter = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_enter__' : 5;\nvar MenuKeyDownCharacter = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_character__' : 6;\nvar MenuBlur = process.env.NODE_ENV !== \"production\" ? '__menu_blur__' : 7;\nvar MenuMouseLeave = process.env.NODE_ENV !== \"production\" ? '__menu_mouse_leave__' : 8;\nvar ItemMouseMove = process.env.NODE_ENV !== \"production\" ? '__item_mouse_move__' : 9;\nvar ItemClick = process.env.NODE_ENV !== \"production\" ? '__item_click__' : 10;\nvar ToggleButtonKeyDownCharacter = process.env.NODE_ENV !== \"production\" ? '__togglebutton_keydown_character__' : 11;\nvar ToggleButtonKeyDownArrowDown = process.env.NODE_ENV !== \"production\" ? '__togglebutton_keydown_arrow_down__' : 12;\nvar ToggleButtonKeyDownArrowUp = process.env.NODE_ENV !== \"production\" ? '__togglebutton_keydown_arrow_up__' : 13;\nvar ToggleButtonClick = process.env.NODE_ENV !== \"production\" ? '__togglebutton_click__' : 14;\nvar FunctionToggleMenu = process.env.NODE_ENV !== \"production\" ? '__function_toggle_menu__' : 15;\nvar FunctionOpenMenu = process.env.NODE_ENV !== \"production\" ? '__function_open_menu__' : 16;\nvar FunctionCloseMenu = process.env.NODE_ENV !== \"production\" ? '__function_close_menu__' : 17;\nvar FunctionSetHighlightedIndex = process.env.NODE_ENV !== \"production\" ? '__function_set_highlighted_index__' : 18;\nvar FunctionSelectItem = process.env.NODE_ENV !== \"production\" ? '__function_select_item__' : 19;\nvar FunctionClearKeysSoFar = process.env.NODE_ENV !== \"production\" ? '__function_clear_keys_so_far__' : 20;\nvar FunctionReset = process.env.NODE_ENV !== \"production\" ? '__function_reset__' : 21;\n\nvar stateChangeTypes$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  MenuKeyDownArrowDown: MenuKeyDownArrowDown,\n  MenuKeyDownArrowUp: MenuKeyDownArrowUp,\n  MenuKeyDownEscape: MenuKeyDownEscape,\n  MenuKeyDownHome: MenuKeyDownHome,\n  MenuKeyDownEnd: MenuKeyDownEnd,\n  MenuKeyDownEnter: MenuKeyDownEnter,\n  MenuKeyDownCharacter: MenuKeyDownCharacter,\n  MenuBlur: MenuBlur,\n  MenuMouseLeave: MenuMouseLeave,\n  ItemMouseMove: ItemMouseMove,\n  ItemClick: ItemClick,\n  ToggleButtonKeyDownCharacter: ToggleButtonKeyDownCharacter,\n  ToggleButtonKeyDownArrowDown: ToggleButtonKeyDownArrowDown,\n  ToggleButtonKeyDownArrowUp: ToggleButtonKeyDownArrowUp,\n  ToggleButtonClick: ToggleButtonClick,\n  FunctionToggleMenu: FunctionToggleMenu,\n  FunctionOpenMenu: FunctionOpenMenu,\n  FunctionCloseMenu: FunctionCloseMenu,\n  FunctionSetHighlightedIndex: FunctionSetHighlightedIndex,\n  FunctionSelectItem: FunctionSelectItem,\n  FunctionClearKeysSoFar: FunctionClearKeysSoFar,\n  FunctionReset: FunctionReset\n});\n\n/* eslint-disable complexity */\n\nfunction downshiftSelectReducer(state, action) {\n  var type = action.type,\n      props = action.props,\n      shiftKey = action.shiftKey;\n  var changes;\n\n  switch (type) {\n    case ItemMouseMove:\n      changes = {\n        highlightedIndex: action.index\n      };\n      break;\n\n    case ItemClick:\n      changes = {\n        isOpen: getDefaultValue(props, 'isOpen'),\n        highlightedIndex: getDefaultValue(props, 'highlightedIndex'),\n        selectedItem: props.items[action.index]\n      };\n      break;\n\n    case MenuBlur:\n      changes = {\n        isOpen: false,\n        highlightedIndex: -1\n      };\n      break;\n\n    case MenuKeyDownArrowDown:\n      changes = {\n        highlightedIndex: getNextWrappingIndex$1(shiftKey ? 5 : 1, state.highlightedIndex, props.items.length, props.circularNavigation)\n      };\n      break;\n\n    case MenuKeyDownArrowUp:\n      changes = {\n        highlightedIndex: getNextWrappingIndex$1(shiftKey ? -5 : -1, state.highlightedIndex, props.items.length, props.circularNavigation)\n      };\n      break;\n\n    case MenuKeyDownHome:\n      changes = {\n        highlightedIndex: 0\n      };\n      break;\n\n    case MenuKeyDownEnd:\n      changes = {\n        highlightedIndex: props.items.length - 1\n      };\n      break;\n\n    case MenuKeyDownEscape:\n      changes = {\n        isOpen: false,\n        highlightedIndex: -1\n      };\n      break;\n\n    case MenuKeyDownEnter:\n      changes = _extends({\n        isOpen: getDefaultValue(props, 'isOpen'),\n        highlightedIndex: getDefaultValue(props, 'highlightedIndex')\n      }, state.highlightedIndex >= 0 && {\n        selectedItem: props.items[state.highlightedIndex]\n      });\n      break;\n\n    case MenuKeyDownCharacter:\n      {\n        var lowercasedKey = action.key;\n        var keysSoFar = \"\" + state.keysSoFar + lowercasedKey;\n        var highlightedIndex = getItemIndexByCharacterKey(keysSoFar, state.highlightedIndex, props.items, props.itemToString);\n        changes = _extends({\n          keysSoFar: keysSoFar\n        }, highlightedIndex >= 0 && {\n          highlightedIndex: highlightedIndex\n        });\n      }\n      break;\n\n    case MenuMouseLeave:\n      changes = {\n        highlightedIndex: -1\n      };\n      break;\n\n    case ToggleButtonKeyDownCharacter:\n      {\n        var _lowercasedKey = action.key;\n\n        var _keysSoFar = \"\" + state.keysSoFar + _lowercasedKey;\n\n        var itemIndex = getItemIndexByCharacterKey(_keysSoFar, state.selectedItem ? props.items.indexOf(state.selectedItem) : -1, props.items, props.itemToString);\n        changes = _extends({\n          keysSoFar: _keysSoFar\n        }, itemIndex >= 0 && {\n          selectedItem: props.items[itemIndex]\n        });\n      }\n      break;\n\n    case ToggleButtonKeyDownArrowDown:\n      {\n        changes = {\n          isOpen: true,\n          highlightedIndex: getHighlightedIndexOnOpen(props, state, 1)\n        };\n        break;\n      }\n\n    case ToggleButtonKeyDownArrowUp:\n      changes = {\n        isOpen: true,\n        highlightedIndex: getHighlightedIndexOnOpen(props, state, -1)\n      };\n      break;\n\n    case ToggleButtonClick:\n    case FunctionToggleMenu:\n      changes = {\n        isOpen: !state.isOpen,\n        highlightedIndex: state.isOpen ? -1 : getHighlightedIndexOnOpen(props, state, 0)\n      };\n      break;\n\n    case FunctionOpenMenu:\n      changes = {\n        isOpen: true,\n        highlightedIndex: getHighlightedIndexOnOpen(props, state, 0)\n      };\n      break;\n\n    case FunctionCloseMenu:\n      changes = {\n        isOpen: false\n      };\n      break;\n\n    case FunctionSetHighlightedIndex:\n      changes = {\n        highlightedIndex: action.highlightedIndex\n      };\n      break;\n\n    case FunctionSelectItem:\n      changes = {\n        selectedItem: action.selectedItem\n      };\n      break;\n\n    case FunctionClearKeysSoFar:\n      changes = {\n        keysSoFar: ''\n      };\n      break;\n\n    case FunctionReset:\n      changes = {\n        highlightedIndex: getDefaultValue(props, 'highlightedIndex'),\n        isOpen: getDefaultValue(props, 'isOpen'),\n        selectedItem: getDefaultValue(props, 'selectedItem')\n      };\n      break;\n\n    default:\n      throw new Error('Reducer called without proper action type.');\n  }\n\n  return _extends({}, state, {}, changes);\n}\n/* eslint-enable complexity */\n\nvar validatePropTypes = process.env.NODE_ENV === 'production' ?\n/* istanbul ignore next */\nnull : getPropTypesValidator(useSelect, propTypes);\nvar defaultProps = {\n  itemToString: itemToString,\n  stateReducer: function stateReducer(s, a) {\n    return a.changes;\n  },\n  getA11yStatusMessage: getA11yStatusMessage$1,\n  getA11ySelectionMessage: getA11ySelectionMessage,\n  scrollIntoView: scrollIntoView,\n  environment: typeof window === 'undefined'\n  /* istanbul ignore next (ssr) */\n  ? {} : window\n};\nuseSelect.stateChangeTypes = stateChangeTypes$1;\n\nfunction useSelect(userProps) {\n  if (userProps === void 0) {\n    userProps = {};\n  }\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    validatePropTypes(userProps);\n  } // Props defaults and destructuring.\n\n\n  var props = _extends({}, defaultProps, {}, userProps);\n\n  var items = props.items,\n      itemToString = props.itemToString,\n      getA11yStatusMessage = props.getA11yStatusMessage,\n      getA11ySelectionMessage = props.getA11ySelectionMessage,\n      initialIsOpen = props.initialIsOpen,\n      defaultIsOpen = props.defaultIsOpen,\n      scrollIntoView = props.scrollIntoView,\n      environment = props.environment; // Initial state depending on controlled props.\n\n  var initialState = getInitialState(props); // Reducer init.\n\n  var _useEnhancedReducer = useEnhancedReducer(downshiftSelectReducer, initialState, props),\n      _useEnhancedReducer$ = _useEnhancedReducer[0],\n      isOpen = _useEnhancedReducer$.isOpen,\n      highlightedIndex = _useEnhancedReducer$.highlightedIndex,\n      selectedItem = _useEnhancedReducer$.selectedItem,\n      keysSoFar = _useEnhancedReducer$.keysSoFar,\n      dispatchWithoutProps = _useEnhancedReducer[1];\n\n  var dispatch = function (action) {\n    return dispatchWithoutProps(_extends({\n      props: props\n    }, action));\n  }; // IDs generation.\n\n\n  var _getElementIds = getElementIds(useId, props),\n      labelId = _getElementIds.labelId,\n      getItemId = _getElementIds.getItemId,\n      menuId = _getElementIds.menuId,\n      toggleButtonId = _getElementIds.toggleButtonId;\n  /* Refs */\n\n\n  var toggleButtonRef = react.useRef(null);\n  var menuRef = react.useRef(null);\n  var itemRefs = react.useRef();\n  itemRefs.current = [];\n  var isInitialMount = react.useRef(true);\n  var shouldScroll = react.useRef(true);\n  var clearTimeout = react.useRef(null);\n  /* Effects */\n\n  /* Sets a11y status message on changes in isOpen. */\n\n  react.useEffect(function () {\n    if (isInitialMount.current) {\n      return;\n    }\n\n    setStatus(getA11yStatusMessage({\n      isOpen: isOpen,\n      items: items,\n      selectedItem: selectedItem,\n      itemToString: itemToString\n    }), environment.document); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen]);\n  /* Sets a11y status message on changes in selectedItem. */\n\n  react.useEffect(function () {\n    if (isInitialMount.current) {\n      return;\n    }\n\n    setStatus(getA11ySelectionMessage({\n      isOpen: isOpen,\n      items: items,\n      selectedItem: selectedItem,\n      itemToString: itemToString\n    }), environment.document); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedItem]);\n  /* Sets cleanup for the keysSoFar after 500ms. */\n\n  react.useEffect(function () {\n    // init the clean function here as we need access to dispatch.\n    if (isInitialMount.current) {\n      clearTimeout.current = debounce(function () {\n        dispatch({\n          type: FunctionClearKeysSoFar\n        });\n      }, 500);\n    }\n\n    if (!keysSoFar) {\n      return;\n    }\n\n    clearTimeout.current(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [keysSoFar]);\n  /* Controls the focus on the menu or the toggle button. */\n\n  react.useEffect(function () {\n    // Don't focus menu on first render.\n    if (isInitialMount.current) {\n      // Unless it was initialised as open.\n      if (initialIsOpen || defaultIsOpen || isOpen) {\n        menuRef.current.focus();\n      }\n\n      return;\n    } // Focus menu on open.\n    // istanbul ignore next\n\n\n    if (isOpen) {\n      menuRef.current.focus(); // Focus toggleButton on close.\n    } else if (environment.document.activeElement === menuRef.current) {\n      toggleButtonRef.current.focus();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [isOpen]);\n  /* Scroll on highlighted item if change comes from keyboard. */\n\n  react.useEffect(function () {\n    if (highlightedIndex < 0 || !isOpen || !itemRefs.current.length) {\n      return;\n    }\n\n    if (shouldScroll.current === false) {\n      shouldScroll.current = true;\n    } else {\n      scrollIntoView(itemRefs.current[highlightedIndex], menuRef.current);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [highlightedIndex]);\n  /* Make initial ref false. */\n\n  react.useEffect(function () {\n    isInitialMount.current = false;\n  }, []);\n  /* Event handler functions */\n\n  var menuKeyDownHandlers = {\n    ArrowDown: function ArrowDown(event) {\n      event.preventDefault();\n      dispatch({\n        type: MenuKeyDownArrowDown,\n        shiftKey: event.shiftKey\n      });\n    },\n    ArrowUp: function ArrowUp(event) {\n      event.preventDefault();\n      dispatch({\n        type: MenuKeyDownArrowUp,\n        shiftKey: event.shiftKey\n      });\n    },\n    Home: function Home(event) {\n      event.preventDefault();\n      dispatch({\n        type: MenuKeyDownHome\n      });\n    },\n    End: function End(event) {\n      event.preventDefault();\n      dispatch({\n        type: MenuKeyDownEnd\n      });\n    },\n    Escape: function Escape() {\n      dispatch({\n        type: MenuKeyDownEscape\n      });\n    },\n    Enter: function Enter(event) {\n      event.preventDefault();\n      dispatch({\n        type: MenuKeyDownEnter\n      });\n    },\n    Tab: function Tab(event) {\n      // The exception that calls MenuBlur.\n      // istanbul ignore next\n      if (event.shiftKey) {\n        dispatch({\n          type: MenuBlur\n        });\n      }\n    }\n  };\n  var toggleButtonKeyDownHandlers = {\n    ArrowDown: function ArrowDown(event) {\n      event.preventDefault();\n      dispatch({\n        type: ToggleButtonKeyDownArrowDown\n      });\n    },\n    ArrowUp: function ArrowUp(event) {\n      event.preventDefault();\n      dispatch({\n        type: ToggleButtonKeyDownArrowUp\n      });\n    }\n  }; // Event handlers.\n\n  var menuHandleKeyDown = function (event) {\n    var key = normalizeArrowKey(event);\n\n    if (key && menuKeyDownHandlers[key]) {\n      menuKeyDownHandlers[key](event);\n    } else if (isAcceptedCharacterKey(key)) {\n      dispatch({\n        type: MenuKeyDownCharacter,\n        key: key\n      });\n    }\n  }; // Focus going back to the toggleButton is something we control (Escape, Enter, Click).\n  // We are toggleing special actions for these cases in reducer, not MenuBlur.\n  // Since Shift-Tab also lands focus on toggleButton, we will handle it as exception and call MenuBlur.\n\n\n  var menuHandleBlur = function (event) {\n    if (!focusLandsOnElement(event, toggleButtonRef.current)) {\n      dispatch({\n        type: MenuBlur\n      });\n    }\n  };\n\n  var menuHandleMouseLeave = function () {\n    dispatch({\n      type: MenuMouseLeave\n    });\n  };\n\n  var toggleButtonHandleClick = function () {\n    dispatch({\n      type: ToggleButtonClick\n    });\n  };\n\n  var toggleButtonHandleKeyDown = function (event) {\n    var key = normalizeArrowKey(event);\n\n    if (key && toggleButtonKeyDownHandlers[key]) {\n      toggleButtonKeyDownHandlers[key](event);\n    } else if (isAcceptedCharacterKey(key)) {\n      dispatch({\n        type: ToggleButtonKeyDownCharacter,\n        key: key\n      });\n    }\n  };\n\n  var itemHandleMouseMove = function (index) {\n    if (index === highlightedIndex) {\n      return;\n    }\n\n    shouldScroll.current = false;\n    dispatch({\n      type: ItemMouseMove,\n      index: index\n    });\n  };\n\n  var itemHandleClick = function (index) {\n    dispatch({\n      type: ItemClick,\n      index: index\n    });\n  }; // returns\n\n\n  return {\n    // prop getters.\n    getToggleButtonProps: function getToggleButtonProps(_temp2) {\n      var _extends3;\n\n      var _ref2 = _temp2 === void 0 ? {} : _temp2,\n          onClick = _ref2.onClick,\n          onKeyDown = _ref2.onKeyDown,\n          _ref2$refKey = _ref2.refKey,\n          refKey = _ref2$refKey === void 0 ? 'ref' : _ref2$refKey,\n          ref = _ref2.ref,\n          rest = _objectWithoutPropertiesLoose(_ref2, [\"onClick\", \"onKeyDown\", \"refKey\", \"ref\"]);\n\n      var toggleProps = _extends((_extends3 = {}, _extends3[refKey] = handleRefs(ref, function (toggleButtonNode) {\n        toggleButtonRef.current = toggleButtonNode;\n      }), _extends3.id = toggleButtonId, _extends3['aria-haspopup'] = 'listbox', _extends3['aria-expanded'] = isOpen, _extends3['aria-labelledby'] = labelId + \" \" + toggleButtonId, _extends3), rest);\n\n      if (!rest.disabled) {\n        toggleProps.onClick = callAllEventHandlers(onClick, toggleButtonHandleClick);\n        toggleProps.onKeyDown = callAllEventHandlers(onKeyDown, toggleButtonHandleKeyDown);\n      }\n\n      return toggleProps;\n    },\n    getLabelProps: function getLabelProps(labelProps) {\n      return _extends({\n        id: labelId,\n        htmlFor: toggleButtonId\n      }, labelProps);\n    },\n    getMenuProps: function getMenuProps(_temp) {\n      var _extends2;\n\n      var _ref = _temp === void 0 ? {} : _temp,\n          onKeyDown = _ref.onKeyDown,\n          onBlur = _ref.onBlur,\n          onMouseLeave = _ref.onMouseLeave,\n          _ref$refKey = _ref.refKey,\n          refKey = _ref$refKey === void 0 ? 'ref' : _ref$refKey,\n          ref = _ref.ref,\n          rest = _objectWithoutPropertiesLoose(_ref, [\"onKeyDown\", \"onBlur\", \"onMouseLeave\", \"refKey\", \"ref\"]);\n\n      return _extends((_extends2 = {}, _extends2[refKey] = handleRefs(ref, function (menuNode) {\n        menuRef.current = menuNode;\n      }), _extends2.id = menuId, _extends2.role = 'listbox', _extends2['aria-labelledby'] = labelId, _extends2.tabIndex = -1, _extends2), highlightedIndex > -1 && {\n        'aria-activedescendant': getItemId(highlightedIndex)\n      }, {\n        onKeyDown: callAllEventHandlers(onKeyDown, menuHandleKeyDown),\n        onBlur: callAllEventHandlers(onBlur, menuHandleBlur),\n        onMouseLeave: callAllEventHandlers(onMouseLeave, menuHandleMouseLeave)\n      }, rest);\n    },\n    getItemProps: function getItemProps(_temp3) {\n      var _extends4;\n\n      var _ref3 = _temp3 === void 0 ? {} : _temp3,\n          item = _ref3.item,\n          index = _ref3.index,\n          _ref3$refKey = _ref3.refKey,\n          refKey = _ref3$refKey === void 0 ? 'ref' : _ref3$refKey,\n          ref = _ref3.ref,\n          onMouseMove = _ref3.onMouseMove,\n          onClick = _ref3.onClick,\n          rest = _objectWithoutPropertiesLoose(_ref3, [\"item\", \"index\", \"refKey\", \"ref\", \"onMouseMove\", \"onClick\"]);\n\n      var itemIndex = getItemIndex(index, item, items);\n\n      if (itemIndex < 0) {\n        throw new Error('Pass either item or item index in getItemProps!');\n      }\n\n      var itemProps = _extends((_extends4 = {}, _extends4[refKey] = handleRefs(ref, function (itemNode) {\n        if (itemNode) {\n          itemRefs.current.push(itemNode);\n        }\n      }), _extends4.role = 'option', _extends4), itemIndex === highlightedIndex && {\n        'aria-selected': true\n      }, {\n        id: getItemId(itemIndex)\n      }, rest);\n\n      if (!rest.disabled) {\n        itemProps.onMouseMove = callAllEventHandlers(onMouseMove, function () {\n          return itemHandleMouseMove(itemIndex);\n        });\n        itemProps.onClick = callAllEventHandlers(onClick, function () {\n          return itemHandleClick(itemIndex);\n        });\n      }\n\n      return itemProps;\n    },\n    // actions.\n    toggleMenu: function toggleMenu() {\n      dispatch({\n        type: FunctionToggleMenu\n      });\n    },\n    openMenu: function openMenu() {\n      dispatch({\n        type: FunctionOpenMenu\n      });\n    },\n    closeMenu: function closeMenu() {\n      dispatch({\n        type: FunctionCloseMenu\n      });\n    },\n    setHighlightedIndex: function setHighlightedIndex(newHighlightedIndex) {\n      dispatch({\n        type: FunctionSetHighlightedIndex,\n        highlightedIndex: newHighlightedIndex\n      });\n    },\n    selectItem: function selectItem(newSelectedItem) {\n      dispatch({\n        type: FunctionSelectItem,\n        selectedItem: newSelectedItem\n      });\n    },\n    reset: function reset() {\n      dispatch({\n        type: FunctionReset\n      });\n    },\n    // state.\n    highlightedIndex: highlightedIndex,\n    isOpen: isOpen,\n    selectedItem: selectedItem\n  };\n}\n\nexports.default = Downshift;\nexports.resetIdCounter = resetIdCounter;\nexports.useSelect = useSelect;\n"],"names":["isElement","el","nodeType","canOverflow","overflow","skipOverflowHiddenElements","isScrollable","clientHeight","scrollHeight","clientWidth","scrollWidth","style","getComputedStyle","overflowY","overflowX","frame","ownerDocument","defaultView","frameElement","e","getFrameElement","isHiddenByFrame","alignNearest","scrollingEdgeStart","scrollingEdgeEnd","scrollingSize","scrollingBorderStart","scrollingBorderEnd","elementEdgeStart","elementEdgeEnd","elementSize","target","options","windowWithViewport","window","scrollMode","block","inline","boundary","checkBoundary","node","TypeError","scrollingElement","document","documentElement","frames","cursor","parentElement","push","body","viewportWidth","visualViewport","width","innerWidth","viewportHeight","height","innerHeight","viewportX","scrollX","pageXOffset","viewportY","scrollY","pageYOffset","getBoundingClientRect","targetHeight","targetWidth","targetTop","top","targetRight","right","targetBottom","bottom","targetLeft","left","targetBlock","targetInline","computations","index","length","frameStyle","borderLeft","parseInt","borderLeftWidth","borderTop","borderTopWidth","borderRight","borderRightWidth","borderBottom","borderBottomWidth","blockScroll","inlineScroll","scrollbarWidth","offsetWidth","scrollbarHeight","offsetHeight","Math","max","scrollLeft","scrollTop","min","_interopDefault","ex","_objectWithoutPropertiesLoose","require","_extends","_assertThisInitialized","_inheritsLoose","PropTypes","react","computeScrollIntoView","idCounter","cbToCb","cb","noop","scrollIntoView","menuNode","forEach","_ref","isOrContainsNode","parent","child","contains","debounce","fn","time","timeoutId","cancel","clearTimeout","wrapper","_len","arguments","args","Array","_key","setTimeout","apply","callAllEventHandlers","_len2","fns","_key2","event","_len3","_key3","some","concat","preventDownshiftDefault","hasOwnProperty","nativeEvent","handleRefs","_len4","refs","_key4","ref","current","getA11yStatusMessage","_ref2","isOpen","selectedItem","resultCount","previousResultCount","itemToString","unwrapArray","arg","defaultValue","isArray","isDOMElement","element","type","getElementProps","props","stateKeys","pickState","state","result","k","normalizeArrowKey","key","keyCode","indexOf","getNextWrappingIndex","moveAmount","baseIndex","itemCount","itemsLastIndex","newIndex","cleanupStatus","getStatusDiv","textContent","setStatus","status","documentProp","div","statusDiv","getElementById","createElement","setAttribute","Object","assign","border","clip","margin","padding","position","appendChild","stateChangeTypes","freeze","__proto__","unknown","mouseUp","itemMouseEnter","keyDownArrowUp","keyDownArrowDown","keyDownEscape","keyDownEnter","keyDownHome","keyDownEnd","clickItem","blurInput","changeInput","keyDownSpaceButton","clickButton","blurButton","controlledPropUpdatedSelectedItem","touchEnd","Downshift","_Component","_props","_this","call","this","id","String","menuId","labelId","inputId","getItemId","input","items","timeoutIds","internalSetTimeout","filter","i","setItemCount","count","unsetItemCount","setHighlightedIndex","highlightedIndex","otherStateToSet","defaultHighlightedIndex","internalSetState","clearSelection","inputValue","defaultIsOpen","selectItem","item","selectItemAtIndex","itemIndex","selectHighlightedItem","getState","stateToSet","isItemSelected","onChangeArg","onStateChangeArg","isStateToSetFunction","onInputValueChange","getStateAndHelpers","setState","newStateToSet","stateReducer","nextState","nextFullState","keys","isControlledProp","onStateChange","onSelect","undefined","onChange","onUserAction","rootRef","_rootNode","getRootProps","_temp","_temp2","_extends2","_ref$refKey","refKey","rest","_ref2$suppressRefErro","suppressRefError","called","role","keyDownHandlers","ArrowDown","_this2","preventDefault","amount","shiftKey","moveHighlightedIndex","getItemCount","ArrowUp","_this3","Enter","_this$getState2","itemNode","getItemNodeFromIndex","hasAttribute","Escape","reset","buttonKeyDownHandlers","toggleMenu","inputKeyDownHandlers","Home","highlightFirstOrLastIndex","End","getToggleButtonProps","_temp3","_ref3","onClick","onKeyDown","onPress","onKeyUp","onBlur","enabledEventHandlers","buttonHandleClick","buttonHandleKeyDown","buttonHandleKeyUp","buttonHandleBlur","eventHandlers","disabled","environment","activeElement","focus","blurTarget","isMouseDown","getLabelProps","htmlFor","getInputProps","_temp4","_ref4","onInput","onChangeText","_eventHandlers","_this$getState4","inputHandleChange","inputHandleKeyDown","inputHandleBlur","autoComplete","value","downshiftButtonIsActive","dataset","toggle","menuRef","_menuNode","getMenuProps","_temp5","_temp6","_extends3","_ref5","_ref5$refKey","_ref6$suppressRefErro","getItemProps","_temp7","_enabledEventHandlers","_ref7","onMouseMove","onMouseDown","_ref7$item","customClickHandler","avoidScrolling","clearItems","_ref8","_ref9","_this$getState5","openMenu","closeMenu","updateStatus","highlightedItem","_this$props","_this$props$initialHi","initialHighlightedIndex","_highlightedIndex","_this$props$initialIs","initialIsOpen","_isOpen","_this$props$initialIn","initialInputValue","_inputValue","_this$props$initialSe","initialSelectedItem","_selectedItem","_state","_proto","prototype","internalClearTimeouts","stateToMerge","_this4","reduce","scrollHighlightedItemIntoView","nextHighlightedIndex","first","_this$getState6","componentDidMount","_this5","targetWithinDownshift","checkActiveElement","contextNode","onMouseUp","onOuterClick","onTouchStart","isTouchMove","onTouchMove","onTouchEnd","contextWithinDownshift","addEventListener","cleanup","removeEventListener","shouldScroll","prevState","prevProps","currentHighlightedIndex","prevHighlightedIndex","componentDidUpdate","selectedItemChanged","componentWillUnmount","render","children","cloneElement","process","Component","defaultProps","prevItem","getNextWrappingIndex$1","itemsLength","circular","nextIndex","getItemIndexByCharacterKey","keysSoFar","itemToStringParam","newHighlightedIndex","itemStrings","map","toLowerCase","startPosition","slice","findIndex","itemString","startsWith","isAcceptedCharacterKey","test","capitalizeString","string","toUpperCase","callOnChangeProps","changes","stateKey","propKey","handler","invokeOnChangeHandler","lastId","useId","_useState","useState","setId","useEffect","defaultStateValues","getHighlightedIndexOnOpen","offset","getDefaultValue","defaultPropKey","getInitialValue","initialPropKey","array","isRequired","func","bool","number","any","shape","stateChangeTypes$1","MenuKeyDownArrowDown","MenuKeyDownArrowUp","MenuKeyDownEscape","MenuKeyDownHome","MenuKeyDownEnd","MenuKeyDownEnter","MenuKeyDownCharacter","MenuBlur","MenuMouseLeave","ItemMouseMove","ItemClick","ToggleButtonKeyDownCharacter","ToggleButtonKeyDownArrowDown","ToggleButtonKeyDownArrowUp","ToggleButtonClick","FunctionToggleMenu","FunctionOpenMenu","FunctionCloseMenu","FunctionSetHighlightedIndex","FunctionSelectItem","FunctionClearKeysSoFar","FunctionReset","downshiftSelectReducer","action","circularNavigation","lowercasedKey","_lowercasedKey","_keysSoFar","Error","s","a","getA11ySelectionMessage","useSelect","userProps","initialState","getInitialState","_useEnhancedReducer","reducer","enhancedReducer","useCallback","newState","_useReducer","useReducer","dispatch","useEnhancedReducer","_useEnhancedReducer$","dispatchWithoutProps","_getElementIds","generateDefaultId","toggleButtonId","uniqueId","getElementIds","toggleButtonRef","useRef","itemRefs","isInitialMount","menuKeyDownHandlers","Tab","toggleButtonKeyDownHandlers","menuHandleKeyDown","menuHandleBlur","nextElement","relatedTarget","explicitOriginalTarget","focusLandsOnElement","menuHandleMouseLeave","toggleButtonHandleClick","toggleButtonHandleKeyDown","_ref2$refKey","toggleProps","toggleButtonNode","labelProps","onMouseLeave","tabIndex","_extends4","_ref3$refKey","getItemIndex","itemProps","itemHandleMouseMove","itemHandleClick","newSelectedItem","exports"],"sourceRoot":""}