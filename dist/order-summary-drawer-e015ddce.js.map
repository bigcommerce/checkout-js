{"version":3,"file":"order-summary-drawer-e015ddce.js","mappings":"4IAWYA,EAMAC,E,0CAMZ,SAASC,EACLC,GAEQ,IAAAC,EAAqDD,EAAK,UAA/CE,EAA0CF,EAAK,YAAlCG,EAA6BH,EAAK,UAAvBI,EAAkBJ,EAAK,KAAjBK,EAAYL,EAAK,QAElE,OAAO,IACH,SACAC,EACA,CAAE,kBAAmBI,IAAYR,EAAcS,SAC/C,CAAE,mBAAoBD,IAAYR,EAAcU,WAChD,CAAE,iBAAkBF,IAAYR,EAAcW,QAC9C,CAAE,gBAAiBJ,IAASN,EAAWW,OACvC,CAAE,eAAgBL,IAASN,EAAWY,MACtC,CAAE,gBAAiBN,IAASN,EAAWa,OACvC,CAAE,eAAgBT,GAClB,CACI,kCACIG,IAAYR,EAAcS,SAAWD,IAAYR,EAAcW,QAEvE,CAAE,oCAAqCH,IAAYR,EAAcU,WACjE,CAAE,aAAcJ,GAExB,EAlCA,SAAYN,GACR,oBACA,wBACA,iBACH,CAJD,CAAYA,IAAAA,EAAa,KAMzB,SAAYC,GACR,gBACA,cACA,eACH,CAJD,CAAYA,IAAAA,EAAU,KAqDtB,QAvB+C,SAAC,GAC5C,IAAAc,EAAQ,WACRX,EAAS,YACTY,EAAQ,WACRX,EAAW,cACXC,EAAS,YACTC,EAAI,OACJU,EAAM,SACNC,EAAI,OACJV,EAAO,UACJW,GAAI,cAVqC,gGAW1C,OACF,2CACQA,EAAI,CACRf,UAAWF,EAAa,CAAEE,UAAS,EAAEC,YAAW,EAAEC,UAAS,EAAEC,KAAI,EAAEC,QAAO,IAAG,YAClES,EACXD,SAAUA,GAAYV,EACtBY,KAAMA,GAAQ,WAEbH,E,sEC5CT,yB,qDACI,EAAAK,MAAQ,CACJC,QAAQ,GAGJ,EAAAC,gBAAiB,EA6BjB,EAAAC,WAAyB,WACxB,EAAKD,gBAIV,EAAKE,SAAS,CACVH,QAAQ,GAEhB,EAEQ,EAAAI,YAA0B,WACzB,EAAKH,gBAIV,EAAKE,SAAS,CACVH,QAAQ,GAEhB,EAEQ,EAAAK,cAAqE,SACzEC,GAE0B,UAAtBA,EAAcC,KACd,EAAKL,YAEb,E,CACJ,QA7D0C,oBAOtC,YAAAM,kBAAA,WACIC,KAAKR,gBAAiB,CAC1B,EAEA,YAAAS,qBAAA,WACID,KAAKR,gBAAiB,CAC1B,EAEA,YAAAU,OAAA,WACU,MAAsBF,KAAK3B,MAAzBY,EAAQ,WAAEkB,EAAK,QACfZ,EAAWS,KAAKV,MAAK,OAE7B,OACI,gCACKL,EAAS,CACNmB,QAASJ,KAAKP,WACdY,WAAYL,KAAKJ,gBAGpBO,EAAM,CACHZ,OAAM,EACNe,eAAgBN,KAAKL,cAIrC,EA6BJ,EA7DA,CAA0C,EAAAY,U,qJCpB3B,SAASC,EAAkB,G,IACtCC,EAAa,gBACbC,EAAY,eACZC,EAAgB,mBAChBC,EAAW,cAEX,OACIH,EAAcI,OACdH,EAAaG,OACbF,EAAiBE,QAChBD,GAAe,IAAIC,MAE5B,C,0BCWA,SAAe,E,SAAA,IArBgC,WAAM,OACjD,uBAAKC,KAAK,OAAOC,OAAO,KAAKC,QAAQ,YAAYC,MAAM,KAAKC,MAAM,8BAC9D,wBACIC,EAAE,8HACFL,KAAK,YAET,wBACIM,SAAS,UACTD,EAAE,oFACFL,KAAK,QACLO,SAAS,YAEb,wBACID,SAAS,UACTD,EAAE,oFACFL,KAAK,QACLO,SAAS,YAhBgC,I,qCC2BrD,SAAe,IAAAC,OAjBwE,SAAC,G,IACpFC,EAAK,QACLC,EAAmB,sBACnBC,EAAiB,oBACjBC,EAAkB,qBAEZC,GAAa,EAAAC,EAAA,GAAcL,GAC3BM,EAAuBL,IAAwBC,EAC/CK,EAA2B,IAAfH,EAAmB,YAAc,aAEnD,OAAO,gCACFA,E,IAAY,gBAACI,EAAA,EAAgB,CAACC,GAAIF,I,MAAiBJ,E,IAChDG,GAAwB,4B,IAAQL,E,KAG5C,I,2DCuFMS,EAID,SAAC,G,IACEC,EADA5B,EAAc,iBAAE6B,EAAU,aAAEC,EAAa,gBAO7C,OAJI,IAAAC,gBAAeF,KACfD,GAAgB,IAAAI,cAAaH,EAAY,CAAE7D,UAAW,4CAGnD,gCACF4D,QAAAA,EAAiBC,EAClB,gBAACI,EAAA,EAAW,CAACC,oBAAoB,oBAC7B,2BACI,gBAACT,EAAA,EAAgB,CAACC,GAAG,sBACrB,uBAAK1D,UAAU,0BAA0B8D,KAGjD,qBAAG9D,UAAU,mBAAmBmE,KAAK,IAAIrC,SAAS,EAAAsC,EAAA,GAAepC,IAC7D,wBAAMhC,UAAU,aACZ,gBAACyD,EAAA,EAAgB,CAACC,GAAG,yBAEzB,gBAAC,EAAmB,OAGhC,EAEA,QA5GI,SAAC,GACD,IAAAW,EAAmB,sBAEnBC,GADQ,WACK,iBACbC,EAAK,QACLvC,EAAc,iBACdwC,EAAW,cACXC,EAAa,gBACbC,EAAe,kBACfzD,EAAM,SACN4C,EAAU,aACVZ,EAAK,QACL0B,EAAK,QACFC,GAA0B,cAb5B,mKAeKC,EAAsBP,GAAiBC,GAASA,EAAMhC,OAAS,EAE/DuB,EAAgB,gBAAC,EAA0B,CAC7CV,mBAAoB,gBAAC0B,EAAA,EAAe,CAACC,OAAQJ,IAC7C1B,MAAOA,EACPC,oBAAqBwB,EAAgBM,KACrC7B,kBAAmBsB,EAAcO,OAG/BC,GAAiB,EAAAC,EAAA,MAAmB,gBAACC,EAAA,GAAM,CAC7CnF,UAAU,sBAAqB,YACrB,kCACV8B,SAAS,EAAAsC,EAAA,GAAepC,IACpB,gBAACyB,EAAA,EAAgB,CAACC,GAAG,6BAG7B,OAAO,gBAAC0B,EAAA,EAAK,CACTC,wBAAwB,iDACxBC,0BAA0B,wEAC1BC,yBAAyB,+BACzBC,OAAQP,EACRQ,OAAQ9B,EAAa,CACjBE,WAAU,EACVC,cAAa,EACb9B,eAAc,IAElBf,OAAQA,EACRuD,YAAaA,EACbxC,eAAgBA,GAEhB,gBAAC0D,EAAA,EAAmB,KAChB,gBAACC,EAAA,EAAiB,CAACC,uBAAuB,EAAO3C,MAAOA,KAE5D,gBAACyC,EAAA,EAAmB,KAChB,gBAACG,EAAA,GAAqB,eAACvB,cAAeA,EAAeC,MAAOA,GAAWK,IACtEP,GAEL,gBAACqB,EAAA,EAAmB,KAChB,gBAACI,EAAA,EAAiB,CACdC,YAAapB,EACbzB,oBAAqBwB,EAAgBM,KACrC7B,kBAAmBsB,EAAcO,QAGxCH,GAAuB,gBAACa,EAAA,EAAmB,KACpC,sBACI1F,UAAU,uEAAsE,YACtE,YAEV,gBAACyD,EAAA,EAAgB,CACbC,GAAG,0BAGTa,GAAS,IAAIyB,KAAI,SAACC,EAAKC,GAAU,OAC/B,gBAACC,EAAA,EAAiB,CACdpB,OAAQkB,EAAIlB,OACZvD,IAAK0E,EACLE,MAAOH,EAAII,KACXxF,OAAO,cALoB,KAUnD,E,eC+CA,SAAe,IAAAmC,OAlIX,SAAC,G,IACDqB,EAAmB,sBACnBiC,EAAO,UACPC,EAAc,iBACdlE,EAAgB,mBAChBmE,EAAc,iBACd3C,EAAU,aACVS,EAAa,gBACbmC,EAAS,YACTC,EAAe,kBACfC,EAAwB,2BACxBC,EAAc,iBACdC,EAA4B,+BAC5BnC,EAAe,kBACfoC,EAAiB,oBACjBC,EAAkB,qBAClBtC,EAAa,gBACbuC,EAAc,iBACdzC,EAAK,QACLI,EAAK,QACLsC,EAAI,OAEEC,GAAsB,IAAAC,UAAQ,WAAM,SAAAC,EAAA,GAAmBX,EAAnB,GAA+B,CAACA,IAEpEY,GAAc,IAAAC,cAChB,SAACvH,GAAU,OACP,gBAAC,GAAiB,iBACVA,EAAK,CACTsE,oBAAqBA,EACrBiC,QAASA,EACTC,eAAgBA,EAChBU,KAAMA,EACN5E,iBAAkBA,EAClB0E,mBAAoBA,EACpBP,eAAgBA,EAChB3C,WAAYA,EACZS,cAAeA,EACfrB,MAAOiE,EACPR,gBAAiBA,EACjBC,yBAA0BA,EAC1BC,eAAgBA,EAChBC,6BAA8BA,EAC9BnC,gBAAiBA,EACjBoC,kBAAmBA,EACnBrC,cAAeA,EACfuC,eAAgBA,EAChBzC,MAAOA,EACPI,MAAOA,IAtBJ,GAyBX,CACIN,EACAiC,EACAC,EACAlE,EACAmE,EACA3C,EACAS,EACA4C,EACAR,EACAC,EACAI,EACAH,EACAC,EACAnC,EACAoC,EACArC,EACAuC,EACAzC,EACAI,EACAsC,IAIR,OACI,gBAACM,EAAA,EAAY,CAAC1F,MAAOwF,IAChB,SAAC,G,IAAEvF,EAAO,UAAEC,EAAU,aAAO,OAC1B,uBACI/B,UAAU,4CACV8B,QAASA,EACTC,WAAYA,EACZyF,SAAU,GAEV,0BACIxH,UAAW,IAAW,oBAAqB,CACvC,2BAA4BkC,EAAkBgF,GAAuB,KAGzE,uBAAKlH,UAAU,2BAwBvC,SAAkByG,GACd,IAAMgB,EAAmBhB,EAAUtE,cAAc,IAAMsE,EAAUrE,aAAa,GAE9E,GAAIqF,GAAoBA,EAAiBC,SACrC,OACI,uBACIC,IAAKF,EAAiBpB,KAAI,YAChB,kBACVuB,IAAKH,EAAiBC,WAKlC,GAAIjB,EAAUpE,iBAAiBE,OAC3B,OAAO,gBAACsF,EAAA,EAAmB,KAEnC,CAxCkEC,CAASZ,KAEvD,uBAAKlH,UAAU,mBACX,sBAAIA,UAAU,qDACV,gBAACyD,EAAA,EAAgB,CACbsE,KAAM,CAAEC,OAAO,EAAA1E,EAAA,GAAc4D,IAC7BxD,GAAG,0BAGX,yBACI,gBAACD,EAAA,EAAgB,CAACC,GAAG,+BAG7B,uBAAK1D,UAAU,sBACX,sBAAIA,UAAU,qDACV,gBAAC8E,EAAA,EAAe,CAACC,OAAQJ,MA3BX,GAkC1C,G","sources":["webpack://checkout/./packages/ui/src/button/Button.tsx","webpack://checkout/./packages/core/src/app/ui/modal/ModalTrigger.tsx","webpack://checkout/./packages/core/src/app/order/getLineItemsCount.ts","webpack://checkout/./packages/ui/src/icon/IconCloseWithBorder.tsx","webpack://checkout/./packages/core/src/app/order/OrderModalSummarySubheader.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryModal.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryDrawer.tsx"],"sourcesContent":["import classNames from 'classnames';\nimport React, { ButtonHTMLAttributes, FunctionComponent } from 'react';\n\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n    isFullWidth?: boolean;\n    isLoading?: boolean;\n    size?: ButtonSize;\n    testId?: string;\n    variant?: ButtonVariant;\n}\n\nexport enum ButtonVariant {\n    Primary = 'primary',\n    Secondary = 'secondary',\n    Action = 'action',\n}\n\nexport enum ButtonSize {\n    Small = 'small',\n    Tiny = 'tiny',\n    Large = 'large',\n}\n\nfunction getClassName(\n    props: Pick<ButtonProps, 'className' | 'isFullWidth' | 'isLoading' | 'size' | 'variant'>,\n) {\n    const { className, isFullWidth, isLoading, size, variant } = props;\n\n    return classNames(\n        'button',\n        className,\n        { 'button--primary': variant === ButtonVariant.Primary },\n        { 'button--tertiary': variant === ButtonVariant.Secondary },\n        { 'button--action': variant === ButtonVariant.Action },\n        { 'button--small': size === ButtonSize.Small },\n        { 'button--tiny': size === ButtonSize.Tiny },\n        { 'button--large': size === ButtonSize.Large },\n        { 'button--slab': isFullWidth },\n        {\n            'optimizedCheckout-buttonPrimary':\n                variant === ButtonVariant.Primary || variant === ButtonVariant.Action,\n        },\n        { 'optimizedCheckout-buttonSecondary': variant === ButtonVariant.Secondary },\n        { 'is-loading': isLoading },\n    );\n}\n\nconst Button: FunctionComponent<ButtonProps> = ({\n    children,\n    className,\n    disabled,\n    isFullWidth,\n    isLoading,\n    size,\n    testId,\n    type,\n    variant,\n    ...rest\n}) => (\n    <button\n        {...rest}\n        className={getClassName({ className, isFullWidth, isLoading, size, variant })}\n        data-test={testId}\n        disabled={disabled || isLoading}\n        type={type || 'button'}\n    >\n        {children}\n    </button>\n);\n\nexport default Button;\n","import React, {\n    Component,\n    KeyboardEvent,\n    KeyboardEventHandler,\n    MouseEventHandler,\n    ReactNode,\n} from 'react';\n\nexport interface ModalTriggerProps {\n    children(props: { onClick: MouseEventHandler; onKeyPress: KeyboardEventHandler<HTMLDivElement> }): ReactNode;\n    modal(props: ModalTriggerModalProps): ReactNode;\n}\n\nexport interface ModalTriggerModalProps {\n    isOpen: boolean;\n    onRequestClose(): void;\n}\n\nexport interface ModalTriggerState {\n    isOpen: boolean;\n}\n\nexport default class ModalTrigger extends Component<ModalTriggerProps, ModalTriggerState> {\n    state = {\n        isOpen: false,\n    };\n\n    private canHandleEvent = false;\n\n    componentDidMount(): void {\n        this.canHandleEvent = true;\n    }\n\n    componentWillUnmount(): void {\n        this.canHandleEvent = false;\n    }\n\n    render() {\n        const { children, modal } = this.props;\n        const { isOpen } = this.state;\n\n        return (\n            <>\n                {children({\n                    onClick: this.handleOpen,\n                    onKeyPress: this.handleKeyOpen,\n                })}\n\n                {modal({\n                    isOpen,\n                    onRequestClose: this.handleClose,\n                })}\n            </>\n        );\n    }\n\n    private handleOpen: () => void = () => {\n        if (!this.canHandleEvent) {\n            return;\n        }\n\n        this.setState({\n            isOpen: true,\n        });\n    };\n\n    private handleClose: () => void = () => {\n        if (!this.canHandleEvent) {\n            return;\n        }\n\n        this.setState({\n            isOpen: false,\n        });\n    };\n\n    private handleKeyOpen: (keyboardEvent: KeyboardEvent<HTMLElement>) => void = (\n        keyboardEvent,\n    ) => {\n        if (keyboardEvent.key === 'Enter') {\n            this.handleOpen();\n        }\n    };\n}\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\n\nexport default function getLineItemsCount({\n    physicalItems,\n    digitalItems,\n    giftCertificates,\n    customItems,\n}: LineItemMap): number {\n    return (\n        physicalItems.length +\n        digitalItems.length +\n        giftCertificates.length +\n        (customItems || []).length\n    );\n}\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconCloseWithBorder: FunctionComponent = () => (\n    <svg fill=\"none\" height=\"37\" viewBox=\"0 0 38 37\" width=\"38\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M38 18.5C38 28.7173 29.7173 37 19.5 37C9.28273 37 1 28.7173 1 18.5C1 8.28273 9.28273 0 19.5 0C29.7173 0 38 8.28273 38 18.5Z\"\n            fill=\"#F3F3F3\"\n        />\n        <path\n            clipRule=\"evenodd\"\n            d=\"M24.6671 24.6674L12.9998 13.0002L14.4141 11.5859L26.0813 23.2532L24.6671 24.6674Z\"\n            fill=\"black\"\n            fillRule=\"evenodd\"\n        />\n        <path\n            clipRule=\"evenodd\"\n            d=\"M25.6674 13.0004L14.0002 24.6676L12.5859 23.2534L24.2532 11.5862L25.6674 13.0004Z\"\n            fill=\"black\"\n            fillRule=\"evenodd\"\n        />\n    </svg>\n);\n\nexport default withIconContainer(IconCloseWithBorder);\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport getItemsCount from './getItemsCount';\n\nexport interface OrderModalSummarySubheaderProps {\n    items: LineItemMap\n    amountWithCurrency: ReactNode;\n    shopperCurrencyCode: string;\n    storeCurrencyCode: string;\n}\n\nconst OrderModalSummarySubheader: FunctionComponent<OrderModalSummarySubheaderProps> = ({\n    items,\n    shopperCurrencyCode,\n    storeCurrencyCode,\n    amountWithCurrency,\n}) => {\n    const itemsCount = getItemsCount(items);\n    const hasDifferentCurrency = shopperCurrencyCode !== storeCurrencyCode;\n    const itemsText = itemsCount === 1 ? 'cart.item' : 'cart.items';\n\n    return <>\n        {itemsCount} <TranslatedString id={itemsText} /> | {amountWithCurrency} {\n            hasDifferentCurrency && <span>({shopperCurrencyCode})</span>\n        }\n    </>;\n};\n\nexport default memo(OrderModalSummarySubheader);\n","import {\n    LineItemMap,\n    ShopperCurrency as ShopperCurrencyType,\n    StoreCurrency,\n} from '@bigcommerce/checkout-sdk';\nimport React, { cloneElement, FunctionComponent, isValidElement, ReactNode } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { Button, IconCloseWithBorder } from '@bigcommerce/checkout/ui';\n\nimport { ShopperCurrency } from '../currency';\nimport { Modal, ModalHeader } from '../ui/modal';\nimport { isSmallScreen } from '../ui/responsive';\n\nimport OrderModalSummarySubheader from './OrderModalSummarySubheader';\nimport OrderSummaryItems from './OrderSummaryItems';\nimport OrderSummaryPrice from './OrderSummaryPrice';\nimport OrderSummarySection from './OrderSummarySection';\nimport OrderSummarySubtotals, { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\nimport OrderSummaryTotal from './OrderSummaryTotal';\n\nexport interface OrderSummaryDrawerProps {\n    additionalLineItems?: ReactNode;\n    items: LineItemMap;\n    total: number;\n    storeCurrency: StoreCurrency;\n    shopperCurrency: ShopperCurrencyType;\n    isOpen: boolean;\n    headerLink?: ReactNode & React.HTMLProps<HTMLDivElement>;\n    onRequestClose?(): void;\n    onAfterOpen?(): void;\n}\n\nconst OrderSummaryModal: FunctionComponent<\n    OrderSummaryDrawerProps & OrderSummarySubtotalsProps\n> = ({\n    additionalLineItems,\n    children,\n    isTaxIncluded,\n    taxes,\n    onRequestClose,\n    onAfterOpen,\n    storeCurrency,\n    shopperCurrency,\n    isOpen,\n    headerLink,\n    items,\n    total,\n    ...orderSummarySubtotalsProps\n}) => {\n    const displayInclusiveTax = isTaxIncluded && taxes && taxes.length > 0;\n\n    const subHeaderText = <OrderModalSummarySubheader\n        amountWithCurrency={<ShopperCurrency amount={total} />}\n        items={items}\n        shopperCurrencyCode={shopperCurrency.code}\n        storeCurrencyCode={storeCurrency.code}\n    />;\n\n    const continueButton = isSmallScreen() && <Button\n        className='cart-modal-continue'\n        data-test=\"manage-instrument-cancel-button\"\n        onClick={preventDefault(onRequestClose)}>\n            <TranslatedString id=\"cart.return_to_checkout\" />\n    </Button>;\n\n    return <Modal\n        additionalBodyClassName=\"cart-modal-body optimizedCheckout-orderSummary\"\n        additionalHeaderClassName=\"cart-modal-header optimizedCheckout-orderSummary with-continue-button\"\n        additionalModalClassName=\"optimizedCheckout-cart-modal\"\n        footer={continueButton}\n        header={renderHeader({\n            headerLink,\n            subHeaderText,\n            onRequestClose,\n        })}\n        isOpen={isOpen}\n        onAfterOpen={onAfterOpen}\n        onRequestClose={onRequestClose}\n    >\n        <OrderSummarySection>\n            <OrderSummaryItems displayLineItemsCount={false} items={items} />\n        </OrderSummarySection>\n        <OrderSummarySection>\n            <OrderSummarySubtotals isTaxIncluded={isTaxIncluded} taxes={taxes} {...orderSummarySubtotalsProps} />\n            {additionalLineItems}\n        </OrderSummarySection>\n        <OrderSummarySection>\n            <OrderSummaryTotal\n                orderAmount={total}\n                shopperCurrencyCode={shopperCurrency.code}\n                storeCurrencyCode={storeCurrency.code}\n            />\n        </OrderSummarySection>\n        {displayInclusiveTax && <OrderSummarySection>\n                <h5\n                    className=\"cart-taxItem cart-taxItem--subtotal optimizedCheckout-contentPrimary\"\n                    data-test=\"tax-text\"\n                >\n                    <TranslatedString\n                        id=\"tax.inclusive_label\"\n                    />\n                </h5>\n                {(taxes || []).map((tax, index) => (\n                    <OrderSummaryPrice\n                        amount={tax.amount}\n                        key={index}\n                        label={tax.name}\n                        testId=\"cart-taxes\"\n                    />\n                ))}\n            </OrderSummarySection>}\n    </Modal>\n};\n\nconst renderHeader: FunctionComponent<{\n    headerLink?: ReactNode & React.HTMLProps<HTMLDivElement>;\n    subHeaderText: ReactNode;\n    onRequestClose?(): void;\n}> = ({ onRequestClose, headerLink, subHeaderText }) => {\n    let newHeaderLink;\n\n    if (isValidElement(headerLink)) {\n        newHeaderLink = cloneElement(headerLink, { className: 'modal-header-link cart-modal-link test' });\n    }\n\n    return <>\n        {newHeaderLink ?? headerLink}\n        <ModalHeader additionalClassName=\"cart-modal-title\">\n            <div>\n                <TranslatedString id=\"cart.cart_heading\" />\n                <div className='cart-heading-subheader'>{subHeaderText}</div>\n            </div>\n        </ModalHeader>\n        <a className=\"cart-modal-close\" href=\"#\" onClick={preventDefault(onRequestClose)}>\n            <span className=\"is-srOnly\">\n                <TranslatedString id=\"common.close_action\" />\n            </span>\n            <IconCloseWithBorder />\n        </a>\n    </>\n};\n\nexport default OrderSummaryModal;\n","import {\n    LineItemMap,\n    ShopperCurrency as ShopperCurrencyType,\n    StoreCurrency,\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { FunctionComponent, memo, ReactNode, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { ShopperCurrency } from '../currency';\nimport { IconGiftCertificate } from '../ui/icon';\nimport { ModalTrigger } from '../ui/modal';\n\nimport getItemsCount from './getItemsCount';\nimport getLineItemsCount from './getLineItemsCount';\nimport OrderSummaryModal from './OrderSummaryModal';\nimport { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\nimport removeBundledItems from './removeBundledItems';\n\nexport interface OrderSummaryDrawerProps {\n    lineItems: LineItemMap;\n    total: number;\n    headerLink: ReactNode;\n    storeCurrency: StoreCurrency;\n    shopperCurrency: ShopperCurrencyType;\n    additionalLineItems?: ReactNode;\n}\n\nconst OrderSummaryDrawer: FunctionComponent<\n    OrderSummaryDrawerProps & OrderSummarySubtotalsProps\n> = ({\n    additionalLineItems,\n    coupons,\n    discountAmount,\n    giftCertificates,\n    handlingAmount,\n    headerLink,\n    isTaxIncluded,\n    lineItems,\n    onRemovedCoupon,\n    onRemovedGiftCertificate,\n    shippingAmount,\n    shippingAmountBeforeDiscount,\n    shopperCurrency,\n    storeCreditAmount,\n    giftWrappingAmount,\n    storeCurrency,\n    subtotalAmount,\n    taxes,\n    total,\n    fees,\n}) => {\n    const nonBundledLineItems = useMemo(() => removeBundledItems(lineItems), [lineItems]);\n\n    const renderModal = useCallback(\n        (props) => (\n            <OrderSummaryModal\n                {...props}\n                additionalLineItems={additionalLineItems}\n                coupons={coupons}\n                discountAmount={discountAmount}\n                fees={fees}\n                giftCertificates={giftCertificates}\n                giftWrappingAmount={giftWrappingAmount}\n                handlingAmount={handlingAmount}\n                headerLink={headerLink}\n                isTaxIncluded={isTaxIncluded}\n                items={nonBundledLineItems}\n                onRemovedCoupon={onRemovedCoupon}\n                onRemovedGiftCertificate={onRemovedGiftCertificate}\n                shippingAmount={shippingAmount}\n                shippingAmountBeforeDiscount={shippingAmountBeforeDiscount}\n                shopperCurrency={shopperCurrency}\n                storeCreditAmount={storeCreditAmount}\n                storeCurrency={storeCurrency}\n                subtotalAmount={subtotalAmount}\n                taxes={taxes}\n                total={total}\n            />\n        ),\n        [\n            additionalLineItems,\n            coupons,\n            discountAmount,\n            giftCertificates,\n            handlingAmount,\n            headerLink,\n            isTaxIncluded,\n            nonBundledLineItems,\n            onRemovedCoupon,\n            onRemovedGiftCertificate,\n            giftWrappingAmount,\n            shippingAmount,\n            shippingAmountBeforeDiscount,\n            shopperCurrency,\n            storeCreditAmount,\n            storeCurrency,\n            subtotalAmount,\n            taxes,\n            total,\n            fees,\n        ],\n    );\n\n    return (\n        <ModalTrigger modal={renderModal}>\n            {({ onClick, onKeyPress }) => (\n                <div\n                    className=\"cartDrawer optimizedCheckout-orderSummary\"\n                    onClick={onClick}\n                    onKeyPress={onKeyPress}\n                    tabIndex={0}\n                >\n                    <figure\n                        className={classNames('cartDrawer-figure', {\n                            'cartDrawer-figure--stack': getLineItemsCount(nonBundledLineItems) > 1,\n                        })}\n                    >\n                        <div className=\"cartDrawer-imageWrapper\">{getImage(nonBundledLineItems)}</div>\n                    </figure>\n                    <div className=\"cartDrawer-body\">\n                        <h3 className=\"cartDrawer-items optimizedCheckout-headingPrimary\">\n                            <TranslatedString\n                                data={{ count: getItemsCount(nonBundledLineItems) }}\n                                id=\"cart.item_count_text\"\n                            />\n                        </h3>\n                        <a>\n                            <TranslatedString id=\"cart.show_details_action\" />\n                        </a>\n                    </div>\n                    <div className=\"cartDrawer-actions\">\n                        <h3 className=\"cartDrawer-total optimizedCheckout-headingPrimary\">\n                            <ShopperCurrency amount={total} />\n                        </h3>\n                    </div>\n                </div>\n            )}\n        </ModalTrigger>\n    );\n};\n\nfunction getImage(lineItems: LineItemMap): ReactNode {\n    const productWithImage = lineItems.physicalItems[0] || lineItems.digitalItems[0];\n\n    if (productWithImage && productWithImage.imageUrl) {\n        return (\n            <img\n                alt={productWithImage.name}\n                data-test=\"cart-item-image\"\n                src={productWithImage.imageUrl}\n            />\n        );\n    }\n\n    if (lineItems.giftCertificates.length) {\n        return <IconGiftCertificate />;\n    }\n}\n\nexport default memo(OrderSummaryDrawer);\n"],"names":["ButtonVariant","ButtonSize","getClassName","props","className","isFullWidth","isLoading","size","variant","Primary","Secondary","Action","Small","Tiny","Large","children","disabled","testId","type","rest","state","isOpen","canHandleEvent","handleOpen","setState","handleClose","handleKeyOpen","keyboardEvent","key","componentDidMount","this","componentWillUnmount","render","modal","onClick","onKeyPress","onRequestClose","Component","getLineItemsCount","physicalItems","digitalItems","giftCertificates","customItems","length","fill","height","viewBox","width","xmlns","d","clipRule","fillRule","memo","items","shopperCurrencyCode","storeCurrencyCode","amountWithCurrency","itemsCount","getItemsCount","hasDifferentCurrency","itemsText","TranslatedString","id","renderHeader","newHeaderLink","headerLink","subHeaderText","isValidElement","cloneElement","ModalHeader","additionalClassName","href","preventDefault","additionalLineItems","isTaxIncluded","taxes","onAfterOpen","storeCurrency","shopperCurrency","total","orderSummarySubtotalsProps","displayInclusiveTax","ShopperCurrency","amount","code","continueButton","isSmallScreen","Button","Modal","additionalBodyClassName","additionalHeaderClassName","additionalModalClassName","footer","header","OrderSummarySection","OrderSummaryItems","displayLineItemsCount","OrderSummarySubtotals","OrderSummaryTotal","orderAmount","map","tax","index","OrderSummaryPrice","label","name","coupons","discountAmount","handlingAmount","lineItems","onRemovedCoupon","onRemovedGiftCertificate","shippingAmount","shippingAmountBeforeDiscount","storeCreditAmount","giftWrappingAmount","subtotalAmount","fees","nonBundledLineItems","useMemo","removeBundledItems","renderModal","useCallback","ModalTrigger","tabIndex","productWithImage","imageUrl","alt","src","IconGiftCertificate","getImage","data","count"],"sourceRoot":""}