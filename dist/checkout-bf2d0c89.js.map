{"version":3,"file":"checkout-bf2d0c89.js","mappings":"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C+Z,EAAehS,IACvB,cAAlBA,EAASnN,KAAuBmf,EAAgBhS,EAASrB,OAASqT,GAC1E,EACP,CARuB/R,CAA0BvN,IAC1C4M,EACP,C,kECNA,MAAM2S,EAAkB,CACpBC,MAAO,EACPC,SAAU,KAQC,SAAelR,EAASmR,EAAsB5H,G,sDACzD,MAAM,MAAE0H,EAAK,SAAEC,GAAa,OAAH,wBAAQF,GAAoBzH,GAErD,IACI,aAAa4H,GACjB,CAAE,MAAO1b,GACL,GAAc,IAAVwb,EACA,MAAMxb,EAKV,aAFM,IAAId,SAASyc,GAAYtd,WAAWsd,EAASF,KAE5ClR,EAAMmR,EAAI,CAAED,WAAUD,MAAOA,EAAQ,GAChD,CACJ,G,mBCxBA,IAAKI,E,iBAAL,SAAKA,GACD,gBACA,oBACA,sCACA,sCACA,oBACA,kBACA,sBACA,wBACA,sBACA,4BACA,0BACA,kCACA,kBACA,cACA,wBACA,8BACA,kCACA,gDACA,8BACA,8DACA,0CACA,wEACA,oDACA,gDACA,sDACA,gDACA,qBACA,4BACA,8CACA,sBACA,sBACA,kDACA,gBACA,cACA,gBACA,kBACA,kBACA,0BACA,kBACA,oBACA,sCACA,cACA,gCACA,6BACA,kCACA,8CACA,wDACA,qEACA,4CACA,0DACA,8DACA,oEACA,mEACA,wDACA,8DACA,gEACA,cACA,oBACA,oBACA,oBACA,cACA,kBACA,sBACA,oCACA,0CACA,0CACA,sBACA,wBACA,kCACA,oDACA,YACA,+CACH,CAzED,CAAKA,IAAAA,EAAe,KA2EpB,S,gFCjEA,MAwBA,EAxB8C,I,IAAA,SAC1Cpb,EAAQ,UACRlF,EAAS,OACTugB,EAAM,OACNzgB,EAAM,uBACN8a,EAAsB,oBACtBhb,GAAmB,EAChBG,GAAI,cAPmC,2FAQxC,OACF,yCACSA,EAAI,CACTC,UAAY,IACR,CAAE,iBAAkB4a,GACpB5a,GAAa,aACb,CAAE,YAAaugB,GACf,+BACA3gB,GACH,YACWE,IAEVoF,G,kHCRV,MA6BMsb,GAAiD,IAAA7gB,OACnD,EAAGC,sBAAqB6gB,YAAWvY,QAAOwY,OAAMhG,WA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","sources":["webpack://checkout/./packages/ui/src/icon/withIconContainer.tsx","webpack://checkout/./packages/core/src/app/analytics/withAnalytics.ts","webpack://checkout/./packages/core/src/app/shipping/hasSelectedShippingOptions.ts","webpack://checkout/./packages/core/src/app/common/error/CustomError.ts","webpack://checkout/./packages/core/src/app/ui/form/Form.tsx","webpack://checkout/./packages/utility/src/navigateToOrderConfirmation.ts","webpack://checkout/./packages/error-handling-utils/src/ErrorLogger.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconBolt.tsx","webpack://checkout/./packages/error-handling-utils/src/ErrorBoundary.tsx","webpack://checkout/./packages/ui/src/form/contexts/FormContext.tsx","webpack://checkout/./packages/core/src/app/shipping/hasUnassignedLineItems.ts","webpack://checkout/./packages/core/src/app/guestSignup/AccountService.ts","webpack://checkout/./packages/core/src/app/guestSignup/errors/AccountCreationRequirementsError.ts","webpack://checkout/./packages/core/src/app/guestSignup/errors/AccountCreationFailedError.ts","webpack://checkout/./packages/core/src/app/order/getPaymentInstructions.ts","webpack://checkout/./packages/core/src/app/guestSignup/SignUpPasswordField.tsx","webpack://checkout/./packages/core/src/app/guestSignup/GuestSignUpForm.tsx","webpack://checkout/./packages/core/src/app/guestSignup/PasswordSavedSuccessAlert.tsx","webpack://checkout/./packages/core/src/app/guestSignup/SignedUpSuccessAlert.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmationSection.tsx","webpack://checkout/./packages/core/src/app/order/MandateTextComponent.tsx","webpack://checkout/./packages/core/src/app/order/PaymentsWithMandates.tsx","webpack://checkout/./packages/core/src/app/order/OrderStatus.tsx","webpack://checkout/./packages/core/src/app/ui/header/PrimaryHeader.tsx","webpack://checkout/./packages/core/src/app/order/ThankYouHeader.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmation/ContinueButton.tsx","webpack://checkout/./packages/core/src/app/giftCertificate/mapFromPayments.ts","webpack://checkout/./packages/core/src/app/order/getStoreCreditAmount.ts","webpack://checkout/./packages/core/src/app/order/mapToOrderSummarySubtotalsProps.ts","webpack://checkout/./packages/core/src/app/order/getOrderShippingCostAfterAutomaticDiscount.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconPrint.tsx","webpack://checkout/./packages/core/src/app/order/PrintLink.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmation/OrderSummaryContainer.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmation/OrderConfirmationPage.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmation/OrderConfirmation.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmationApp.tsx","webpack://checkout/./packages/core/src/app/formFields/getCustomFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/ui/responsive/isMobileView.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconSuccess.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconInfo.tsx","webpack://checkout/./packages/core/src/app/ui/alert/Alert.tsx","webpack://checkout/./packages/core/src/app/shipping/shippingOption/ShippingOptionAdditionalDescription.tsx","webpack://checkout/./packages/core/src/app/shipping/shippingOption/StaticShippingOption.tsx","webpack://checkout/./packages/utility/src/isBuyNowCart.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconError.tsx","webpack://checkout/./packages/core/src/app/currency/ShopperCurrency.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/ChecklistSkeleton.tsx","webpack://checkout/./packages/core/src/app/shipping/findLineItems.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/AddressFormSkeleton.tsx","webpack://checkout/./packages/legacy-hoc/src/createInjectHoc.tsx","webpack://checkout/./packages/locale/src/withCurrency.tsx","webpack://checkout/./packages/core/src/app/common/error/isCustomError.ts","webpack://checkout/./packages/core/src/app/address/mapAddressToFormValues.ts","webpack://checkout/./packages/contexts/src/extension/ExtensionType.ts","webpack://checkout/./packages/core/src/app/ui/form/FormField.tsx","webpack://checkout/./packages/core/src/app/common/error/ConsoleErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/NoopErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/SentryErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/createErrorLogger.ts","webpack://checkout/./packages/payment-integration-api/src/contexts/checkout-context/CheckoutProvider.tsx","webpack://checkout/./packages/core/src/app/customer/getPasswordRequirements.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/LoadingSkeleton.tsx","webpack://checkout/./packages/core/src/app/shipping/getShippingCostAfterAutomaticDiscount.ts","webpack://checkout/./packages/core/src/app/common/utility/retry.ts","webpack://checkout/./packages/payment-integration-api/src/PaymentMethodId.ts","webpack://checkout/./packages/core/src/app/ui/form/Label.tsx","webpack://checkout/./packages/core/src/app/ui/form/BasicFormField.tsx","webpack://checkout/./packages/core/src/app/customer/CustomerViewType.ts","webpack://checkout/./packages/core/src/app/common/error/ErrorCode.tsx","webpack://checkout/./packages/core/src/app/common/error/ErrorModal.tsx","webpack://checkout/./packages/core/src/app/common/error/isHtmlError.tsx","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createReloadCheckoutHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createSetIframeStyleHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createShowLoadingIndicatorHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createReRenderShippingFormHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createReRenderShippingStepHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/queryHandlers/createGetConsignmentHandler.ts","webpack://checkout/./packages/checkout-extension/src/ExtensionService.ts","webpack://checkout/./packages/core/src/app/address/isValidAddress.ts","webpack://checkout/./packages/core/src/app/formFields/getFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/address/getAddressFormFieldsValidationSchema.ts","webpack://checkout/./packages/ui/src/form/DynamicFormField/DynamicFormFieldType.ts","webpack://checkout/./packages/core/src/app/ui/form/Input.tsx","webpack://checkout/./packages/ui/src/icon/IconPayPalFastlane.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/PoweredByPayPalFastlaneLabel.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/usePayPalFastlaneAddress.ts","webpack://checkout/./packages/payment-integration-api/src/contexts/checkout-context/CheckoutContext.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/ViewPicker.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/MobileView.tsx","webpack://checkout/./packages/core/src/app/generated/checkoutButtons/index.ts","webpack://checkout/./packages/core/src/app/customer/resolveCheckoutButton.ts","webpack://checkout/./packages/contexts/src/extension/ExtensionContext.tsx","webpack://checkout/./packages/core/src/app/checkout/NoopCheckoutSupport.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/errors/EmbeddedCheckoutUnsupportedError.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutSupport.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/createEmbeddedCheckoutSupport.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/CheckoutPageSkeleton.tsx","webpack://checkout/./packages/contexts/src/extension/withExtension.ts","webpack://checkout/./packages/ui/src/loading/LoadingNotification.tsx","webpack://checkout/./packages/core/src/app/cart/EmptyCartMessage.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/WalletButtonContainerSkeleton.tsx","webpack://checkout/./packages/core/src/app/customer/CheckoutButtonContainer.tsx","webpack://checkout/./packages/core/src/app/customer/checkoutSuggestion/BoltCheckoutSuggestion.tsx","webpack://checkout/./packages/dom-utils/src/stopPropagation.ts","webpack://checkout/./packages/core/src/app/customer/checkoutSuggestion/CheckoutSuggestion.tsx","webpack://checkout/./packages/core/src/app/customer/canSignOut.ts","webpack://checkout/./packages/core/src/app/customer/CustomerInfo.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconTag.tsx","webpack://checkout/./packages/core/src/app/promotion/PromotionBanner.tsx","webpack://checkout/./packages/core/src/app/promotion/PromotionBannerList.tsx","webpack://checkout/./packages/core/src/app/shipping/StaticConsignment.tsx","webpack://checkout/./packages/core/src/app/shipping/StaticMultiConsignment.tsx","webpack://checkout/./packages/core/src/app/shipping/ShippingSummary.tsx","webpack://checkout/./packages/core/src/app/shipping/shippingOption/ShippingOptionExpiredError.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconCheck.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStepHeader.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStep.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStepType.ts","webpack://checkout/./packages/core/src/app/shipping/itemsRequireShipping.ts","webpack://checkout/./packages/core/src/app/checkout/getCheckoutStepStatuses.ts","webpack://checkout/./packages/core/src/app/checkout/CheckoutPage.tsx","webpack://checkout/./packages/core/src/app/checkout/mapErrorMessage.ts","webpack://checkout/./packages/core/src/app/checkout/mapToCheckoutProps.ts","webpack://checkout/./packages/core/src/app/checkout/hooks/useLoadCheckout.ts","webpack://checkout/./packages/core/src/app/common/utility/yieldToMain.ts","webpack://checkout/./packages/core/src/app/checkout/Checkout.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutInitializer.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutApp.tsx","webpack://checkout/./packages/core/src/app/customer/SubscribeSessionStorage.ts","webpack://checkout/./packages/core/src/app/ui/form/Legend.tsx","webpack://checkout/./packages/core/src/app/ui/icon/withIconContainer.tsx","webpack://checkout/./packages/legacy-hoc/src/createMappableInjectHoc.tsx","webpack://checkout/./packages/core/src/app/checkout/withCheckout.tsx","webpack://checkout/./packages/core/src/app/ui/toggle/Toggle.tsx","webpack://checkout/./packages/contexts/src/analytics/useAnalytics.tsx","webpack://checkout/./packages/core/src/app/ui/button/Button.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-address.ts","webpack://checkout/./packages/core/src/app/common/utility/getNestedValue.ts","webpack://checkout/./packages/core/src/app/ui/form/FormFieldError.tsx","webpack://checkout/./packages/locale/src/TranslatedHtml.tsx","webpack://checkout/./packages/locale/src/TranslatedString.tsx","webpack://checkout/./packages/core/src/app/common/dom/toCssRule.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutStyleParser.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutStylesheet.ts","webpack://checkout/./packages/core/src/app/common/dom/appendStylesheet.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/createEmbeddedCheckoutStylesheet.ts","webpack://checkout/./packages/core/src/app/common/error/computeErrorCode.ts","webpack://checkout/./packages/core/src/app/common/resolver/resolveLazyComponent.ts","webpack://checkout/./packages/contexts/src/extension/useExtensions.tsx","webpack://checkout/./packages/core/src/app/shipping/StaticConsignmentItemList.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconClose.tsx","webpack://checkout/./packages/core/src/app/ui/form/TextInput.tsx","webpack://checkout/./packages/core/src/app/embeddedCheckout/isEmbedded.ts","webpack://checkout/./packages/contexts/src/theme/ThemeContext.tsx","webpack://checkout/./packages/contexts/src/theme/ThemeProvider.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-customer.ts","webpack://checkout/./packages/ui/src/loading/LazyContainer.tsx","webpack://checkout/./packages/core/src/app/giftCertificate/isGiftCertificatePayment.ts","webpack://checkout/./packages/core/src/app/ui/modal/ModalHeader.tsx","webpack://checkout/./packages/core/src/app/payment/storeCredit/isStoreCreditPayment.ts","webpack://checkout/./packages/core/src/app/ui/form/Fieldset.tsx","webpack://checkout/./packages/contexts/src/analytics/AnalyticsContext.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/is-bigcommerce-payments-fastlane-method.ts","webpack://checkout/./packages/core/src/app/address/AddressType.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/OrderConfirmationPageSkeleton.tsx","webpack://checkout/./packages/ui/src/utils/isMobileView.ts","webpack://checkout/./packages/locale/src/localizeAddress.ts","webpack://checkout/./packages/locale/src/withLanguage.tsx","webpack://checkout/./packages/checkout-extension/src/ExtensionRegionContainer.ts","webpack://checkout/./packages/checkout-extension/src/Extension.tsx","webpack://checkout/./packages/core/src/app/common/error/isRequestError.ts","webpack://checkout/./packages/dom-utils/src/preventDefault.ts","webpack://checkout/./packages/core/src/app/billing/StaticBillingAddress.tsx","webpack://checkout/./packages/core/src/app/address/StaticAddress.tsx","webpack://checkout/./packages/locale/src/LocaleContext.ts","webpack://checkout/./packages/instrument-utils/src/guards/shouldUseStripeLinkByMinimumAmount.ts","webpack://checkout/./packages/core/src/app/common/utility/emptyData.ts","webpack://checkout/./packages/core/src/app/customer/getSupportedMethods.ts","webpack://checkout/./packages/core/src/app/shipping/getLineItemsCount.ts","webpack://checkout/./packages/core/src/app/shipping/ConsignmentLineItemDetail.tsx","webpack://checkout/./packages/contexts/src/analytics/createAnalyticsService.ts","webpack://checkout/./packages/contexts/src/analytics/AnalyticsProvider.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/breakpoints.ts","webpack://checkout/./packages/core/src/app/common/bundler/getCurrentScriptPath.ts","webpack://checkout/./packages/core/src/app/common/bundler/configurePublicPath.ts","webpack://checkout/./packages/core/src/app/checkout/renderCheckout.tsx","webpack://checkout/./packages/core/src/app/order/renderOrderConfirmation.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-method.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-commerce-fastlane-method.ts","webpack://checkout/./packages/locale/src/translations/index.ts","webpack://checkout/./packages/locale/src/getLanguageService.ts","webpack://checkout/./packages/core/src/app/common/error/createCustomErrorType.ts","webpack://checkout/./packages/ui/src/loading/LoadingSpinner.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-braintree-fastlane-method.ts","webpack://checkout/./packages/core/src/app/common/utility/isExperimentEnabled.ts","webpack://checkout/./packages/core/src/app/common/error/isErrorWithType.ts","webpack://checkout/./packages/contexts/src/extension/ExtensionReducer.ts","webpack://checkout/./packages/contexts/src/extension/ExtensionProvider.tsx","webpack://checkout/./packages/ui/src/loading/LoadingOverlay.tsx","webpack://checkout/./packages/core/src/app/ui/modal/Modal.tsx","webpack://checkout/./packages/core/src/app/ui/form/FormFieldContainer.tsx","webpack://checkout/./packages/locale/src/LocaleProvider.tsx","webpack://checkout/./packages/core/src/app/shipping/isUsingMultiShipping.ts","webpack://checkout/./packages/core/src/app/payment/paymentMethod/PaymentMethodId.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/CartSummarySkeleton.tsx"],"sourcesContent":["import classNames from 'classnames';\nimport React, { type ComponentType, memo } from 'react';\n\nexport enum IconSize {\n    Regular = 'regular',\n    Small = 'small',\n    Medium = 'medium',\n    Large = 'large',\n}\n\nexport interface IconProps {\n    additionalClassName?: string;\n    size?: IconSize;\n    testId?: string;\n}\n\nexport default function withIconContainer<TProps extends Record<string, any>>(\n    OriginalComponent: ComponentType<TProps>,\n): ComponentType<TProps & IconProps> {\n    return memo(({ additionalClassName, size, testId, ...rest }) => (\n        <div\n            className={classNames(\n                'icon',\n                additionalClassName,\n                size === IconSize.Small ? 'icon--small' : null,\n                size === IconSize.Large ? 'icon--large' : null,\n                size === IconSize.Medium ? 'icon--medium' : null,\n            )}\n            data-test={testId}\n        >\n            <OriginalComponent {...(rest as TProps)} />\n        </div>\n    ));\n}\n","import { AnalyticsContext } from '@bigcommerce/checkout/contexts';\nimport { createInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nconst withAnalytics = createInjectHoc(AnalyticsContext, { displayNamePrefix: 'WithAnalytics' });\n\nexport default withAnalytics;\n","import { type Consignment } from '@bigcommerce/checkout-sdk';\nimport { every } from 'lodash';\n\nexport default function hasSelectedShippingOptions(consignments: Consignment[]): boolean {\n    if (!consignments.length) {\n        return false;\n    }\n\n    return every(\n        consignments,\n        (consignment) =>\n            (consignment.selectedShippingOption && consignment.selectedShippingOption.id) ||\n            consignment.selectedShippingOption?.type === 'custom',\n    );\n}\n","export default class CustomError extends Error {\n    static shouldReport: boolean;\n\n    data: any;\n    title: string;\n    type: string;\n\n    constructor({\n        data = {},\n        message = '',\n        title = '',\n        name = '',\n    }: {\n        data?: any;\n        message?: string;\n        title?: string;\n        name?: string;\n    }) {\n        super();\n\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, CustomError);\n        } else {\n            this.stack = new Error().stack;\n        }\n\n         \n        this.data = data;\n        this.message = message;\n        this.name = name;\n        this.title = title;\n        this.type = 'custom';\n    }\n\n    // todo: remove these methods when all error types has specific subclasses.\n    // they are only provided for compatibility with errors defined in `app.errors.ts` while we transition\n    // to proper error subclasses.\n    protected setDefaultValues({\n        name,\n        defaultError,\n        defaultTitle,\n    }: {\n        name: string;\n        defaultError: string;\n        defaultTitle: string;\n    }): void {\n        this.name = this.name || name;\n        this.message = this.message || defaultError;\n        this.title = this.title || defaultTitle;\n    }\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\nimport { Form as FormikForm, type FormikFormProps } from 'formik';\nimport { values } from 'lodash';\nimport React, { createRef, type FunctionComponent, memo, useCallback, useRef } from 'react';\n\nimport { type FormContextType, FormProvider } from '@bigcommerce/checkout/ui';\n\nexport interface FormProps extends FormikFormProps {\n    testId?: string;\n}\n\nconst Form: FunctionComponent<FormProps> = ({ className, testId, ...rest }) => {\n    const ref = useRef({ containerRef: createRef<HTMLDivElement>() });\n\n    const focusOnError = () => {\n        const { current } = ref.current.containerRef;\n\n        if (!current) {\n            return;\n        }\n\n        const errorInputSelectors = [\n            '.form-field--error input',\n            '.form-field--error textarea',\n            '.form-field--error select',\n        ];\n\n        const erroredFormField = current.querySelector<HTMLElement>(errorInputSelectors.join(', '));\n\n        if (erroredFormField) {\n            erroredFormField.focus({ preventScroll: true });\n\n            try {\n                erroredFormField.offsetParent?.scrollIntoView({\n                    behavior: 'smooth',\n                    block: 'center',\n                    inline: 'center',\n                });\n            } catch {\n                erroredFormField.offsetParent?.scrollIntoView();\n            }\n        }\n    };\n\n    const handleSubmitCapture = useCallback(\n        memoizeOne((setSubmitted: FormContextType['setSubmitted']) => {\n            return () => {\n                setSubmitted(true);\n\n                // use timeout to allow Formik validation to happen\n                setTimeout(() => focusOnError());\n            };\n        }),\n        [focusOnError],\n    );\n\n    const renderContent = useCallback(\n        memoizeOne(({ setSubmitted }: FormContextType) => {\n            return (\n                <div ref={ref.current.containerRef}>\n                    <FormikForm\n                        {...rest}\n                        className={className}\n                        data-test={testId}\n                        noValidate\n                        onSubmitCapture={handleSubmitCapture(setSubmitted)}\n                    />\n                </div>\n            );\n        }),\n        [className, handleSubmitCapture, testId, ...values(rest)],\n    );\n\n    return <FormProvider>{renderContent}</FormProvider>;\n};\n\nexport default memo(Form);\n","import { noop } from 'lodash';\n\nimport isBuyNowCart from './isBuyNowCart';\n\nexport default function navigateToOrderConfirmation(orderId?: number): Promise<never> {\n    let url: string;\n\n    if (orderId && isBuyNowCart()) {\n        url = `/checkout/order-confirmation/${orderId.toString()}`;\n    } else {\n        url = `${window.location.pathname.replace(/\\/$/, '')}/order-confirmation`;\n    }\n\n    window.location.replace(url);\n\n    return new Promise(noop);\n}\n","import type { BrowserOptions } from '@sentry/browser';\n\nexport default interface ErrorLogger {\n    /**\n     * Logs an error in, tagging it with an error code.\n     *\n     * @param error The error object to be logged\n     * @param tags The tags attached to the log entry\n     * @param level The level of the log\n     * @param meta Any extra meta data\n     */\n    log(error: Error, tags?: ErrorTags, level?: ErrorLevelType, meta?: ErrorMeta): void;\n    logMessage?(message: string): void;\n}\n\nexport interface ErrorLoggerOptions {\n    errorTypes?: string[];\n    publicPath?: string;\n    sampleRate?: number;\n}\n\nexport interface ErrorLoggerServiceConfig {\n    sentry?: BrowserOptions;\n}\n\nexport interface ErrorTags {\n    /**\n     * A code that identifies uniquely each error type\n     */\n    errorCode: string;\n}\n\nexport interface ErrorMeta {\n    [key: string]: unknown;\n}\n\nexport enum ErrorLevelType {\n    Info = 'info',\n    Warning = 'warning',\n    Error = 'error',\n    Debug = 'debug',\n}\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconBolt: FunctionComponent = () => (\n    <svg\n        aria-labelledby=\"iconCardBoltTitle\"\n        data-test=\"bolt-icon\"\n        height=\"12\"\n        role=\"img\"\n        viewBox=\"0 0 12 12\"\n        width=\"12\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <title id=\"iconCardBoltTitle\">Bolt</title>\n        <path d=\"M0 7.502h7.5v4.5L12 4.502H4.5V0z\" fill=\"#FFFFFF\" id=\"mark\" />\n    </svg>\n);\n\nexport default withIconContainer(IconBolt);\n","import { Component, type ReactNode } from 'react';\n\nimport type ErrorLogger from './ErrorLogger';\n\nexport interface ErrorBoundaryProps {\n    children?: ReactNode;\n    fallback?: ReactNode;\n    errorLogger?: ErrorLogger;\n    filter?(error: Error): boolean;\n}\n\ninterface ErrorBoundaryState {\n    error?: Error;\n}\n\nclass ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n    static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n        return { error };\n    }\n\n    // eslint-disable-next-line @typescript-eslint/member-ordering\n    state: ErrorBoundaryState = {};\n\n    componentDidCatch(error: Error): void {\n        const { filter = () => true, errorLogger } = this.props;\n\n        if (!filter(error)) {\n            throw error;\n        }\n\n        // Adding errorCode with value `ErrorBoundary` to collect usage statistics of ErrorBoundary\n        if (errorLogger) {\n            errorLogger.log(error, {\n                errorCode: 'ErrorBoundary',\n            });\n        }\n    }\n\n    render(): ReactNode {\n        const { children, fallback, filter = () => true } = this.props;\n\n        const { error } = this.state;\n\n        if (error && filter(error)) {\n            return fallback || null;\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorBoundary;\n","import { isFunction, noop } from 'lodash';\nimport React, {\n    createContext,\n    type FunctionComponent,\n    memo,\n    type ReactNode,\n    useMemo,\n    useState,\n} from 'react';\n\nexport interface FormContextType {\n    isSubmitted: boolean;\n    setSubmitted(isSubmitted: boolean): void;\n}\n\nexport const FormContext = createContext<FormContextType>({\n    isSubmitted: false,\n    setSubmitted: noop,\n});\n\ntype FormContextFunction = (props: FormContextType) => ReactNode;\n\nexport interface FormProviderProps {\n    initialIsSubmitted?: boolean;\n    children: ReactNode | FormContextFunction;\n}\n\nexport const FormProvider: FunctionComponent<FormProviderProps> = memo(\n    ({ children, initialIsSubmitted = false }) => {\n        const [isSubmitted, setSubmitted] = useState(initialIsSubmitted);\n        const contextValue = useMemo(() => ({ isSubmitted, setSubmitted }), [isSubmitted]);\n\n        return (\n            <FormContext.Provider value={contextValue}>\n                {isFunction(children) ? children({ isSubmitted, setSubmitted }) : children}\n            </FormContext.Provider>\n        );\n    },\n);\n\nexport default FormContext;\n","import { type Consignment, type LineItemMap } from '@bigcommerce/checkout-sdk';\nimport { reduce } from 'lodash';\n\nexport default function hasUnassignedLineItems(\n    consignments: Consignment[],\n    lineItems: LineItemMap,\n): boolean {\n    const totalAssigned = reduce(\n        consignments,\n        (total, consignment) => total + consignment.lineItemIds.length,\n        0,\n    );\n\n    return totalAssigned < lineItems.physicalItems.filter((item) => !item.addedByPromotion).length;\n}\n","import { createRequestSender, type RequestSender } from '@bigcommerce/request-sender';\n\nimport { type CreatedCustomer, type CreatedCustomerResponse } from './CreatedCustomer';\n\nexport interface CustomerCreateRequestBody {\n    confirmPassword: string;\n    newsletter: boolean;\n    orderId: number;\n    password: string;\n}\n\nexport default class AccountService {\n    constructor(private requestSender: RequestSender = createRequestSender()) {}\n\n    create(body: CustomerCreateRequestBody): Promise<CreatedCustomer> {\n        return this.requestSender\n            .put<CreatedCustomerResponse>('/internalapi/v1/checkout/customer', { body })\n            .then((response) => response.body.data.customer);\n    }\n}\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class AccountCreationRequirementsError extends CustomError {\n    constructor(data: Error, requirements: string) {\n        super({\n            name: 'ACCOUNT_CREATION_REQUIREMENTS_ERROR',\n            message: requirements,\n            title: getLanguageService().translate(\n                'customer.create_account_requirements_error_heading',\n            ),\n            data,\n        });\n\n        setPrototypeOf(this, AccountCreationRequirementsError.prototype);\n    }\n}\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class AccountCreationFailedError extends CustomError {\n    constructor(data: Error) {\n        super({\n            name: 'ACCOUNT_CREATION_FAILED',\n            message: getLanguageService().translate('customer.create_account_error'),\n            data,\n        });\n\n        setPrototypeOf(this, AccountCreationFailedError.prototype);\n    }\n}\n","import { type GatewayOrderPayment, type Order, type OrderPayment } from '@bigcommerce/checkout-sdk';\n\nimport { isGiftCertificatePayment } from '../giftCertificate';\nimport { isStoreCreditPayment } from '../payment/storeCredit';\n\nexport interface PaymentInstructionsProps {\n    order: Order;\n}\n\nfunction isDefaultOrderPayment(payment: OrderPayment): payment is GatewayOrderPayment {\n    return !isGiftCertificatePayment(payment) && !isStoreCreditPayment(payment);\n}\n\nfunction getPaymentInstructions(order: Order): string {\n    const gatewayPayment = (order.payments || []).find(isDefaultOrderPayment);\n    const instructions = gatewayPayment && gatewayPayment.detail.instructions;\n\n    return instructions || '';\n}\n\nexport default getPaymentInstructions;\n","import { type FieldProps } from 'formik';\nimport React, { type FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { FormField, TextInput } from '../ui/form';\n\nexport interface PasswordField {\n    minLength: number;\n}\n\nconst SignUpPasswordField: FunctionComponent<PasswordField> = ({ minLength }) => {\n    const renderPasswordInput = useCallback(\n        ({ field }: FieldProps<string>) => <TextInput {...field} id={field.name} type=\"password\" />,\n        [],\n    );\n\n    const renderPasswordConfirmationInput = useCallback(\n        ({ field }: FieldProps<string>) => <TextInput {...field} id={field.name} type=\"password\" />,\n        [],\n    );\n\n    const passwordLabelContent = useMemo(\n        () => (\n            <>\n                <TranslatedString id=\"customer.password_label\" />{' '}\n                <small>\n                    {`${minLength}-`}\n                    <TranslatedString id=\"customer.password_minimum_character_label\" />\n                </small>\n            </>\n        ),\n        [minLength],\n    );\n\n    const passwordConfirmationLabelContent = useMemo(\n        () => <TranslatedString id=\"customer.password_confirmation_label\" />,\n        [],\n    );\n\n    return (\n        <>\n            <FormField\n                input={renderPasswordInput}\n                labelContent={passwordLabelContent}\n                name=\"password\"\n            />\n\n            <FormField\n                input={renderPasswordConfirmationInput}\n                labelContent={passwordConfirmationLabelContent}\n                name=\"confirmPassword\"\n            />\n        </>\n    );\n};\n\nexport default memo(SignUpPasswordField);\n","import { type FormikProps, withFormik } from 'formik';\nimport React, { type FunctionComponent, memo } from 'react';\nimport { object, ref, string } from 'yup';\n\nimport { TranslatedString, withLanguage, type WithLanguageProps } from '@bigcommerce/checkout/locale';\n\nimport { type PasswordRequirements } from '../customer';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Fieldset, Form, Legend } from '../ui/form';\n\nimport SignUpPasswordField from './SignUpPasswordField';\n\nexport interface SignUpFormProps {\n    isSigningUp?: boolean;\n    customerCanBeCreated: boolean;\n    passwordRequirements: PasswordRequirements;\n    onSignUp(data: SignUpFormValues): void;\n}\n\nexport interface SignUpFormValues {\n    password: string;\n    confirmPassword: string;\n}\n\nconst GuestSignUpForm: FunctionComponent<\n    SignUpFormProps & WithLanguageProps & FormikProps<SignUpFormValues>\n> = ({ isSigningUp, customerCanBeCreated, passwordRequirements: { minLength } }) => (\n    <Fieldset\n        legend={\n            <Legend>\n                <TranslatedString\n                    id={\n                        customerCanBeCreated\n                            ? 'customer.create_account_text'\n                            : 'customer.set_password_text'\n                    }\n                />\n            </Legend>\n        }\n    >\n        {!customerCanBeCreated && (\n            <p>\n                <TranslatedString id=\"customer.account_created_text\" />\n            </p>\n        )}\n\n        <Form className=\"guest-signup form\">\n            <SignUpPasswordField minLength={minLength} />\n\n            <div className=\"form-actions\">\n                <Button\n                    id=\"createAccountButton\"\n                    isLoading={isSigningUp}\n                    type=\"submit\"\n                    variant={ButtonVariant.Primary}\n                >\n                    <TranslatedString\n                        id={\n                            customerCanBeCreated\n                                ? 'customer.create_account_action'\n                                : 'customer.set_password_action'\n                        }\n                    />\n                </Button>\n            </div>\n        </Form>\n    </Fieldset>\n);\n\nexport default withLanguage(\n    withFormik<SignUpFormProps & WithLanguageProps, SignUpFormValues>({\n        mapPropsToValues: () => ({\n            password: '',\n            confirmPassword: '',\n        }),\n        handleSubmit: (values, { props: { onSignUp } }) => {\n            onSignUp(values);\n        },\n        validationSchema: ({\n            language,\n            passwordRequirements: { description, numeric, alpha, minLength },\n        }: SignUpFormProps & WithLanguageProps) =>\n            object({\n                password: string()\n                    .required(description || language.translate('customer.password_required_error'))\n                    .matches(\n                        numeric,\n                        description ||\n                            language.translate('customer.password_number_required_error'),\n                    )\n                    .matches(\n                        alpha,\n                        description ||\n                            language.translate('customer.password_letter_required_error'),\n                    )\n                    .min(\n                        minLength,\n                        description ||\n                            language.translate('customer.password_under_minimum_length_error'),\n                    )\n                    .max(100, language.translate('customer.password_over_maximum_length_error')),\n                confirmPassword: string()\n                    .required(language.translate('customer.password_confirmation_required_error'))\n                    .oneOf(\n                        [ref('password')],\n                        language.translate('customer.password_confirmation_error'),\n                    ),\n            }),\n    })(memo(GuestSignUpForm)),\n);\n","import React, { type FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Alert, AlertType } from '../ui/alert';\n\nconst PasswordSavedSuccessAlert: FunctionComponent = () => (\n    <Alert type={AlertType.Success}>\n        <strong>\n            <TranslatedString id=\"customer.set_password_success\" />\n        </strong>\n    </Alert>\n);\n\nexport default PasswordSavedSuccessAlert;\n","import React, { type FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Alert, AlertType } from '../ui/alert';\n\nconst SignedUpSuccessAlert: FunctionComponent = () => (\n    <Alert type={AlertType.Success}>\n        <strong>\n            <TranslatedString id=\"customer.create_account_success\" />\n        </strong>\n    </Alert>\n);\n\nexport default SignedUpSuccessAlert;\n","import React, { type FunctionComponent } from 'react';\n\nconst OrderConfirmationSection: FunctionComponent<{ children?: React.ReactNode }> = ({ children }) => (\n    <section className=\"orderConfirmation-section\">{children}</section>\n);\n\nexport default OrderConfirmationSection;\n","import React, { type FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nexport interface MandateTextComponentProps {\n    mandateText: {\n        [key: string]: string;\n    },\n    methodId: string;\n    providerId: string;\n}\n\nexport const MandateTextComponent: FunctionComponent<MandateTextComponentProps> = ({\n    mandateText,\n    providerId,\n    methodId,\n}) => {\n    if (!Object.keys(mandateText).length) {\n        return null;\n    }\n\n    return (\n        <ul data-test='order-confirmation-mandate-text-list'>\n            {Object.entries(mandateText).map((field, index) => {\n                return (\n                    <li data-test={`order-confirmation-mandate-text-list-item-${index}`} key={index}>\n                        <TranslatedString\n                            id={`order_confirmation.mandate.${providerId}.${methodId}.${field[0]}`}\n                        />:\n                        <b>\n                            {` ${field[1]}`}\n                        </b>\n                    </li>\n                )\n            })}\n        </ul>\n    )\n}\n","import { type GatewayOrderPayment } from '@bigcommerce/checkout-sdk';\nimport React, { type FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { MandateTextComponent } from './MandateTextComponent';\n\nexport interface PaymentsWithMandatesProps {\n    paymentsWithMandates: GatewayOrderPayment[];\n}\n\nexport const PaymentsWithMandates: FunctionComponent<PaymentsWithMandatesProps> = ({\n    paymentsWithMandates,\n}) => <>\n    {paymentsWithMandates.map((payment) => {\n        if (payment?.mandate?.url) {\n            return (\n                <a\n                    data-test=\"order-confirmation-mandate-link-text\"\n                    href={payment.mandate.url}\n                    key={`${payment.providerId}-${payment.methodId}-mandate`}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                >\n                    <TranslatedString\n                        id={`order_confirmation.mandate.${payment.providerId}.${payment.methodId}`}\n                    />\n                </a>\n            );\n        } else if (payment?.mandate?.id) {\n            return (\n                <p\n                    data-test=\"order-confirmation-mandate-id-text\"\n                    key={`${payment.providerId}-${payment.methodId}-mandate`}\n                >\n                    <TranslatedString\n                        data={{ mandate: payment.mandate.id }}\n                        id={`order_confirmation.mandate.${payment.providerId}.${payment.methodId}`}\n                    />\n                </p>\n            );\n        } else if (payment?.mandate?.mandateText && payment.methodId) {\n            return <MandateTextComponent\n                key='mandateTextList'\n                mandateText={payment.mandate.mandateText}\n                methodId={payment.methodId}\n                providerId={payment.providerId}\n            />\n        }\n    })}\n</>\n","import { type GatewayOrderPayment, type GiftCertificateOrderPayment, type Order, type StoreConfig } from '@bigcommerce/checkout-sdk';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\n\nimport OrderConfirmationSection from './OrderConfirmationSection';\nimport { PaymentsWithMandates } from './PaymentsWithMandates';\n\nexport interface OrderStatusProps {\n    config: StoreConfig;\n    supportEmail: string;\n    supportPhoneNumber?: string;\n    order: Order;\n}\n\ntype PaymentWithMandate = GatewayOrderPayment &\n    Required<Pick<GatewayOrderPayment, 'mandate' | 'methodId'>>;\n\nconst isPaymentWithMandate = (\n    payment: GatewayOrderPayment | GiftCertificateOrderPayment,\n): payment is PaymentWithMandate => !!payment.methodId && 'mandate' in payment && !!payment.mandate;\n\nconst OrderStatus: FunctionComponent<OrderStatusProps> = ({\n    config,\n    order,\n    supportEmail,\n    supportPhoneNumber,\n}) => {\n    const paymentsWithMandates = order.payments?.filter(isPaymentWithMandate) || [];\n\n    return (\n        <OrderConfirmationSection>\n            {order.orderId && (\n                <p data-test=\"order-confirmation-order-number-text\">\n                    <TranslatedHtml\n                        data={{ orderNumber: order.orderId }}\n                        id=\"order_confirmation.order_number_text\"\n                    />\n                </p>\n            )}\n\n            <p data-test=\"order-confirmation-order-status-text\">\n                <OrderStatusMessage\n                    config={config}\n                    orderNumber={order.orderId}\n                    orderStatus={order.status}\n                    supportEmail={supportEmail}\n                    supportPhoneNumber={supportPhoneNumber}\n                />\n            </p>\n            <PaymentsWithMandates\n                paymentsWithMandates={paymentsWithMandates}\n            />\n            {order.hasDigitalItems && (\n                <p data-test=\"order-confirmation-digital-items-text\">\n                    <TranslatedHtml\n                        id={\n                            order.isDownloadable\n                                ? 'order_confirmation.order_with_downloadable_digital_items_text'\n                                : 'order_confirmation.order_without_downloadable_digital_items_text'\n                        }\n                    />\n                </p>\n            )}\n        </OrderConfirmationSection>\n    );\n};\n\ninterface OrderStatusMessageProps {\n    config: StoreConfig;\n    orderNumber: number;\n    orderStatus: string;\n    supportEmail?: string;\n    supportPhoneNumber?: string;\n}\n\nconst OrderStatusMessage: FunctionComponent<OrderStatusMessageProps> = ({\n    config,\n    orderNumber,\n    orderStatus,\n    supportEmail,\n    supportPhoneNumber,\n}) => {\n    switch (orderStatus) {\n        case 'MANUAL_VERIFICATION_REQUIRED':\n        case 'AWAITING_PAYMENT':\n            return <TranslatedHtml id=\"order_confirmation.order_pending_review_text\" />;\n\n        case 'PENDING':\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail }}\n                    id=\"order_confirmation.order_pending_status_text\"\n                />\n            );\n\n        case 'INCOMPLETE':\n            if (config.checkoutSettings.features['CHECKOUT-6891.update_incomplete_order_wording_on_order_confirmation_page']) {\n                return (\n                    <TranslatedHtml\n                        data={{ orderNumber, supportEmail }}\n                        id=\"order_confirmation.order_pending_status_text\"\n                    />\n                );\n            }\n\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail }}\n                    id=\"order_confirmation.order_incomplete_status_text\"\n                />\n            );\n\n        default:\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail, supportPhoneNumber }}\n                    id={\n                        supportPhoneNumber\n                            ? 'order_confirmation.order_with_support_number_text'\n                            : 'order_confirmation.order_without_support_number_text'\n                    }\n                />\n            );\n    }\n};\n\nexport default memo(OrderStatus);\n","import React, { type FunctionComponent } from 'react';\n\nexport interface HeaderProps {\n    children: React.ReactNode;\n    testId?: string;\n}\n\nconst PrimaryHeader: FunctionComponent<HeaderProps> = ({ children, testId }) => (\n    <h1 className=\"optimizedCheckout-headingPrimary\" data-test={testId}>\n        {children}\n    </h1>\n);\n\nexport default PrimaryHeader;\n","import React, { type FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { PrimaryHeader } from '../ui/header';\n\nexport interface HeaderProps {\n    name?: string;\n}\n\nconst ThankYouHeader: FunctionComponent<HeaderProps> = ({ name }) => (\n    <PrimaryHeader testId=\"order-confirmation-heading\">\n        {name && (\n            <TranslatedString data={{ name }} id=\"order_confirmation.thank_you_customer_heading\" />\n        )}\n\n        {!name && <TranslatedString id=\"order_confirmation.thank_you_heading\" />}\n    </PrimaryHeader>\n);\n\nexport default memo(ThankYouHeader);\n","import React, { type ReactElement } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button, ButtonVariant } from '../../ui/button';\n\nexport const ContinueButton = ({ siteLink }:{siteLink: string}): ReactElement => (\n    <div className=\"continueButtonContainer\">\n        <form action={siteLink} method=\"get\" target=\"_top\">\n            <Button type=\"submit\" variant={ButtonVariant.Secondary}>\n                <TranslatedString id=\"order_confirmation.continue_shopping\" />\n            </Button>\n        </form>\n    </div>\n);\n","import { type GiftCertificate, type OrderPayments } from '@bigcommerce/checkout-sdk';\n\nimport isGiftCertificatePayment from './isGiftCertificatePayment';\n\nexport default function mapFromPayments(payments: OrderPayments): GiftCertificate[] {\n    return payments.filter(isGiftCertificatePayment).map(({ amount, detail }) => ({\n        code: detail.code,\n        remaining: detail.remaining,\n        used: amount,\n        balance: amount + detail.remaining,\n        purchaseDate: '',\n    }));\n}\n","import { type OrderPayment } from '@bigcommerce/checkout-sdk';\n\nimport { isStoreCreditPayment } from '../payment/storeCredit';\n\nexport default function getStoreCreditAmount(payments?: OrderPayment[]): number {\n    return (payments || [])\n        .filter(isStoreCreditPayment)\n        .reduce((total, payment) => total + payment.amount, 0);\n}\n","import { type Order } from '@bigcommerce/checkout-sdk';\n\nimport { mapFromPayments } from '../giftCertificate';\n\nimport getOrderShippingCostAfterAutomaticDiscount from './getOrderShippingCostAfterAutomaticDiscount';\nimport getStoreCreditAmount from './getStoreCreditAmount';\nimport { type OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\n\nexport default function mapToOrderSummarySubtotalsProps({\n    baseAmount,\n    discountAmount,\n    isTaxIncluded,\n    shippingCostBeforeDiscount,\n    payments,\n    handlingCostTotal,\n    giftWrappingCostTotal,\n    coupons,\n    taxes,\n    fees,\n    consignments,\n}: Order,\nisShippingDiscountDisplayEnabled: boolean,\n): OrderSummarySubtotalsProps {\n\n    const shippingAmount = isShippingDiscountDisplayEnabled && consignments.shipping.length > 0\n    ? getOrderShippingCostAfterAutomaticDiscount(shippingCostBeforeDiscount, consignments.shipping)\n    : shippingCostBeforeDiscount;\n\n    return {\n        subtotalAmount: baseAmount,\n        shippingAmount,\n        shippingAmountBeforeDiscount: isShippingDiscountDisplayEnabled ? shippingCostBeforeDiscount : undefined,\n        giftWrappingAmount: giftWrappingCostTotal,\n        discountAmount,\n        storeCreditAmount: getStoreCreditAmount(payments),\n        handlingAmount: handlingCostTotal,\n        coupons,\n        giftCertificates: payments && mapFromPayments(payments),\n        taxes,\n        isTaxIncluded,\n        fees,\n    };\n}\n","import { type OrderShippingConsignment } from \"@bigcommerce/checkout-sdk\";\n\nexport default function getOrderShippingCostAfterAutomaticDiscount(shippingCostBeforeDiscount: number, consignments: OrderShippingConsignment[]) {\n    return consignments.reduce((total, consignment) => {\n        return total - getTotalAutomaticDiscount(consignment);\n    }, shippingCostBeforeDiscount);\n}\n\nfunction getTotalAutomaticDiscount(consignment: OrderShippingConsignment) {\n    return consignment.discounts\n    .filter(discount => !discount.code)\n    .reduce((total, discount) => total + discount.amount, 0);\n}\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconPrint: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconPrint);\n","import { throttle } from 'lodash';\nimport React, { type FunctionComponent, memo, useCallback } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { IconPrint } from '../ui/icon';\n\nexport interface PrintLinkProps {\n    className?: string;\n}\n\nconst PRINT_MODAL_THROTTLE = 500;\n\nconst PrintLink: FunctionComponent<PrintLinkProps> = ({ className }) => {\n    const handleClick = useCallback(\n        throttle(() => {\n            window.print();\n        }, PRINT_MODAL_THROTTLE),\n        [],\n    );\n\n    if (typeof window.print !== 'function') {\n        return null;\n    }\n\n    return (\n        <a\n            className={className || 'cart-header-link'}\n            href=\"#\"\n            id=\"cart-print-link\"\n            onClick={preventDefault(handleClick)}\n        >\n            <IconPrint /> <TranslatedString id=\"cart.print_action\" />\n        </a>\n    );\n};\n\nexport default memo(PrintLink);\n","import { type Order, type ShopperCurrency, type StoreCurrency } from '@bigcommerce/checkout-sdk';\nimport React, { lazy, type ReactElement } from 'react';\n\nimport { CartSummarySkeleton, LazyContainer } from '@bigcommerce/checkout/ui';\n\nimport { retry } from '../../common/utility';\nimport { MobileView } from '../../ui/responsive';\nimport mapToOrderSummarySubtotalsProps from '../mapToOrderSummarySubtotalsProps';\nimport PrintLink from '../PrintLink';\n\nconst OrderSummary = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"order-summary\" */\n                '../OrderSummary'\n                ),\n    ),\n);\n\nconst OrderSummaryDrawer = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"order-summary-drawer\" */\n                '../OrderSummaryDrawer'\n                ),\n    ),\n);\n\ninterface OrderSummaryContainerProps {\n    order: Order;\n    currency: StoreCurrency;\n    shopperCurrency: ShopperCurrency;\n    isShippingDiscountDisplayEnabled: boolean;\n}\n\nexport const OrderSummaryContainer = ({\n    currency,\n    isShippingDiscountDisplayEnabled,\n    order,\n    shopperCurrency,\n}:OrderSummaryContainerProps):ReactElement => (\n    <MobileView>\n        {(matched) => {\n            if (matched) {\n                return (\n                    <LazyContainer loadingSkeleton={<></>}>\n                        <OrderSummaryDrawer\n                            {...mapToOrderSummarySubtotalsProps(order, isShippingDiscountDisplayEnabled)}\n                            headerLink={<PrintLink className=\"modal-header-link cart-modal-link\" />}\n                            lineItems={order.lineItems}\n                            shopperCurrency={shopperCurrency}\n                            storeCurrency={currency}\n                            total={order.orderAmount}\n                        />\n                    </LazyContainer>\n                );\n            }\n\n            return (\n                <LazyContainer loadingSkeleton={<CartSummarySkeleton />}>\n                    <aside className=\"layout-cart\">\n                        <OrderSummary\n                            headerLink={<PrintLink />}\n                            {...mapToOrderSummarySubtotalsProps(order, isShippingDiscountDisplayEnabled)}\n                            lineItems={order.lineItems}\n                            shopperCurrency={shopperCurrency}\n                            storeCurrency={currency}\n                            total={order.orderAmount}\n                        />\n                    </aside>\n                </LazyContainer>\n            );\n        }}\n    </MobileView>\n);\n","import {\n    type Order,\n    type ShopperConfig,\n    type ShopperCurrency,\n    type StoreConfig,\n    type StoreCurrency,\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport DOMPurify from 'dompurify';\nimport React, { type ReactElement } from 'react';\n\nimport { ErrorModal } from '../../common/error';\nimport { getPasswordRequirementsFromConfig } from '../../customer';\nimport { isEmbedded } from '../../embeddedCheckout';\nimport {\n    GuestSignUpForm,\n    PasswordSavedSuccessAlert,\n    SignedUpSuccessAlert,\n    type SignUpFormValues,\n} from '../../guestSignup';\nimport OrderConfirmationSection from '../OrderConfirmationSection';\nimport OrderStatus from '../OrderStatus';\nimport ThankYouHeader from '../ThankYouHeader';\n\nimport { ContinueButton } from './ContinueButton';\nimport { OrderSummaryContainer } from './OrderSummaryContainer';\n\ninterface OrderConfirmationPageProps {\n    order: Order;\n    config: StoreConfig;\n    supportEmail: string;\n    supportPhoneNumber: string | undefined;\n    paymentInstructions: string | undefined;\n    shouldShowPasswordForm: boolean;\n    hasSignedUp: boolean | undefined;\n    isSigningUp: boolean | undefined;\n    onSignUp(values: SignUpFormValues): void;\n    shopperConfig: ShopperConfig;\n    customerCanBeCreated: boolean;\n    siteLink: string;\n    currency: StoreCurrency;\n    shopperCurrency: ShopperCurrency;\n    isShippingDiscountDisplayEnabled: boolean;\n    error: Error | undefined;\n    onErrorModalClose(): void;\n}\n\nexport const OrderConfirmationPage = ({\n    config,\n    currency,\n    customerCanBeCreated,\n    error,\n    hasSignedUp,\n    isShippingDiscountDisplayEnabled,\n    isSigningUp,\n    onErrorModalClose,\n    onSignUp,\n    order,\n    paymentInstructions,\n    shopperConfig,\n    shopperCurrency,\n    shouldShowPasswordForm,\n    siteLink,\n    supportEmail,\n    supportPhoneNumber,\n}: OrderConfirmationPageProps): ReactElement => (\n    <div\n        className={classNames('layout optimizedCheckout-contentPrimary', {\n            'is-embedded': isEmbedded(),\n        })}\n    >\n        <div className=\"layout-main\">\n            <div className=\"orderConfirmation\">\n                <ThankYouHeader name={order.billingAddress.firstName} />\n                <OrderStatus\n                    config={config}\n                    order={order}\n                    supportEmail={supportEmail}\n                    supportPhoneNumber={supportPhoneNumber}\n                />\n                {paymentInstructions && (\n                    <OrderConfirmationSection>\n                        <div\n                            dangerouslySetInnerHTML={{\n                                __html: DOMPurify.sanitize(paymentInstructions),\n                            }}\n                            data-test=\"payment-instructions\"\n                        />\n                    </OrderConfirmationSection>\n                )}\n\n                {shouldShowPasswordForm && !hasSignedUp && (\n                    <GuestSignUpForm\n                        customerCanBeCreated={customerCanBeCreated}\n                        isSigningUp={isSigningUp}\n                        onSignUp={onSignUp}\n                        passwordRequirements={getPasswordRequirementsFromConfig(shopperConfig)}\n                    />\n                )}\n\n                {hasSignedUp &&\n                    (order?.customerId ? (\n                        <PasswordSavedSuccessAlert />\n                    ) : (\n                        <SignedUpSuccessAlert />\n                    ))}\n\n                <ContinueButton siteLink={siteLink} />\n            </div>\n        </div>\n\n        <OrderSummaryContainer\n            currency={currency}\n            isShippingDiscountDisplayEnabled={isShippingDiscountDisplayEnabled}\n            order={order}\n            shopperCurrency={shopperCurrency}\n        />\n\n        <ErrorModal error={error} onClose={onErrorModalClose} shouldShowErrorCode={false} />\n    </div>\n);\n\n","import {\n    type EmbeddedCheckoutMessenger,\n    type EmbeddedCheckoutMessengerOptions,\n} from '@bigcommerce/checkout-sdk';\nimport React, {  type ReactElement, useEffect, useRef, useState } from 'react';\n\nimport { useAnalytics } from '@bigcommerce/checkout/contexts';\nimport { type ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\nimport { OrderConfirmationPageSkeleton } from '@bigcommerce/checkout/ui';\n\nimport { isExperimentEnabled } from '../../common/utility';\nimport { type EmbeddedCheckoutStylesheet } from '../../embeddedCheckout';\nimport {\n    type CreatedCustomer,\n    type SignUpFormValues,\n} from '../../guestSignup';\nimport {\n    AccountCreationFailedError,\n    AccountCreationRequirementsError,\n} from '../../guestSignup/errors';\nimport getPaymentInstructions from '../getPaymentInstructions';\n\nimport { OrderConfirmationPage } from './OrderConfirmationPage';\n\nexport interface OrderConfirmationProps {\n    containerId: string;\n    embeddedStylesheet: EmbeddedCheckoutStylesheet;\n    errorLogger: ErrorLogger;\n    orderId: number;\n    createAccount(values: SignUpFormValues): Promise<CreatedCustomer>;\n    createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\n}\n\nexport const OrderConfirmation = ({\n    containerId,\n    createAccount,\n    createEmbeddedMessenger,\n    embeddedStylesheet,\n    orderId,\n    errorLogger,\n}: OrderConfirmationProps): ReactElement => {\n    const [error, setError] = useState<Error | undefined>();\n    const [hasSignedUp, setHasSignedUp] = useState<boolean | undefined>();\n    const [isSigningUp, setIsSigningUp] = useState<boolean | undefined>();\n\n    const embeddedMessengerRef = useRef<EmbeddedCheckoutMessenger | undefined>();\n\n    const {\n        checkoutState: {\n            data: { getOrder, getConfig },\n            statuses: { isLoadingOrder },\n        },\n        checkoutService: {\n            loadOrder,\n        },\n    } = useCheckout();\n    const { analyticsTracker } = useAnalytics();\n\n    const config = getConfig();\n    const order = getOrder();\n\n    const handleUnhandledError = (e: Error) => {\n        setError(e);\n        errorLogger.log(e);\n\n        if (embeddedMessengerRef.current) {\n            embeddedMessengerRef.current.postError(e);\n        }\n    };\n\n    const handleErrorModalClose = () => {\n        setError(undefined);\n    };\n\n    const handleSignUp = ({ password, confirmPassword }: SignUpFormValues) => {\n        const shopperConfig = config && config.shopperConfig;\n        const passwordRequirements =\n            (shopperConfig && shopperConfig.passwordRequirements && shopperConfig.passwordRequirements.error) || '';\n\n        setIsSigningUp(true);\n\n        createAccount({ password, confirmPassword })\n            .then(() => {\n                setHasSignedUp(true);\n                setIsSigningUp(false);\n            })\n            .catch((err) => {\n                setError(\n                    err.status < 500\n                        ? new AccountCreationRequirementsError(err, passwordRequirements)\n                        : new AccountCreationFailedError(err),\n                );\n                setHasSignedUp(false);\n                setIsSigningUp(false);\n            });\n    };\n\n    useEffect(() => {\n        loadOrder(orderId)\n            .then(({ data }) => {\n                const { links: { siteLink = '' } = {} } = data.getConfig() || {};\n                const messenger = createEmbeddedMessenger({ parentOrigin: siteLink });\n\n                embeddedMessengerRef.current = messenger;\n                messenger.receiveStyles((styles) => embeddedStylesheet.append(styles));\n                messenger.postFrameLoaded({ contentId: containerId });\n                analyticsTracker.orderPurchased();\n            })\n            .catch(handleUnhandledError);\n    }, []);\n\n    if (!order || !config || isLoadingOrder()) {\n        return <OrderConfirmationPageSkeleton />;\n    }\n\n    const paymentInstructions = getPaymentInstructions(order);\n    const {\n        checkoutSettings,\n        currency,\n        shopperConfig,\n        shopperCurrency,\n        storeProfile: { orderEmail, storePhoneNumber },\n        links: { siteLink },\n    } = config;\n    const shouldShowPasswordForm = order.customerCanBeCreated;\n    const customerCanBeCreated = !order.customerId;\n    const isShippingDiscountDisplayEnabled = isExperimentEnabled(\n        checkoutSettings,\n        'PROJECT-6643.enable_shipping_discounts_in_orders',\n    );\n\n    return (\n        <OrderConfirmationPage\n            config={config}\n            currency={currency}\n            customerCanBeCreated={customerCanBeCreated}\n            error={error}\n            hasSignedUp={hasSignedUp}\n            isShippingDiscountDisplayEnabled={isShippingDiscountDisplayEnabled}\n            isSigningUp={isSigningUp}\n            onErrorModalClose={handleErrorModalClose}\n            onSignUp={handleSignUp}\n            order={order}\n            paymentInstructions={paymentInstructions}\n            shopperConfig={shopperConfig}\n            shopperCurrency={shopperCurrency}\n            shouldShowPasswordForm={shouldShowPasswordForm}\n            siteLink={siteLink}\n            supportEmail={orderEmail}\n            supportPhoneNumber={storePhoneNumber}\n        />\n    );\n};\n","import { createCheckoutService, createEmbeddedCheckoutMessenger } from '@bigcommerce/checkout-sdk/essential';\nimport type { BrowserOptions } from '@sentry/browser';\nimport React, { useCallback, useEffect, useMemo } from 'react';\nimport ReactModal from 'react-modal';\n\nimport { ExtensionService } from '@bigcommerce/checkout/checkout-extension';\nimport { AnalyticsProvider , ExtensionProvider, ThemeProvider } from '@bigcommerce/checkout/contexts';\nimport { ErrorBoundary } from '@bigcommerce/checkout/error-handling-utils';\nimport { getLanguageService, LocaleProvider } from '@bigcommerce/checkout/locale';\nimport { CheckoutProvider } from '@bigcommerce/checkout/payment-integration-api';\n\nimport '../../scss/App.scss';\n\nimport { createErrorLogger } from '../common/error';\nimport { createEmbeddedCheckoutStylesheet } from '../embeddedCheckout';\nimport { AccountService, type CreatedCustomer, type SignUpFormValues } from '../guestSignup';\n\nimport { OrderConfirmation } from './OrderConfirmation';\n\nexport interface OrderConfirmationAppProps {\n    containerId: string;\n    orderId: number;\n    publicPath?: string;\n    sentryConfig?: BrowserOptions;\n    sentrySampleRate?: number;\n}\n\nconst OrderConfirmationApp: React.FC<OrderConfirmationAppProps> = ({\n    containerId,\n    orderId,\n    publicPath,\n    sentryConfig,\n    sentrySampleRate,\n}) => {\n    const accountService = useMemo(() => new AccountService(), []);\n    const errorLogger = useMemo(() => createErrorLogger(\n        { sentry: sentryConfig },\n        {\n            errorTypes: ['UnrecoverableError'],\n            publicPath,\n            sampleRate: sentrySampleRate || 0.1,\n        },\n    ), []);\n    const checkoutService = useMemo(() => createCheckoutService({\n        locale: getLanguageService().getLocale(),\n        shouldWarnMutation: process.env.NODE_ENV === 'development',\n        errorLogger,\n    }), []);\n    const extensionService = useMemo(() => new ExtensionService(checkoutService, errorLogger), []);\n    const embeddedStylesheet = useMemo(() => createEmbeddedCheckoutStylesheet(), []);\n\n    useEffect(() => {\n        ReactModal.setAppElement(`#${containerId}`);\n    }, []);\n\n    const createAccount = useCallback(\n        ({ password, confirmPassword }: SignUpFormValues): Promise<CreatedCustomer> => {\n            return accountService.create({\n                orderId,\n                newsletter: false,\n                password,\n                confirmPassword,\n            });\n        },\n        [accountService, orderId],\n    );\n\n    return (\n        <ErrorBoundary errorLogger={errorLogger}>\n            <LocaleProvider checkoutService={checkoutService}>\n                <CheckoutProvider checkoutService={checkoutService} errorLogger={errorLogger}>\n                    <AnalyticsProvider checkoutService={checkoutService}>\n                        <ExtensionProvider extensionService={extensionService}>\n                            <ThemeProvider>\n                                <OrderConfirmation\n                                    containerId={containerId}\n                                    createAccount={createAccount}\n                                    createEmbeddedMessenger={createEmbeddedCheckoutMessenger}\n                                    embeddedStylesheet={embeddedStylesheet}\n                                    errorLogger={errorLogger}\n                                    orderId={orderId}\n                                />\n                            </ThemeProvider>\n                        </ExtensionProvider>\n                    </AnalyticsProvider>\n                </CheckoutProvider>\n            </LocaleProvider>\n        </ErrorBoundary>\n    );\n};\n\nexport default OrderConfirmationApp;\n","import { type FormField } from '@bigcommerce/checkout-sdk';\nimport { memoize } from '@bigcommerce/memoize';\nimport {\n    array,\n    type ArraySchema,\n    date,\n    number,\n    type NumberSchema,\n    object,\n    type ObjectSchema,\n    type Schema,\n    string,\n} from 'yup';\n\nimport { DynamicFormFieldType } from '@bigcommerce/checkout/ui';\n\nexport type TranslateValidationErrorFunction = (\n    validationType: 'max' | 'min' | 'required' | 'invalid',\n    field: {\n        name: string;\n        label: string;\n        min?: number;\n        max?: number;\n    },\n) => string | undefined;\n\nexport interface FormFieldsValidationSchemaOptions {\n    formFields: FormField[];\n    translate?: TranslateValidationErrorFunction;\n}\n\nexport interface CustomFormFieldValues {\n    customFields: CustomFormFields;\n}\n\nexport interface CustomFormFields {\n    [id: string]: string | string[] | number;\n}\n\nexport default memoize(function getCustomFormFieldsValidationSchema({\n    formFields,\n    translate = () => undefined,\n}: FormFieldsValidationSchemaOptions): ObjectSchema<CustomFormFieldValues> {\n    return object({\n        customFields: object(\n            formFields\n                .filter(({ custom }) => !!custom)\n                .reduce((schema, { name, label, required, fieldType, type, min, max }) => {\n                    let maxValue: number | undefined;\n                    let minValue: number | undefined;\n\n                    if (type === 'date') {\n                        schema[name] = date()\n                            // Transform NaN values to undefined to avoid empty string (empty input) to fail date\n                            // validation when it's optional\n                            .nullable(true)\n                            .transform((value, originalValue) =>\n                                originalValue === '' ? null : value,\n                            );\n                    } else if (type === 'integer') {\n                        schema[name] = number()\n                            // Transform NaN values to undefined to avoid empty string (empty input) to fail number\n                            // validation when it's optional\n                            .transform((value) => (isNaN(value) ? undefined : value));\n\n                        maxValue = typeof max === 'number' ? max : undefined;\n                        minValue = typeof min === 'number' ? min : undefined;\n                    } else if (fieldType === DynamicFormFieldType.CHECKBOX) {\n                        schema[name] = array();\n                    } else {\n                        schema[name] = string();\n                    }\n\n                    if (maxValue !== undefined) {\n                        schema[name] = (schema[name] as NumberSchema).max(\n                            maxValue,\n                            translate('max', { label, name, max: maxValue + 1 }),\n                        );\n                    }\n\n                    if (minValue !== undefined) {\n                        schema[name] = (schema[name] as NumberSchema).min(\n                            minValue,\n                            translate('min', { label, name, min: minValue - 1 }),\n                        );\n                    }\n\n                    if (required) {\n                        const requiredErrorMessage = translate('required', { name, label });\n\n                        schema[name] =\n                            fieldType === DynamicFormFieldType.CHECKBOX\n                                ? (schema[name] as ArraySchema<string>).min(1, requiredErrorMessage)\n                                : (schema[name] as ArraySchema<string>).required(\n                                      requiredErrorMessage,\n                                  );\n                    }\n\n                    return schema;\n                    // eslint-disable-next-line @typescript-eslint/prefer-reduce-type-parameter\n                }, {} as { [key: string]: Schema<any> }),\n        ).nullable(true),\n    }) as ObjectSchema<CustomFormFieldValues>;\n});\n","import { MOBILE_MAX_WIDTH } from './breakpoints';\n\nlet query: MediaQueryList;\n\nexport default function isMobileView() {\n    query = window.matchMedia(`(max-width: ${MOBILE_MAX_WIDTH}px)`);\n\n    return query.matches;\n}\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconSuccess: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconSuccess);\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconInfo: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconInfo);\n","import classNames from 'classnames';\nimport React, { type FunctionComponent, type ReactNode, useId } from 'react';\n\nimport { IconError, IconInfo, IconSuccess } from '../icon';\n\nexport interface AlertProps {\n    additionalClassName?: string;\n    icon?: ReactNode;\n    testId?: string;\n    type?: AlertType;\n    children?: ReactNode;\n}\n\nexport enum AlertType {\n    Error = 'error',\n    Info = 'info',\n    Success = 'success',\n    Warning = 'warning',\n}\n\nfunction renderDefaultIcon(type?: AlertType): ReactNode {\n    switch (type) {\n        case AlertType.Error:\n        case AlertType.Warning:\n            return <IconError />;\n\n        case AlertType.Success:\n            return <IconSuccess />;\n\n        case AlertType.Info:\n        default:\n            return <IconInfo />;\n    }\n}\n\nconst Alert: FunctionComponent<AlertProps> = ({\n    additionalClassName,\n    children,\n    icon,\n    testId,\n    type,\n}) => {\n    const describedBy = useId();\n\n    return (\n        <div\n            aria-describedby={describedBy}\n            className={classNames(\n                'alertBox',\n                additionalClassName,\n                { 'alertBox--info': type === AlertType.Info || !type },\n                { 'alertBox--error': type === AlertType.Error },\n                { 'alertBox--success': type === AlertType.Success },\n                { 'alertBox--warning': type === AlertType.Warning },\n            )}\n            data-test={testId}\n        >\n            <div className=\"alertBox-column alertBox-icon\">{icon || renderDefaultIcon(type)}</div>\n\n            <div\n                aria-live={type === AlertType.Error ? 'assertive' : 'polite'}\n                className=\"alertBox-column alertBox-message\"\n                id={describedBy}\n                role={type === AlertType.Error ? 'alert' : 'status'}\n            >\n                {children}\n            </div>\n        </div>\n    );\n};\n\nexport default Alert;\n","import React, { memo } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Toggle } from '../../ui/toggle';\n\ninterface ShippingOptionAdditionalDescriptionProps {\n    description: string;\n}\n\nconst ShippingOptionAdditionalDescription: React.FunctionComponent<\n    ShippingOptionAdditionalDescriptionProps\n> = ({ description }) => {\n    const CHRACTER_LIMIT = 45;\n\n    return (\n        <div className=\"shippingOption-additionalDescription--container\">\n            <Toggle openByDefault={description.length < CHRACTER_LIMIT}>\n                {({ isOpen, toggle }) => (\n                    <>\n                        <span\n                            className={`shippingOption-additionalDescription ${\n                                isOpen\n                                    ? 'shippingOption-additionalDescription--expanded'\n                                    : 'shippingOption-additionalDescription--collapsed'\n                            }`}\n                        >\n                            {description}\n                        </span>\n                        {!isOpen && (\n                            <a className=\"shippingOption-readMore\" onClick={preventDefault(toggle)}>\n                                <TranslatedString id=\"common.show_more\" />\n                            </a>\n                        )}\n                    </>\n                )}\n            </Toggle>\n        </div>\n    );\n};\n\nexport default memo(ShippingOptionAdditionalDescription);\n","import { type ShippingOption } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React from 'react';\n\nimport { useThemeContext } from '@bigcommerce/checkout/contexts';\n\nimport { ShopperCurrency } from '../../currency';\n\nimport ShippingOptionAdditionalDescription from './ShippingOptionAdditionalDescription';\nimport './StaticShippingOption.scss';\n\ninterface StaticShippingOptionProps {\n    displayAdditionalInformation?: boolean;\n    method: ShippingOption;\n    shippingCostAfterDiscount?: number;\n}\n\nconst StaticShippingOption: React.FunctionComponent<StaticShippingOptionProps> = ({\n    displayAdditionalInformation = true,\n    method,\n    shippingCostAfterDiscount,\n}) => {\n    const { themeV2 } = useThemeContext();\n\n    const renderShippingPrice = () => {\n        if (shippingCostAfterDiscount !== undefined && shippingCostAfterDiscount !== method.cost) {\n            return (\n                <>\n                    <span className=\"shippingOption-price-before-discount\">\n                        <ShopperCurrency amount={method.cost} />\n                    </span>\n                    <ShopperCurrency amount={shippingCostAfterDiscount} />\n                </>\n            );\n        }\n\n        return (\n            <ShopperCurrency amount={method.cost} />\n        )\n\n    }\n\n    return (\n        <div className=\"shippingOption shippingOption--alt\" data-test=\"static-shipping-option\">\n            {method.imageUrl && (\n                <span className=\"shippingOption-figure\">\n                    <img\n                        alt={method.description}\n                        className=\"shippingOption-img\"\n                        src={method.imageUrl}\n                    />\n                </span>\n            )}\n            <span className={classNames('shippingOption-desc', { 'body-medium': themeV2 })}>\n                {method.description}\n                {method.transitTime && (\n                    <span className=\"shippingOption-transitTime\">{method.transitTime}</span>\n                )}\n                {method.additionalDescription && displayAdditionalInformation && (\n                    <ShippingOptionAdditionalDescription\n                        description={method.additionalDescription}\n                    />\n                )}\n            </span>\n            <span className={classNames('shippingOption-price', { 'body-medium': themeV2 })}>\n                {renderShippingPrice()}\n            </span>\n        </div>\n    );\n};\n\nexport default StaticShippingOption;\n","import { type Cart } from '@bigcommerce/checkout-sdk';\n\nexport default function isBuyNowCart(cart?: Cart): boolean {\n    const lastPathName = window.location.pathname.split('/').pop();\n    const params = new URLSearchParams(window.location.search);\n\n    return (\n        cart?.source === 'BUY_NOW' ||\n        params.get('action') === 'buy' ||\n        !(lastPathName === 'checkout' || lastPathName === 'embedded-checkout')\n    );\n}\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconError: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconError);\n","import React, { type FunctionComponent } from 'react';\n\nimport { withCurrency, type WithCurrencyProps } from '@bigcommerce/checkout/locale';\n\nexport interface ShopperCurrencyProps {\n    amount: number;\n}\n\nconst ShopperCurrency: FunctionComponent<ShopperCurrencyProps & WithCurrencyProps> = ({\n    amount,\n    currency,\n}) => <>{currency.toCustomerCurrency(amount)}</>;\n\nexport default withCurrency(ShopperCurrency);\n","import classNames from 'classnames';\nimport React, { type FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, type LoadingSkeletonProps } from './LoadingSkeleton';\n\ninterface ChecklistSkeletonProps {\n    additionalClassName?: string;\n    rows?: number;\n}\n\nconst ChecklistSkeleton: FunctionComponent<LoadingSkeletonProps & ChecklistSkeletonProps> = ({\n    additionalClassName,\n    children,\n    isLoading = true,\n    rows = 3,\n}) => {\n    const content = [];\n\n    for (let i = 0; i < rows; i += 1) {\n        content.push(<div key={`checklist-skeleton-item${i}`} />);\n    }\n\n    const skeleton = (\n        <div className={classNames(additionalClassName, 'checklist-skeleton')}>{content}</div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, skeleton }} />;\n};\n\nexport default ChecklistSkeleton;\n","import { type Cart, type Consignment, type PhysicalItem } from '@bigcommerce/checkout-sdk';\nimport { compact, find, isNil, map } from 'lodash';\n\nexport default function findLineItems(cart: Cart, consignment: Consignment): PhysicalItem[] {\n    return compact(\n        map(consignment.lineItemIds, (itemId) =>\n            find(\n                cart.lineItems.physicalItems,\n                (item) => item.id === itemId && isNil(item.parentId),\n            ),\n        ),\n    );\n}\n","import React, { type FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, type LoadingSkeletonProps } from './LoadingSkeleton';\n\nconst AddressFormSkeleton: FunctionComponent<LoadingSkeletonProps> = ({\n    children,\n    isLoading,\n    renderWhileLoading,\n}) => {\n    const skeleton = (\n        <>\n            <div className=\"address-form-skeleton\">\n                <div className=\"label\" />\n            </div>\n            <div className=\"address-form-skeleton\">\n                <div className=\"name\" />\n                <div className=\"name\" />\n            </div>\n            <div className=\"address-form-skeleton\">\n                <div className=\"address\" />\n            </div>\n        </>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, renderWhileLoading, skeleton }} />;\n};\n\nexport default AddressFormSkeleton;\n","import { isEmpty, pickBy } from 'lodash';\nimport React, {\n    type ComponentType,\n    type Context,\n    type FunctionComponent,\n    memo,\n    useContext,\n} from 'react';\n\nimport type InjectHoc from './InjectHoc';\n\nexport interface InjectHocOptions<TInjectedProps> {\n    displayNamePrefix?: string;\n    pickProps?(value: TInjectedProps[keyof TInjectedProps], key: keyof TInjectedProps): boolean;\n}\n\nexport default function createInjectHoc<\n    TInjectedProps extends object | undefined,\n    TPickedProps extends Partial<TInjectedProps> = TInjectedProps,\n>(\n    ContextComponent: Context<TInjectedProps>,\n    options?: InjectHocOptions<TInjectedProps>,\n): InjectHoc<NonNullable<TPickedProps>> {\n    return <TProps extends TPickedProps>(OriginalComponent: ComponentType<TProps>) => {\n        const { displayNamePrefix = '', pickProps = () => true } = options || {};\n\n        const InnerDecoratedComponent: FunctionComponent<TProps> = memo((props) => (\n            <OriginalComponent {...props} />\n        ));\n\n        const DecoratedComponent = (props: Omit<TProps, keyof NonNullable<TPickedProps>>) => {\n            const context = useContext(ContextComponent);\n            const injectedProps = pickBy(context, (value, key) =>\n                pickProps(value, key as keyof TInjectedProps),\n            );\n\n            if (isEmpty(injectedProps)) {\n                return null;\n            }\n\n            const mergedProps = { ...injectedProps, ...props } as unknown as TProps;\n\n            return <InnerDecoratedComponent {...mergedProps} />;\n        };\n\n        if (displayNamePrefix) {\n            DecoratedComponent.displayName = `${displayNamePrefix}(${\n                OriginalComponent.displayName || OriginalComponent.name\n            })`;\n        }\n\n        return DecoratedComponent;\n    };\n}\n","import { type CurrencyService } from '@bigcommerce/checkout-sdk';\n\nimport { createInjectHoc, type InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithCurrencyProps {\n    currency: CurrencyService;\n}\n\nconst withCurrency: InjectHoc<WithCurrencyProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'WithCurrency',\n    pickProps: (value, key) => key === 'currency' && !!value,\n});\n\nexport default withCurrency;\n","import type CustomError from './CustomError';\n\nexport default function isCustomError(error: Error): error is CustomError {\n    const customError = error as CustomError;\n\n    return (\n        typeof customError.title !== 'undefined' &&\n        typeof customError.data !== 'undefined' &&\n        typeof customError.type !== 'undefined'\n    );\n}\n","import { type Address, type AddressKey, type FormField } from '@bigcommerce/checkout-sdk';\n\nimport { DynamicFormFieldType } from '@bigcommerce/checkout/ui';\n\nexport type AddressFormValues = Pick<Address, Exclude<AddressKey, 'customFields'>> & {\n    customFields: { [id: string]: any };\n};\n\nexport default function mapAddressToFormValues(\n    fields: FormField[],\n    address?: Address,\n): AddressFormValues {\n    const values = {\n        ...fields.reduce(\n            (addressFormValues, { name, custom, fieldType, default: defaultValue }) => {\n                if (custom) {\n                    if (!addressFormValues.customFields) {\n                        addressFormValues.customFields = {};\n                    }\n\n                    const field =\n                        address &&\n                        address.customFields &&\n                        address.customFields.find(({ fieldId }) => fieldId === name);\n\n                    const fieldValue = field && field.fieldValue;\n\n                    addressFormValues.customFields[name] = getValue(\n                        fieldType,\n                        fieldValue,\n                        defaultValue,\n                    );\n\n                    return addressFormValues;\n                }\n\n                if (isSystemAddressFieldName(name)) {\n                    const fieldValue = address && address[name];\n\n                    addressFormValues[name] = getValue(\n                        fieldType,\n                        fieldValue,\n                        defaultValue,\n                    )?.toString() || '';\n                }\n\n                return addressFormValues;\n            },\n            {} as AddressFormValues,\n        ),\n    };\n\n    values.shouldSaveAddress =\n        address && address.shouldSaveAddress !== undefined ? address.shouldSaveAddress : true;\n\n    // Manually backfill stateOrProvince to avoid Formik warning (uncontrolled to controlled input)\n    if (values.stateOrProvince === undefined) {\n        values.stateOrProvince = '';\n    }\n\n    if (values.stateOrProvinceCode === undefined) {\n        values.stateOrProvinceCode = '';\n    }\n\n    return values;\n}\n\nfunction getValue(\n    fieldType?: string,\n    fieldValue?: string | string[] | number,\n    defaultValue?: string,\n): string | string[] | number | Date | undefined {\n    if (fieldValue === undefined || fieldValue === null) {\n        return getDefaultValue(fieldType, defaultValue);\n    }\n\n    if (fieldType === DynamicFormFieldType.DATE && typeof fieldValue === 'string') {\n        if (fieldValue) {\n            const [year, month, day] = fieldValue.split('-');\n\n            return new Date(Number(year), Number(month)-1, Number(day));\n        }\n\n        return undefined;\n    }\n\n    return fieldValue;\n}\n\nfunction getDefaultValue(fieldType?: string, defaultValue?: string): string | string[] | Date {\n    if (defaultValue && fieldType === DynamicFormFieldType.DATE) {\n        return new Date(defaultValue);\n    }\n\n    if (fieldType === DynamicFormFieldType.CHECKBOX) {\n        return [];\n    }\n\n    return defaultValue || '';\n}\n\nfunction isSystemAddressFieldName(\n    fieldName: string,\n): fieldName is Exclude<keyof Address, 'customFields' | 'shouldSaveAddress'> {\n    return fieldName !== 'customFields' && fieldName !== 'shouldSaveAddress';\n}\n","import type { ExtensionRegion } from '@bigcommerce/checkout-sdk';\n\nexport interface ExtensionState {\n    isShowingLoadingIndicator: boolean;\n    shippingFormRenderTimestamp: undefined | number;\n}\n\nexport interface ExtensionAction {\n    type: ExtensionActionType;\n    payload: boolean | number;\n}\n\nexport enum ExtensionActionType {\n    SHOW_LOADING_INDICATOR,\n    RE_RENDER_SHIPPING_FORM,\n}\n\nexport interface ExtensionServiceInterface {\n    setDispatch(dispatch: React.Dispatch<ExtensionAction>): void;\n    loadExtensions(): Promise<void>;\n    renderExtension(container: string, region: ExtensionRegion): Promise<void>;\n    removeListeners(region: ExtensionRegion): void;\n    isRegionEnabled(region: ExtensionRegion): boolean;\n}\n","import { type FieldProps } from 'formik';\nimport { kebabCase } from 'lodash';\nimport React, { type FunctionComponent, memo, type ReactNode, useCallback } from 'react';\n\nimport BasicFormField from './BasicFormField';\nimport FormFieldError from './FormFieldError';\nimport Label from './Label';\n\nexport interface FormFieldProps {\n    additionalClassName?: string;\n    name: string;\n    label?: ReactNode | ((fieldName: string) => ReactNode);\n    labelContent?: ReactNode;\n    footer?: ReactNode;\n    id?: string;\n    isFloatingLabelEnabled?: boolean;\n    input(field: FieldProps<string>): ReactNode;\n    onChange?(value: string): void;\n    themeV2?: boolean;\n}\n\nconst FormField: FunctionComponent<FormFieldProps> = ({\n    additionalClassName,\n    labelContent,\n    label,\n    onChange,\n    footer,\n    input,\n    name,\n    id,\n    isFloatingLabelEnabled,\n    themeV2 = false,\n}) => {\n    const renderField = useCallback(\n        (props: FieldProps<string>) => (\n            <>\n                {isFloatingLabelEnabled && input(props)}\n\n                {label && (typeof label === 'function' ? label(name) : label)}\n                {labelContent && !label && (\n                    <Label\n                        additionalClassName={themeV2 ? 'floating-form-field-label' : ''}\n                        htmlFor={name}\n                        id={`${id ?? name}-label`}\n                        isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    >\n                        {labelContent}\n                    </Label>\n                )}\n\n                {!isFloatingLabelEnabled && input(props)}\n\n                <FormFieldError\n                    errorId={`${id ?? name}-field-error-message`}\n                    name={name}\n                    testId={`${kebabCase(name)}-field-error-message`}\n                />\n\n                {footer}\n            </>\n        ),\n        [label, labelContent, id, input, name, footer, isFloatingLabelEnabled],\n    );\n\n    return (\n        <BasicFormField\n            additionalClassName={additionalClassName}\n            name={name}\n            onChange={onChange}\n            render={renderField}\n        />\n    );\n};\n\nexport default memo(FormField);\n","import {\n  ErrorLevelType,\n  type ErrorLogger,\n  type ErrorMeta,\n  type ErrorTags,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nexport interface ConsoleErrorLoggerOptions {\n    console?: Console;\n    errorTypes?: string[];\n}\n\nexport default class ConsoleErrorLogger implements ErrorLogger {\n    private console: Console;\n\n    constructor(options?: ConsoleErrorLoggerOptions) {\n        const { console: customConsole = console } = options || {};\n\n        this.console = customConsole;\n    }\n\n    log(\n        error: Error,\n        tags?: ErrorTags,\n        level: ErrorLevelType = ErrorLevelType.Error,\n        meta?: ErrorMeta,\n    ): void {\n        switch (level) {\n            case ErrorLevelType.Error:\n                return this.console.error(error, tags, meta);\n\n            case ErrorLevelType.Info:\n                return this.console.info(error, tags, meta);\n\n            case ErrorLevelType.Warning:\n                return this.console.warn(error, tags, meta);\n\n            default:\n                return this.console.log(error, tags, meta);\n        }\n    }\n}\n","import { type ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\n\nexport default class NoopErrorLogger implements ErrorLogger {\n    log() {}\n}\n","import { getScriptLoader } from '@bigcommerce/script-loader';\nimport type {\n    BrowserOptions,\n    ErrorEvent,\n    EventHint,\n    Exception,\n    SeverityLevel,\n    StackFrame,\n} from '@sentry/browser';\n\nimport {\n    ErrorLevelType,\n    type ErrorLogger,\n    type ErrorMeta,\n    type ErrorTags,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nimport computeErrorCode from './computeErrorCode';\nimport type ConsoleErrorLogger from './ConsoleErrorLogger';\nimport NoopErrorLogger from './NoopErrorLogger';\n\nconst FILENAME_PREFIX = 'app://';\n\nexport interface SentryErrorLoggerOptions {\n    consoleLogger?: ConsoleErrorLogger;\n    errorTypes?: string[];\n    publicPath?: string;\n    sampleRate?: number;\n}\n\nexport enum SeverityLevelEnum {\n    DEBUG = 'debug',\n    ERROR = 'error',\n    INFO = 'info',\n    WARNING = 'warning',\n}\n\nexport default class SentryErrorLogger implements ErrorLogger {\n    private consoleLogger: ErrorLogger;\n    private publicPath: string;\n    private dsn: string;\n    private loaderPromise?: Promise<void>;\n\n    constructor(config: BrowserOptions, options?: SentryErrorLoggerOptions) {\n        const {\n            consoleLogger = new NoopErrorLogger(),\n            publicPath = '',\n            sampleRate = 0.1,\n        } = options || {};\n\n        this.consoleLogger = consoleLogger;\n        this.publicPath = publicPath;\n        this.dsn = config.dsn || '';\n\n        window.sentryOnLoad = async () => {\n            Sentry.init({\n                sampleRate,\n                beforeSend: this.handleBeforeSend.bind(this),\n                denyUrls: [\n                    ...(config.denyUrls || []),\n                    'polyfill~checkout',\n                ],\n                integrations: [\n                    Sentry.globalHandlersIntegration({\n                        onerror: false,\n                        onunhandledrejection: true,\n                    }),\n                ],\n                ...config,\n            });\n\n            const rewriteFramesIntegration = await Sentry.lazyLoadIntegration('rewriteFramesIntegration');\n\n            Sentry.addIntegration(rewriteFramesIntegration({\n                iteratee: this.handleRewriteFrame.bind(this),\n            }));\n        };\n    }\n\n    log(\n        error: Error,\n        tags?: ErrorTags,\n        level: ErrorLevelType = ErrorLevelType.Error,\n        payload?: ErrorMeta,\n    ): void {\n        this.consoleLogger.log(error, tags, level);\n\n        this.loadSentry().then(() => {\n            const { errorCode = computeErrorCode(error) } = tags || {};\n\n            Sentry.captureException(error, {\n                tags: { errorCode },\n                level: this.mapToSentryLevel(level),\n                extra: payload,\n                fingerprint: ['{{ default }}'],\n            });\n        });\n    }\n\n    logMessage(\n        message: string,\n    ): void {\n        this.loadSentry().then(() => {\n            Sentry.captureMessage(message);\n        });\n    }\n\n    private loadSentry(): Promise<void> {\n        if (this.loaderPromise) {\n            return this.loaderPromise;\n        }\n\n        const key = /https:\\/\\/(.+)@.+\\//.exec(this.dsn)?.[1] ?? '';\n\n        this.loaderPromise = getScriptLoader().loadScript(`https://js.sentry-cdn.com/${key}.min.js`, {\n            attributes: {\n                crossorigin: 'anonymous',\n            },\n            async: false,\n        });\n\n        return this.loaderPromise;\n    }\n\n    private mapToSentryLevel(level: ErrorLevelType): SeverityLevel {\n        switch (level) {\n            case ErrorLevelType.Info:\n                return SeverityLevelEnum.INFO;\n\n            case ErrorLevelType.Warning:\n                return SeverityLevelEnum.WARNING;\n\n            case ErrorLevelType.Debug:\n                return SeverityLevelEnum.DEBUG;\n\n            case ErrorLevelType.Error:\n            default:\n                return SeverityLevelEnum.ERROR;\n        }\n    }\n\n    /**\n     * Ignore exceptions that don't have a stacktrace at all, or have a stacktrace that references files external to\n     * this app. For example, if the exception is caused by a piece of third party code, one of the frames in the\n     * stacktrace will reference a file that is not a part of the app. This behaviour is different to the whitelist\n     * config provided by Sentry, as the latter only examines the topmost frame in the stacktrace. The config is not\n     * sufficient for us because some stores have customisation code built on top of our code, resulting in a stacktrace\n     * whose topmost frame is ours but frames below it are not.\n     */\n    private shouldReportExceptions(exceptions: Exception[], originalException: unknown): boolean {\n        // Ignore exceptions that are not an instance of Error because they are most likely not thrown by our own code,\n        // as we have a lint rule that prevents us from doing so. Although these exceptions don't actually have a\n        // stacktrace, meaning that the condition below should theoretically cover the scenario, but we still need this\n        // condition because Sentry client creates a \"synthentic\" stacktrace for them using the information it has.\n        if (!exceptions.length || !(originalException instanceof Error)) {\n            return false;\n        }\n\n        return exceptions.every((exception) => {\n            if (!exception.stacktrace?.frames?.length) {\n                return false;\n            }\n\n            return exception.stacktrace.frames.every((frame) =>\n                frame.filename?.startsWith(FILENAME_PREFIX) || frame.filename?.startsWith(this.publicPath),\n            );\n        });\n    }\n\n    private handleBeforeSend: (event: ErrorEvent, hint: EventHint) => ErrorEvent | null = (event, hint) => {\n        if (event.exception) {\n            if (\n                !this.shouldReportExceptions(\n                    event.exception.values ?? [],\n                    hint?.originalException ?? null,\n                )\n            ) {\n                return null;\n            }\n\n            return event;\n        }\n\n        return event;\n    };\n\n    private handleRewriteFrame: (frame: StackFrame) => StackFrame = (frame) => {\n        if (this.publicPath && frame.filename) {\n            // We want to remove the base path of the filename, otherwise we\n            // will need to specify it when we upload the sourcemaps so that the\n            // filenames can match up.\n            const filename = frame.filename.replace(new RegExp(`^${this.publicPath}/?`), '');\n\n            // `frame` needs to be modified in-place (based on the example in\n            // their documentation).\n            if (filename !== frame.filename) {\n                frame.filename = `${FILENAME_PREFIX}/${filename}`;\n            }\n        }\n\n        return frame;\n    };\n}\n","import {\n  type ErrorLogger,\n  type ErrorLoggerOptions,\n  type ErrorLoggerServiceConfig,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nimport ConsoleErrorLogger from './ConsoleErrorLogger';\nimport NoopErrorLogger from './NoopErrorLogger';\nimport SentryErrorLogger from './SentryErrorLogger';\n\nexport default function createErrorLogger(\n    serviceConfig?: ErrorLoggerServiceConfig,\n    options?: ErrorLoggerOptions,\n): ErrorLogger {\n    if (serviceConfig && serviceConfig.sentry) {\n        return new SentryErrorLogger(serviceConfig.sentry, {\n            ...options,\n            consoleLogger: new ConsoleErrorLogger(options),\n        });\n    }\n\n    if (process.env.NODE_ENV === 'test') {\n        return new NoopErrorLogger();\n    }\n\n    return new ConsoleErrorLogger(options);\n}\n","import { type CheckoutSelectors, type CheckoutService } from '@bigcommerce/checkout-sdk';\nimport React, {\n    type ReactElement,\n    type ReactNode,\n    useEffect,\n    useMemo,\n    useRef,\n    useState,\n} from 'react';\n\nimport CheckoutContext from './CheckoutContext';\nimport type ErrorLogger from './ErrorLogger';\n\nexport interface CheckoutProviderProps {\n    checkoutService: CheckoutService;\n    children: ReactNode;\n    errorLogger?: ErrorLogger;\n}\n\nconst CheckoutProvider = ({\n    checkoutService,\n    errorLogger,\n    children,\n}: CheckoutProviderProps): ReactElement => {\n    const [checkoutState, setCheckoutState] = useState<CheckoutSelectors>(() =>\n        checkoutService.getState(),\n    );\n    const unsubscribeRef = useRef<(() => void) | undefined>();\n\n    const contextValue = useMemo(\n        () => ({\n            checkoutService,\n            checkoutState,\n            errorLogger,\n        }),\n        [checkoutService, checkoutState, errorLogger],\n    );\n\n    useEffect(() => {\n        unsubscribeRef.current = checkoutService.subscribe((newCheckoutState) =>\n            setCheckoutState(newCheckoutState),\n        );\n\n        return () => {\n            if (unsubscribeRef.current) {\n                unsubscribeRef.current();\n                unsubscribeRef.current = undefined;\n            }\n        };\n    }, [checkoutService]);\n\n    return <CheckoutContext.Provider value={contextValue}>{children}</CheckoutContext.Provider>;\n};\n\nexport default CheckoutProvider;\n","import { type CustomerPasswordRequirements, type ShopperConfig } from '@bigcommerce/checkout-sdk';\n\nexport interface PasswordRequirements {\n    minLength: number;\n    alpha: RegExp;\n    numeric: RegExp;\n    description?: string;\n}\n\nexport function getPasswordRequirementsFromConfig(config: ShopperConfig): PasswordRequirements {\n    const {\n        passwordRequirements: { minlength, error: description, alpha, numeric },\n    } = config;\n\n    return getPasswordRequirements({\n        minlength,\n        description,\n        alpha,\n        numeric,\n    });\n}\n\nexport default function getPasswordRequirements({\n    minlength,\n    description,\n    alpha,\n    numeric,\n}: CustomerPasswordRequirements): PasswordRequirements {\n    const allSlashes = new RegExp('/', 'g');\n\n    return {\n        minLength: minlength,\n        description,\n        alpha: new RegExp(alpha.replace(allSlashes, '')),\n        numeric: new RegExp(numeric.replace(allSlashes, '')),\n    };\n}\n","import React, { type FunctionComponent, type ReactNode } from 'react';\n\nexport interface LoadingSkeletonProps {\n    isLoading?: boolean;\n    renderWhileLoading?: boolean;\n    skeleton?: ReactNode;\n    children?: ReactNode;\n}\n\nexport const LoadingSkeleton: FunctionComponent<LoadingSkeletonProps> = ({\n    children,\n    isLoading = true,\n    renderWhileLoading = false,\n    skeleton,\n}) => {\n    const shouldShowChildren = renderWhileLoading || !isLoading;\n\n    return (\n        <>\n            {isLoading && skeleton}\n            {Boolean(children) && shouldShowChildren && (\n                <div\n                    className=\"loading-skeleton\"\n                    style={\n                        isLoading ? { position: 'absolute', left: '0%', top: '-300%' } : undefined\n                    }\n                >\n                    {children}\n                </div>\n            )}\n        </>\n    );\n};\n","import { type Consignment } from \"@bigcommerce/checkout-sdk\";\n\nexport default function getShippingCostAfterAutomaticDiscount(shippingCostBeforeDiscount: number, consignments: Consignment[]) {\n    return consignments.reduce((total, consignment) => {\n        return total - getTotalAutomaticDiscount(consignment);\n    }, shippingCostBeforeDiscount);\n}\n\nfunction getTotalAutomaticDiscount(consignment: Consignment) {\n    return consignment.discounts.reduce((discountTotal, discount) => {\n        return discount.type === 'AUTOMATIC' ? discountTotal + discount.amount : discountTotal;\n    }, 0);\n}\n","const DEFAULT_OPTIONS = {\n    count: 5,\n    interval: 1000,\n};\n\nexport interface RetryOptions {\n    count?: number;\n    interval?: number;\n}\n\nexport default async function retry<T>(fn: () => Promise<T>, options?: RetryOptions): Promise<T> {\n    const { count, interval } = { ...DEFAULT_OPTIONS, ...options };\n\n    try {\n        return await fn();\n    } catch (error) {\n        if (count === 1) {\n            throw error;\n        }\n\n        await new Promise((resolve) => setTimeout(resolve, interval));\n\n        return retry(fn, { interval, count: count - 1 });\n    }\n}\n","enum PaymentMethodId {\n    Adyen = 'adyen',\n    AdyenV2 = 'adyenv2',\n    AdyenV2GooglePay = 'googlepayadyenv2',\n    AdyenV3GooglePay = 'googlepayadyenv3',\n    AdyenV3 = 'adyenv3',\n    Affirm = 'affirm',\n    Afterpay = 'afterpay',\n    AmazonPay = 'amazonpay',\n    ApplePay = 'applepay',\n    Barclaycard = 'barclaycard',\n    BlueSnapV2 = 'bluesnapv2',\n    BlueSnapDirect = 'bluesnapdirect',\n    Boleto = 'boleto',\n    Bolt = 'bolt',\n    Braintree = 'braintree',\n    BraintreeAch = 'braintreeach',\n    BraintreeVenmo = 'braintreevenmo',\n    AuthorizeNetGooglePay = 'googlepayauthorizenet',\n    BNZGooglePay = 'googlepaybnz',\n    BraintreeAcceleratedCheckout = 'braintreeacceleratedcheckout',\n    BraintreeGooglePay = 'googlepaybraintree',\n    PayPalCommerceAcceleratedCheckout = 'paypalcommerceacceleratedcheckout',\n    PayPalCommerceGooglePay = 'googlepaypaypalcommerce',\n    BraintreeVisaCheckout = 'braintreevisacheckout',\n    BraintreeLocalPaymentMethod = 'braintreelocalmethods',\n    BraintreePaypalCredit = 'braintreepaypalcredit',\n    CBAMPGS = 'cba_mpgs',\n    Checkoutcom = 'checkoutcom',\n    CheckoutcomGooglePay = 'googlepaycheckoutcom',\n    Clearpay = 'clearpay',\n    Converge = 'converge',\n    CybersourceV2GooglePay = 'googlepaycybersourcev2',\n    Fawry = 'fawry',\n    Humm = 'humm',\n    Ideal = 'ideal',\n    Klarna = 'klarna',\n    Laybuy = 'laybuy',\n    Masterpass = 'masterpass',\n    Mollie = 'mollie',\n    Moneris = 'moneris',\n    OrbitalGooglePay = 'googlepayorbital',\n    Oxxo = 'oxxo',\n    PaypalExpress = 'paypalexpress',\n    PaypalPaymentsPro = 'paypal',\n    PaypalCommerce = 'paypalcommerce',\n    PaypalCommerceCredit = 'paypalcommercecredit',\n    PaypalCommerceCreditCards = 'paypalcommercecreditcards',\n    PaypalCommerceAlternativeMethod = 'paypalcommercealternativemethods',\n    PaypalCommerceVenmo = 'paypalcommercevenmo',\n    BigCommercePaymentsPayPal = 'bigcommerce_payments_paypal',\n    BigCommercePaymentsPayLater = 'bigcommerce_payments_paylater',\n    BigCommercePaymentsCreditCards = 'bigcommerce_payments_creditcards',\n    BigCommercePaymentsAlternativeMethod = 'bigcommerce_payments_apms',\n    BigCommercePaymentsVenmo = 'bigcommerce_payments_venmo',\n    BigCommercePaymentsFastLane = 'bigcommerce_payments_fastlane',\n    BigCommercePaymentsGooglePay = 'googlepay_bigcommerce_payments',\n    Qpay = 'qpay',\n    Quadpay = 'quadpay',\n    Ratepay = 'ratepay',\n    SagePay = 'sagepay',\n    Sepa = 'sepa',\n    Sezzle = 'sezzle',\n    SquareV2 = 'squarev2',\n    StripeGooglePay = 'googlepaystripe',\n    StripeUPEGooglePay = 'googlepaystripeupe',\n    StripeOCSGooglePay = 'googlepaystripeocs',\n    StripeV3 = 'stripev3',\n    StripeUPE = 'stripeupe',\n    WorldpayAccess = 'worldpayaccess',\n    WorldpayAccessGooglePay = 'googlepayworldpayaccess',\n    Zip = 'zip',\n    TdOnlineMartGooglePay = 'googlepaytdonlinemart',\n}\n\nexport default PaymentMethodId;\n","import classNames from 'classnames';\nimport React, { type FunctionComponent, type LabelHTMLAttributes } from 'react';\n\nexport interface LabelProps extends LabelHTMLAttributes<HTMLLabelElement> {\n    testId?: string;\n    hidden?: boolean;\n    isFloatingLabelEnabled?: boolean;\n    additionalClassName?: string;\n}\n\nconst Label: FunctionComponent<LabelProps> = ({\n    children,\n    className,\n    hidden,\n    testId,\n    isFloatingLabelEnabled,\n    additionalClassName,\n    ...rest\n}) => (\n    <label\n        { ...rest }\n        className={ classNames(\n            { 'floating-label': isFloatingLabelEnabled },\n            className || 'form-label',\n            { 'is-srOnly': hidden },\n            'optimizedCheckout-form-label',\n            additionalClassName,\n        ) }\n        data-test={ testId }\n    >\n        { children }\n    </label>\n);\n\nexport default Label;\n","import { Field, type FieldConfig, type FieldProps, getIn } from 'formik';\nimport { isDate, noop } from 'lodash';\nimport React, {\n    createElement,\n    type FunctionComponent,\n    memo,\n    useCallback,\n    useEffect,\n    useMemo,\n    useRef,\n} from 'react';\nimport shallowEqual from 'shallowequal';\n\nimport FormFieldContainer from './FormFieldContainer';\n\nexport interface BasicFormFieldProps extends FieldConfig {\n    additionalClassName?: string;\n    className?: string;\n    testId?: string;\n    onChange?(value: any): void;\n}\n\nconst BasicFormField: FunctionComponent<BasicFormFieldProps> = ({\n    additionalClassName,\n    className,\n    component,\n    render,\n    testId,\n    onChange,\n    ...rest\n}) => {\n    const renderInnerField = useCallback(\n        (props: FieldProps) => (\n            <InnerField\n                {...props}\n                additionalClassName={additionalClassName}\n                className={className}\n                component={component}\n                onChange={onChange}\n                render={render}\n                testId={testId}\n            />\n        ),\n        [additionalClassName, className, component, render, testId, onChange],\n    );\n\n    return <Field {...rest}>{renderInnerField}</Field>;\n};\n\ntype InnerFieldProps = Omit<BasicFormFieldProps, keyof FieldConfig> & InnerFieldInputProps;\n\nconst InnerField: FunctionComponent<InnerFieldProps> = memo(\n    ({ additionalClassName, component, field, form, onChange, render, testId, meta }) => {\n        const input = useMemo(\n            () => (\n                <InnerFieldInput\n                    component={component}\n                    field={field}\n                    form={form}\n                    meta={meta}\n                    onChange={onChange}\n                    render={render}\n                />\n            ),\n            [field, form, onChange, component, render],\n        );\n\n        return (\n            <FormFieldContainer\n                additionalClassName={additionalClassName}\n                hasError={getIn(form.errors, field.name)}\n                testId={testId}\n            >\n                {input}\n            </FormFieldContainer>\n        );\n    },\n    (\n        { form: prevForm, field: prevField, ...prevProps },\n        { form: nextForm, field: nextField, ...nextProps },\n    ) =>\n        shallowEqual(prevProps, nextProps) &&\n        shallowEqual(prevForm, nextForm) &&\n        shallowEqual(prevField, nextField),\n);\n\ntype InnerFieldInputProps = FieldProps &\n    Pick<FieldConfig, 'component' | 'render'> & {\n        onChange?(value: string): void;\n    };\n\nconst InnerFieldInput: FunctionComponent<InnerFieldInputProps> = ({\n    field,\n    onChange = noop,\n    component = 'input',\n    render,\n    ...props\n}) => {\n    const prevValueRef = useRef<unknown>(field.value);\n\n    useEffect(() => {\n         \n        const comparableValue = isDate(field.value) ? field.value.getTime() : field.value;\n        const comparablePrevValue = isDate(prevValueRef.current)\n            ? prevValueRef.current.getTime()\n            : prevValueRef.current;\n\n        if (comparableValue !== comparablePrevValue) {\n            onChange(field.value);\n        }\n\n        prevValueRef.current = field.value;\n    }, [field.value, onChange]);\n\n    if (render) {\n        return render({ field, ...props });\n    }\n\n    if (typeof component === 'string') {\n        return createElement(component, field);\n    }\n\n     \n    return createElement(component as any, { field, ...props });\n};\n\nexport default memo(BasicFormField);\n","enum CustomerViewType {\n    Guest = 'guest',\n    Login = 'login',\n    SuggestedLogin = 'suggested_login',\n    EnforcedLogin = 'enforced_login',\n    CancellableEnforcedLogin = 'cancellable_enforced_login',\n    CreateAccount = 'create_account',\n}\n\nexport default CustomerViewType;\n","import React, { type FunctionComponent, memo, type ReactNode } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './ErrorCode.scss';\n\nexport interface ErrorCodeProps {\n    code: string;\n    label?: ReactNode;\n}\n\nconst ErrorCode: FunctionComponent<ErrorCodeProps> = ({ code, label }) => {\n    return (\n        <div className=\"errorCode\">\n            <span className=\"errorCode-label\">\n                {label ?? <TranslatedString id=\"common.error_code\" />}\n            </span>{' '}\n            <span className=\"errorCode-value\">{code}</span>\n        </div>\n    );\n};\n\nexport default memo(ErrorCode);\n","import { type RequestError } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { type ReactElement, type ReactNode, type SyntheticEvent } from 'react';\n\nimport { TranslatedHtml, TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button, ButtonSize } from '../../ui/button';\nimport { IconError, IconSize } from '../../ui/icon';\nimport { Modal, ModalHeader } from '../../ui/modal';\n\nimport computeErrorCode from './computeErrorCode';\nimport ErrorCode from './ErrorCode';\nimport isCustomError from './isCustomError';\nimport isHtmlError from './isHtmlError';\nimport isRequestError from './isRequestError';\n\nimport { type CustomError } from './index';\n\nexport interface ErrorModalProps {\n    error?: Error | RequestError | CustomError;\n    message?: ReactNode;\n    title?: ReactNode;\n    shouldShowErrorCode?: boolean;\n    onClose?(event: Event, props: ErrorModalOnCloseProps): void;\n}\n\nexport interface ErrorModalOnCloseProps {\n    error: Error;\n}\n\nconst ErrorModal = ({\n    error,\n    message = error && error.message,\n    onClose = noop,\n    shouldShowErrorCode = true,\n    title = error && isCustomError(error) && error.title,\n}: ErrorModalProps): ReactElement => {\n    const aria = {\n        labelledby: 'errorModalMessage',\n    };\n\n    const handleOnRequestClose: (event: SyntheticEvent) => void = (event) => {\n        if (error) {\n            onClose(event.nativeEvent, { error });\n        }\n    };\n\n    const renderHeader = (): ReactNode => (\n        <ModalHeader>\n            <IconError\n                additionalClassName=\"icon--error modal-header-icon\"\n                size={IconSize.Small}\n            />\n            <span aria-live=\"assertive\" role=\"alert\">\n                {title || <TranslatedString id=\"common.error_heading\" />}\n            </span>\n        </ModalHeader>\n    );\n\n    const renderBody = (): ReactNode => (\n        <>\n            {error && isHtmlError(error) &&\n                <TranslatedHtml id={error.data.translationKey} />\n            }\n            {message && (\n                <p aria-live=\"assertive\" id=\"errorModalMessage\" role=\"alert\">\n                    {message}\n                </p>\n            )}\n\n            <div className=\"optimizedCheckout-contentSecondary\">{renderErrorCode()}</div>\n        </>\n    );\n\n    const renderFooter = (): ReactNode => (\n        <Button onClick={handleOnRequestClose} size={ButtonSize.Small}>\n            <TranslatedString id=\"common.ok_action\" />\n        </Button>\n    );\n\n    const renderErrorCode = (): ReactNode => {\n        if (!error || !shouldShowErrorCode) {\n            return;\n        }\n\n        if (isRequestError(error) && error.headers?.['x-request-id']) {\n            return (\n                <ErrorCode\n                    code={error.headers['x-request-id']}\n                    label={<TranslatedString id=\"common.request_id\" />}\n                />\n            );\n        }\n\n        const errorCode = computeErrorCode(error);\n\n        if (!errorCode) {\n            return;\n        }\n\n        return <ErrorCode code={errorCode} />;\n    };\n\n    return (\n        <Modal\n            additionalModalClassName=\"modal--error\"\n            aria={aria}\n            footer={renderFooter()}\n            header={renderHeader()}\n            isOpen={!!error}\n            onRequestClose={handleOnRequestClose}\n        >\n            {renderBody()}\n        </Modal>\n    );\n};\n\nexport default ErrorModal;\n","import { type CustomError } from \"@bigcommerce/checkout/payment-integration-api\";\n\nexport default function isHtmlError(error: Error): error is CustomError {\n\n    return 'type' in error &&\n        error.type === 'custom' &&\n        'data' in error &&\n        typeof error.data === 'object' &&\n        error.data !== null &&\n        'shouldBeTranslatedAsHtml' in error.data &&\n        typeof error.data.shouldBeTranslatedAsHtml === 'boolean';\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk/essential';\n\nimport { type CommandHandler, type CommandHandlerProps } from './CommandHandler';\n\nexport function createReloadCheckoutHandler({\n    checkoutService,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.ReloadCheckout> {\n    return {\n        commandType: ExtensionCommandType.ReloadCheckout,\n        handler: () => {\n            void checkoutService.loadCheckout(checkoutService.getState().data.getCheckout()?.id, {\n                params: {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/consistent-type-assertions\n                    include: ['consignments.availableShippingOptions'] as any,\n                },\n            });\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk/essential';\n\nimport { type CommandHandler, type CommandHandlerProps } from './CommandHandler';\n\nexport function createSetIframeStyleHandler({\n    extension,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.SetIframeStyle> {\n    return {\n        commandType: ExtensionCommandType.SetIframeStyle,\n        handler: (data) => {\n            const { style } = data.payload;\n            const extensionContainer = document.querySelector(\n                `div[data-extension-id=\"${extension.id}\"]`,\n            );\n            const iframe = extensionContainer?.querySelector('iframe');\n\n            if (iframe) {\n                Object.assign(iframe.style, style);\n            }\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk/essential';\n\nimport { ExtensionActionType } from '@bigcommerce/checkout/contexts';\n\nimport { type CommandHandler, type CommandHandlerProps } from './CommandHandler';\n\nexport function createShowLoadingIndicatorHandler({\n    dispatch,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.ShowLoadingIndicator> {\n    return {\n        commandType: ExtensionCommandType.ShowLoadingIndicator,\n        handler: (data) => {\n            const { show } = data.payload;\n\n            dispatch({\n                type: ExtensionActionType.SHOW_LOADING_INDICATOR,\n                payload: show,\n            });\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk/essential';\n\nimport { ExtensionActionType } from '@bigcommerce/checkout/contexts';\n\nimport { type CommandHandler, type CommandHandlerProps } from './CommandHandler';\n\nexport function createReRenderShippingFormHandler({\n    checkoutService,\n    dispatch,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.ReRenderShippingForm> {\n    return {\n        commandType: ExtensionCommandType.ReRenderShippingForm,\n        handler: async () => {\n            await checkoutService.loadCheckout(checkoutService.getState().data.getCheckout()?.id, {\n                params: {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/consistent-type-assertions\n                    include: ['consignments.availableShippingOptions'] as any,\n                },\n            });\n\n            dispatch({\n                type: ExtensionActionType.RE_RENDER_SHIPPING_FORM,\n                payload: Date.now(),\n            });\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk/essential';\n\nimport { ExtensionActionType } from '@bigcommerce/checkout/contexts';\n\nimport { type CommandHandler, type CommandHandlerProps } from './CommandHandler';\n\nexport function createReRenderShippingStepHandler({\n    checkoutService,\n    dispatch,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.ReRenderShippingStep> {\n    return {\n        commandType: ExtensionCommandType.ReRenderShippingStep,\n        handler: async () => {\n            await checkoutService.loadCheckout(checkoutService.getState().data.getCheckout()?.id, {\n                params: {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/consistent-type-assertions\n                    include: ['consignments.availableShippingOptions'] as any,\n                },\n            });\n\n            dispatch({\n                type: ExtensionActionType.RE_RENDER_SHIPPING_FORM,\n                payload: Date.now(),\n            });\n        },\n    };\n}\n","import { ExtensionMessageType, ExtensionQueryType } from '@bigcommerce/checkout-sdk/essential';\n\nimport { type QueryHandler, type QueryHandlerProps } from './QueryHandler';\n\nexport function createGetConsignmentHandler({\n    checkoutService,\n    extension,\n}: QueryHandlerProps): QueryHandler<ExtensionQueryType.GetConsignments> {\n    return {\n        queryType: ExtensionQueryType.GetConsignments,\n        handler: async (data) => {\n            if (!data.payload?.useCache) {\n                await checkoutService.loadCheckout();\n            }\n\n            const consignments = checkoutService.getState().data.getCheckout()?.consignments || [];\n\n            checkoutService.postMessageToExtension(extension.id, {\n                type: ExtensionMessageType.GetConsignments,\n                payload: {\n                    consignments,\n                },\n            });\n        },\n    };\n}\n","import {\n    type CheckoutService,\n    type Extension,\n    type ExtensionCommandMap,\n    type ExtensionQueryMap,\n    type ExtensionRegion,\n} from '@bigcommerce/checkout-sdk';\nimport type React from 'react';\n\nimport {\n    type ExtensionAction,\n    type ExtensionServiceInterface,\n} from '@bigcommerce/checkout/contexts';\nimport { ErrorLevelType, type ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\n\nimport { type CommandHandler, type QueryHandler } from './handler';\nimport * as commandHandlerFactories from './handler/commandHandlers';\nimport * as queryHandlerFactories from './handler/queryHandlers';\n\nexport class ExtensionService implements ExtensionServiceInterface {\n    private handlers: { [extensionId: string]: Array<() => void> } = {};\n    private dispatch: React.Dispatch<ExtensionAction> | undefined;\n\n    constructor(\n        private checkoutService: CheckoutService,\n        private errorLogger: ErrorLogger,\n    ) {}\n\n    setDispatch(dispatch: React.Dispatch<ExtensionAction>): void {\n        this.dispatch = dispatch;\n    }\n\n    async loadExtensions(): Promise<void> {\n        await this.checkoutService.loadExtensions();\n    }\n\n    async renderExtension(container: string, region: ExtensionRegion): Promise<void> {\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        if (!extension) {\n            return;\n        }\n\n        try {\n            await this.checkoutService.renderExtension(container, region);\n\n            this.registerHandlers(extension);\n        } catch (error: unknown) {\n            if (error instanceof Error) {\n                this.errorLogger.log(\n                    error,\n                    { errorCode: 'checkoutExtension' },\n                    ErrorLevelType.Error,\n                    { extensionId: extension.id, region },\n                );\n            }\n        }\n    }\n\n    removeListeners(region: ExtensionRegion): void {\n        this.checkoutService.clearExtensionCache(region);\n\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        if (!extension) {\n            return;\n        }\n\n        const removers = this.handlers[extension.id];\n\n        if (!removers) {\n            return;\n        }\n\n        for (const remover of removers) {\n            remover();\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n        delete this.handlers[extension.id];\n    }\n\n    isRegionEnabled(region: ExtensionRegion): boolean {\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        return Boolean(extension);\n    }\n\n    private registerHandlers(extension: Extension): void {\n        if (!this.dispatch) {\n            throw new Error('ExtensionService dispatch is not set');\n        }\n\n        const handlerProps = {\n            checkoutService: this.checkoutService,\n            dispatch: this.dispatch,\n            extension,\n        };\n\n        if (!this.handlers[extension.id]) {\n            this.handlers[extension.id] = [];\n        }\n\n        Object.values(commandHandlerFactories).forEach((createCommandHandlerFactory) => {\n            const handlerFactory = createCommandHandlerFactory(handlerProps);\n\n            if (this.isCommandHandler(handlerFactory.commandType, handlerFactory)) {\n                this.handlers[extension.id].push(\n                    this.checkoutService.handleExtensionCommand(\n                        extension.id,\n                        handlerFactory.commandType,\n                        handlerFactory.handler,\n                    ),\n                );\n            }\n        });\n\n        Object.values(queryHandlerFactories).forEach((createQueryHandlerFactory) => {\n            const handlerFactory = createQueryHandlerFactory(handlerProps);\n\n            if (this.isQueryHandler(handlerFactory.queryType, handlerFactory)) {\n                this.handlers[extension.id].push(\n                    this.checkoutService.handleExtensionQuery(\n                        extension.id,\n                        handlerFactory.queryType,\n                        handlerFactory.handler,\n                    ),\n                );\n            }\n        });\n    }\n\n    private isCommandHandler<T extends keyof ExtensionCommandMap>(\n        type: T,\n        handler: CommandHandler<any>,\n    ): handler is CommandHandler<T> {\n        return handler.commandType === type;\n    }\n\n    private isQueryHandler<T extends keyof ExtensionQueryMap>(\n        type: T,\n        handler: QueryHandler<any>,\n    ): handler is QueryHandler<T> {\n        return handler.queryType === type;\n    }\n}\n","import { type Address, type FormField } from '@bigcommerce/checkout-sdk';\n\nimport getAddressFormFieldsValidationSchema from './getAddressFormFieldsValidationSchema';\nimport mapAddressToFormValues from './mapAddressToFormValues';\n\nexport default function isValidAddress(\n    address: Address,\n    formFields: FormField[],\n): boolean {\n    const addressSchema = getAddressFormFieldsValidationSchema({ formFields });\n\n    return addressSchema.isValidSync(mapAddressToFormValues(formFields, address));\n}\n","import { memoize } from '@bigcommerce/memoize';\nimport { object, type ObjectSchema, string, type StringSchema } from 'yup';\n\nimport getCustomFormFieldsValidationSchema, {\n    type FormFieldsValidationSchemaOptions,\n} from './getCustomFormFieldsValidationSchema';\n\nexport const WHITELIST_REGEXP = /^[^<>]*$/;\n\nexport interface FormFieldValues {\n    [key: string]: string | { [id: string]: any };\n}\n\nexport default memoize(function getFormFieldsValidationSchema({\n    formFields,\n    translate = () => undefined,\n}: FormFieldsValidationSchemaOptions): ObjectSchema<FormFieldValues> {\n    return object({\n        ...formFields\n            .filter(({ custom }) => !custom)\n            .reduce((schema, { name, required, label, maxLength }) => {\n                schema[name] = string();\n\n                if (required) {\n                    schema[name] = schema[name]\n                        .trim()\n                        .required(translate('required', { label, name }));\n                }\n\n                if ((name === 'address1' || name === 'address2') && maxLength) {\n                    schema[name] = schema[name]\n                        .max(maxLength, translate('max', { label, name, max: maxLength }));\n                }\n\n                schema[name] = schema[name].matches(\n                    WHITELIST_REGEXP,\n                    translate('invalid', { name, label }),\n                );\n\n                return schema;\n                // eslint-disable-next-line @typescript-eslint/prefer-reduce-type-parameter\n            }, {} as { [key: string]: StringSchema }),\n    }).concat(\n        getCustomFormFieldsValidationSchema({ formFields, translate }),\n    ) as ObjectSchema<FormFieldValues>;\n});\n","import { type FormField, type LanguageService } from '@bigcommerce/checkout-sdk';\nimport { memoize } from 'lodash';\nimport { type ObjectSchema } from 'yup';\n\nimport {\n    type FormFieldValues,\n    getFormFieldsValidationSchema,\n    type TranslateValidationErrorFunction,\n} from '../formFields';\n\nexport interface AddressFormFieldsValidationSchemaOptions {\n    formFields: FormField[];\n    language?: LanguageService;\n}\n\nexport function getTranslateAddressError(\n    language?: LanguageService,\n): TranslateValidationErrorFunction {\n    const requiredFieldErrorTranslationIds: { [fieldName: string]: string } = {\n        countryCode: 'address.country',\n        firstName: 'address.first_name',\n        lastName: 'address.last_name',\n        company: 'address.company_name',\n        address1: 'address.address_line_1',\n        address2: 'address.address_line_2',\n        city: 'address.city',\n        stateOrProvince: 'address.state',\n        stateOrProvinceCode: 'address.state',\n        postalCode: 'address.postal_code',\n        phone: 'address.phone_number',\n    };\n\n    return (type, { label, name, min, max }) => {\n        if (!language) {\n            return;\n        }\n\n        if (type === 'required') {\n            if (requiredFieldErrorTranslationIds[name]) {\n                return language.translate(\n                    `${requiredFieldErrorTranslationIds[name]}_required_error`,\n                );\n            }\n\n            return language.translate(`address.custom_required_error`, { label });\n        }\n\n        if (type === 'max' && max) {\n            return language.translate(`address.custom_max_error`, { label, max });\n        }\n\n        if (type === 'min' && min) {\n            return language.translate(`address.custom_min_error`, { label, min });\n        }\n\n        if (type === 'invalid') {\n            return language.translate(`address.invalid_characters_error`, { label });\n        }\n    };\n}\n\nexport default memoize(function getAddressFormFieldsValidationSchema({\n    formFields,\n    language,\n}: AddressFormFieldsValidationSchemaOptions): ObjectSchema<FormFieldValues> {\n    return getFormFieldsValidationSchema({\n        formFields,\n        translate: getTranslateAddressError(language),\n    });\n});\n","enum DynamicFormFieldType {\n    TELEPHONE = 'tel',\n    DROPDOWM = 'dropdown',\n    NUMBER = 'number',\n    PASSWORD = 'password',\n    CHECKBOX = 'checkbox',\n    MULTILINE = 'multiline',\n    DATE = 'date',\n    RADIO = 'radio',\n    TEXT = 'text',\n}\n\nexport default DynamicFormFieldType;\n","import classNames from 'classnames';\nimport { includes } from 'lodash';\nimport React, { forwardRef, type InputHTMLAttributes, type Ref } from 'react';\n\nexport interface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n    testId?: string;\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst Input = forwardRef(\n    (\n        { className, testId, placeholder, name, isFloatingLabelEnabled, ...rest }: InputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => {\n        const floatingLabelDisabledFieldNames = ['orderComment', 'redeemableCode'];\n\n        return (\n            <input\n                {...{\n                    ...rest,\n                    className: classNames(className, {\n                        'floating-input':\n                            isFloatingLabelEnabled && !includes(floatingLabelDisabledFieldNames, name),\n                    }),\n                    name,\n                }}\n                data-test={testId}\n                placeholder={isFloatingLabelEnabled ? ' ' : placeholder}\n                ref={ref}\n            />\n        );\n    },\n);\n\nexport default Input;\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconPayPalFastlane: FunctionComponent = () => (\n    <svg viewBox=\"0 0 101 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M.009 9.791 1.653.298C1.681.1 1.805 0 1.997 0H7.74c.22 0 .332.141.29.354l-.236 1.334c-.028.185-.152.298-.344.298H3.627l-.359 2.058h3.479c.22 0 .332.142.29.354l-.221 1.306C6.788 5.9 6.664 6 6.472 6H2.936l-.662 3.847c-.028.198-.152.298-.344.298H.298c-.22 0-.332-.142-.289-.354m6.78-1.49c0-1.844 1.905-2.468 3.906-2.71.234-.029.415-.041 1.298-.112a3.25 3.25 0 0 0 .04-.498c0-.653-.344-1.022-1.063-1.022-.622 0-1.035.269-1.23.796-.068.185-.18.27-.358.27H7.975c-.18 0-.304-.085-.304-.241 0-.044.014-.086.028-.128.441-1.334 1.67-2.186 3.507-2.186s2.843.71 2.843 2.428c0 .326-.04.739-.11 1.122l-.373 2.07c-.083.484-.207 1.22-.207 1.718 0 .256-.11.341-.318.341h-1.283c-.192 0-.304-.1-.304-.282 0-.17.04-.37.069-.554-.524.539-1.2.978-2.402.978-1.42 0-2.332-.725-2.332-1.986zm5.036-1.205.054-.256-.372.041c-.746.085-2.375.2-2.375 1.205 0 .525.372.78.966.78 1.103 0 1.504-.78 1.725-1.773zm2.446 1.36c-.04-.17-.07-.297-.07-.438 0-.242.124-.313.318-.313h1.588c.192 0 .29.1.332.298.152.554.607.795 1.284.795.773 0 1.186-.326 1.186-.751 0-.369-.415-.54-1.104-.752l-.813-.256c-1.173-.369-2.14-.795-2.14-2.115 0-1.603 1.475-2.483 3.423-2.483 1.519 0 2.762.412 3.12 1.986.015.07.029.141.029.226 0 .142-.124.198-.318.198h-1.504c-.18 0-.276-.085-.36-.27-.165-.37-.538-.596-1.13-.596-.691 0-1.036.27-1.036.653s.332.554 1.284.852l.539.17c1.243.398 2.278.866 2.278 2.059 0 1.732-1.519 2.639-3.59 2.639-1.602 0-2.996-.468-3.313-1.902h-.005zm7.786.455c0-.269.04-.483.083-.725l.676-3.888h-.745c-.22 0-.332-.141-.29-.354l.166-.951c.029-.185.152-.298.344-.298h.8l.29-1.717c.028-.198.152-.298.344-.298h1.519c.22 0 .332.142.29.354l-.29 1.661h.966c.22 0 .332.142.29.356l-.166.951c-.029.186-.152.298-.345.298h-1.02l-.442 2.54c-.083.483-.152.851-.152 1.149 0 .468.152.624.47.624.124 0 .235-.015.318-.015.22 0 .29.17.249.383l-.152.922c-.055.356-.263.412-.76.412-1.297 0-2.443-.071-2.443-1.405m3.995.88 1.63-9.493C27.71.1 27.834 0 28.026 0h1.519c.22 0 .332.141.29.354l-1.643 9.493c-.028.198-.152.298-.344.298h-1.505c-.221 0-.332-.141-.29-.354zm3.147-1.49c0-1.844 1.905-2.468 3.906-2.71.235-.029.415-.041 1.298-.112a3.25 3.25 0 0 0 .04-.498c0-.653-.344-1.022-1.063-1.022-.622 0-1.034.269-1.229.796-.069.185-.18.27-.359.27h-1.407c-.18 0-.304-.085-.304-.241 0-.044.015-.086.028-.128.442-1.334 1.67-2.186 3.508-2.186 1.837 0 2.843.71 2.843 2.428 0 .326-.04.739-.112 1.122l-.372 2.07c-.083.484-.207 1.22-.207 1.718 0 .256-.111.341-.318.341h-1.284c-.192 0-.303-.1-.303-.282 0-.17.04-.37.068-.554-.524.539-1.2.978-2.401.978-1.422 0-2.333-.725-2.333-1.986V8.3m4.914-1.205.055-.256-.373.041c-.745.085-2.375.2-2.375 1.205 0 .525.372.78.966.78 1.103 0 1.505-.78 1.725-1.773zm2.475 2.695 1.16-6.798c.028-.2.152-.298.344-.298h1.421c.22 0 .318.142.275.356l-.11.666c.357-.524 1.13-1.193 2.4-1.193 1.382 0 2.182.88 2.182 2.256 0 .269-.029.54-.083.866l-.731 4.2c-.028.198-.152.298-.344.298h-1.519c-.22 0-.332-.141-.29-.353l.566-3.25c.083-.482.11-.851.11-1.121 0-.766-.274-1.179-.95-1.179-.898 0-1.436.725-1.671 2.086l-.608 3.52c-.028.197-.152.297-.344.297h-1.519c-.22 0-.332-.141-.29-.353m8.063-2.824c0-2.384 1.588-4.456 4.35-4.456 2.14 0 3.45 1.22 3.45 3.42 0 .256-.014.483-.04.71-.028.2-.152.297-.344.297h-5.233c.028 1.051.496 1.689 1.56 1.689.538 0 .91-.198 1.214-.51a.47.47 0 0 1 .387-.186h1.67c.193 0 .305.057.305.2 0 .042-.015.1-.069.198-.705 1.25-1.836 2.071-3.671 2.071-2.098 0-3.576-1.178-3.576-3.434zm5.591-1.405c0-.908-.484-1.476-1.421-1.476-1.009 0-1.616.71-1.78 1.476h3.203zm34.293-.611-1.504 2.6-.764-2.579a.195.195 0 0 0-.185-.141h-1.355a.15.15 0 0 0-.14.195l1.367 4.343-1.236 2.046c-.06.099.009.227.123.227h1.462a.24.24 0 0 0 .206-.12l3.817-6.465a.148.148 0 0 0-.126-.225h-1.46a.23.23 0 0 0-.204.119zM62.935 12c-.135 0-.206-.063-.206-.168 0-.032.01-.074.03-.116l.66-1.613-1.947-5.21c-.03-.084-.052-.126-.052-.189 0-.105.083-.136.216-.136h.7c.135 0 .227.073.268.2l.937 2.816c.176.527.299.886.433 1.329h.02c.176-.517.268-.823.454-1.36l.957-2.785q.078-.202.278-.2h.629c.134 0 .227.041.227.147a.5.5 0 0 1-.052.169l-2.699 6.927c-.051.127-.134.19-.268.19h-.587zm-4.082-1.772c-.927 0-1.524-.422-1.833-.906v.537c0 .158-.083.243-.237.243h-.505c-.154 0-.237-.085-.237-.243V2.803c0-.158.083-.243.237-.243h.577c.154 0 .237.085.237.243v1.381c0 .38 0 .697-.01 1.086.308-.454.906-.875 1.761-.875 1.535 0 2.523 1.244 2.523 2.921s-1.03 2.911-2.513 2.911m-.205-.876c1.009 0 1.596-.801 1.596-2.025s-.597-2.035-1.606-2.035-1.606.855-1.606 2.035.597 2.025 1.617 2.025zm12.82-1.666c1.397 0 2.58-1.043 2.796-2.454.218-1.424-.87-2.666-2.408-2.67h-2.482a.2.2 0 0 0-.192.17l-1.107 7.19a.18.18 0 0 0 .178.212h1.315a.2.2 0 0 0 .191-.169l.326-2.111a.2.2 0 0 1 .19-.17h1.194zm1.1-2.52c-.082.527-.479.915-1.24.915h-.972l.294-1.916h.955c.788 0 1.044.475.962 1zm7.386-.336h-1.246a.2.2 0 0 0-.191.169l-.042.266s-.968-1.082-2.68-.352c-.982.42-1.455 1.287-1.656 1.918 0 0-.638 1.929.803 2.988 0 0 1.336 1.019 2.842-.063l-.026.17a.18.18 0 0 0 .178.211h1.246a.2.2 0 0 0 .191-.169l.76-4.924a.182.182 0 0 0-.178-.214zm-1.831 2.72c-.108.705-.675 1.225-1.4 1.225a1.3 1.3 0 0 1-.393-.058c-.537-.178-.844-.705-.757-1.28.108-.706.676-1.226 1.403-1.226q.216 0 .392.06c.54.178.843.707.755 1.28zm11.3.136c1.396 0 2.58-1.043 2.795-2.454.218-1.424-.87-2.666-2.408-2.67h-2.48a.2.2 0 0 0-.192.17l-1.107 7.19a.18.18 0 0 0 .178.212h1.315a.2.2 0 0 0 .191-.169l.326-2.111a.2.2 0 0 1 .19-.17h1.19v.002zm1.101-2.52c-.082.527-.478.915-1.239.915h-.972l.294-1.916h.955c.786 0 1.043.475.962 1zm7.387-.336h-1.246a.2.2 0 0 0-.191.169l-.042.266s-.968-1.082-2.68-.352c-.982.42-1.455 1.287-1.655 1.918 0 0-.639 1.929.803 2.988 0 0 1.337 1.019 2.842-.063l-.027.17a.18.18 0 0 0 .178.211h1.246a.2.2 0 0 0 .191-.169l.76-4.924a.183.183 0 0 0-.18-.214m-1.831 2.72c-.109.705-.674 1.225-1.4 1.225q-.216 0-.392-.058c-.537-.178-.845-.705-.757-1.28.108-.706.677-1.226 1.402-1.226q.216 0 .392.06c.537.178.843.707.756 1.28zm3.233-4.82L98.206 9.92a.18.18 0 0 0 .178.212h1.314a.2.2 0 0 0 .192-.169l1.107-7.19a.18.18 0 0 0-.178-.213h-1.315a.2.2 0 0 0-.191.17\"\n            fill=\"#333333\"\n        />\n    </svg>\n);\n\nexport default withIconContainer(IconPayPalFastlane);\n","import React from 'react';\n\nimport { IconPayPalFastlane } from '@bigcommerce/checkout/ui';\n\nimport './PoweredByPayPalFastlaneLabel.scss';\n\nconst PoweredByPayPalFastlaneLabel = () => (\n    <div className=\"powered-by-paypal-fastlane\" data-test=\"paypal-fastlane-icon\">\n        <IconPayPalFastlane />\n    </div>\n);\n\nexport default PoweredByPayPalFastlaneLabel;\n","import { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport isPayPalFastlaneCustomer from './is-paypal-fastlane-customer';\nimport isPayPalFastlaneMethod from './is-paypal-fastlane-method';\n\nconst usePayPalFastlaneAddress = () => {\n    const { checkoutState } = useCheckout();\n    const { getConfig, getPaymentProviderCustomer } = checkoutState.data;\n    const paymentWithCustomCheckout: string =\n        getConfig()?.checkoutSettings.providerWithCustomCheckout || '';\n\n    const isPayPalFastlaneEnabled = isPayPalFastlaneMethod(paymentWithCustomCheckout);\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const paymentProviderCustomer = getPaymentProviderCustomer() || undefined;\n    const paypalFastlaneCustomer = isPayPalFastlaneCustomer(paymentProviderCustomer)\n        ? paymentProviderCustomer\n        : {};\n\n    const customerAuthenticationState = paypalFastlaneCustomer.authenticationState;\n    const paypalFastlaneAddresses = paypalFastlaneCustomer.addresses || [];\n\n    const shouldShowPayPalFastlaneLabel =\n        paypalFastlaneAddresses.length > 0 && isPayPalFastlaneEnabled;\n\n    const shouldShowPayPalFastlaneShippingForm =\n        paypalFastlaneAddresses.length > 0 &&\n        customerAuthenticationState &&\n        customerAuthenticationState !== 'CANCELED' &&\n        customerAuthenticationState !== 'unrecognized';\n\n    return {\n        isPayPalFastlaneEnabled,\n        paypalFastlaneAddresses,\n        shouldShowPayPalFastlaneLabel,\n        shouldShowPayPalFastlaneShippingForm,\n    };\n};\n\nexport default usePayPalFastlaneAddress;\n","import { type CheckoutSelectors, type CheckoutService } from '@bigcommerce/checkout-sdk';\nimport { createContext, useContext } from 'react';\n\nimport type ErrorLogger from './ErrorLogger';\n\nexport interface CheckoutContextProps {\n    checkoutService: CheckoutService;\n    checkoutState: CheckoutSelectors;\n    errorLogger?: ErrorLogger;\n}\n\nconst CheckoutContext = createContext<CheckoutContextProps | undefined>(undefined);\n\nexport function useCheckout() {\n    const context = useContext(CheckoutContext);\n\n    if (!context) {\n        throw new Error('useCheckout must be used within a CheckoutContextProvider');\n    }\n\n    return context;\n}\n\nexport default CheckoutContext;\n","import React, { type FunctionComponent, memo } from 'react';\nimport Media, { type MediaQueryObject, type MultiQueryProps } from 'react-media';\n\nimport { MOBILE_MAX_WIDTH } from './breakpoints';\n\nconst queries = {\n    print: 'print',\n    mobile: `screen and (max-width: ${MOBILE_MAX_WIDTH}px)`,\n};\n\nconst ViewPicker: FunctionComponent<Pick<MultiQueryProps<MediaQueryObject>, 'children'>> = ({\n    children,\n}) => {\n    return <Media queries={queries}>{children}</Media>;\n};\n\nexport default memo(ViewPicker);\n","import React, { type FunctionComponent, memo } from 'react';\n\nimport ViewPicker from './ViewPicker';\n\ninterface QueryResults {\n    [key: string]: boolean;\n}\n\nconst MobileView: FunctionComponent<{ children(matched: boolean): React.ReactNode }> = ({\n    children,\n}) => {\n    return (\n        <ViewPicker>\n            {(matches: QueryResults) => {\n                return children(matches.mobile);\n            }}\n        </ViewPicker>\n    );\n};\n\nexport default memo(MobileView);\n","import { lazy } from 'react';\n\nconst AmazonPayV2Button = lazy(() => import(/* webpackChunkName: \"amazon-pay-v2-button\" */'@bigcommerce/checkout/amazon-pay-v2-integration').then(module => ({ default: module.AmazonPayV2Button })));\nconst ApplePayButton = lazy(() => import(/* webpackChunkName: \"apple-pay-button\" */'@bigcommerce/checkout/apple-pay-integration').then(module => ({ default: module.ApplePayButton })));\nconst BigCommercePaymentsButton = lazy(() => import(/* webpackChunkName: \"big-commerce-payments-button\" */'@bigcommerce/checkout/bigcommerce-payments-integration').then(module => ({ default: module.BigCommercePaymentsButton })));\nconst BigcommercePaymentsPayLaterButton = lazy(() => import(/* webpackChunkName: \"bigcommerce-payments-pay-later-button\" */'@bigcommerce/checkout/bigcommerce-payments-integration').then(module => ({ default: module.BigcommercePaymentsPayLaterButton })));\nconst CheckoutButton = lazy(() => import(/* webpackChunkName: \"checkout-button\" */'@bigcommerce/checkout/checkout-button-integration').then(module => ({ default: module.CheckoutButton })));\nconst GooglePayButton = lazy(() => import(/* webpackChunkName: \"google-pay-button\" */'@bigcommerce/checkout/google-pay-integration').then(module => ({ default: module.GooglePayButton })));\nconst PayPalCommerceCreditButton = lazy(() => import(/* webpackChunkName: \"pay-pal-commerce-credit-button\" */'@bigcommerce/checkout/paypal-commerce-integration').then(module => ({ default: module.PayPalCommerceCreditButton })));\nconst PayPalCommerceButton = lazy(() => import(/* webpackChunkName: \"pay-pal-commerce-button\" */'@bigcommerce/checkout/paypal-commerce-integration').then(module => ({ default: module.PayPalCommerceButton })));\nconst StripeLinkV2Button = lazy(() => import(/* webpackChunkName: \"stripe-link-v2-button\" */'@bigcommerce/checkout/stripe-integration').then(module => ({ default: module.StripeLinkV2Button })));\n\nexport {\n  AmazonPayV2Button,\n  ApplePayButton,\n  BigCommercePaymentsButton,\n  BigcommercePaymentsPayLaterButton,\n  CheckoutButton,\n  GooglePayButton,\n  PayPalCommerceCreditButton,\n  PayPalCommerceButton,\n  StripeLinkV2Button,\n};\n\nexport const ComponentRegistry = {\n  'AmazonPayV2Button': [\n    { \"id\": \"amazonpay\" }\n  ],\n  'ApplePayButton': [\n    { \"id\": \"applepay\" }\n  ],\n  'BigCommercePaymentsButton': [\n    { \"id\": \"bigcommerce_payments\" }\n  ],\n  'BigcommercePaymentsPayLaterButton': [\n    { \"id\": \"bigcommerce_payments_paylater\" }\n  ],\n  'GooglePayButton': [\n    { \"id\": \"googlepayadyenv2\" },\n    { \"id\": \"googlepayadyenv3\" },\n    { \"id\": \"googlepayauthorizenet\" },\n    { \"id\": \"googlepaybnz\" },\n    { \"id\": \"googlepaybraintree\" },\n    { \"id\": \"googlepaypaypalcommerce\" },\n    { \"id\": \"googlepaycheckoutcom\" },\n    { \"id\": \"googlepaycybersourcev2\" },\n    { \"id\": \"googlepayorbital\" },\n    { \"id\": \"googlepaystripe\" },\n    { \"id\": \"googlepaystripeupe\" },\n    { \"id\": \"googlepayworldpayaccess\" },\n    { \"id\": \"googlepaytdonlinemart\" },\n    { \"id\": \"googlepaystripeocs\" }\n  ],\n  'PayPalCommerceButton': [\n    { \"id\": \"paypalcommerce\" }\n  ],\n  'PayPalCommerceCreditButton': [\n    { \"id\": \"paypalcommercecredit\" }\n  ],\n  'StripeLinkV2Button': [\n    { \"id\": \"stripeocs\" }\n  ]\n} as const;\n\n    \n","import { type ComponentType } from 'react';\n\nimport {\n    type CheckoutButtonProps,\n    type CheckoutButtonResolveId,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nimport { resolveLazyComponent } from '../common/resolver';\nimport * as lazyCheckoutButtons from '../generated/checkoutButtons';\n\nexport default function resolveCheckoutButton(\n    resolveId: CheckoutButtonResolveId\n): ComponentType<CheckoutButtonProps> | undefined {\n    const { ComponentRegistry, ...components } = lazyCheckoutButtons;\n\n    return resolveLazyComponent<CheckoutButtonResolveId, CheckoutButtonProps>(\n        resolveId,\n        components,\n        ComponentRegistry,\n    );\n}\n","import { createContext } from 'react';\n\nimport { type ExtensionServiceInterface, type ExtensionState } from './ExtensionType';\n\nexport interface ExtensionContextProps {\n    extensionService: ExtensionServiceInterface;\n    extensionState: ExtensionState;\n}\n\nexport const ExtensionContext = createContext<ExtensionContextProps | undefined>(undefined);\n","import type CheckoutSupport from './CheckoutSupport';\n\nexport default class NoopCheckoutSupport implements CheckoutSupport {\n    isSupported(): boolean {\n        return true;\n    }\n}\n","import { CustomError, setPrototypeOf } from '../../common/error';\n\nexport class EmbeddedCheckoutUnsupportedError extends CustomError {\n    constructor(message: string) {\n        super({\n            name: 'EMBEDDED_CHECKOUT_UNSUPPORTED_ERROR',\n            message,\n        });\n\n        setPrototypeOf(this, EmbeddedCheckoutUnsupportedError.prototype);\n    }\n}\n","import { type LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { type CheckoutSupport } from '../checkout';\n\nimport { EmbeddedCheckoutUnsupportedError } from './errors';\n\nexport default class EmbeddedCheckoutSupport implements CheckoutSupport {\n    constructor(private unsupportedMethods: string[], private langService: LanguageService) {}\n\n    isSupported(...ids: string[]): boolean {\n        const unsupportedMethods = ids.filter((id) => this.unsupportedMethods.includes(id));\n\n        if (unsupportedMethods.length === 0) {\n            return true;\n        }\n\n        throw new EmbeddedCheckoutUnsupportedError(\n            this.langService.translate('embedded_checkout.unsupported_error', {\n                methods: unsupportedMethods.join(', '),\n            }),\n        );\n    }\n}\n","import { type LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { type CheckoutSupport, NoopCheckoutSupport } from '../checkout';\n\nimport EmbeddedCheckoutSupport from './EmbeddedCheckoutSupport';\nimport isEmbedded from './isEmbedded';\n\nconst UNSUPPORTED_METHODS = ['afterpay', 'applepay', 'amazonpay', 'googlepay', 'klarna', 'masterpass'];\n\nexport default function createEmbeddedCheckoutSupport(language: LanguageService): CheckoutSupport {\n    return isEmbedded()\n        ? new EmbeddedCheckoutSupport(UNSUPPORTED_METHODS, language)\n        : new NoopCheckoutSupport();\n}\n","import React, { type FunctionComponent } from 'react';\n\nimport { isMobileView } from '../../utils';\n\nimport { CartSummarySkeleton } from './CartSummarySkeleton';\n\nconst CheckoutPageSkeletonDesktop: FunctionComponent = () => (\n    <div className=\"layout optimizedCheckout-contentPrimary\" data-test=\"checkout-page-skeleton\">\n        <div className=\"layout-main\">\n            <div className=\"checkout-steps checkout-page-skeleton\">\n                <div className=\"title--first\" />\n                <div className=\"textbox\" />\n                <div className=\"subscription\">\n                    <div className=\"checkbox\" />\n                    <div className=\"description\" />\n                </div>\n                <div className=\"terms--1\" />\n                <div className=\"terms--2\" />\n                <div className=\"title\" />\n                <div className=\"title\" />\n                <div className=\"title\" />\n            </div>\n        </div>\n        <CartSummarySkeleton />\n    </div>\n);\n\nconst CheckoutPageSkeletonMobile: FunctionComponent = () => (\n    <div\n        className=\"layout optimizedCheckout-contentPrimary\"\n        data-test=\"checkout-page-skeleton-mobile\"\n    >\n        <div className=\"layout-main \">\n            <div className=\"checkout-page-skeleton\">\n                <div className=\"walletbutton--tagline\" />\n                <div className=\"walletbutton\" />\n                <div className=\"walletbutton--divider\" />\n                <div className=\"mobile-title--first\" />\n                <div className=\"textbox\" />\n                <div className=\"textbox\" />\n                <div className=\"terms--1\" />\n                <div className=\"mobile-title--2\" />\n                <div className=\"divider\" />\n                <div className=\"mobile-title--3\" />\n                <div className=\"divider\" />\n                <div className=\"mobile-title--4\" />\n                <div className=\"divider\" />\n                <div className=\"divider\" />\n            </div>\n            <div className=\"checkout-page-skeleton--cartdrawer\">\n                <div className=\"product\">\n                    <div className=\"animated-grey-box figure\" />\n                    <div className=\"details\">\n                        <div className=\"animated-grey-box name\" />\n                        <div className=\"animated-grey-box description\" />\n                    </div>\n                </div>\n                <div className=\"animated-grey-box more\" />\n            </div>\n        </div>\n    </div>\n);\n\nconst CheckoutPageSkeleton: FunctionComponent = () => {\n    return isMobileView() ? <CheckoutPageSkeletonMobile /> : <CheckoutPageSkeletonDesktop />;\n};\n\nexport default CheckoutPageSkeleton;\n","import { createInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport { ExtensionContext } from './ExtensionContext';\n\nexport const withExtension = createInjectHoc(ExtensionContext, {\n    displayNamePrefix: 'WithExtension',\n});\n","import React, { type FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nexport interface LoadingNotificationProps {\n    isLoading: boolean;\n}\n\nconst LoadingNotification: FunctionComponent<LoadingNotificationProps> = ({ isLoading }) => {\n    if (!isLoading) {\n        return null;\n    }\n\n    return (\n        <div className=\"loadingNotification\">\n            <div className=\"loadingNotification-label optimizedCheckout-loadingToaster\">\n                <div className=\"spinner\" />\n\n                <span aria-live=\"assertive\" className=\"label\" role=\"alert\">\n                    <TranslatedString id=\"common.loading_text\" />\n                </span>\n            </div>\n        </div>\n    );\n};\n\nexport default memo(LoadingNotification);\n","import React, { type ReactElement, useEffect, useState } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\nimport { LoadingOverlay } from '@bigcommerce/checkout/ui';\n\nexport interface EmptyCartMessageProps {\n    waitInterval?: number;\n    loginUrl: string;\n}\n\nconst EmptyCartMessage = ({ waitInterval, loginUrl }: EmptyCartMessageProps): ReactElement => {\n    const [isWaiting, setIsWaiting] = useState(true);\n\n    useEffect(() => {\n        const waitToken = setTimeout(() => {\n            setIsWaiting(false);\n        }, waitInterval);\n\n        return () => {\n            clearTimeout(waitToken);\n        };\n    }, [waitInterval]);\n\n    return (\n        <LoadingOverlay hideContentWhenLoading isLoading={isWaiting}>\n            <TranslatedHtml data={{ url: loginUrl }} id=\"cart.empty_cart_message\" />\n        </LoadingOverlay>\n    );\n};\n\nexport default EmptyCartMessage;\n","import React, { type FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, type LoadingSkeletonProps } from './LoadingSkeleton';\n\ninterface WalletButtonsProps {\n    buttonsCount: number;\n}\n\nconst WalletButtonContainerSkeleton: FunctionComponent<\n    LoadingSkeletonProps & WalletButtonsProps\n> = ({ buttonsCount, children, isLoading }) => {\n    const renderWhileLoading = true;\n    const skeleton = (\n        <div className=\"checkoutRemote walletbuttons-skeleton\">\n            {Array(buttonsCount)\n                .fill(0)\n                .map((_v, i) => (\n                    <div key={`skeleton-container-${i}`} />\n                ))}\n        </div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, renderWhileLoading, skeleton }} />;\n};\n\nexport default WalletButtonContainerSkeleton;\n","import { type CheckoutSelectors, type CheckoutService } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { type FunctionComponent, lazy, memo, Suspense } from 'react';\n\nimport { useThemeContext } from '@bigcommerce/checkout/contexts';\nimport { TranslatedString, useLocale } from '@bigcommerce/checkout/locale';\nimport { type CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { WalletButtonsContainerSkeleton } from '@bigcommerce/checkout/ui';\n\nimport { withCheckout } from '../checkout';\n\nimport { getSupportedMethodIds } from './getSupportedMethods';\nimport resolveCheckoutButton from './resolveCheckoutButton';\n\nconst CheckoutButtonV1Resolver = lazy(() => import(/* webpackChunkName: \"wallet-button-v1-resolver\" */'./WalletButtonV1Resolver'));\n\ninterface CheckoutButtonContainerProps {\n    isPaymentStepActive: boolean;\n    checkEmbeddedSupport(methodIds: string[]): void;\n    onUnhandledError(error: Error): void;\n    onWalletButtonClick(methodId: string): void;\n}\n\ninterface WithCheckoutCheckoutButtonContainerProps {\n    availableMethodIds: string[];\n    checkoutState: CheckoutSelectors;\n    checkoutService: CheckoutService;\n    isLoading: boolean;\n}\n\nconst paypalCommerceIds = [\n    'paypalcommerce',\n    'paypalcommercecredit',\n    'paypalcommercevenmo',\n];\n\nconst isPayPalCommerce = (methodId: string): boolean => paypalCommerceIds.includes(methodId);\n\nconst CheckoutButtonContainer: FunctionComponent<CheckoutButtonContainerProps & WithCheckoutCheckoutButtonContainerProps> = (\n    {\n        availableMethodIds,\n        checkoutService,\n        checkoutState,\n        checkEmbeddedSupport,\n        isLoading,\n        isPaymentStepActive,\n        onUnhandledError,\n        onWalletButtonClick,\n    }) => {\n    const { language } = useLocale();\n    const { themeV2 } = useThemeContext();\n\n    try {\n        checkEmbeddedSupport(availableMethodIds);\n    } catch (error) {\n        return null;\n    }\n\n    const renderButtons = () => availableMethodIds.map((methodId) => {\n        if (isPaymentStepActive && isPayPalCommerce(methodId)) {\n            return null;\n        }\n\n        const ResolvedCheckoutButton = resolveCheckoutButton(\n            { id: methodId },\n        );\n\n        if (!ResolvedCheckoutButton) {\n            return <Suspense key={methodId}>\n                <CheckoutButtonV1Resolver\n                    deinitialize={checkoutService.deinitializeCustomer}\n                    initialize={checkoutService.initializeCustomer}\n                    isShowingWalletButtonsOnTop={true}\n                    key={methodId}\n                    methodId={methodId}\n                    onClick={onWalletButtonClick}\n                    onError={onUnhandledError}\n                />\n            </Suspense>\n        }\n\n        return <Suspense key={methodId}>\n            <ResolvedCheckoutButton\n                checkoutService={checkoutService}\n                checkoutState={checkoutState}\n                containerId={`${methodId}CheckoutButton`}\n                language={language}\n                methodId={methodId}\n                onUnhandledError={onUnhandledError}\n                onWalletButtonClick={onWalletButtonClick}\n            />\n        </Suspense>;\n    });\n\n    return (\n        <div className='checkout-button-container'\n             style={ isPaymentStepActive ? { position: 'absolute', left: '0', top: '-100%' } : undefined }\n        >\n            <p className={classNames({\n                'sub-header': themeV2,\n            })}>\n                <TranslatedString id=\"remote.start_with_text\" />\n            </p>\n            <div className='checkout-buttons-auto-layout'>\n                <WalletButtonsContainerSkeleton buttonsCount={availableMethodIds.length} isLoading={isLoading}>\n                    <div className=\"checkoutRemote\">\n                        {renderButtons()}\n                    </div>\n                </WalletButtonsContainerSkeleton>\n            </div>\n            <div className='checkout-separator'>\n                <span className={classNames({ 'sub-header': themeV2 })}>\n                    <TranslatedString id='remote.or_text' />\n                </span>\n            </div>\n        </div>\n    );\n};\n\nfunction mapToCheckoutButtonContainerProps({\n    checkoutState,\n    checkoutService,\n}: CheckoutContextProps): WithCheckoutCheckoutButtonContainerProps | null {\n    const {\n        data: {\n            getConfig,\n            getCustomer,\n            isPaymentDataRequired,\n        },\n        statuses: {\n            isInitializedCustomer,\n        },\n        errors: {\n            getInitializeCustomerError,\n        }\n     } = checkoutState;\n    const config = getConfig();\n    const providers = config?.checkoutSettings.remoteCheckoutProviders ?? [];\n\n    const availableMethodIds = getSupportedMethodIds(providers);\n    const customer = getCustomer();\n\n    if (!isPaymentDataRequired()) {\n        return null;\n    }\n\n    if (!config || availableMethodIds.length === 0 || !customer?.isGuest) {\n        return null;\n    }\n\n    const isLoading = availableMethodIds.filter(\n        (methodId) => Boolean(getInitializeCustomerError(methodId)) || isInitializedCustomer(methodId)\n    ).length !== availableMethodIds.length;\n\n    return {\n        checkoutService,\n        checkoutState,\n        availableMethodIds,\n        isLoading,\n    }\n}\n\nexport default memo(withCheckout(mapToCheckoutButtonContainerProps)(CheckoutButtonContainer));\n","import {\n    type CheckoutSelectors,\n    type CustomerInitializeOptions,\n    type CustomerRequestOptions,\n    type ExecutePaymentMethodCheckoutOptions,\n} from '@bigcommerce/checkout-sdk';\nimport { createBoltCustomerStrategy } from '@bigcommerce/checkout-sdk/integrations/bolt';\nimport { noop } from 'lodash';\nimport React, { type FunctionComponent, memo, useEffect, useState } from 'react';\n\nimport { useAnalytics } from '@bigcommerce/checkout/contexts';\nimport { stopPropagation } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button } from '../../ui/button';\nimport { IconBolt } from '../../ui/icon';\n\nexport interface BoltCheckoutSuggestionProps {\n    isExecutingPaymentMethodCheckout: boolean;\n    methodId: string;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n    onUnhandledError?(error: Error): void;\n}\n\nconst BoltCheckoutSuggestion: FunctionComponent<BoltCheckoutSuggestionProps> = ({\n    isExecutingPaymentMethodCheckout,\n    methodId,\n    deinitializeCustomer,\n    executePaymentMethodCheckout,\n    initializeCustomer,\n    onUnhandledError = noop,\n}) => {\n    const [showSuggestion, setShowSuggestion] = useState<boolean>(false);\n    const { analyticsTracker } = useAnalytics();\n\n    useEffect(() => {\n        deinitializeCustomer({ methodId });\n\n        try {\n            initializeCustomer({\n                methodId,\n                integrations: [createBoltCustomerStrategy],\n                bolt: {\n                    onInit: (hasBoltAccount, email) => {\n                        setShowSuggestion(hasBoltAccount);\n\n                        if (email) {\n                            analyticsTracker.customerSuggestionInit({ hasBoltAccount });\n                        }\n                    },\n                },\n            });\n        } catch (error) {\n            onUnhandledError(error);\n        }\n\n        return () => {\n            deinitializeCustomer({ methodId });\n        };\n    }, [initializeCustomer, deinitializeCustomer, methodId, onUnhandledError]);\n\n    if (!showSuggestion) {\n        return null;\n    }\n\n    const handleActionClick = async () => {\n        await executePaymentMethodCheckout({ methodId });\n    };\n\n    return (\n        <div className=\"checkoutSuggestion\" onClick={stopPropagation()}>\n            <p className=\"checkoutSuggestion-message\">\n                <TranslatedString\n                    data={{\n                        provider: 'Bolt',\n                        providerFlow: 'Bolt Checkout',\n                    }}\n                    id=\"customer.suggestion_text\"\n                />\n            </p>\n            <Button\n                className=\"checkoutSuggestion-button checkoutSuggestion-button--bolt\"\n                data-test=\"suggestion-action-button\"\n                isLoading={isExecutingPaymentMethodCheckout}\n                onClick={handleActionClick}\n            >\n                <IconBolt additionalClassName=\"checkoutSuggestion-button-icon--bolt\" />\n                <TranslatedString\n                    data={{ providerFlow: 'Bolt Checkout' }}\n                    id=\"customer.suggestion_action\"\n                />\n            </Button>\n        </div>\n    );\n};\n\nexport default memo(BoltCheckoutSuggestion);\n","import { type SyntheticEvent } from 'react';\n\nexport default function stopPropagation<\n    TFunc extends (event: TEvent, ...args: any[]) => any,\n    TEvent extends SyntheticEvent,\n>(fn?: TFunc): (event: TEvent) => void {\n    return (event) => {\n        event.stopPropagation();\n\n        if (fn) {\n            fn(event);\n        }\n    };\n}\n","import {\n    type CheckoutSelectors,\n    type CustomerInitializeOptions,\n    type CustomerRequestOptions,\n    type ExecutePaymentMethodCheckoutOptions,\n} from '@bigcommerce/checkout-sdk';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { useAnalytics } from '@bigcommerce/checkout/contexts';\nimport { type CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { withCheckout } from '../../checkout';\nimport { PaymentMethodId } from '../../payment/paymentMethod';\n\nimport BoltCheckoutSuggestion from './BoltCheckoutSuggestion';\n\nexport interface CheckoutSuggestionProps {\n    onUnhandledError?(error: Error): void;\n}\n\nexport interface WithCheckoutSuggestionsProps {\n    isExecutingPaymentMethodCheckout: boolean;\n    providerWithCustomCheckout?: string;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n}\n\nconst CheckoutSuggestion: FunctionComponent<\n    WithCheckoutSuggestionsProps & CheckoutSuggestionProps\n> = ({\n    providerWithCustomCheckout,\n    executePaymentMethodCheckout,\n    ...rest\n}) => {\n    const { analyticsTracker } = useAnalytics();\n\n    const handleExecutePaymentMethodCheckout = (options: ExecutePaymentMethodCheckoutOptions) => {\n        analyticsTracker.customerSuggestionExecute();\n\n        return executePaymentMethodCheckout(options);\n    }\n\n    if (providerWithCustomCheckout === PaymentMethodId.Bolt) {\n        return <BoltCheckoutSuggestion\n                    executePaymentMethodCheckout={handleExecutePaymentMethodCheckout}\n                    methodId={providerWithCustomCheckout}\n                    {...rest}\n                />;\n    }\n\n    return null;\n};\n\nconst mapToCheckoutSuggestionProps = ({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutSuggestionsProps | null => {\n    const {\n        data: { getCheckout, getConfig },\n        statuses: { isExecutingPaymentMethodCheckout },\n    } = checkoutState;\n\n    const checkout = getCheckout();\n    const config = getConfig();\n\n    if (!checkout || !config) {\n        return null;\n    }\n\n    return {\n        deinitializeCustomer: checkoutService.deinitializeCustomer,\n        executePaymentMethodCheckout: checkoutService.executePaymentMethodCheckout,\n        initializeCustomer: checkoutService.initializeCustomer,\n        isExecutingPaymentMethodCheckout: isExecutingPaymentMethodCheckout(),\n        providerWithCustomCheckout: config.checkoutSettings.providerWithCustomCheckout || undefined,\n    };\n};\n\nexport default withCheckout(mapToCheckoutSuggestionProps)(memo(CheckoutSuggestion));\n","import { type Checkout, type Customer } from '@bigcommerce/checkout-sdk';\nimport { every } from 'lodash';\n\nimport { SUPPORTED_METHODS } from './getSupportedMethods';\n\nconst SUPPORTED_SIGNOUT_METHODS = ['amazonpay'];\n\nexport const isSupportedSignoutMethod = (methodId: string): boolean => {\n    return SUPPORTED_SIGNOUT_METHODS.includes(methodId);\n};\n\nexport default function canSignOut(\n    customer: Customer,\n    checkout: Checkout,\n    methodId: string,\n): boolean {\n    if (isSupportedSignoutMethod(methodId)) {\n        return true;\n    }\n\n    if (customer.isGuest) {\n        return false;\n    }\n\n    // Return false if payment method offers its own checkout button\n    return every(\n        checkout.payments,\n        (payment) => !SUPPORTED_METHODS.includes(payment.providerId),\n    );\n}\n","import { type CheckoutSelectors, type CustomerRequestOptions, type CustomError } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { type FunctionComponent } from 'react';\n\nimport { useThemeContext } from '@bigcommerce/checkout/contexts';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { type CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { withCheckout } from '../checkout';\nimport { isErrorWithType } from '../common/error';\nimport { Button, ButtonSize, ButtonVariant } from '../ui/button';\n\nimport canSignOut, { isSupportedSignoutMethod } from './canSignOut';\n\nexport interface CustomerInfoProps {\n    onSignOut?(event: CustomerSignOutEvent): void;\n    onSignOutError?(error: CustomError): void;\n}\n\nexport interface CustomerSignOutEvent {\n    isCartEmpty: boolean;\n}\n\ninterface WithCheckoutCustomerInfoProps {\n    checkoutLink: string;\n    email: string;\n    methodId: string;\n    isSignedIn: boolean;\n    isSigningOut: boolean;\n    logoutLink: string;\n    shouldRedirectToStorefrontForAuth: boolean;\n    signOut(options?: CustomerRequestOptions): Promise<CheckoutSelectors>;\n}\n\nconst CustomerInfo: FunctionComponent<CustomerInfoProps & WithCheckoutCustomerInfoProps> = ({\n    checkoutLink,\n    email,\n    methodId,\n    isSignedIn,\n    isSigningOut,\n    logoutLink,\n    shouldRedirectToStorefrontForAuth,\n    onSignOut = noop,\n    onSignOutError = noop,\n    signOut,\n}) => {\n    const { themeV2 } = useThemeContext();\n\n    const handleSignOut: () => Promise<void> = async () => {\n        try {\n            if (shouldRedirectToStorefrontForAuth) {\n                window.location.assign(`${logoutLink}?redirectTo=${checkoutLink}`);\n\n                return;\n            }\n\n            if (isSupportedSignoutMethod(methodId)) {\n                await signOut({ methodId });\n                onSignOut({ isCartEmpty: false });\n                window.location.reload();\n            } else {\n                await signOut();\n                onSignOut({ isCartEmpty: false });\n            }\n        } catch (error) {\n            if (isErrorWithType(error) && error.type === 'checkout_not_available') {\n                onSignOut({ isCartEmpty: true });\n            } else {\n                onSignOutError(error);\n            }\n        }\n    };\n\n    return (\n        <div className=\"customerView\" data-test=\"checkout-customer-info\">\n            <div\n                className={classNames('customerView-body',\n                    { 'body-regular': themeV2 },\n                )}\n                data-test=\"customer-info\"\n            >\n                {email}\n            </div>\n\n            <div className=\"customerView-actions\">\n                {isSignedIn && (\n                    <Button\n                        className={themeV2 ? 'body-regular' : ''}\n                        isLoading={isSigningOut}\n                        onClick={handleSignOut}\n                        size={ButtonSize.Tiny}\n                        testId=\"sign-out-link\"\n                        variant={ButtonVariant.Secondary}\n                    >\n                        <TranslatedString id=\"customer.sign_out_action\" />\n                    </Button>\n                )}\n            </div>\n        </div>\n    );\n};\n\nfunction mapToWithCheckoutCustomerInfoProps({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutCustomerInfoProps | null {\n    const {\n        data: { getBillingAddress, getCheckout, getCustomer, getConfig },\n        statuses: { isSigningOut },\n    } = checkoutState;\n\n    const billingAddress = getBillingAddress();\n    const checkout = getCheckout();\n    const customer = getCustomer();\n    const config = getConfig();\n\n    if (!billingAddress || !checkout || !customer || !config) {\n        return null;\n    }\n\n    const { checkoutSettings, links: { checkoutLink, logoutLink } } = config;\n\n    const methodId =\n        checkout.payments && checkout.payments.length === 1 ? checkout.payments[0].providerId : '';\n\n    return {\n        email: billingAddress.email || customer.email,\n        methodId,\n        isSignedIn: canSignOut(customer, checkout, methodId),\n        isSigningOut: isSigningOut(),\n        logoutLink,\n        checkoutLink,\n        shouldRedirectToStorefrontForAuth: checkoutSettings.shouldRedirectToStorefrontForAuth,\n        signOut: checkoutService.signOutCustomer,\n    };\n}\n\nexport default withCheckout(mapToWithCheckoutCustomerInfoProps)(CustomerInfo);\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconTag: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M21.41 11.58l-9-9C12.05 2.22 11.55 2 11 2H4c-1.1 0-2 .9-2 2v7c0 .55.22 1.05.59 1.42l9 9c.36.36.86.58 1.41.58.55 0 1.05-.22 1.41-.59l7-7c.37-.36.59-.86.59-1.41 0-.55-.23-1.06-.59-1.42zM5.5 7C4.67 7 4 6.33 4 5.5S4.67 4 5.5 4 7 4.67 7 5.5 6.33 7 5.5 7z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconTag);\n","import DOMPurify from 'dompurify';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { IconTag } from '../ui/icon';\n\nexport interface PromotionBannerProps {\n    message: string;\n}\n\nconst PromotionBanner: FunctionComponent<PromotionBannerProps> = ({ message }) => (\n    <Alert\n        additionalClassName=\"optimizedCheckout-discountBanner\"\n        icon={<IconTag />}\n        type={AlertType.Info}\n    >\n        <span\n            dangerouslySetInnerHTML={{\n                __html: DOMPurify.sanitize(message),\n            }}\n            data-test=\"promotion-banner-message\"\n        />\n    </Alert>\n);\n\nexport default memo(PromotionBanner);\n","import { type Banner, type Promotion } from '@bigcommerce/checkout-sdk';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport PromotionBanner from './PromotionBanner';\nimport './PromotionBannerList.scss';\n\nexport interface PromotionBannerListProps {\n    promotions?: Promotion[];\n}\n\nconst PromotionBannerList: FunctionComponent<PromotionBannerListProps> = ({ promotions }) => {\n    const banners = (promotions || []).reduce(\n        (result, promotion) => [...result, ...promotion.banners],\n        // eslint-disable-next-line @typescript-eslint/prefer-reduce-type-parameter\n        [] as Banner[],\n    );\n\n    if (!banners.length) {\n        return null;\n    }\n\n    return (\n        <div className=\"discountBanner\">\n            <ul className=\"discountBannerList\">\n                {banners.map((banner, index) => (\n                    <PromotionBanner key={index} message={banner.text} />\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default memo(PromotionBannerList);\n","import { type Cart, type Consignment } from '@bigcommerce/checkout-sdk';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { isPayPalFastlaneAddress, PoweredByPayPalFastlaneLabel, usePayPalFastlaneAddress } from '@bigcommerce/checkout/paypal-fastlane-integration';\n\nimport { AddressType, StaticAddress } from '../address';\n\nimport getShippingCostAfterAutomaticDiscount from './getShippingCostAfterAutomaticDiscount';\nimport { StaticShippingOption } from './shippingOption';\nimport './StaticConsignment.scss';\nimport StaticConsignmentItemList from './StaticConsignmentItemList';\n\ninterface StaticConsignmentProps {\n    consignment: Consignment;\n    cart: Cart;\n    compactView?: boolean;\n    isShippingDiscountDisplayEnabled: boolean;\n}\n\nconst StaticConsignment: FunctionComponent<StaticConsignmentProps> = ({\n    consignment,\n    cart,\n    compactView,\n    isShippingDiscountDisplayEnabled,\n}) => {\n    const { paypalFastlaneAddresses } = usePayPalFastlaneAddress();\n    const { shippingAddress: address, selectedShippingOption } = consignment;\n    const showPayPalFastlaneAddressLabel = isPayPalFastlaneAddress(address, paypalFastlaneAddresses);\n\n    return (\n        <div className=\"staticConsignment\">\n            <StaticAddress address={address} type={AddressType.Shipping} />\n\n            {showPayPalFastlaneAddressLabel && <PoweredByPayPalFastlaneLabel />}\n\n            {!compactView && <StaticConsignmentItemList cart={cart} consignment={consignment} />}\n\n            {selectedShippingOption && (\n                <div>\n                    <div className=\"shippingOption shippingOption--alt shippingOption--selected\">\n                        <StaticShippingOption\n                            displayAdditionalInformation={false}\n                            method={selectedShippingOption}\n                            shippingCostAfterDiscount={isShippingDiscountDisplayEnabled ? getShippingCostAfterAutomaticDiscount(selectedShippingOption.cost, [consignment]) : undefined}\n                        />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default memo(StaticConsignment);\n","import { type Cart, type Consignment } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { useThemeContext } from '@bigcommerce/checkout/contexts';\nimport { localizeAddress, TranslatedString } from '@bigcommerce/checkout/locale';\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\nimport { isPayPalFastlaneAddress, PoweredByPayPalFastlaneLabel, usePayPalFastlaneAddress } from '@bigcommerce/checkout/paypal-fastlane-integration';\n\nimport ConsignmentLineItemDetail from './ConsignmentLineItemDetail';\nimport findLineItems from './findLineItems';\nimport getLineItemsCount from './getLineItemsCount';\nimport getShippingCostAfterAutomaticDiscount from './getShippingCostAfterAutomaticDiscount';\nimport { StaticShippingOption } from './shippingOption';\n\nimport './StaticMultiConsignment.scss';\n\ninterface StaticMultiConsignmentProps {\n    consignment: Consignment;\n    cart: Cart;\n    consignmentNumber: number;\n    isShippingDiscountDisplayEnabled: boolean;\n}\n\nconst StaticMultiConsignment: FunctionComponent<StaticMultiConsignmentProps> = ({\n    consignment,\n    cart,\n    consignmentNumber,\n    isShippingDiscountDisplayEnabled,\n}) => {\n    const {\n        checkoutState: {\n            data: { getShippingCountries },\n        },\n    } = useCheckout();\n    const { themeV2 } = useThemeContext();\n\n    const { shippingAddress: addressWithoutLocalization, selectedShippingOption } = consignment;\n    const address = localizeAddress(addressWithoutLocalization, getShippingCountries());\n    const { paypalFastlaneAddresses } = usePayPalFastlaneAddress();\n    const showPayPalFastlaneAddressLabel = isPayPalFastlaneAddress(address, paypalFastlaneAddresses);\n\n    const lineItems = findLineItems(cart, consignment);\n\n    return (\n        <div className=\"staticMultiConsignment\">\n            <h3 className={classNames('staticMultiConsignment-header',\n                { 'body-bold': themeV2 })}>\n                <TranslatedString data={{ consignmentNumber }} id=\"shipping.multishipping_consignment_index_heading\" />\n            </h3>\n\n            <div className=\"checkout-address--static\">\n                <p className={classNames('address-entry',\n                    { 'sub-text': themeV2 })}>\n                    <span className=\"first-name\">{`${address.firstName} `}</span>\n                    <span className=\"family-name\">{address.lastName}</span>\n                </p>\n                <div className=\"address-details\">\n                    <p className={classNames('street-address address-entry',\n                        { 'sub-text': themeV2 })}>\n                        <span className=\"address-line-1\">{address.address1}</span>\n                        {address.address2 && (\n                            <span className=\"address-line-2\">{`, ${address.address2}`}</span>\n                        )}\n                    </p>\n\n                    <p className={classNames('address-entry',\n                        { 'sub-text': themeV2 })}>\n                        {address.city && <span className=\"locality\">{address.city}</span>}\n                        {address.localizedProvince && (\n                            <span className=\"region\">{`, ${address.localizedProvince}`}</span>\n                        )}\n                        {address.localizedCountry && (\n                            <span className=\"country-name\">{`, ${address.localizedCountry}`}</span>\n                        )}\n                        {address.postalCode && (\n                            <span className=\"postal-code\">{` ${address.postalCode}`}</span>\n                        )}\n                    </p>\n                </div>\n            </div>\n\n            {showPayPalFastlaneAddressLabel && <PoweredByPayPalFastlaneLabel />}\n\n            <div className=\"staticConsignment-items\">\n                <span className={themeV2 ? 'body-bold' : ''}>\n                <TranslatedString\n                    data={{ count: getLineItemsCount(lineItems) }}\n                    id=\"cart.item_count_text\"\n                />\n                </span>\n\n                <ConsignmentLineItemDetail isMultiShippingSummary lineItems={lineItems} />\n        </div>\n\n            {selectedShippingOption && (\n                <div>\n                    <div className=\"shippingOption shippingOption--alt shippingOption--selected\">\n                        <StaticShippingOption\n                            displayAdditionalInformation={false}\n                            method={selectedShippingOption}\n                            shippingCostAfterDiscount={isShippingDiscountDisplayEnabled ? getShippingCostAfterAutomaticDiscount(selectedShippingOption.cost, [consignment]) : undefined}\n                        />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default memo(StaticMultiConsignment);\n","\nimport { type Cart, type Consignment } from '@bigcommerce/checkout-sdk';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport StaticConsignment from './StaticConsignment';\nimport StaticMultiConsignment from './StaticMultiConsignment';\n\ninterface ShippingSummaryProps {\n    isShippingDiscountDisplayEnabled: boolean;\n    isMultiShippingMode: boolean;\n    consignments: Consignment[];\n    cart: Cart;\n}\n\nconst ShippingSummary: FunctionComponent<ShippingSummaryProps> = ({\n    isShippingDiscountDisplayEnabled,\n    isMultiShippingMode,\n    consignments,\n    cart\n}) => {\n    if (isMultiShippingMode) {\n        return (\n            <>\n                {consignments.map((consignment, index) => (\n                    <div className=\"staticMultiConsignmentContainer\" key={consignment.id}>\n                        <StaticMultiConsignment\n                            cart={cart}\n                            consignment={consignment}\n                            consignmentNumber={index + 1}\n                            isShippingDiscountDisplayEnabled={isShippingDiscountDisplayEnabled}\n                        />\n                    </div>\n                ))}\n            </>\n        );\n    }\n\n    return (\n        <>\n            {consignments.map((consignment) => (\n                <div className=\"staticConsignmentContainer\" key={consignment.id}>\n                    <StaticConsignment\n                        cart={cart}\n                        compactView={consignments.length < 2}\n                        consignment={consignment}\n                        isShippingDiscountDisplayEnabled={isShippingDiscountDisplayEnabled}\n                    />\n                </div>\n            ))}\n        </>\n    );\n};\n\nexport default memo(ShippingSummary);\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class ShippingOptionExpiredError extends CustomError {\n    constructor() {\n        super({\n            name: 'SHIPPING_OPTION_EXPIRED',\n            message: getLanguageService().translate('shipping.shipping_option_expired_error'),\n            title: getLanguageService().translate('shipping.shipping_option_expired_heading'),\n        });\n\n        setPrototypeOf(this, ShippingOptionExpiredError.prototype);\n    }\n}\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconCheck: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconCheck);\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { type FunctionComponent, memo, type ReactNode } from 'react';\n\nimport { useThemeContext } from '@bigcommerce/checkout/contexts';\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button, ButtonSize, ButtonVariant } from '../ui/button';\nimport { IconCheck } from '../ui/icon';\n\nimport type CheckoutStepType from './CheckoutStepType';\n\nexport interface CheckoutStepHeaderProps {\n    heading: ReactNode;\n    isActive?: boolean;\n    isComplete?: boolean;\n    isEditable?: boolean;\n    summary?: ReactNode;\n    type: CheckoutStepType;\n    onEdit?(type: CheckoutStepType): void;\n}\n\nconst CheckoutStepHeader: FunctionComponent<CheckoutStepHeaderProps> = ({\n    heading,\n    isActive,\n    isComplete,\n    isEditable,\n    onEdit,\n    summary,\n    type,\n}) => {\n    const { themeV2 } = useThemeContext();\n\n    return (\n        <div\n            className={classNames('stepHeader', {\n                'is-readonly': !isEditable,\n                'is-clickable': isEditable && !isActive,\n            })}\n            onClick={preventDefault(isEditable && onEdit ? () => onEdit(type) : noop)}\n        >\n            <div className=\"stepHeader-figure stepHeader-column\">\n                <IconCheck\n                    additionalClassName={classNames(\n                        'stepHeader-counter',\n                        'optimizedCheckout-step',\n                        { 'stepHeader-counter--complete': isComplete },\n                    )}\n                />\n\n                <h2\n                    className={classNames('stepHeader-title optimizedCheckout-headingPrimary',\n                        { 'header': themeV2 && (isActive || isComplete) },\n                        { 'header-secondary': themeV2 && !isActive && !isComplete })}\n                >{heading}</h2>\n            </div>\n\n            {themeV2 && !isActive && isComplete &&\n                <div\n                    className=\"stepHeader-body stepHeader-column optimizedCheckout-contentPrimary body-regular\"\n                    data-test=\"step-info\"\n                    >\n                        {summary}\n                </div>\n            }\n\n            {!themeV2 &&\n                <div\n                    className=\"stepHeader-body stepHeader-column optimizedCheckout-contentPrimary\"\n                    data-test=\"step-info\"\n                >\n                    {!isActive && isComplete && summary}\n                </div>\n            }\n\n            {isEditable && !isActive && (\n                <div className=\"stepHeader-actions stepHeader-column\">\n                    <Button\n                        aria-expanded={isActive}\n                        className={classNames({ 'body-regular': themeV2 })}\n                        size={ButtonSize.Tiny}\n                        testId=\"step-edit-button\"\n                        variant={ButtonVariant.Secondary}\n                    >\n                        <TranslatedString id=\"common.edit_action\" />\n                    </Button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default memo(CheckoutStepHeader);\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { type ReactElement, type ReactNode, useCallback, useEffect, useRef, useState } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { isMobileView, MobileView } from '../ui/responsive';\n\nimport CheckoutStepHeader from './CheckoutStepHeader';\nimport type CheckoutStepType from './CheckoutStepType';\n\nexport interface CheckoutStepProps {\n    children?: ReactNode;\n    heading?: ReactNode;\n    isActive?: boolean;\n    isBusy: boolean;\n    isComplete?: boolean;\n    isEditable?: boolean;\n    suggestion?: ReactNode;\n    summary?: ReactNode;\n    type: CheckoutStepType;\n    onExpanded?(step: CheckoutStepType): void;\n    onEdit?(step: CheckoutStepType): void;\n}\n\nconst CheckoutStep = ({\n        children,\n        heading,\n        isActive,\n        isBusy,\n        isComplete,\n        isEditable,\n        onEdit,\n        suggestion,\n        summary,\n        type,\n        onExpanded = noop,\n    }: CheckoutStepProps): ReactElement => {\n    const [isClosed, setIsClosed] = useState(true);\n\n    const containerRef = useRef<HTMLLIElement>(null);\n    const contentRef = useRef<HTMLDivElement>(null);\n    const timeoutRef = useRef<number>();\n    const timeoutDelay = useRef<number>();\n\n    const getChildInput = (): HTMLElement | undefined => {\n        const container = containerRef.current;\n\n        if (!container) {\n            return;\n        }\n\n        const input = container.querySelector<HTMLElement>('input, select, textarea');\n\n        return input || undefined;\n    };\n\n    const getScrollPosition = (): number | undefined => {\n        const container = getParentContainer();\n\n        if (!container || window !== window.top) {\n            return;\n        }\n\n        const topOffset = isComplete ? 0 : window.innerHeight / 5;\n        const containerOffset =\n            container.getBoundingClientRect().top + (window.scrollY || window.pageYOffset);\n\n        return containerOffset - topOffset;\n    };\n\n    // For now, we need to find the parent container because `CheckoutStep`\n    // isn't the outer container yet. Once both the header and body are\n    // moved inside this component, we can remove the lookup.\n    const getParentContainer = (): HTMLElement | undefined => {\n        let container: HTMLElement | null = containerRef.current;\n\n        while (container && container.parentElement) {\n            if (container.parentElement.classList.contains('checkout-step')) {\n                return container.parentElement;\n            }\n\n            container = container.parentElement;\n        }\n\n        return containerRef.current ? containerRef.current : undefined;\n    };\n\n    const getTransitionDelay = (): number => {\n        if (timeoutDelay.current !== undefined) {\n            return timeoutDelay.current;\n        }\n\n        timeoutDelay.current =\n            parseFloat(\n                contentRef.current\n                    ? getComputedStyle(contentRef.current).transitionDuration\n                    : '0s',\n            ) * 1000;\n\n        return timeoutDelay.current;\n    };\n\n    const focusStep = (): void => {\n        const delay = isMobileView() ? 0 : getTransitionDelay();\n\n        setIsClosed(false);\n\n        timeoutRef.current = window.setTimeout(() => {\n            const input = getChildInput();\n            const position = getScrollPosition();\n\n            if (input) {\n                input.focus();\n            }\n\n            if (position !== undefined && !isNaN(position)) {\n                window.scrollTo(0, position);\n            }\n\n            onExpanded(type);\n\n            timeoutRef.current = undefined;\n        }, delay);\n    };\n\n    const handleTransitionEnd = (node: HTMLElement, done: () => void): void => {\n        node.addEventListener('transitionend', ({ target }) => {\n            if (target === node) {\n                done();\n            }\n        });\n    };\n\n    const onAnimationEnd = useCallback((): void => {\n        if (!isActive) {\n            setIsClosed(true);\n        }\n    }, [isActive]);\n\n    useEffect(() => {\n        return () => {\n            if (timeoutRef.current) {\n                window.clearTimeout(timeoutRef.current);\n                timeoutRef.current = undefined;\n            }\n        };\n    }, []);\n\n    useEffect(() => {\n        if (isActive) {\n            focusStep();\n        }\n    }, [isActive]);\n\n    return (\n        <li\n            className={classNames('checkout-step', 'optimizedCheckout-checkoutStep', {\n                [`checkout-step--${type}`]: !!type,\n            })}\n            ref={containerRef}\n        >\n            <div className=\"checkout-view-header\">\n                <CheckoutStepHeader\n                    heading={heading}\n                    isActive={isActive}\n                    isComplete={isComplete}\n                    isEditable={isEditable}\n                    onEdit={onEdit}\n                    summary={summary}\n                    type={type}\n                />\n            </div>\n\n            {suggestion && isClosed && !isActive && (\n                <div className=\"checkout-suggestion\" data-test=\"step-suggestion\">\n                    {suggestion}\n                </div>\n            )}\n\n            <MobileView>\n                {(matched) => (\n                    <CSSTransition\n                        addEndListener={handleTransitionEnd}\n                        classNames=\"checkout-view-content\"\n                        enter={!matched}\n                        exit={!matched}\n                        in={isActive}\n                        mountOnEnter\n                        onExited={onAnimationEnd}\n                        timeout={{}}\n                        unmountOnExit\n                    >\n                        <div\n                            aria-busy={isBusy}\n                            className=\"checkout-view-content\"\n                            ref={contentRef}\n                        >\n                            {isActive ? children : null}\n                        </div>\n                    </CSSTransition>\n                )}\n            </MobileView>\n        </li>\n    );\n};\n\nexport default CheckoutStep;\n","enum CheckoutStepType {\n    Billing = 'billing',\n    Customer = 'customer',\n    Payment = 'payment',\n    Shipping = 'shipping',\n}\n\nexport default CheckoutStepType;\n","import { type Cart, type StoreConfig } from '@bigcommerce/checkout-sdk';\n\nconst itemsRequireShipping = (cart?: Cart, config?: StoreConfig) => {\n    if (!cart) {\n        return false;\n    }\n\n    if (cart.lineItems.physicalItems.some((lineItem) => lineItem.isShippingRequired)) {\n        return true;\n    }\n\n    if (config && cart.lineItems.customItems\n    ) {\n        return cart.lineItems.customItems.length > 0;\n    }\n\n    return false;\n};\n\nexport default itemsRequireShipping;\n","import { type CheckoutPayment, type CheckoutSelectors } from '@bigcommerce/checkout-sdk';\nimport { compact } from 'lodash';\nimport { createSelector } from 'reselect';\n\nimport { shouldUseStripeLinkByMinimumAmount } from '@bigcommerce/checkout/instrument-utils';\n\nimport { isValidAddress } from '../address';\nimport { EMPTY_ARRAY, isExperimentEnabled } from '../common/utility';\nimport { SUPPORTED_METHODS } from '../customer';\nimport { PaymentMethodId } from '../payment/paymentMethod';\nimport {\n    hasSelectedShippingOptions,\n    hasUnassignedLineItems,\n    itemsRequireShipping,\n} from '../shipping';\n\nimport CheckoutStepType from './CheckoutStepType';\n\n// StripeLink is a UX that is only available with StripeUpe and will only be displayed for BC guest users,\n// it uses its own components in the customer and shipping steps, unfortunately in order to preserve the UX\n// when reloading the checkout page it's necessary to refill the stripe components with the information saved.\n// In this step, we require that the customer strategy be reloaded the first time.\nconst getStripeLinkAndCheckoutPageIsReloaded = (\n    isUsingWallet: boolean,\n    hasEmail: boolean,\n    isGuest: boolean,\n    shouldUseStripeLinkByMinimumAmount: boolean,\n    providerWithCustomCheckout?: string | null,\n) => {\n    return !isUsingWallet && providerWithCustomCheckout === PaymentMethodId.StripeUPE && hasEmail && isGuest && shouldUseStripeLinkByMinimumAmount;\n}\n\nconst getCustomerStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getCheckout(),\n    ({ data }: CheckoutSelectors) => data.getCustomer(),\n    ({ data }: CheckoutSelectors) => data.getBillingAddress(),\n    ({ data }: CheckoutSelectors) => data.getConfig(),\n    ({ data }: CheckoutSelectors) => data.getCart(),\n    ({ data }: CheckoutSelectors) => data.getPaymentProviderCustomer(),\n    (checkout, customer, billingAddress, config, cart, paymentProviderCustomer) => {\n        const hasEmail = !!(\n            (customer && customer.email) ||\n            (billingAddress && billingAddress.email)\n        );\n        const isUsingWallet =\n            checkout && checkout.payments\n                ? checkout.payments.some(\n                    (payment: CheckoutPayment) => SUPPORTED_METHODS.includes(payment.providerId),\n                  )\n                : false;\n        const isGuest = !!(customer && customer.isGuest);\n        const isComplete = hasEmail || isUsingWallet;\n        const isEditable = isComplete && !isUsingWallet && isGuest;\n        const isUsingStripeLinkAndCheckoutPageIsReloaded = getStripeLinkAndCheckoutPageIsReloaded(\n            isUsingWallet,\n            hasEmail,\n            isGuest,\n            cart ? shouldUseStripeLinkByMinimumAmount(cart) : false,\n            config?.checkoutSettings.providerWithCustomCheckout,\n        );\n\n        if (isUsingStripeLinkAndCheckoutPageIsReloaded) {\n            return {\n                type: CheckoutStepType.Customer,\n                isActive: false,\n                isComplete: paymentProviderCustomer?.stripeLinkAuthenticationState !== undefined,\n                isEditable,\n                isRequired: true,\n            };\n        }\n\n        return {\n            type: CheckoutStepType.Customer,\n            isActive: false,\n            isComplete,\n            isEditable,\n            isRequired: true,\n        };\n    },\n);\n\nconst getBillingStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getCheckout(),\n    ({ data }: CheckoutSelectors) => data.getBillingAddress(),\n    ({ data }: CheckoutSelectors) => {\n        const billingAddress = data.getBillingAddress();\n\n        return billingAddress\n            ? data.getBillingAddressFields(billingAddress.countryCode)\n            : EMPTY_ARRAY;\n    },\n    ({ data }: CheckoutSelectors) => data.getConfig(),\n    (checkout, billingAddress, billingAddressFields, config) => {\n        const hasAddress = billingAddress\n            ? isValidAddress(billingAddress, billingAddressFields)\n            : false;\n        const isUsingWallet =\n            checkout && checkout.payments\n                ? checkout.payments.some(\n                      (payment) => SUPPORTED_METHODS.includes(payment.providerId),\n                  )\n                : false;\n        const isComplete = hasAddress || isUsingWallet;\n        const isUsingAmazonPay =\n            checkout && checkout.payments\n                ? checkout.payments.some((payment) => payment.providerId === 'amazonpay')\n                : false;\n\n        if (isUsingAmazonPay) {\n            const billingAddressCustomFields = billingAddressFields.filter(\n                ({ custom }: { custom: boolean }) => custom,\n            );\n            const hasCustomFields = billingAddressCustomFields.length > 0;\n            const isAmazonPayBillingStepComplete =\n                billingAddress && hasCustomFields\n                    ? isValidAddress(billingAddress, billingAddressCustomFields)\n                    : true;\n\n            return {\n                type: CheckoutStepType.Billing,\n                isActive: false,\n                isComplete: isAmazonPayBillingStepComplete,\n                isEditable: isAmazonPayBillingStepComplete && hasCustomFields,\n                isRequired: true,\n            };\n        }\n\n        const isGooglePayBillingAddressEditingEnabled = isExperimentEnabled(\n            config?.checkoutSettings,\n            'STRIPE-546.allow_billing_address_editing_for_all_Google_Pay_providers',\n        );\n        const isUsingGooglePay =\n            isGooglePayBillingAddressEditingEnabled && (checkout && checkout.payments\n                ? checkout.payments.some((payment) => (payment?.providerId || '').startsWith('googlepay'))\n                : false);\n\n        if (isUsingGooglePay) {\n            return {\n                type: CheckoutStepType.Billing,\n                isActive: false,\n                isComplete: hasAddress,\n                isEditable: hasAddress,\n                isRequired: true,\n            };\n        }\n\n        const isUsingPaypal =\n            checkout && checkout.payments\n                ? checkout.payments.some(\n                    (payment) =>\n                        [\n                            'braintreepaypal',\n                            'braintreepaypalcredit',\n                            'braintreevenmo',\n                            'paypalcommerce',\n                            'paypalcommercecredit',\n                            'paypalcommercevenmo'\n                        ]\n                            .includes(payment.providerId))\n                : false;\n\n        if (isUsingPaypal) {\n            return {\n                type: CheckoutStepType.Billing,\n                isActive: false,\n                isComplete: hasAddress,\n                isEditable: hasAddress,\n                isRequired: true,\n            };\n        }\n\n        return {\n            type: CheckoutStepType.Billing,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete && !isUsingWallet,\n            isRequired: true,\n        };\n    },\n);\n\nconst getShippingStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getShippingAddress(),\n    ({ data }: CheckoutSelectors) => data.getConsignments(),\n    ({ data }: CheckoutSelectors) => data.getCart(),\n    ({ data }: CheckoutSelectors) => {\n        const shippingAddress = data.getShippingAddress();\n\n        return shippingAddress\n            ? data.getShippingAddressFields(shippingAddress.countryCode)\n            : EMPTY_ARRAY;\n    },\n    ({ data }: CheckoutSelectors) => data.getConfig(),\n    (shippingAddress, consignments, cart, shippingAddressFields, config) => {\n        const hasAddress = shippingAddress\n            ? isValidAddress(shippingAddress, shippingAddressFields)\n            : false;\n        const hasOptions = consignments ? hasSelectedShippingOptions(consignments) : false;\n        const hasUnassignedItems =\n            cart && consignments ? hasUnassignedLineItems(consignments, cart.lineItems) : true;\n        const isComplete = hasAddress && hasOptions && !hasUnassignedItems;\n        const isRequired = itemsRequireShipping(cart, config);\n        const isCustomShippingSelected =\n            isExperimentEnabled(\n                config?.checkoutSettings,\n                'PROJECT-5015.manual_order.display_custom_shipping',\n            ) &&\n            hasOptions &&\n            consignments?.some(\n                ({ selectedShippingOption }) => selectedShippingOption?.type === 'custom',\n            );\n\n        return {\n            type: CheckoutStepType.Shipping,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete && isRequired && !isCustomShippingSelected,\n            isRequired,\n        };\n    },\n);\n\nconst getPaymentStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getOrder(),\n    (order) => {\n        const isComplete = order ? order.isComplete : false;\n\n        return {\n            type: CheckoutStepType.Payment,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete,\n            isRequired: true,\n        };\n    },\n);\n\nconst getOrderSubmitStatus = createSelector(\n    ({ statuses }: CheckoutSelectors) => statuses.isSubmittingOrder(),\n    (status) => status,\n);\n\nconst getCheckoutStepStatuses = createSelector(\n    getCustomerStepStatus,\n    getShippingStepStatus,\n    getBillingStepStatus,\n    getPaymentStepStatus,\n    getOrderSubmitStatus,\n    (customerStep, shippingStep, billingStep, paymentStep, orderStatus) => {\n        const isSubmittingOrder = orderStatus;\n\n        const steps = compact([customerStep, shippingStep, billingStep, paymentStep]);\n\n        const defaultActiveStep =\n            steps.find((step) => !step.isComplete && step.isRequired) || steps[steps.length - 1];\n\n        return steps.map((step, index) => {\n            const isPrevStepComplete = steps\n                .slice(0, index)\n                .every((prevStep) => prevStep.isComplete || !prevStep.isRequired);\n\n            return {\n                ...step,\n                isActive: defaultActiveStep.type === step.type,\n                isBusy: false,\n                // A step is only editable if its previous step is complete or not required\n                isEditable: isPrevStepComplete && step.isEditable && !isSubmittingOrder,\n            };\n        });\n    },\n);\n\nexport default getCheckoutStepStatuses;\n","import {\n    type Address,\n    type Cart,\n    type CartChangedError,\n    type CheckoutParams,\n    type CheckoutSelectors,\n    type CheckoutStoreSelector,\n    type Consignment,\n    type EmbeddedCheckoutMessenger,\n    type EmbeddedCheckoutMessengerOptions,\n    ExtensionRegion,\n    type FlashMessage,\n    type PaymentMethod,\n    type Promotion,\n    type RequestOptions,\n} from '@bigcommerce/checkout-sdk/essential';\nimport classNames from 'classnames';\nimport { find, findIndex } from 'lodash';\nimport React, { Component, lazy, type ReactNode } from 'react';\n\nimport { Extension } from '@bigcommerce/checkout/checkout-extension';\nimport { type AnalyticsContextProps, type ExtensionContextProps, withExtension } from '@bigcommerce/checkout/contexts';\nimport { type ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { TranslatedString, withLanguage, type WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport {\n    AddressFormSkeleton,\n    CartSummarySkeleton,\n    ChecklistSkeleton,\n    LazyContainer,\n    LoadingNotification,\n    OrderConfirmationPageSkeleton\n} from '@bigcommerce/checkout/ui';\nimport { navigateToOrderConfirmation } from '@bigcommerce/checkout/utility';\n\nimport { withAnalytics } from '../analytics';\nimport { StaticBillingAddress } from '../billing';\nimport { EmptyCartMessage } from '../cart';\nimport { withCheckout } from '../checkout';\nimport { CustomError, ErrorModal, isCustomError, isErrorWithType } from '../common/error';\nimport { retry } from '../common/utility';\nimport {\n    CheckoutButtonContainer,\n    CheckoutSuggestion,\n    CustomerInfo,\n    type CustomerSignOutEvent,\n    CustomerViewType,\n} from '../customer';\nimport { getSupportedMethodIds } from '../customer/getSupportedMethods';\nimport { SubscribeSessionStorage } from '../customer/SubscribeSessionStorage';\nimport { type EmbeddedCheckoutStylesheet, isEmbedded } from '../embeddedCheckout';\nimport { PromotionBannerList } from '../promotion';\nimport { hasSelectedShippingOptions, isUsingMultiShipping, ShippingSummary } from '../shipping';\nimport { ShippingOptionExpiredError } from '../shipping/shippingOption';\nimport { MobileView } from '../ui/responsive';\n\nimport CheckoutStep from './CheckoutStep';\nimport type CheckoutStepStatus from './CheckoutStepStatus';\nimport CheckoutStepType from './CheckoutStepType';\nimport type CheckoutSupport from './CheckoutSupport';\nimport { mapCheckoutComponentErrorMessage } from './mapErrorMessage';\nimport mapToCheckoutProps from './mapToCheckoutProps';\n\nconst Billing = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"billing\" */\n                '../billing/Billing'\n                ),\n    ),\n);\n\nconst CartSummary = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"cart-summary\" */\n                '../cart/CartSummary'\n                ),\n    ),\n);\n\nconst CartSummaryDrawer = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"cart-summary-drawer\" */\n                '../cart/CartSummaryDrawer'\n                ),\n    ),\n);\n\nconst Payment = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"payment\" */\n                '../payment/Payment'\n                ),\n    ),\n);\n\nconst Shipping = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"shipping\" */\n                '../shipping/Shipping'\n                ),\n    ),\n);\n\nconst Customer = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"customer\" */\n                '../customer/Customer'\n                ),\n    ),\n);\n\nexport interface CheckoutProps {\n    checkoutId: string;\n    containerId: string;\n    data?: CheckoutStoreSelector;\n    embeddedStylesheet: EmbeddedCheckoutStylesheet;\n    embeddedSupport: CheckoutSupport;\n    errorLogger: ErrorLogger;\n    themeV2?:boolean;\n    createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\n}\n\nexport interface CheckoutState {\n    activeStepType?: CheckoutStepType;\n    isBillingSameAsShipping: boolean;\n    customerViewType?: CustomerViewType;\n    defaultStepType?: CheckoutStepType;\n    error?: Error;\n    flashMessages?: FlashMessage[];\n    isMultiShippingMode: boolean;\n    isCartEmpty: boolean;\n    isRedirecting: boolean;\n    hasSelectedShippingOptions: boolean;\n    isSubscribed: boolean;\n    buttonConfigs: PaymentMethod[];\n}\n\nexport interface WithCheckoutProps {\n    billingAddress?: Address;\n    cart?: Cart;\n    consignments?: Consignment[];\n    data: CheckoutStoreSelector;\n    error?: Error;\n    hasCartChanged: boolean;\n    flashMessages?: FlashMessage[];\n    isGuestEnabled: boolean;\n    isLoadingCheckout: boolean;\n    isPending: boolean;\n    isPriceHiddenFromGuests: boolean;\n    isShowingWalletButtonsOnTop: boolean;\n    isShippingDiscountDisplayEnabled: boolean;\n    loginUrl: string;\n    cartUrl: string;\n    createAccountUrl: string;\n    promotions?: Promotion[];\n    steps: CheckoutStepStatus[];\n    clearError(error?: Error): void;\n    loadCheckout(id: string, options?: RequestOptions<CheckoutParams>): Promise<CheckoutSelectors>;\n    loadPaymentMethodByIds(methodIds: string[]): Promise<CheckoutSelectors>;\n    subscribeToConsignments(subscriber: (state: CheckoutSelectors) => void): () => void;\n}\n\nclass Checkout extends Component<\n    CheckoutProps &\n    WithCheckoutProps &\n    WithLanguageProps &\n    AnalyticsContextProps &\n    ExtensionContextProps,\n    CheckoutState\n> {\n    state: CheckoutState = {\n        isBillingSameAsShipping: true,\n        isCartEmpty: false,\n        isRedirecting: false,\n        isMultiShippingMode: false,\n        hasSelectedShippingOptions: false,\n        isSubscribed: false,\n        buttonConfigs: [],\n    };\n\n    private embeddedMessenger?: EmbeddedCheckoutMessenger;\n    private unsubscribeFromConsignments?: () => void;\n\n    componentWillUnmount(): void {\n        if (this.unsubscribeFromConsignments) {\n            this.unsubscribeFromConsignments();\n            this.unsubscribeFromConsignments = undefined;\n        }\n\n        window.removeEventListener('beforeunload', this.handleBeforeExit);\n        this.handleBeforeExit();\n    }\n\n    async componentDidMount(): Promise<void> {\n        const {\n            analyticsTracker,\n            containerId,\n            createEmbeddedMessenger,\n            data,\n            embeddedStylesheet,\n            loadPaymentMethodByIds,\n            subscribeToConsignments,\n        } = this.props;\n\n        try {\n            const providers = data.getConfig()?.checkoutSettings?.remoteCheckoutProviders || [];\n\n            const supportedProviders = getSupportedMethodIds(providers);\n\n            if (providers.length > 0) {\n                const configs = await loadPaymentMethodByIds(supportedProviders);\n\n                this.setState({\n                    buttonConfigs: configs.data.getPaymentMethods() || [],\n                });\n            }\n\n            const { links: { siteLink = '' } = {} } = data.getConfig() || {};\n            const errorFlashMessages = data.getFlashMessages('error') || [];\n\n            if (errorFlashMessages.length) {\n                const { language } = this.props;\n\n                this.setState({\n                    error: new CustomError({\n                        title:\n                            errorFlashMessages[0].title ||\n                            language.translate('common.error_heading'),\n                        message: errorFlashMessages[0].message,\n                        data: {},\n                        name: 'default',\n                    }),\n                });\n            }\n\n            const messenger = createEmbeddedMessenger({ parentOrigin: siteLink });\n\n            this.unsubscribeFromConsignments = subscribeToConsignments(\n                this.handleConsignmentsUpdated,\n            );\n            this.embeddedMessenger = messenger;\n            messenger.receiveStyles((styles) => embeddedStylesheet.append(styles));\n            messenger.postFrameLoaded({ contentId: containerId });\n            messenger.postLoaded();\n\n            if (document.prerendering) {\n                document.addEventListener('prerenderingchange', () => {\n                    analyticsTracker.checkoutBegin();\n                }, { once: true });\n            }\n            else {\n                analyticsTracker.checkoutBegin();\n            }\n\n            const consignments = data.getConsignments();\n            const cart = data.getCart();\n\n            const hasMultiShippingEnabled =\n                data.getConfig()?.checkoutSettings.hasMultiShippingEnabled;\n            const checkoutBillingSameAsShippingEnabled =\n                data.getConfig()?.checkoutSettings.checkoutBillingSameAsShippingEnabled ?? true;\n            const defaultNewsletterSignupOption =\n                data.getConfig()?.shopperConfig.defaultNewsletterSignup ??\n                false;\n            const isMultiShippingMode =\n                !!cart &&\n                !!consignments &&\n                hasMultiShippingEnabled &&\n                isUsingMultiShipping(consignments, cart.lineItems);\n\n            this.setState({\n                isBillingSameAsShipping: checkoutBillingSameAsShippingEnabled,\n                isSubscribed: defaultNewsletterSignupOption,\n            });\n\n            if (isMultiShippingMode) {\n                this.setState({ isMultiShippingMode });\n            }\n\n            window.addEventListener('beforeunload', this.handleBeforeExit);\n\n            this.handleReady();\n        } catch (error) {\n            if (error instanceof Error) {\n                this.handleUnhandledError(error);\n            }\n        }\n    }\n\n    render(): ReactNode {\n        const { error, isRedirecting } = this.state;\n        const { themeV2, language } = this.props;\n\n        if(isRedirecting){\n            return <OrderConfirmationPageSkeleton />;\n        }\n\n        let errorModal = null;\n\n        if (error) {\n            if (isCustomError(error)) {\n                errorModal = (\n                    <ErrorModal\n                        error={error}\n                        onClose={this.handleCloseErrorModal}\n                        title={error.title}\n                    />\n                );\n            } else {\n                const { message, action } = mapCheckoutComponentErrorMessage(error, language.translate.bind(language));\n\n                errorModal = <ErrorModal\n                        error={error}\n                        message={message}\n                        onClose={action === 'reload' ? this.reloadWindow : this.handleCloseErrorModal}\n                    />;\n            }\n        }\n\n        return (\n            <div className={classNames('remove-checkout-step-numbers', { 'is-embedded': isEmbedded() }, { 'themeV2': themeV2 })} data-test=\"checkout-page-container\" id=\"checkout-page-container\">\n                <div className=\"layout optimizedCheckout-contentPrimary\">\n                    {this.renderContent()}\n                </div>\n                {errorModal}\n            </div>\n        );\n    }\n\n    private renderContent(): ReactNode {\n        const { isPending, loginUrl, promotions = [], steps, isShowingWalletButtonsOnTop, extensionState } = this.props;\n\n        const { activeStepType, defaultStepType, isCartEmpty } = this.state;\n\n        if (isCartEmpty) {\n            return <EmptyCartMessage loginUrl={loginUrl} waitInterval={3000} />;\n        }\n\n        const isPaymentStepActive = activeStepType\n            ? activeStepType === CheckoutStepType.Payment\n            : defaultStepType === CheckoutStepType.Payment;\n\n        return (\n            <>\n                <div className=\"layout-main\">\n                    <LoadingNotification isLoading={extensionState.isShowingLoadingIndicator} />\n\n                    {/* <Extension region={ExtensionRegion.GlobalWebWorker} /> */}\n                    <PromotionBannerList promotions={promotions} />\n\n                    {isShowingWalletButtonsOnTop && this.state.buttonConfigs?.length > 0 && (\n                        <CheckoutButtonContainer\n                            checkEmbeddedSupport={this.checkEmbeddedSupport}\n                            isPaymentStepActive={isPaymentStepActive}\n                            onUnhandledError={this.handleUnhandledError}\n                            onWalletButtonClick={this.handleWalletButtonClick}\n                        />\n                    )}\n\n                    <ol className=\"checkout-steps\">\n                        {steps\n                            .filter((step) => step.isRequired)\n                            .map((step) =>\n                                this.renderStep({\n                                    ...step,\n                                    isActive: activeStepType\n                                        ? activeStepType === step.type\n                                        : defaultStepType === step.type,\n                                    isBusy: isPending,\n                                }),\n                            )}\n                    </ol>\n                </div>\n                {this.renderCartSummary()}\n            </>\n        );\n    }\n\n    private renderStep(step: CheckoutStepStatus): ReactNode {\n        switch (step.type) {\n            case CheckoutStepType.Customer:\n                return this.renderCustomerStep(step);\n\n            case CheckoutStepType.Shipping:\n                return this.renderShippingStep(step);\n\n            case CheckoutStepType.Billing:\n                return this.renderBillingStep(step);\n\n            case CheckoutStepType.Payment:\n                return this.renderPaymentStep(step);\n\n            default:\n                return null;\n        }\n    }\n\n    private renderCustomerStep(step: CheckoutStepStatus): ReactNode {\n        const { isGuestEnabled, isShowingWalletButtonsOnTop } = this.props;\n        const {\n            customerViewType = isGuestEnabled ? CustomerViewType.Guest : CustomerViewType.Login,\n            isSubscribed,\n        } = this.state;\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"customer.customer_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n                suggestion={<CheckoutSuggestion />}\n                summary={\n                    <CustomerInfo\n                        onSignOut={this.handleSignOut}\n                        onSignOutError={this.handleError}\n                    />\n                }\n            >\n                <LazyContainer>\n                    <Customer\n                        checkEmbeddedSupport={this.checkEmbeddedSupport}\n                        isEmbedded={isEmbedded()}\n                        isSubscribed={isSubscribed}\n                        isWalletButtonsOnTop = {isShowingWalletButtonsOnTop }\n                        onAccountCreated={this.navigateToNextIncompleteStep}\n                        onChangeViewType={this.setCustomerViewType}\n                        onContinueAsGuest={this.navigateToNextIncompleteStep}\n                        onContinueAsGuestError={this.handleError}\n                        onReady={this.handleReady}\n                        onSignIn={this.navigateToNextIncompleteStep}\n                        onSignInError={this.handleError}\n                        onSubscribeToNewsletter={this.handleNewsletterSubscription}\n                        onUnhandledError={this.handleUnhandledError}\n                        onWalletButtonClick={this.handleWalletButtonClick}\n                        step={step}\n                        viewType={customerViewType}\n                    />\n                </LazyContainer>\n            </CheckoutStep>\n        );\n    }\n\n    private renderShippingStep(step: CheckoutStepStatus): ReactNode {\n        const { hasCartChanged, cart, consignments = [], isShippingDiscountDisplayEnabled } = this.props;\n        const { isBillingSameAsShipping, isMultiShippingMode } = this.state;\n\n        if (!cart) {\n            return;\n        }\n\n        const setIsMultishippingMode = (value: boolean) => {\n            this.setState({ isMultiShippingMode: value });\n        }\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"shipping.shipping_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n                summary={<ShippingSummary cart={cart} consignments={consignments} isMultiShippingMode={isMultiShippingMode} isShippingDiscountDisplayEnabled={isShippingDiscountDisplayEnabled}/>}\n            >\n                <LazyContainer loadingSkeleton={<AddressFormSkeleton />}>\n                    <Shipping\n                        cartHasChanged={hasCartChanged}\n                        isBillingSameAsShipping={isBillingSameAsShipping}\n                        isMultiShippingMode={isMultiShippingMode}\n                        navigateNextStep={this.handleShippingNextStep}\n                        onCreateAccount={this.handleShippingCreateAccount}\n                        onReady={this.handleReady}\n                        onSignIn={this.handleShippingSignIn}\n                        onToggleMultiShipping={this.handleToggleMultiShipping}\n                        onUnhandledError={this.handleUnhandledError}\n                        setIsMultishippingMode={setIsMultishippingMode}\n                        step={step}\n                    />\n                </LazyContainer>\n            </CheckoutStep>\n        );\n    }\n\n    private renderBillingStep(step: CheckoutStepStatus): ReactNode {\n        const { billingAddress } = this.props;\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"billing.billing_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n                summary={billingAddress && <StaticBillingAddress address={billingAddress} />}\n            >\n                <LazyContainer loadingSkeleton={<AddressFormSkeleton />}>\n                    <Billing\n                        navigateNextStep={this.navigateToNextIncompleteStep}\n                        onReady={this.handleReady}\n                        onUnhandledError={this.handleUnhandledError}\n                    />\n                </LazyContainer>\n            </CheckoutStep>\n        );\n    }\n\n    private renderPaymentStep(step: CheckoutStepStatus): ReactNode {\n        const { consignments, cart, errorLogger } = this.props;\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"payment.payment_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n            >\n                <LazyContainer loadingSkeleton={<ChecklistSkeleton />}>\n                    <Payment\n                        checkEmbeddedSupport={this.checkEmbeddedSupport}\n                        errorLogger={errorLogger}\n                        isEmbedded={isEmbedded()}\n                        isUsingMultiShipping={\n                            cart && consignments\n                                ? isUsingMultiShipping(consignments, cart.lineItems)\n                                : false\n                        }\n                        onCartChangedError={this.handleCartChangedError}\n                        onFinalize={this.navigateToOrderConfirmation}\n                        onReady={this.handleReady}\n                        onSubmit={this.navigateToOrderConfirmation}\n                        onSubmitError={this.handleError}\n                        onUnhandledError={this.handleUnhandledError}\n                    />\n                </LazyContainer>\n            </CheckoutStep>\n        );\n    }\n\n    private renderCartSummary(): ReactNode {\n        const { isMultiShippingMode } = this.state;\n\n        return (\n            <MobileView>\n                {(matched) => {\n                    if (matched) {\n                        return (\n                            <LazyContainer loadingSkeleton={<></>}>\n                                <Extension region={ExtensionRegion.SummaryAfter} />\n                                <CartSummaryDrawer isMultiShippingMode={isMultiShippingMode} />\n                            </LazyContainer>\n                        );\n                    }\n\n                    return (\n                        <LazyContainer loadingSkeleton={<CartSummarySkeleton />}>\n                            <aside className=\"layout-cart\">\n                                    <CartSummary isMultiShippingMode={isMultiShippingMode} />\n                                    <Extension region={ExtensionRegion.SummaryAfter} />\n                            </aside>\n                        </LazyContainer>\n                    );\n                }}\n            </MobileView>\n        );\n    }\n\n    private navigateToStep(type: CheckoutStepType, options?: { isDefault?: boolean }): void {\n        const { clearError, error, steps } = this.props;\n        const { activeStepType } = this.state;\n        const step = find(steps, { type });\n\n        if (!step) {\n            return;\n        }\n\n        if (activeStepType === step.type) {\n            return;\n        }\n\n        if (options && options.isDefault) {\n            this.setState({ defaultStepType: step.type });\n        } else {\n            // TODO: setting activeStepType here is causing significant delay in rendering guest shopper form\n            // When converting functional component, we should set activeStepType before rendering <CheckoutPage />\n            this.setState({ activeStepType: step.type });\n        }\n\n        if (error) {\n            clearError(error);\n        }\n    }\n\n    private handleToggleMultiShipping: () => void = () => {\n        const { isMultiShippingMode } = this.state;\n\n        this.setState({ isMultiShippingMode: !isMultiShippingMode });\n    };\n\n    private navigateToNextIncompleteStep: (options?: { isDefault?: boolean }) => void = (\n        options,\n    ) => {\n        const { steps, analyticsTracker } = this.props;\n        const activeStepIndex = findIndex(steps, { isActive: true });\n        const activeStep = activeStepIndex >= 0 && steps[activeStepIndex];\n\n        if (!activeStep) {\n            return;\n        }\n\n        const previousStep = steps[Math.max(activeStepIndex - 1, 0)];\n\n        if (previousStep) {\n            analyticsTracker.trackStepCompleted(previousStep.type);\n        }\n\n        this.navigateToStep(activeStep.type, options);\n    };\n\n    private navigateToOrderConfirmation: (orderId?: number) => void = (orderId) => {\n        const { steps, analyticsTracker } = this.props;\n\n        analyticsTracker.trackStepCompleted(steps[steps.length - 1].type);\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postComplete();\n        }\n\n        SubscribeSessionStorage.removeSubscribeStatus();\n\n        this.setState({ isRedirecting: true }, () => {\n            navigateToOrderConfirmation(orderId);\n        });\n    };\n\n    private checkEmbeddedSupport: (methodIds: string[]) => boolean = (methodIds) => {\n        const { embeddedSupport } = this.props;\n\n        return embeddedSupport.isSupported(...methodIds);\n    };\n\n    private handleCartChangedError: (error: CartChangedError) => void = () => {\n        this.navigateToStep(CheckoutStepType.Shipping);\n    };\n\n    private handleConsignmentsUpdated: (state: CheckoutSelectors) => void = ({ data }) => {\n        const { hasSelectedShippingOptions: prevHasSelectedShippingOptions, activeStepType, defaultStepType } =\n            this.state;\n\n        const { steps } = this.props;\n\n        const newHasSelectedShippingOptions = hasSelectedShippingOptions(\n            data.getConsignments() || [],\n        );\n\n        const isDefaultStepPaymentOrBilling =\n            !activeStepType &&\n            (defaultStepType === CheckoutStepType.Payment ||\n                defaultStepType === CheckoutStepType.Billing);\n\n        const isShippingStepFinished =\n            findIndex(steps, { type: CheckoutStepType.Shipping }) <\n            findIndex(steps, { type: activeStepType }) || isDefaultStepPaymentOrBilling;\n\n        if (\n            prevHasSelectedShippingOptions &&\n            !newHasSelectedShippingOptions &&\n            isShippingStepFinished\n        ) {\n            this.navigateToStep(CheckoutStepType.Shipping);\n            this.setState({ error: new ShippingOptionExpiredError() });\n        }\n\n        this.setState({ hasSelectedShippingOptions: newHasSelectedShippingOptions });\n    };\n\n    private handleCloseErrorModal: () => void = () => {\n        this.setState({ error: undefined });\n    };\n\n    private handleExpanded: (type: CheckoutStepType) => void = (type) => {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.trackStepViewed(type);\n    };\n\n    private handleUnhandledError: (error: Error) => void = (error) => {\n        this.handleError(error);\n\n        // For errors that are not caught and handled by child components, we\n        // handle them here by displaying a generic error modal to the shopper.\n        this.setState({ error });\n    };\n\n    private handleError: (error: Error) => void = (error) => {\n        const { errorLogger } = this.props;\n\n        if (isErrorWithType(error) && error.type === 'empty_cart') {\n            this.setState({ error });\n\n            return;\n        }\n\n        errorLogger.log(error);\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postError(error);\n        }\n    };\n\n    private handleEditStep: (type: CheckoutStepType) => void = (type) => {\n        this.navigateToStep(type);\n    };\n\n    private handleReady: () => void = () => {\n        this.navigateToNextIncompleteStep({ isDefault: true });\n    };\n\n    private handleNewsletterSubscription: (subscribed: boolean) => void = (subscribed) => {\n        this.setState({ isSubscribed: subscribed });\n    }\n\n    private handleSignOut: (event: CustomerSignOutEvent) => void = ({ isCartEmpty }) => {\n        const { loginUrl, cartUrl, isPriceHiddenFromGuests, isGuestEnabled } = this.props;\n\n        if (isPriceHiddenFromGuests) {\n            if (window.top) {\n                return (window.top.location.href = cartUrl);\n            }\n        }\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postSignedOut();\n        }\n\n        if (isGuestEnabled) {\n            this.setCustomerViewType(CustomerViewType.Guest);\n        }\n\n        if (isCartEmpty) {\n            this.setState({ isCartEmpty: true });\n\n            if (!isEmbedded()) {\n                if (window.top) {\n                    return window.top.location.assign(loginUrl);\n                }\n            }\n        }\n\n        this.navigateToStep(CheckoutStepType.Customer);\n    };\n\n    private handleShippingNextStep: (isBillingSameAsShipping: boolean) => void = (\n        isBillingSameAsShipping,\n    ) => {\n        this.setState({ isBillingSameAsShipping });\n\n        if (isBillingSameAsShipping) {\n            this.navigateToNextIncompleteStep();\n        } else {\n            this.navigateToStep(CheckoutStepType.Billing);\n        }\n    };\n\n    private handleShippingSignIn: () => void = () => {\n        this.setCustomerViewType(CustomerViewType.Login);\n    };\n\n    private handleShippingCreateAccount: () => void = () => {\n        this.setCustomerViewType(CustomerViewType.CreateAccount);\n    };\n\n    private setCustomerViewType: (viewType: CustomerViewType) => void = (customerViewType) => {\n        const { createAccountUrl } = this.props;\n\n        if (customerViewType === CustomerViewType.CreateAccount && isEmbedded()) {\n            if (window.top) {\n                window.top.location.replace(createAccountUrl);\n            }\n\n            return;\n        }\n\n        this.navigateToStep(CheckoutStepType.Customer);\n        this.setState({ customerViewType });\n    };\n\n    private handleBeforeExit: () => void = () => {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.exitCheckout();\n    }\n\n    private handleWalletButtonClick: (methodName: string) => void = (methodName) => {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.walletButtonClick(methodName);\n    }\n\n    private reloadWindow: () => void = () => {\n        this.setState({ error: undefined });\n        window.location.reload();\n    }\n}\n\nexport default withExtension(\n    withAnalytics(withLanguage(withCheckout(mapToCheckoutProps)(Checkout))),\n);\n","import { type TranslationData } from '@bigcommerce/checkout-sdk';\n\nexport function mapCheckoutComponentErrorMessage(\n    error: any,\n    translate: (key: string, data?: TranslationData) => string,\n): { message: string, action: string } {\n    switch (error.type) {\n        case 'empty_cart':\n            return {\n                message: translate('cart.empty_cart_error_message'),\n                action: 'reload'\n            };\n\n        default:\n            return {\n                message: error.message,\n                action: 'default'\n            };\n    }\n}\n","import { type CheckoutSelectors, type CustomError } from '@bigcommerce/checkout-sdk';\nimport { createSelector } from 'reselect';\n\nimport { type CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { EMPTY_ARRAY, isExperimentEnabled } from '../common/utility';\n\nimport { type WithCheckoutProps } from './Checkout';\nimport getCheckoutStepStatuses from './getCheckoutStepStatuses';\n\nexport default function mapToCheckoutProps({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutProps {\n    const { data, errors, statuses } = checkoutState;\n    const { promotions = EMPTY_ARRAY } = data.getCheckout() || {};\n    const submitOrderError = errors.getSubmitOrderError() as CustomError;\n    const {\n        checkoutSettings: {\n            guestCheckoutEnabled: isGuestEnabled = false,\n            checkoutUserExperienceSettings = {\n                walletButtonsOnTop: false,\n                floatingLabelEnabled: false,\n            },\n        } = {},\n        links: {\n            loginLink: loginUrl = '',\n            createAccountLink: createAccountUrl = '',\n            cartLink: cartUrl = '',\n        } = {},\n        displaySettings: { hidePriceFromGuests: isPriceHiddenFromGuests = false } = {},\n    } = data.getConfig() || {};\n\n    const subscribeToConsignmentsSelector = createSelector(\n        ({ checkoutService: { subscribe } }: CheckoutContextProps) => subscribe,\n        (subscribe) => (subscriber: (state: CheckoutSelectors) => void) => {\n            return subscribe(subscriber, ({ data: { getConsignments } }) => getConsignments());\n        },\n    );\n\n    const walletButtonsOnTopFlag = Boolean(checkoutUserExperienceSettings.walletButtonsOnTop);\n    const isShippingDiscountDisplayEnabled = isExperimentEnabled(\n        data.getConfig()?.checkoutSettings,\n        'PROJECT-6643.enable_shipping_discounts_in_orders',\n    );\n\n    return {\n        billingAddress: data.getBillingAddress(),\n        cart: data.getCart(),\n        clearError: checkoutService.clearError,\n        data,\n        consignments: data.getConsignments(),\n        hasCartChanged: submitOrderError && submitOrderError.type === 'cart_changed', // TODO: Need to clear the error once it's displayed\n        isGuestEnabled,\n        isLoadingCheckout: statuses.isLoadingCheckout(),\n        isShippingDiscountDisplayEnabled,\n        isPending: statuses.isPending(),\n        isPriceHiddenFromGuests,\n        isShowingWalletButtonsOnTop: walletButtonsOnTopFlag,\n        loadCheckout: checkoutService.loadCheckout,\n        loadPaymentMethodByIds: checkoutService.loadPaymentMethodByIds,\n        loginUrl,\n        cartUrl,\n        createAccountUrl,\n        promotions,\n        subscribeToConsignments: subscribeToConsignmentsSelector({\n            checkoutService,\n            checkoutState,\n        }),\n        steps: getCheckoutStepStatuses(checkoutState),\n    };\n}\n","import { type CheckoutInitialState } from '@bigcommerce/checkout-sdk';\nimport { useEffect, useState } from 'react';\n\nimport { useExtensions } from '@bigcommerce/checkout/contexts';\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { yieldToMain } from '../../common/utility';\n\nexport const useLoadCheckout = (checkoutId: string, initialState?: CheckoutInitialState): {isLoadingCheckout: boolean} => {\n    const { checkoutService, checkoutState: { data } } = useCheckout();\n    const [ isLoadingCheckout, setIsLoadingCheckout ] = useState(!data.getCheckout());\n    const { extensionService } = useExtensions();\n\n    const fetchData = async () => {\n        await Promise.all([\n            checkoutService.loadCheckout(checkoutId, {\n                params: {\n                    include: [\n                        'cart.lineItems.physicalItems.categoryNames',\n                        'cart.lineItems.digitalItems.categoryNames',\n                    ] as any, // FIXME: Currently the enum is not exported so it can't be used here.\n                },\n            }),\n            extensionService.loadExtensions(),\n        ]);\n    };\n\n    const fetchDataWithRetry = async (maxRetries = 3): Promise<void> => {\n        const attemptFetch = async (attemptSequence = 1): Promise<void> => {\n            try {\n                await fetchData();\n            } catch {\n                if (attemptSequence >= maxRetries) {\n                    throw new Error('Failed to load checkout after 3 attempts, please try again.');\n                }\n\n                const delay = attemptSequence ** 2 * 1000;\n\n                await new Promise(resolve => setTimeout(resolve, delay));\n\n                await attemptFetch(attemptSequence + 1);\n            }\n        };\n\n        await attemptFetch();\n    };\n\n    const hydrateInitialState = async (initialState: CheckoutInitialState) => {\n        await yieldToMain();\n        await checkoutService.hydrateInitialState(initialState);\n        setIsLoadingCheckout(false);\n    }\n\n    useEffect(() => {\n        if (!isLoadingCheckout) {\n            return;\n        }\n\n        if (!initialState) {\n            // If the initial data has not been preloaded from the server, we need to make API calls to fetch it.\n            fetchDataWithRetry()\n                .then(() => setIsLoadingCheckout(false))\n                .catch((error) => {\n                    throw error;\n                });\n        } else {\n            hydrateInitialState(initialState);\n        }\n    }, []);\n\n    return { isLoadingCheckout };\n};\n","export function yieldToMain () {\n    if (window.scheduler?.yield) {\n        return window.scheduler.yield();\n    }\n\n    return new Promise(resolve => {\n        setTimeout(resolve, 0);\n    });\n}\n","import CheckoutInitializer from './CheckoutInitializer';\n\nexport default CheckoutInitializer;\nexport { CheckoutProps, CheckoutState, WithCheckoutProps } from './CheckoutPage';\n","import {\n    type CheckoutInitialState,\n    type EmbeddedCheckoutMessenger,\n    type EmbeddedCheckoutMessengerOptions\n} from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { useThemeContext } from '@bigcommerce/checkout/contexts';\nimport { type ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { CheckoutPageSkeleton } from '@bigcommerce/checkout/ui';\n\nimport { type EmbeddedCheckoutStylesheet } from '../embeddedCheckout';\n\nimport CheckoutPage from './CheckoutPage';\nimport type CheckoutSupport from './CheckoutSupport';\nimport { useLoadCheckout } from './hooks';\n\nexport interface CheckoutInitializerProps {\n    checkoutId: string;\n    containerId: string;\n    embeddedStylesheet: EmbeddedCheckoutStylesheet;\n    embeddedSupport: CheckoutSupport;\n    errorLogger: ErrorLogger;\n    initialState?: CheckoutInitialState;\n    createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\n}\n\nconst CheckoutInitializer:React.FC<CheckoutInitializerProps>= (props) => {\n    const { checkoutId, initialState } = props;\n    const { isLoadingCheckout } = useLoadCheckout(checkoutId, initialState);\n    const { themeV2 } = useThemeContext();\n\n    if (isLoadingCheckout) {\n        return <CheckoutPageSkeleton />;\n    }\n\n    return <CheckoutPage\n            {...props}\n            createEmbeddedMessenger={props.createEmbeddedMessenger}\n            embeddedStylesheet={props.embeddedStylesheet}\n            embeddedSupport={props.embeddedSupport}\n            errorLogger={props.errorLogger}\n            themeV2={themeV2}\n        />;\n};\n\nexport default CheckoutInitializer;\n","import { type CheckoutInitialState, createCheckoutService, createEmbeddedCheckoutMessenger } from '@bigcommerce/checkout-sdk/essential';\nimport type { BrowserOptions } from '@sentry/browser';\nimport React, { type ReactElement, useEffect, useMemo } from 'react';\nimport ReactModal from 'react-modal';\n\nimport { ExtensionService } from '@bigcommerce/checkout/checkout-extension';\nimport { AnalyticsProvider, ExtensionProvider, ThemeProvider } from '@bigcommerce/checkout/contexts';\nimport { ErrorBoundary } from '@bigcommerce/checkout/error-handling-utils';\nimport { getLanguageService, LocaleProvider } from '@bigcommerce/checkout/locale';\nimport { CheckoutProvider } from '@bigcommerce/checkout/payment-integration-api';\n\nimport '../../scss/App.scss';\n\nimport { createErrorLogger } from '../common/error';\nimport {\n    createEmbeddedCheckoutStylesheet,\n    createEmbeddedCheckoutSupport,\n} from '../embeddedCheckout';\n\nimport Checkout from './Checkout';\n\nexport interface CheckoutAppProps {\n    checkoutId: string;\n    containerId: string;\n    initialState?: CheckoutInitialState;\n    publicPath?: string;\n    sentryConfig?: BrowserOptions;\n    sentrySampleRate?: number;\n}\n\nconst CheckoutApp = (props: CheckoutAppProps): ReactElement => {\n    const { containerId, sentryConfig, publicPath, sentrySampleRate } = props;\n\n    const errorLogger = useMemo(() => createErrorLogger(\n        { sentry: sentryConfig },\n        {\n            errorTypes: ['UnrecoverableError'],\n            publicPath,\n            sampleRate: sentrySampleRate || 0.1,\n        },\n    ), []);\n    const checkoutService = useMemo(() => createCheckoutService({\n        locale: getLanguageService().getLocale(),\n        shouldWarnMutation: process.env.NODE_ENV === 'development',\n        errorLogger,\n    }), []);\n    const extensionService = useMemo(() => new ExtensionService(checkoutService, errorLogger), []);\n    const embeddedStylesheet = useMemo(() => createEmbeddedCheckoutStylesheet(), []);\n    const embeddedSupport = useMemo(() => createEmbeddedCheckoutSupport(getLanguageService()), []);\n\n    useEffect(() => {\n        ReactModal.setAppElement(`#${containerId}`);\n    }, []);\n\n    return (\n        <ErrorBoundary errorLogger={errorLogger}>\n            <LocaleProvider checkoutService={checkoutService}>\n                <CheckoutProvider checkoutService={checkoutService} errorLogger={errorLogger}>\n                    <AnalyticsProvider checkoutService={checkoutService}>\n                        <ExtensionProvider extensionService={extensionService}>\n                            <ThemeProvider>\n                                <Checkout\n                                    {...props}\n                                    createEmbeddedMessenger={createEmbeddedCheckoutMessenger}\n                                    embeddedStylesheet={embeddedStylesheet}\n                                    embeddedSupport={embeddedSupport}\n                                    errorLogger={errorLogger}\n                                />\n                            </ThemeProvider>\n                        </ExtensionProvider>\n                    </AnalyticsProvider>\n                </CheckoutProvider>\n            </LocaleProvider>\n        </ErrorBoundary>\n    );\n};\n\nexport default CheckoutApp;\n","export class SubscribeSessionStorage {\n    static key = 'shouldSubscribe';\n\n    static setSubscribeStatus(shouldSubscribe: boolean) {\n        sessionStorage.setItem(this.key, `${shouldSubscribe}`)\n    }\n\n    static getSubscribeStatus(): boolean {\n        const value = sessionStorage.getItem(this.key);\n\n        return value === 'true';\n    }\n\n    static removeSubscribeStatus() {\n        sessionStorage.removeItem(this.key);\n    }\n}\n","import classNames from 'classnames';\nimport React, { type FunctionComponent } from 'react';\n\nexport interface LegendProps extends React.HTMLAttributes<HTMLLegendElement> {\n    hidden?: boolean;\n    testId?: string;\n    themeV2?: boolean;\n}\n\nconst Legend: FunctionComponent<LegendProps> = ({\n    children,\n    className,\n    hidden,\n    testId,\n    themeV2 = false,\n    ...rest\n}) => (\n    <legend\n        {...rest}\n        className={classNames(\n            className || 'form-legend',\n            { 'is-srOnly': hidden },\n            { 'optimizedCheckout-headingSecondary': !hidden },\n            { 'sub-header': themeV2 && !hidden },\n        )}\n        data-test={testId}\n    >\n        {children}\n    </legend>\n);\n\nexport default Legend;\n","import classNames from 'classnames';\nimport React, { type ComponentType, memo } from 'react';\n\nexport enum IconSize {\n    Regular = 'regular',\n    Small = 'small',\n    Medium = 'medium',\n    Large = 'large',\n}\n\nexport interface IconProps {\n    additionalClassName?: string;\n    size?: IconSize;\n    testId?: string;\n}\n\nexport default function withIconContainer<TProps extends Record<string, any>>(\n    OriginalComponent: ComponentType<TProps>,\n): ComponentType<TProps & IconProps> {\n    return memo(({ additionalClassName, size, testId, ...rest }) => (\n        <div\n            className={classNames(\n                'icon',\n                additionalClassName,\n                size === IconSize.Small ? 'icon--small' : null,\n                size === IconSize.Large ? 'icon--large' : null,\n                size === IconSize.Medium ? 'icon--medium' : null,\n            )}\n            data-test={testId}\n        >\n            <OriginalComponent {...(rest as TProps)} />\n        </div>\n    ));\n}\n","import React, {\n    type ComponentType,\n    type Context,\n    type FunctionComponent,\n    memo,\n    useContext,\n    useMemo,\n} from 'react';\nimport { type Omit } from 'utility-types';\n\nimport { type MatchedProps } from './InjectHoc';\nimport type { MappableInjectHoc, MapToProps, MapToPropsFactory } from './MappableInjectHoc';\n\nfunction isMapToPropsFactory<TContextProps, TMappedProps, TOwnProps>(\n    mapToProps:\n        | MapToProps<TContextProps, TMappedProps, TOwnProps>\n        | MapToPropsFactory<TContextProps, TMappedProps, TOwnProps>,\n): mapToProps is MapToPropsFactory<TContextProps, TMappedProps, TOwnProps> {\n    return mapToProps.length === 0;\n}\n\nexport default function createMappableInjectHoc<TContextProps>(\n    ContextComponent: Context<TContextProps>,\n    options?: { displayNamePrefix?: string },\n): MappableInjectHoc<NonNullable<TContextProps>> {\n    return <TMappedProps, TOwnProps>(\n        mapToPropsOrFactory:\n            | MapToProps<NonNullable<TContextProps>, TMappedProps, TOwnProps>\n            | MapToPropsFactory<NonNullable<TContextProps>, TMappedProps, TOwnProps>,\n    ) => {\n        return <TProps extends MatchedProps<TMappedProps, TProps>>(\n            OriginalComponent: ComponentType<TProps>,\n        ) => {\n            const InnerDecoratedComponent: FunctionComponent<TProps> = memo((props) => (\n                <OriginalComponent {...props} />\n            ));\n\n            const DecoratedComponent: FunctionComponent<Omit<TProps, keyof TMappedProps>> = (\n                props,\n            ) => {\n                const context = useContext(ContextComponent);\n\n                const mapToProps = useMemo(\n                    () =>\n                        isMapToPropsFactory(mapToPropsOrFactory)\n                            ? mapToPropsOrFactory()\n                            : mapToPropsOrFactory,\n                    [],\n                );\n\n                const mappedProps = context\n                    ? mapToProps(context, props as unknown as TOwnProps)\n                    : context;\n\n                if (!mappedProps) {\n                    return null;\n                }\n\n                const mergedProps = { ...mappedProps, ...props } as unknown as TProps;\n\n                return <InnerDecoratedComponent {...mergedProps} />;\n            };\n\n            if (options && options.displayNamePrefix && OriginalComponent) {\n                DecoratedComponent.displayName = `${options.displayNamePrefix}(${\n                    OriginalComponent.displayName || OriginalComponent.name\n                })`;\n            }\n\n            return DecoratedComponent;\n        };\n    };\n}\n","import { createMappableInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\nimport { CheckoutContext, type CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nexport type WithCheckoutProps = CheckoutContextProps;\n\nconst withCheckout = createMappableInjectHoc(CheckoutContext, {\n    displayNamePrefix: 'WithCheckout',\n});\n\nexport default withCheckout;\n","import { type ReactNode, useState } from 'react';\n\nexport interface ToggleProps {\n    openByDefault?: boolean;\n    children: (props: { toggle: any; isOpen: boolean }) => ReactNode;\n}\n\nconst Toggle = ({ openByDefault, children }: ToggleProps): ReactNode => {\n    const [isOpen, setIsOpen] = useState(Boolean(openByDefault));\n\n    const toggle = (event: Event) => {\n        event.preventDefault();\n        setIsOpen(!isOpen);\n    };\n\n    return children({ isOpen, toggle });\n};\n\nexport default Toggle;\n","import { useContext, useMemo } from 'react';\n\nimport AnalyticsContext from './AnalyticsContext';\n\nconst useAnalytics = () => {\n    const analyticsContext = useContext(AnalyticsContext);\n\n    if (!analyticsContext) {\n        throw new Error('useAnalytics must be used within an <AnalyticsProvider>');\n    }\n\n    return useMemo(\n        () => ({\n            analyticsTracker: analyticsContext.analyticsTracker,\n        }),\n        [analyticsContext],\n    );\n};\n\nexport default useAnalytics;\n","import classNames from 'classnames';\nimport React, { type ButtonHTMLAttributes, type FunctionComponent } from 'react';\n\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n    isFullWidth?: boolean;\n    isLoading?: boolean;\n    size?: ButtonSize;\n    testId?: string;\n    variant?: ButtonVariant;\n}\n\nexport enum ButtonVariant {\n    Primary = 'primary',\n    Secondary = 'secondary',\n    Action = 'action',\n}\n\nexport enum ButtonSize {\n    Small = 'small',\n    Tiny = 'tiny',\n    Large = 'large',\n}\n\nfunction getClassName(\n    props: Pick<ButtonProps, 'className' | 'isFullWidth' | 'isLoading' | 'size' | 'variant'>,\n) {\n    const { className, isFullWidth, isLoading, size, variant } = props;\n\n    return classNames(\n        'button',\n        className,\n        { 'button--primary': variant === ButtonVariant.Primary },\n        { 'button--tertiary': variant === ButtonVariant.Secondary },\n        { 'button--action': variant === ButtonVariant.Action },\n        { 'button--small': size === ButtonSize.Small },\n        { 'button--tiny': size === ButtonSize.Tiny },\n        { 'button--large': size === ButtonSize.Large },\n        { 'button--slab': isFullWidth },\n        {\n            'optimizedCheckout-buttonPrimary':\n                variant === ButtonVariant.Primary || variant === ButtonVariant.Action,\n        },\n        { 'optimizedCheckout-buttonSecondary': variant === ButtonVariant.Secondary },\n        { 'is-loading': isLoading },\n    );\n}\n\nconst Button: FunctionComponent<ButtonProps> = ({\n    children,\n    className,\n    disabled,\n    isFullWidth,\n    isLoading,\n    size,\n    testId,\n    type,\n    variant,\n    ...rest\n}) => (\n    <button\n        {...rest}\n        className={getClassName({ className, isFullWidth, isLoading, size, variant })}\n        data-test={testId}\n        disabled={disabled || isLoading}\n        type={type || 'button'}\n    >\n        {children}\n    </button>\n);\n\nexport default Button;\n","import {\n    type Address,\n    type AddressRequestBody,\n    type BillingAddress,\n    type CustomerAddress,\n} from '@bigcommerce/checkout-sdk';\nimport { isEqual, omit } from 'lodash';\n\ntype ComparableAddress = CustomerAddress | Address | BillingAddress | AddressRequestBody;\ntype ComparableAddressFields = keyof CustomerAddress | keyof Address | keyof BillingAddress;\n\nconst normalizeAddress = (address: Partial<ComparableAddress>) => {\n    const ignoredFields: ComparableAddressFields[] = [\n        'id',\n        'shouldSaveAddress',\n        'stateOrProvince',\n        'type',\n        'email',\n        'country',\n        'customFields',\n    ];\n\n    return omit(address, ignoredFields);\n};\n\nconst isEqualToPayPalFastlaneAddress = (\n    bcAddress: Partial<ComparableAddress>,\n    paypalFastlaneAddress: Partial<ComparableAddress>,\n): boolean => isEqual(normalizeAddress(bcAddress), normalizeAddress(paypalFastlaneAddress));\n\nconst isPayPalFastlaneAddress = (address: Address, addresses?: Address[]): boolean => {\n    if (!addresses || addresses.length === 0) {\n        return false;\n    }\n\n    return addresses.some((paypalFastlaneAddress) =>\n        isEqualToPayPalFastlaneAddress(address, paypalFastlaneAddress),\n    );\n};\n\nexport default isPayPalFastlaneAddress;\n","export default function getNestedValue(obj: any, path: string): any {\n  return path.split('.').reduce((acc, key) => acc && acc[key], obj);\n}\n","import { ErrorMessage, useFormikContext } from 'formik';\nimport React, { type FunctionComponent, memo, useCallback } from 'react';\n\nimport { FormContext } from '@bigcommerce/checkout/ui';\n\nimport { getNestedValue } from '../../common/utility';\n\nexport interface FormFieldErrorProps {\n    name: string;\n    testId?: string;\n    errorId: string;\n}\n\nconst FormFieldError: FunctionComponent<FormFieldErrorProps> = ({ name, testId, errorId }) => {\n    const formikContext = useFormikContext<{ [key: string]: any }>();\n\n    const hasError = getNestedValue(formikContext?.errors, name) && getNestedValue(formikContext?.touched, name);\n\n    const renderMessage = useCallback(\n        (message: string) => (\n            <label\n                aria-live=\"polite\"\n                className=\"form-inlineMessage\"\n                htmlFor={name}\n                id={errorId}\n                role=\"alert\"\n            >\n                {message}\n            </label>\n        ),\n        [errorId, name],\n    );\n\n    return (\n        <FormContext.Consumer>\n            {({ isSubmitted }) => (\n                <ul className=\"form-field-errors\" data-test={testId}>\n                    <li className=\"form-field-error\">\n                        {(hasError && isSubmitted) ? <ErrorMessage name={name} render={renderMessage} /> :\n                            <span\n                                aria-hidden=\"true\"\n                                className=\"is-srOnly\"\n                                id={errorId}\n                            />\n                        }\n                    </li>\n                </ul>\n            )}\n        </FormContext.Consumer>\n    );\n};\n\nexport default memo(FormFieldError);\n","import DOMPurify from 'dompurify';\nimport React, { type FunctionComponent } from 'react';\n\nimport { useLocale } from './LocaleContext';\n\nexport interface TranslatedHtmlProps {\n    id: string;\n    data?: any;\n}\n\nexport const TranslatedHtml: FunctionComponent<TranslatedHtmlProps> = ({ data, id }) => {\n    const { language } = useLocale();\n\n    return (\n        <span\n            dangerouslySetInnerHTML={{\n                __html: DOMPurify.sanitize(language.translate(id, data), { ADD_ATTR: ['target'] }),\n            }}\n        />\n    );\n};\n\nexport default TranslatedHtml;\n","import React, { type FunctionComponent } from 'react';\n\nimport { useLocale } from './LocaleContext';\n\nexport interface TranslatedStringProps {\n    id: string;\n    data?: any;\n}\n\nconst TranslatedString: FunctionComponent<TranslatedStringProps> = ({ data, id }) => {\n    const { language } = useLocale();\n\n    return <>{language.translate(id, data)}</>;\n};\n\nexport default TranslatedString;\n","import { assign, kebabCase, map, pickBy } from 'lodash';\n\nexport default function toCSSRule(\n    selector: string,\n    ...styles: Array<{ [key: string]: any } | undefined>\n): string {\n    const mergedStyles = assign({}, ...styles);\n    const props = map(\n        pickBy(mergedStyles, (value) => typeof value === 'string'),\n        (value, key) => `${kebabCase(key)}: ${value};`,\n    ).join(' ');\n\n    return `${selector} {${props}}`;\n}\n","import { type EmbeddedCheckoutStyles } from '@bigcommerce/checkout-sdk';\n\nimport { toCSSRule } from '../common/dom';\n\nexport default class EmbeddedCheckoutStyleParser {\n    parse(styles: EmbeddedCheckoutStyles): string[] {\n        const rules: string[] = [];\n\n        if (styles.body) {\n            rules.push(toCSSRule('body', styles.body));\n            rules.push(toCSSRule('.optimizedCheckout-overlay', styles.body));\n        }\n\n        if (styles.text) {\n            rules.push(toCSSRule('.optimizedCheckout-contentPrimary', styles.text));\n        }\n\n        if (styles.secondaryText) {\n            rules.push(toCSSRule('.optimizedCheckout-contentSecondary', styles.secondaryText));\n        }\n\n        if (styles.heading) {\n            rules.push(toCSSRule('.optimizedCheckout-headingPrimary', styles.heading));\n        }\n\n        if (styles.secondaryHeading) {\n            rules.push(toCSSRule('.optimizedCheckout-headingSecondary', styles.secondaryHeading));\n        }\n\n        if (styles.link) {\n            rules.push(toCSSRule('a', styles.link));\n            rules.push(toCSSRule('a:focus', styles.link, styles.link.focus));\n            rules.push(toCSSRule('a:hover', styles.link, styles.link.hover));\n        }\n\n        if (styles.label) {\n            rules.push(toCSSRule('.optimizedCheckout-form-label', styles.label));\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-label',\n                    styles.label,\n                    styles.label.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .form-inlineMessage',\n                    styles.label,\n                    styles.label.error,\n                ),\n            );\n        }\n\n        if (styles.button) {\n            rules.push(toCSSRule('.optimizedCheckout-buttonPrimary', styles.button));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:active',\n                    styles.button,\n                    styles.button.active,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:focus',\n                    styles.button,\n                    styles.button.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:hover',\n                    styles.button,\n                    styles.button.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:active',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:focus',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:hover',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled].is-active',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled].is-loading',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n        }\n\n        if (styles.secondaryButton) {\n            rules.push(toCSSRule('.optimizedCheckout-buttonSecondary', styles.secondaryButton));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.active,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:focus',\n                    styles.secondaryButton,\n                    styles.secondaryButton.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:hover',\n                    styles.secondaryButton,\n                    styles.secondaryButton.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:focus',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:hover',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled].is-active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled].is-loading',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n        }\n\n        if (styles.input) {\n            rules.push(toCSSRule('.optimizedCheckout-form-input', styles.input));\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-input:focus', styles.input, styles.input.focus),\n            );\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-input:hover', styles.input, styles.input.hover),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-input::placeholder',\n                    styles.input,\n                    styles.input.placeholder,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input:focus',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input:hover',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n        }\n\n        if (styles.select) {\n            rules.push(toCSSRule('.optimizedCheckout-form-select', styles.select));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-select:focus',\n                    styles.select,\n                    styles.select.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-select:hover',\n                    styles.select,\n                    styles.select.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select:focus',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select:hover',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n        }\n\n        if (styles.checkbox) {\n            rules.push(toCSSRule('.optimizedCheckout-form-checkbox', styles.checkbox));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checkbox:focus',\n                    styles.checkbox,\n                    styles.checkbox.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checkbox:hover',\n                    styles.checkbox,\n                    styles.checkbox.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox:focus',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox:hover',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n        }\n\n        if (styles.radio) {\n            rules.push(toCSSRule('.optimizedCheckout-form-radio', styles.radio));\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-radio:focus', styles.radio, styles.radio.focus),\n            );\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-radio:hover', styles.radio, styles.radio.hover),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio:focus',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio:hover',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n        }\n\n        if (styles.step) {\n            rules.push(toCSSRule('.optimizedCheckout-checkoutStep', styles.step));\n            rules.push(toCSSRule('.optimizedCheckout-step', styles.step.icon));\n        }\n\n        if (styles.checklist) {\n            rules.push(toCSSRule('.optimizedCheckout-form-checklist', styles.checklist));\n            rules.push(toCSSRule('.optimizedCheckout-form-checklist-item', styles.checklist));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checklist-item:hover',\n                    styles.checklist,\n                    styles.checklist.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checklist-item--selected',\n                    styles.checklist,\n                    styles.checklist.checked,\n                ),\n            );\n        }\n\n        if (styles.discountBanner) {\n            rules.push(toCSSRule('.optimizedCheckout-discountBanner', styles.discountBanner));\n        }\n\n        if (styles.loadingBanner) {\n            rules.push(toCSSRule('.optimizedCheckout-loadingToaster', styles.loadingBanner));\n        }\n\n        if (styles.orderSummary) {\n            rules.push(toCSSRule('.optimizedCheckout-orderSummary', styles.orderSummary));\n            rules.push(\n                toCSSRule('.optimizedCheckout-orderSummary-cartSection', styles.orderSummary),\n            );\n        }\n\n        return rules;\n    }\n}\n","import { type EmbeddedCheckoutStyles } from '@bigcommerce/checkout-sdk';\n\nimport { appendStylesheet } from '../common/dom';\n\nimport type EmbeddedCheckoutStyleParser from './EmbeddedCheckoutStyleParser';\n\nexport default class EmbeddedCheckoutStylesheet {\n    private _parser: EmbeddedCheckoutStyleParser;\n\n    constructor(embeddedCheckoutStyleParser: EmbeddedCheckoutStyleParser) {\n        this._parser = embeddedCheckoutStyleParser;\n    }\n\n    append(styles: EmbeddedCheckoutStyles): HTMLStyleElement {\n        return appendStylesheet(this._parser.parse(styles));\n    }\n}\n","export default function appendStylesheet(rules: string[]): HTMLStyleElement {\n    const style = document.createElement('style');\n\n    document.head.appendChild(style);\n\n    if (style.sheet instanceof CSSStyleSheet) {\n        const { sheet } = style;\n\n        rules.forEach((rule, index) => {\n            sheet.insertRule(rule, index);\n        });\n    }\n\n    return style;\n}\n","import EmbeddedCheckoutStyleParser from './EmbeddedCheckoutStyleParser';\nimport EmbeddedCheckoutStylesheet from './EmbeddedCheckoutStylesheet';\n\nexport default function createEmbeddedCheckoutStylesheet() {\n    const embeddedCheckoutStyleParser = new EmbeddedCheckoutStyleParser();\n\n    return new EmbeddedCheckoutStylesheet(embeddedCheckoutStyleParser);\n}\n","import HashStatic from 'object-hash';\n\nexport default function computeErrorCode(value: any): string | undefined {\n    try {\n        return HashStatic(value).toUpperCase();\n    } catch (error) {}\n}\n","import { type ComponentType } from 'react';\n\ninterface ResolveResult {\n    name: string;\n    matches: number;\n    default: boolean;\n}\n\nexport default function resolveLazyComponent<TResolveId extends Record<string, unknown>, TProps>(\n    query: TResolveId,\n    components: Record<string, ComponentType<TProps>>,\n    registry: Record<string, readonly TResolveId[]>,\n): ComponentType<TProps> | undefined {\n    const results: ResolveResult[] = [];\n\n    for (const [name, resolveIds] of Object.entries(registry)) {\n        for (const resolverId of resolveIds) {\n            const result = { name, matches: 0, default: false };\n\n            for (const [key, value] of Object.entries(resolverId)) {\n                if (key in query && query[key] !== value) {\n                    result.matches = 0;\n                    break;\n                }\n\n                if (query[key] === value) {\n                    result.matches++;\n                }\n\n                if (key === 'default' && value === true) {\n                    result.default = true;\n                }\n            }\n\n            results.push(result);\n        }\n    }\n\n    const matched = results\n        .sort((a, b) => b.matches - a.matches)\n        .find((result) => result.matches > 0);\n\n    const matchedName = matched?.name ?? results.find((result) => result.default)?.name;\n\n    if (matchedName) {\n        return components[matchedName];\n    }\n}\n","import { useContext } from 'react';\n\nimport { ExtensionContext } from './ExtensionContext';\n\nexport const useExtensions = () => {\n    const extensionContext = useContext(ExtensionContext);\n\n    if (!extensionContext) {\n        throw new Error('useExtensions must be used within an <ExtensionProvider>');\n    }\n\n    return extensionContext;\n};\n","import { type Cart, type Consignment } from '@bigcommerce/checkout-sdk';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport findLineItems from './findLineItems';\nimport getLineItemsCount from './getLineItemsCount';\n\nexport interface StaticConsignmentItemListProps {\n    consignment: Consignment;\n    cart: Cart;\n}\n\nconst StaticConsignmentItemList: FunctionComponent<StaticConsignmentItemListProps> = ({\n    cart,\n    consignment,\n}) => {\n    const lineItems = findLineItems(cart, consignment);\n\n    return (\n        <div className=\"staticConsignment-items\">\n            <strong>\n                <TranslatedString\n                    data={{ count: getLineItemsCount(lineItems) }}\n                    id=\"cart.item_count_text\"\n                />\n            </strong>\n\n            <ul>\n                {lineItems.map((item) => (\n                    <li key={item.id}>{`${item.quantity} x ${item.name}`}</li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default memo(StaticConsignmentItemList);\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconClose: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconClose);\n","import classNames from 'classnames';\nimport React, { forwardRef, type Ref } from 'react';\n\nimport Input, { type InputProps } from './Input';\n\nexport interface TextInputProps extends InputProps {\n    additionalClassName?: string;\n    appearFocused?: boolean;\n    type?: 'text' | 'password' | 'tel' | 'email' | 'number';\n    isFloatingLabelEnabled?: boolean;\n    themeV2?: boolean;\n}\n\nconst TextInput = forwardRef(\n    (\n        {\n            additionalClassName,\n            isFloatingLabelEnabled,\n            appearFocused,\n            type = 'text',\n            themeV2 = false,\n            ...rest\n        }: TextInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <Input\n            {...rest}\n            className={classNames(\n                'form-input',\n                'optimizedCheckout-form-input',\n                { 'form-input--focus': appearFocused },\n                { 'optimizedCheckout-form-input--focus': appearFocused },\n                additionalClassName,\n                { 'floating-form-field-input': themeV2 && isFloatingLabelEnabled },\n                { 'body-regular': themeV2 && !isFloatingLabelEnabled },\n            )}\n            isFloatingLabelEnabled={isFloatingLabelEnabled}\n            ref={ref}\n            type={type}\n        />\n    ),\n);\n\nexport default TextInput;\n","export default function isEmbedded(pathname: string = document.location.pathname): boolean {\n    const basePath = `/${pathname.split('/')[1]}`;\n\n    return basePath === '/embedded-checkout';\n}\n","import { createContext, useContext } from 'react';\n\nexport interface ThemeContextProps {\n    themeV2: boolean;\n}\n\nconst ThemeContext = createContext<ThemeContextProps | undefined>(undefined);\n\nexport const useThemeContext = () => {\n    const themeContext = useContext(ThemeContext);\n\n    if (!themeContext) {\n        throw new Error('useThemeContext must be used within an <ThemeContextProvider>');\n    }\n\n    return themeContext;\n};\n\nexport default ThemeContext;\n","import React, { type ReactNode } from 'react';\n\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport ThemeContext from './ThemeContext';\n\nexport interface ThemeProviderProps {\n    children?: ReactNode;\n}\n\nexport const ThemeProvider = ({ children }: ThemeProviderProps) => {\n    const {\n        checkoutState: {\n            data: { getConfig },\n        },\n    } = useCheckout();\n\n    const config = getConfig();\n\n    let useNewTheme = false;\n\n    if (config) {\n        useNewTheme = Boolean(\n            config.checkoutSettings.features['CHECKOUT-7962.update_font_style_on_checkout_page'] ??\n                true,\n        );\n    }\n\n    const themeV2 =\n        (window.location.search && window.location.search.includes('v2')) || useNewTheme;\n\n    return <ThemeContext.Provider value={{ themeV2 }}>{children}</ThemeContext.Provider>;\n};\n","import {\n    type CardInstrument,\n    type CustomerAddress,\n    type PaymentProviderCustomer,\n} from '@bigcommerce/checkout-sdk';\n\ninterface PayPalFastlaneCustomer {\n    authenticationState?: string;\n    addresses?: CustomerAddress[];\n    instruments?: CardInstrument[];\n}\n\nexport default function isPayPalFastlaneCustomer(\n    customer?: PaymentProviderCustomer,\n): customer is PayPalFastlaneCustomer {\n    if (!customer) {\n        return false;\n    }\n\n    return (\n        'authenticationState' in customer || 'addresses' in customer || 'instruments' in customer\n    );\n}\n","import React, { type FunctionComponent, type ReactNode, Suspense } from 'react';\n\nimport { ErrorBoundary } from '@bigcommerce/checkout/error-handling-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './LazyContainer.scss';\n\nimport LoadingSpinner from './LoadingSpinner';\n\nexport interface LazyContainerProps {\n    children?: ReactNode;\n    loadingSkeleton?: ReactNode;\n}\n\nconst filterError = (error: Error) => error.name === 'ChunkLoadError';\n\nconst LazyContainer: FunctionComponent<LazyContainerProps> = ({ loadingSkeleton, children }) => (\n    <ErrorBoundary\n        fallback={\n            <div className=\"lazyContainer-error\">\n                <TranslatedString id=\"common.unstable_network_error\" />\n            </div>\n        }\n        filter={filterError}\n    >\n        <Suspense fallback={loadingSkeleton || <LoadingSpinner isLoading />}>{children}</Suspense>\n    </ErrorBoundary>\n);\n\nexport default LazyContainer;\n","import {\n    type CheckoutPayment,\n    type GiftCertificateOrderPayment,\n    type OrderPayment,\n} from '@bigcommerce/checkout-sdk';\n\nexport default function isGiftCertificatePayment(\n    payment: OrderPayment | CheckoutPayment,\n): payment is GiftCertificateOrderPayment {\n    return payment.providerId === 'giftcertificate';\n}\n","import classNames from 'classnames';\nimport React, { type FunctionComponent, type ReactNode } from 'react';\n\ninterface ModalHeaderProps {\n    children?: ReactNode;\n    additionalClassName?: string;\n}\n\nconst ModalHeader: FunctionComponent<ModalHeaderProps> = ({ children, additionalClassName }) => (\n    <h2\n        className={classNames(\n            'modal-header-title optimizedCheckout-headingSecondary',\n            additionalClassName,\n        )}\n        data-test=\"modal-heading\"\n    >\n        {children}\n    </h2>\n);\n\nexport default ModalHeader;\n","import { type CheckoutPayment, type OrderPayment } from '@bigcommerce/checkout-sdk';\n\nexport default function isStoreCreditPayment(payment: OrderPayment | CheckoutPayment): boolean {\n    return payment.providerId === 'storecredit';\n}\n","import classNames from 'classnames';\nimport React, { type FieldsetHTMLAttributes, forwardRef, type ReactNode, type Ref } from 'react';\n\nexport interface FieldsetProps extends FieldsetHTMLAttributes<HTMLFieldSetElement> {\n    additionalClassName?: string;\n    testId?: string;\n    legend?: ReactNode;\n}\n\nconst Fieldset = forwardRef(\n    (\n        { additionalClassName, children, className, legend, testId, ...rest }: FieldsetProps,\n        ref: Ref<HTMLFieldSetElement>,\n    ) => (\n        <fieldset\n            {...rest}\n            className={className || classNames('form-fieldset', additionalClassName)}\n            data-test={testId}\n            ref={ref}\n        >\n            {legend}\n\n            <div className=\"form-body\">{children}</div>\n        </fieldset>\n    ),\n);\n\nexport default Fieldset;\n","import { type CheckoutPaymentMethodExecutedOptions } from '@bigcommerce/checkout-sdk';\nimport { createContext } from 'react';\n\nexport interface AnalyticsEvents {\n    checkoutBegin(): void;\n    trackStepCompleted(step: string): void;\n    trackStepViewed(step: string): void;\n    orderPurchased(): void;\n    customerEmailEntry(email: string): void;\n    customerSuggestionInit(payload?: CheckoutPaymentMethodExecutedOptions): void;\n    customerSuggestionExecute(): void;\n    customerPaymentMethodExecuted(payload?: CheckoutPaymentMethodExecutedOptions): void;\n    showShippingMethods(): void;\n    selectedPaymentMethod(methodName: string, methodId: string): void;\n    clickPayButton(payload?: { [key: string]: unknown }): void;\n    paymentRejected(): void;\n    paymentComplete(): void;\n    exitCheckout(): void;\n    walletButtonClick(methodId: string): void;\n}\n\nexport interface AnalyticsContextProps {\n    analyticsTracker: AnalyticsEvents;\n}\n\nconst AnalyticsContext = createContext<AnalyticsContextProps | undefined>(undefined);\n\nexport default AnalyticsContext;\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nconst isBigCommercePaymentsFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        methodId === PaymentMethodId.BigCommercePaymentsCreditCards || // TODO: remove after A/B testing\n        methodId === PaymentMethodId.BigCommercePaymentsFastLane\n    );\n};\n\nexport default isBigCommercePaymentsFastlaneMethod;\n","enum AddressType {\n    Billing = 'billing',\n    Shipping = 'shipping',\n}\n\nexport default AddressType;\n","import React, { type FunctionComponent } from 'react';\n\nimport { isMobileView } from '../../utils';\n\nimport { CartSummarySkeleton } from './CartSummarySkeleton';\n\nconst OrderConfirmationPageSkeletonDesktop: FunctionComponent = () => (\n    <div className=\"layout optimizedCheckout-contentPrimary\">\n        <div className=\"layout-main\" data-test=\"order-confirmation-page-skeleton\">\n            <div className=\"order-confirmation-page-skeleton\">\n                <div className=\"thankyou\" />\n                <div className=\"line-1\" />\n                <div className=\"line-2\" />\n                <div className=\"continue\" />\n            </div>\n        </div>\n        <CartSummarySkeleton />\n    </div>\n);\n\nconst OrderConfirmationPageSkeletonMobile: FunctionComponent = () => (\n    <div className=\"layout optimizedCheckout-contentPrimary\">\n        <div className=\"layout-main\" data-test=\"order-confirmation-page-skeleton-mobile\">\n            <div className=\"order-confirmation-page-skeleton\">\n                <div className=\"thankyou\" />\n                <div className=\"text\">\n                    <div className=\"line\">\n                        <div className=\"animated-grey-box t1\" />\n                        <div className=\"animated-grey-box t2\" />\n                    </div>\n                    <div className=\"animated-grey-box first-line\" />\n                    <div className=\"animated-grey-box\" />\n                    <div className=\"line\">\n                        <div className=\"animated-grey-box t3\" />\n                        <div className=\"animated-grey-box t4\" />\n                    </div>\n                </div>\n                <div className=\"continue\" />\n            </div>\n        </div>\n        <div className=\"cartDrawer optimizedCheckout-orderSummary\">\n            <div className=\"checkout-page-skeleton--cartdrawer\">\n                <div className=\"product\">\n                    <div className=\"animated-grey-box figure\" />\n                    <div className=\"details\">\n                        <div className=\"animated-grey-box name\" />\n                        <div className=\"animated-grey-box description\" />\n                    </div>\n                </div>\n                <div className=\"animated-grey-box more\" />\n            </div>\n        </div>\n    </div>\n);\n\nconst OrderConfirmationPageSkeleton: FunctionComponent = () => {\n    return isMobileView() ? (\n        <OrderConfirmationPageSkeletonMobile />\n    ) : (\n        <OrderConfirmationPageSkeletonDesktop />\n    );\n};\n\nexport default OrderConfirmationPageSkeleton;\n","// copied from core package\nexport const MOBILE_MAX_WIDTH = 968;\nexport const SMALL_SCREEN_MAX_WIDTH = 551;\n\nlet query: MediaQueryList;\n\nexport function isMobileView() {\n    query = window.matchMedia(`(max-width: ${MOBILE_MAX_WIDTH}px)`);\n\n    return query.matches;\n}\n","import { type Address, type Country } from '@bigcommerce/checkout-sdk';\nimport { find, isEmpty } from 'lodash';\n\ninterface LocalizedGeography {\n    localizedCountry: string;\n    localizedProvince: string;\n}\n\nconst localizeAddress = <T1 extends Address>(\n    address: T1,\n    countries?: Country[],\n): T1 & LocalizedGeography => {\n    const country = find(countries, { code: address.countryCode });\n    const states = !country || isEmpty(country.subdivisions) ? [] : country.subdivisions;\n    const state = find(states, { code: address.stateOrProvinceCode });\n\n    return {\n        ...address,\n        localizedCountry: country ? country.name : address.country,\n        localizedProvince: state ? state.name : address.stateOrProvince,\n    };\n};\n\nexport default localizeAddress;\n","import { type LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { createInjectHoc, type InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithLanguageProps {\n    language: LanguageService;\n}\n\nconst withLanguage: InjectHoc<WithLanguageProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'WithLanguage',\n    pickProps: (value, key) => key === 'language' && !!value,\n});\n\nexport default withLanguage;\n","import { ExtensionRegion } from '@bigcommerce/checkout-sdk/essential';\n\nexport enum ExtensionRegionContainer {\n    ShippingShippingAddressFormBefore = 'extension-region-shipping-shippingaddressform-before',\n    ShippingShippingAddressFormAfter = 'extension-region-shipping-shippingaddressform-after',\n    ShippingSelectedShippingMethod = 'extension-region-shipping-selectedshippingmethod',\n    PaymentPaymentMethodListBefore = 'extension-region-payment-paymentmethodlist-before',\n    SummaryAfter = 'extension-region-summary-after',\n    SummaryLastItemAfter = 'extension-region-summary-lastitem-after',\n}\n\nexport const extensionRegionToContainerMap: Record<ExtensionRegion, ExtensionRegionContainer | ''> =\n    {\n        [ExtensionRegion.ShippingShippingAddressFormBefore]:\n            ExtensionRegionContainer.ShippingShippingAddressFormBefore,\n        [ExtensionRegion.ShippingShippingAddressFormAfter]:\n            ExtensionRegionContainer.ShippingShippingAddressFormAfter,\n        [ExtensionRegion.ShippingSelectedShippingMethod]:\n            ExtensionRegionContainer.ShippingSelectedShippingMethod,\n        [ExtensionRegion.PaymentPaymentMethodListBefore]:\n            ExtensionRegionContainer.PaymentPaymentMethodListBefore,\n        [ExtensionRegion.SummaryAfter]: ExtensionRegionContainer.SummaryAfter,\n        [ExtensionRegion.SummaryLastItemAfter]: ExtensionRegionContainer.SummaryLastItemAfter,\n        [ExtensionRegion.GlobalWebWorker]: '',\n    };\n","import { type ExtensionRegion } from '@bigcommerce/checkout-sdk';\nimport React, { type ReactNode, useEffect } from 'react';\n\nimport { useExtensions } from '@bigcommerce/checkout/contexts';\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { extensionRegionToContainerMap } from './ExtensionRegionContainer';\n\ninterface ExtensionProps {\n    region: ExtensionRegion;\n}\n\nexport const Extension = ({ region }: ExtensionProps): ReactNode | null => {\n    const {\n        checkoutState: {\n            data: { getExtensions, getConfig, getCheckout },\n        },\n    } = useCheckout();\n    const extensions = getExtensions();\n    const config = getConfig();\n    const checkout = getCheckout();\n    const { extensionService } = useExtensions();\n    const isRegionEnabled =\n        extensions && config && checkout && extensionService.isRegionEnabled(region);\n    const containerId = extensionRegionToContainerMap[region];\n\n    useEffect(() => {\n        if (isRegionEnabled) {\n            void extensionService.renderExtension(containerId, region);\n\n            return () => {\n                extensionService.removeListeners(region);\n            };\n        }\n    }, [containerId, isRegionEnabled, region]); // eslint-disable-line react-hooks/exhaustive-deps\n\n    if (isRegionEnabled && containerId !== '') {\n        return <div id={containerId} />;\n    }\n\n    return null;\n};\n","import { type RequestError } from '@bigcommerce/checkout-sdk';\n\nexport default function isRequestError(error: unknown): error is RequestError {\n    const requestError = error as RequestError;\n\n    return requestError.type === 'request';\n}\n","import { type SyntheticEvent } from 'react';\n\nexport default function preventDefault<\n    TFunc extends (event: TEvent, ...args: any[]) => any,\n    TEvent extends SyntheticEvent,\n>(fn?: TFunc): (event: TEvent) => void {\n    return (event) => {\n        event.preventDefault();\n\n        if (fn) {\n            fn(event);\n        }\n    };\n}\n","import { type Address, type CheckoutPayment, type FormField } from '@bigcommerce/checkout-sdk';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { type CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { isPayPalFastlaneAddress, PoweredByPayPalFastlaneLabel, usePayPalFastlaneAddress } from '@bigcommerce/checkout/paypal-fastlane-integration';\n\nimport { AddressType, StaticAddress } from '../address';\nimport { withCheckout } from '../checkout';\nimport { EMPTY_ARRAY } from '../common/utility';\n\nexport interface StaticBillingAddressProps {\n    address: Address;\n}\n\ninterface WithCheckoutStaticBillingAddressProps {\n    fields: FormField[];\n    payments?: CheckoutPayment[];\n}\n\nconst StaticBillingAddress: FunctionComponent<\n    StaticBillingAddressProps & WithCheckoutStaticBillingAddressProps\n> = ({ address, payments = EMPTY_ARRAY }) => {\n    const { paypalFastlaneAddresses } = usePayPalFastlaneAddress();\n    const showPayPalFastlaneLabel = isPayPalFastlaneAddress(address, paypalFastlaneAddresses);\n\n    if (payments.find((payment) => payment.providerId === 'amazonpay')) {\n        return (\n            <p>\n                <TranslatedString id=\"billing.billing_address_amazonpay\" />\n            </p>\n        );\n    }\n\n    return (\n        <>\n            <StaticAddress address={address} type={AddressType.Billing} />\n\n            {showPayPalFastlaneLabel && <PoweredByPayPalFastlaneLabel />}\n        </>\n    );\n};\n\nexport function mapToStaticBillingAddressProps(\n    { checkoutState }: CheckoutContextProps,\n    { address }: StaticBillingAddressProps,\n): WithCheckoutStaticBillingAddressProps | null {\n    const {\n        data: { getBillingAddressFields, getCheckout },\n    } = checkoutState;\n\n    const checkout = getCheckout();\n\n    return {\n        fields: getBillingAddressFields(address.countryCode),\n        payments: checkout && checkout.payments,\n    };\n}\n\nexport default withCheckout(mapToStaticBillingAddressProps)(memo(StaticBillingAddress));\n","import {\n    type Address,\n    type CheckoutSelectors,\n    type Country,\n    type ShippingInitializeOptions,\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { isEmpty } from 'lodash';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { useThemeContext } from '@bigcommerce/checkout/contexts';\nimport { localizeAddress } from '@bigcommerce/checkout/locale';\nimport { type CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { withCheckout } from '../checkout';\n\nimport AddressType from './AddressType';\n\nimport './StaticAddress.scss';\n\nexport interface StaticAddressProps {\n    address: Address;\n    type?: AddressType;\n}\n\nexport interface StaticAddressEditableProps extends StaticAddressProps {\n    initialize?(options: ShippingInitializeOptions): Promise<CheckoutSelectors>;\n}\n\ninterface WithCheckoutStaticAddressProps {\n    countries?: Country[];\n}\n\nconst StaticAddress: FunctionComponent<\n    StaticAddressEditableProps & WithCheckoutStaticAddressProps\n    > = ({\n        countries,\n        address: addressWithoutLocalization,\n    }) => {\n\n    const { themeV2 } = useThemeContext();\n\n    const address = localizeAddress(addressWithoutLocalization, countries);\n    const isValid = !isEmpty(address);\n\n    return !isValid ? null : (\n        <div className=\"vcard checkout-address--static\" data-test=\"static-address\">\n            {(address.firstName || address.lastName) && (\n                <p className={classNames('fn address-entry',\n                    { 'body-regular': themeV2 })}>\n                    <span className=\"first-name\">{`${address.firstName} `}</span>\n                    <span className=\"family-name\">{address.lastName}</span>\n                </p>\n            )}\n\n            {(address.phone || address.company) && (\n                <p className={classNames('address-entry',\n                    { 'body-regular': themeV2 })}>\n                    <span className=\"company-name\">{`${address.company} `}</span>\n                    <span className=\"tel\">{address.phone}</span>\n                </p>\n            )}\n\n            <div className=\"adr\">\n                <p className={classNames('street-address address-entry',\n                    { 'body-regular': themeV2 })}>\n                    <span className=\"address-line-1\">{`${address.address1} `}</span>\n                    {address.address2 && (\n                        <span className=\"address-line-2\">{` / ${address.address2}`}</span>\n                    )}\n                </p>\n\n                <p className={classNames('address-entry',\n                    { 'body-regular': themeV2 })}>\n                    {address.city && <span className=\"locality\">{`${address.city}, `}</span>}\n                    {address.localizedProvince && (\n                        <span className=\"region\">{`${address.localizedProvince}, `}</span>\n                    )}\n                    {address.postalCode && (\n                        <span className=\"postal-code\">{`${address.postalCode} / `}</span>\n                    )}\n                    {address.localizedCountry && (\n                        <span className=\"country-name\">{`${address.localizedCountry} `}</span>\n                    )}\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport function mapToStaticAddressProps(\n    context: CheckoutContextProps,\n    { type }: StaticAddressProps,\n): WithCheckoutStaticAddressProps | null {\n    const {\n        checkoutState: {\n            data: { getBillingCountries, getShippingCountries },\n        },\n    } = context;\n\n    return {\n        countries: type === AddressType.Billing\n            ? getBillingCountries()\n            : getShippingCountries(),\n    };\n}\n\nexport default withCheckout(mapToStaticAddressProps)(memo(StaticAddress));\n","import { type CurrencyService, type LanguageService } from '@bigcommerce/checkout-sdk';\nimport { createContext, useContext } from 'react';\n\nexport interface LocaleContextType {\n    language: LanguageService;\n    date?: {\n        inputFormat: string;\n    };\n    currency?: CurrencyService;\n}\n\nconst LocaleContext = createContext<LocaleContextType | undefined>(undefined);\n\nexport default LocaleContext;\n\nexport function useLocale() {\n    const context = useContext(LocaleContext);\n\n    if (!context) {\n        throw new Error('useLocale must be used within a LocaleContextProvider');\n    }\n\n    return context;\n}\n","import { type Cart } from '@bigcommerce/checkout-sdk';\n\n/**\n * Minimum charge amounts due to the Stripe documentation\n * https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts\n */\nenum stripeLinkMinAmount {\n    'USD' = 0.5,\n    'AED' = 2,\n    'AUD' = 0.5,\n    'BGN' = 1,\n    'BRL' = 0.5,\n    'CAD' = 0.5,\n    'CHF' = 0.5,\n    'CZK' = 15,\n    'DKK' = 2.5,\n    'EUR' = 0.5,\n    'GBP' = 0.3,\n    'HKD' = 4,\n    'HUF' = 175,\n    'INR' = 0.5,\n    'JPY' = 50,\n    'MXN' = 10,\n    'MYR' = 2,\n    'NOK' = 3,\n    'NZD' = 0.5,\n    'PLN' = 2,\n    'RON' = 2,\n    'SEK' = 3,\n    'SGD' = 0.5,\n    'THB' = 10,\n}\n\nconst isStripeLinkMinAmount = (code: string): code is keyof typeof stripeLinkMinAmount => {\n    return code in stripeLinkMinAmount;\n};\n\nconst shouldUseStripeLinkByMinimumAmount = (cart: Cart) => {\n    const {\n        currency: { code },\n        cartAmount,\n    } = cart;\n\n    if (isStripeLinkMinAmount(code) && cartAmount >= stripeLinkMinAmount[code]) {\n        return true;\n    }\n\n    return false;\n};\n\nexport default shouldUseStripeLinkByMinimumAmount;\n","// NOTE: For now, need to coerce the type as mutable array / object. Otherwise,\n// we'll need to change the props of all components as readonly.\nexport const EMPTY_ARRAY = Object.freeze([]) as never[];\nexport const EMPTY_OBJECT = Object.freeze({}) as any;\n","const APPLE_PAY = 'applepay';\n\n// TODO: The API should tell UI which payment method offers its own checkout button\nexport const SUPPORTED_METHODS: string[] = [\n    'amazonpay',\n    APPLE_PAY,\n    'chasepay',\n    'braintreevisacheckout',\n    'braintreepaypal',\n    'braintreepaypalcredit',\n    'masterpass',\n    'paypalcommerce',\n    'paypalcommercevenmo',\n    'paypalcommercecredit',\n    'googlepayadyenv2',\n    'googlepayadyenv3',\n    'googlepayauthorizenet',\n    'googlepaybnz',\n    'googlepaybraintree',\n    'googlepaycheckoutcom',\n    'googlepaycybersourcev2',\n    'googlepayorbital',\n    'googlepaystripe',\n    'googlepaystripeupe',\n    'googlepayworldpayaccess',\n    'googlepaypaypalcommerce',\n    'googlepaytdonlinemart',\n    'stripeocs',\n    'googlepaystripeocs',\n];\n\nexport const getSupportedMethodIds = (methodIds: string[]): string[] => {\n    return methodIds.filter((methodId) => SUPPORTED_METHODS.includes(methodId));\n}\n","import { type LineItem } from '@bigcommerce/checkout-sdk';\nimport { reduce } from 'lodash';\n\nexport default function getLineItemsCount(lineItems: LineItem[]): number {\n    return reduce(lineItems, (total, item) => total + item.quantity, 0);\n}\n","import { type PhysicalItem } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { useThemeContext } from '@bigcommerce/checkout/contexts';\n\nimport { type MultiShippingTableItemWithType } from './MultishippingType';\n\nexport interface ConsignmentLineItemDetailProps {\n    lineItems: MultiShippingTableItemWithType[] | PhysicalItem[];\n    isMultiShippingSummary?: boolean;\n}\n\nconst renderProductOptionDetails = (item: MultiShippingTableItemWithType | PhysicalItem) => {\n    if (!item.options || !item.options.length) {\n        return null;\n    }\n\n    return (<span className=\"line-item-options\">{` - ${item.options.map(option => option.value).join(' / ')}`}</span>);\n}\n\nexport const renderItemContent = (item: MultiShippingTableItemWithType | PhysicalItem, themeV2 = false, isMultiShippingSummary = false) => {\n    return <span\n        className={classNames(\n            { 'body-regular': themeV2 && !isMultiShippingSummary },\n            { 'sub-text': themeV2 && isMultiShippingSummary },)\n        }>\n        <span className={classNames(\n            { 'body-bold': themeV2 && !isMultiShippingSummary },\n            { 'sub-text-bold': themeV2 && isMultiShippingSummary },)\n        }>\n            {`${item.quantity} x `}\n        </span>\n        {item.name}\n        {renderProductOptionDetails(item)}\n    </span>;\n};\n\nconst ConsignmentLineItemDetail: FunctionComponent<ConsignmentLineItemDetailProps> = ({\n    lineItems,\n    isMultiShippingSummary = false,\n}) => {\n    const { themeV2 } = useThemeContext();\n\n    return (\n        <ul className=\"consignment-line-item-list\">\n        {lineItems.map((item) => (\n            <li key={item.id}>\n                {renderItemContent(item, themeV2, isMultiShippingSummary)}\n            </li>\n        ))}\n    </ul>\n    );\n};\n\nexport default memo(ConsignmentLineItemDetail);\n","export default function createAnalyticsService<T>(\n    createFn: (args?: any) => T,\n    createArguments: unknown[] = [],\n) {\n    let analyticsTracker: T;\n\n    return () => {\n        if (analyticsTracker) {\n            return analyticsTracker;\n        }\n\n        analyticsTracker = createFn(...createArguments);\n\n        return analyticsTracker;\n    };\n}\n","import {\n    type BodlEventsPayload,\n    type BodlService,\n    type BraintreeAnalyticTrackerService,\n    type CheckoutService,\n    createBodlService,\n    createBraintreeAnalyticTracker,\n    createPayPalCommerceAnalyticTracker,\n    createStepTracker,\n    type PayPalCommerceAnalyticTrackerService,\n    type StepTracker,\n} from '@bigcommerce/checkout-sdk/essential';\nimport React, { type ReactNode, useMemo } from 'react';\n\nimport AnalyticsContext, { type AnalyticsEvents } from './AnalyticsContext';\nimport createAnalyticsService from './createAnalyticsService';\n\ninterface AnalyticsProviderProps {\n    checkoutService: CheckoutService;\n    children?: ReactNode;\n}\n\nconst AnalyticsProvider = ({ checkoutService, children }: AnalyticsProviderProps) => {\n    const getStepTracker = useMemo(\n        () => createAnalyticsService<StepTracker>(createStepTracker, [checkoutService]),\n        [checkoutService],\n    );\n    const getBodlService = useMemo(\n        () => createAnalyticsService<BodlService>(createBodlService, [checkoutService.subscribe]),\n        [checkoutService],\n    );\n    const getBraintreeAnalyticTracker = useMemo(\n        () =>\n            createAnalyticsService<BraintreeAnalyticTrackerService>(\n                createBraintreeAnalyticTracker,\n                [checkoutService],\n            ),\n        [checkoutService],\n    );\n    const getPayPalCommerceAnalyticTracker = useMemo(\n        () =>\n            createAnalyticsService<PayPalCommerceAnalyticTrackerService>(\n                createPayPalCommerceAnalyticTracker,\n                [checkoutService],\n            ),\n        [checkoutService],\n    );\n\n    const checkoutBegin = () => {\n        getStepTracker().trackCheckoutStarted();\n        getBodlService().checkoutBegin();\n    };\n\n    const trackStepCompleted = (currentStep: string) => {\n        getStepTracker().trackStepCompleted(currentStep);\n        getBodlService().stepCompleted(currentStep);\n    };\n\n    const trackStepViewed = (step: string) => {\n        getStepTracker().trackStepViewed(step);\n    };\n\n    const orderPurchased = () => {\n        getStepTracker().trackOrderComplete();\n        getBodlService().orderPurchased();\n    };\n\n    const customerEmailEntry = (email: string) => {\n        getBodlService().customerEmailEntry(email);\n    };\n\n    const customerSuggestionInit = (payload: BodlEventsPayload) => {\n        getBodlService().customerSuggestionInit(payload);\n    };\n\n    const customerSuggestionExecute = () => {\n        getBodlService().customerSuggestionExecute();\n    };\n\n    const customerPaymentMethodExecuted = (payload: BodlEventsPayload) => {\n        getBodlService().customerPaymentMethodExecuted(payload);\n        getBraintreeAnalyticTracker().customerPaymentMethodExecuted();\n        getPayPalCommerceAnalyticTracker().customerPaymentMethodExecuted();\n    };\n\n    const showShippingMethods = () => {\n        getBodlService().showShippingMethods();\n    };\n\n    const selectedPaymentMethod = (methodName: string, methodId: string) => {\n        getBodlService().selectedPaymentMethod(methodName);\n        getBraintreeAnalyticTracker().selectedPaymentMethod(methodId);\n        getPayPalCommerceAnalyticTracker().selectedPaymentMethod(methodId);\n    };\n\n    const clickPayButton = (payload: BodlEventsPayload) => {\n        getBodlService().clickPayButton(payload);\n    };\n\n    const paymentRejected = () => {\n        getBodlService().paymentRejected();\n    };\n\n    const paymentComplete = () => {\n        getBodlService().paymentComplete();\n        getBraintreeAnalyticTracker().paymentComplete();\n        getPayPalCommerceAnalyticTracker().paymentComplete();\n    };\n\n    const exitCheckout = () => {\n        getBodlService().exitCheckout();\n    };\n\n    const walletButtonClick = (methodId: string) => {\n        getBraintreeAnalyticTracker().walletButtonClick(methodId);\n        getPayPalCommerceAnalyticTracker().walletButtonClick(methodId);\n    };\n\n    const analyticsTracker: AnalyticsEvents = {\n        checkoutBegin,\n        trackStepCompleted,\n        trackStepViewed,\n        orderPurchased,\n        customerEmailEntry,\n        customerSuggestionInit,\n        customerSuggestionExecute,\n        customerPaymentMethodExecuted,\n        showShippingMethods,\n        selectedPaymentMethod,\n        clickPayButton,\n        paymentRejected,\n        paymentComplete,\n        exitCheckout,\n        walletButtonClick,\n    };\n\n    return (\n        <AnalyticsContext.Provider value={{ analyticsTracker }}>\n            {children}\n        </AnalyticsContext.Provider>\n    );\n};\n\nexport default AnalyticsProvider;\n","// These values have to match with screensizes.scss\nexport const MOBILE_MAX_WIDTH = 968;\nexport const SMALL_SCREEN_MAX_WIDTH = 551;\n","// `document.currentScript` can only be called at the global level as it only\n// holds a reference to the script when it is initially processed.\nconst path = document.currentScript ? (document.currentScript as HTMLScriptElement).src : undefined;\n\nexport default function getCurrentScriptPath(): string | undefined {\n    return path;\n}\n","import getCurrentScriptPath from './getCurrentScriptPath';\n\nexport default function configurePublicPath(publicPath?: string): string {\n    if (!publicPath) {\n        const scriptPath = getCurrentScriptPath();\n\n        if (!scriptPath) {\n            throw new Error(\n                'Unable to configure the public path of the application because it is not specified and it cannot be inferred using the path of the current script.',\n            );\n        }\n\n        __webpack_public_path__ = `${scriptPath.split('/').slice(0, -1).join('/')}/`;\n\n        return __webpack_public_path__;\n    }\n\n    __webpack_public_path__ = publicPath.substr(-1) === '/' ? publicPath : `${publicPath}/`;\n\n    return __webpack_public_path__;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { configurePublicPath } from '../common/bundler';\n\nimport { type CheckoutAppProps } from './CheckoutApp';\n\nexport type RenderCheckoutOptions = CheckoutAppProps;\nexport type RenderCheckout = typeof renderCheckout;\n\nexport default function renderCheckout({\n    containerId,\n    publicPath,\n    ...props\n}: RenderCheckoutOptions): void {\n    const configuredPublicPath = configurePublicPath(publicPath);\n\n    // We want to use `require` here because we want to set up the public path\n    // first before importing the app component and its dependencies.\n    const { default: CheckoutApp } = require('./CheckoutApp');\n\n    // We want to use `require` here because we only want to import the package\n    // in development mode.\n    if (process.env.NODE_ENV === 'development') {\n        const whyDidYouRender = require('@welldone-software/why-did-you-render');\n\n        whyDidYouRender(React, {\n            collapseGroups: true,\n        });\n    }\n\n    ReactDOM.render(\n        <CheckoutApp containerId={containerId} publicPath={configuredPublicPath} {...props} />,\n        document.getElementById(containerId),\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { configurePublicPath } from '../common/bundler';\n\nimport { type OrderConfirmationAppProps } from './OrderConfirmationApp';\n\nexport type RenderOrderConfirmationOptions = OrderConfirmationAppProps;\nexport type RenderOrderConfirmation = typeof renderOrderConfirmation;\n\nexport default function renderOrderConfirmation({\n    containerId,\n    publicPath,\n    ...props\n}: RenderOrderConfirmationOptions): void {\n    const configuredPublicPath = configurePublicPath(publicPath);\n\n    // We want to use `require` here because we want to set up the public path\n    // first before importing the app component and its dependencies.\n    const { default: OrderConfirmationApp } = require('./OrderConfirmationApp');\n\n    // We want to use `require` here because we only want to import the package\n    // in development mode.\n    if (process.env.NODE_ENV === 'development') {\n        const whyDidYouRender = require('@welldone-software/why-did-you-render');\n\n        whyDidYouRender(React, {\n            collapseGroups: true,\n        });\n    }\n\n    ReactDOM.render(\n        <OrderConfirmationApp\n            containerId={containerId}\n            publicPath={configuredPublicPath}\n            {...props}\n        />,\n        document.getElementById(containerId),\n    );\n}\n","import isBigCommercePaymentsFastlaneMethod from './is-bigcommerce-payments-fastlane-method';\nimport isBraintreeFastlaneMethod from './is-braintree-fastlane-method';\nimport isPayPalCommerceFastlaneMethod from './is-paypal-commerce-fastlane-method';\n\nconst isPaypalFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        isBraintreeFastlaneMethod(methodId) ||\n        isPayPalCommerceFastlaneMethod(methodId) ||\n        isBigCommercePaymentsFastlaneMethod(methodId)\n    );\n};\n\nexport default isPaypalFastlaneMethod;\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nconst isPayPalCommerceFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        methodId === PaymentMethodId.PaypalCommerceCreditCards || // TODO: remove after A/B testing\n        methodId === PaymentMethodId.PayPalCommerceAcceleratedCheckout\n    );\n};\n\nexport default isPayPalCommerceFastlaneMethod;\n","import FALLBACK_TRANSLATIONS from './en.json';\n\nexport const FALLBACK_LOCALE = 'en';\n\nexport { FALLBACK_TRANSLATIONS };\n","import {\n    createLanguageService,\n    type LanguageConfig,\n    type LanguageService,\n} from '@bigcommerce/checkout-sdk/essential';\n\nimport { FALLBACK_LOCALE, FALLBACK_TRANSLATIONS } from './translations';\n\nlet languageService: LanguageService | undefined;\n\nexport default function getLanguageService(): LanguageService {\n    languageService =\n        languageService ??\n        createLanguageService({\n            fallbackLocale: FALLBACK_LOCALE,\n            fallbackTranslations: FALLBACK_TRANSLATIONS,\n        });\n\n    return languageService;\n}\n\nexport type InitializeLanguageService = typeof initializeLanguageService;\n\nexport function initializeLanguageService(config: LanguageConfig): LanguageService {\n    languageService = createLanguageService({\n        ...config,\n        defaultLocale: config.locale,\n        defaultTranslations: config.defaultTranslations,\n        fallbackLocale: FALLBACK_LOCALE,\n        fallbackTranslations: FALLBACK_TRANSLATIONS,\n    });\n\n    return languageService;\n}\n","import CustomError from './CustomError';\n\n// todo: remove this method in favour of creating proper subclasses for each error type.\n// it's only provided for compatibility with errors defined in `app.errors.ts` while we transition\n// to proper error subclasses.\nexport default function createCustomErrorType({\n    name,\n    defaultError = '',\n    defaultTitle = '',\n    shouldReport = false,\n}: {\n    name: string;\n    defaultError?: string;\n    defaultTitle?: string;\n    shouldReport?: boolean;\n}) {\n    class CustomErrorType extends CustomError {\n        constructor(data = {}, errorMessage = '', errorTitle = '') {\n            super({\n                data,\n                message: errorMessage,\n                title: errorTitle,\n            });\n\n            // todo: this should use new.taget.prototype in the parent class once we can make it work\n            setPrototypeOf(this, CustomErrorType.prototype);\n\n            this.setDefaultValues({\n                name,\n                defaultError,\n                defaultTitle,\n            });\n        }\n    }\n\n    CustomErrorType.shouldReport = shouldReport;\n\n    return CustomErrorType;\n}\n\nexport function setPrototypeOf(object: any, prototype: any) {\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(object, prototype);\n    } else {\n        object.__proto__ = prototype;\n    }\n\n    return object;\n}\n","import React, { type FunctionComponent, memo } from 'react';\n\nexport interface LoadingSpinnerProps {\n    isLoading: boolean;\n}\n\nconst LoadingSpinner: FunctionComponent<LoadingSpinnerProps> = ({ isLoading }) => {\n    if (!isLoading) {\n        return null;\n    }\n\n    return (\n        <div\n            aria-busy=\"true\"\n            className=\"loadingSpinner loadingOverlay-container\"\n            role=\"status\"\n            style={{ height: 100 }}\n        >\n            <div className=\"loadingOverlay optimizedCheckout-overlay\" />\n        </div>\n    );\n};\n\nexport default memo(LoadingSpinner);\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nconst isBraintreeFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        methodId === PaymentMethodId.Braintree || // TODO: remove after A/B testing\n        methodId === PaymentMethodId.BraintreeAcceleratedCheckout\n    );\n};\n\nexport default isBraintreeFastlaneMethod;\n","import { type CheckoutSettings } from '@bigcommerce/checkout-sdk';\n\nexport default function isExperimentEnabled(\n    checkoutSettings: CheckoutSettings | undefined,\n    experimentName: string,\n    fallbackValue = true\n): boolean {\n    return Boolean(checkoutSettings?.features[experimentName] ?? fallbackValue);\n}\n","import { type RequestError } from '@bigcommerce/checkout-sdk';\n\ninterface ErrorWithType extends RequestError {\n    type: string;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-object-type\nfunction hasOwnProperty<X extends {}, Y extends PropertyKey>(\n    obj: X,\n    key: Y,\n): obj is X & Record<Y, unknown> {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport default function isErrorWithType(error: unknown): error is ErrorWithType {\n    return (\n        typeof error === 'object' &&\n        error !== null &&\n        hasOwnProperty(error, 'type') &&\n        typeof error.type === 'string'\n    );\n}\n","import { type ExtensionAction, ExtensionActionType, type ExtensionState } from './ExtensionType';\n\nexport const extensionReducer = (\n    state: ExtensionState,\n    action: ExtensionAction,\n): ExtensionState => {\n    switch (action.type) {\n        case ExtensionActionType.SHOW_LOADING_INDICATOR:\n            if (typeof action.payload === 'boolean') {\n                return { ...state, isShowingLoadingIndicator: action.payload };\n            }\n\n            break;\n\n        case ExtensionActionType.RE_RENDER_SHIPPING_FORM:\n            if (typeof action.payload === 'number') {\n                return { ...state, shippingFormRenderTimestamp: action.payload };\n            }\n\n            break;\n\n        default:\n            return state;\n    }\n\n    return state;\n};\n","import React, { type ReactNode, useReducer } from 'react';\n\nimport { ExtensionContext } from './ExtensionContext';\nimport { extensionReducer } from './ExtensionReducer';\nimport { type ExtensionServiceInterface } from './ExtensionType';\n\nexport interface ExtensionProviderProps {\n    extensionService: ExtensionServiceInterface;\n    children?: ReactNode;\n}\n\nexport const ExtensionProvider = ({ children, extensionService }: ExtensionProviderProps) => {\n    const [extensionState, dispatch] = useReducer(extensionReducer, {\n        isShowingLoadingIndicator: false,\n        shippingFormRenderTimestamp: undefined,\n    });\n\n    extensionService.setDispatch(dispatch);\n\n    const extensionValues = {\n        extensionService,\n        extensionState,\n    };\n\n    return (\n        <ExtensionContext.Provider value={extensionValues}>{children}</ExtensionContext.Provider>\n    );\n};\n","import React, { type FunctionComponent, type ReactNode } from 'react';\n\nimport LoadingSpinner from './LoadingSpinner';\n\nexport interface LoadingOverlayProps {\n    isLoading: boolean;\n    hideContentWhenLoading?: boolean;\n    unmountContentWhenLoading?: boolean;\n    children?: ReactNode;\n    loadingSkeleton?: ReactNode;\n}\n\nconst LoadingOverlay: FunctionComponent<LoadingOverlayProps> = ({\n    children,\n    hideContentWhenLoading,\n    loadingSkeleton,\n    unmountContentWhenLoading,\n    isLoading,\n}) => {\n    const loadingUI = loadingSkeleton || <LoadingSpinner isLoading={true} />;\n\n    if (hideContentWhenLoading || unmountContentWhenLoading) {\n        return (\n            <>\n                {isLoading ? loadingUI : null}\n                {unmountContentWhenLoading && isLoading ? null : (\n                    <div\n                        style={{\n                            display: hideContentWhenLoading && isLoading ? 'none' : undefined,\n                        }}\n                    >\n                        {children}\n                    </div>\n                )}\n            </>\n        );\n    }\n\n    return (\n        <div className=\"loadingOverlay-container\">\n            {children}\n            {isLoading && (\n                <div\n                    className=\"loadingOverlay optimizedCheckout-overlay\"\n                    data-test=\"loading-overlay\"\n                />\n            )}\n        </div>\n    );\n};\n\nexport default LoadingOverlay;\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { type FunctionComponent, type KeyboardEvent, type MouseEvent, type ReactNode, useCallback } from 'react';\nimport ReactModal from 'react-modal';\nimport { type Omit } from 'utility-types';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\n\nimport { IconClose } from '../icon';\n\nexport type ModalProps = Omit<\n    ReactModal.Props,\n    'bodyOpenClassName' | 'className' | 'closeTimeoutMS' | 'overlayClassName'\n> & {\n    children?: ReactNode;\n    closeButtonLabel?: string | ReactNode;\n    footer?: ReactNode;\n    header?: ReactNode;\n    additionalHeaderClassName?: string;\n    additionalBodyClassName?: string;\n    additionalModalClassName?: string;\n    shouldShowCloseButton?: boolean;\n};\n\nconst Modal: FunctionComponent<ModalProps> = ({\n    children,\n    closeButtonLabel = 'Close',\n    footer,\n    header,\n    additionalHeaderClassName,\n    additionalBodyClassName,\n    additionalModalClassName,\n    onRequestClose = noop,\n    shouldShowCloseButton = false,\n    ...rest\n}) => {\n    const handleClose = useCallback(\n        (event: MouseEvent | KeyboardEvent) => {\n            onRequestClose(event);\n        },\n        [onRequestClose],\n    );\n\n    return (\n        <ReactModal\n            {...rest}\n            ariaHideApp={process.env.NODE_ENV !== 'test'}\n            bodyOpenClassName=\"has-activeModal\"\n            className={{\n                base: classNames(\n                    'modal optimizedCheckout-contentPrimary',\n                    additionalModalClassName,\n                ),\n                afterOpen: 'modal--afterOpen',\n                beforeClose: 'modal--beforeClose',\n            }}\n            closeTimeoutMS={200}\n            onRequestClose={onRequestClose}\n            overlayClassName={{\n                base: 'modalOverlay',\n                afterOpen: 'modalOverlay--afterOpen',\n                beforeClose: 'modalOverlay--beforeClose',\n            }}\n            shouldCloseOnEsc={true}\n            shouldCloseOnOverlayClick={false}\n        >\n            <div className={classNames('modal-header', additionalHeaderClassName)}>\n                {header}\n\n                {shouldShowCloseButton && (\n                     \n                    <a\n                        className=\"modal-close\"\n                        data-test=\"modal-close-button\"\n                        href=\"#\"\n                        onClick={preventDefault(handleClose)}\n                    >\n                        {closeButtonLabel && <span className=\"is-srOnly\">{closeButtonLabel}</span>}\n\n                        <IconClose />\n                    </a>\n                )}\n            </div>\n\n            <div\n                className={classNames('modal-body', additionalBodyClassName)}\n                data-test=\"modal-body\"\n            >\n                {children}\n            </div>\n\n            {Boolean(footer) && (\n                <div className=\"modal-footer\" data-test=\"modal-footer\">\n                    {footer}\n                </div>\n            )}\n        </ReactModal>\n    );\n};\n\nexport default Modal;\n","import classNames from 'classnames';\nimport React, { type FunctionComponent, memo, type ReactNode } from 'react';\n\nimport { FormContext } from '@bigcommerce/checkout/ui';\n\nexport interface FormFieldContainerProps {\n    additionalClassName?: string;\n    children?: ReactNode;\n    className?: string;\n    hasError?: boolean;\n    testId?: string;\n}\n\nconst FormFieldContainer: FunctionComponent<FormFieldContainerProps> = ({\n    additionalClassName,\n    children,\n    className,\n    hasError,\n    testId,\n}) => (\n    <FormContext.Consumer>\n        {({ isSubmitted }) => (\n            <div\n                className={\n                    className ||\n                    classNames('form-field', additionalClassName, {\n                        'form-field--error': hasError && isSubmitted,\n                    })\n                }\n                data-test={testId}\n            >\n                {children}\n            </div>\n        )}\n    </FormContext.Consumer>\n);\n\nexport default memo(FormFieldContainer);\n","import {\n    type CheckoutService,\n    createCurrencyService,\n    type StoreConfig,\n} from '@bigcommerce/checkout-sdk/essential';\nimport { memoizeOne } from '@bigcommerce/memoize';\nimport React, { type ReactNode, useEffect, useMemo, useState } from 'react';\n\nimport getLanguageService from './getLanguageService';\nimport LocaleContext from './LocaleContext';\n\nexport interface LocaleProviderProps {\n    checkoutService: CheckoutService;\n    children?: ReactNode;\n}\n\nconst LocaleProvider: React.FC<LocaleProviderProps> = ({ checkoutService, children }) => {\n    const [config, setConfig] = useState<StoreConfig | undefined>();\n    const languageService = useMemo(() => getLanguageService(), []);\n\n    const getContextValue = memoizeOne((storeConfig?: StoreConfig) => {\n        return {\n            currency: storeConfig ? createCurrencyService(storeConfig) : undefined,\n            date: storeConfig\n                ? {\n                      inputFormat: storeConfig.inputDateFormat,\n                  }\n                : undefined,\n            language: languageService,\n        };\n    });\n\n    useEffect(() => {\n        const unsubscribe = checkoutService.subscribe(\n            ({ data }) => {\n                setConfig(data.getConfig());\n            },\n            ({ data }) => data.getConfig(),\n        );\n\n        return () => {\n            unsubscribe();\n        };\n    }, [checkoutService]);\n\n    const contextValue = useMemo(() => getContextValue(config), [config, getContextValue]);\n\n    return <LocaleContext.Provider value={contextValue}>{children}</LocaleContext.Provider>;\n};\n\nexport default LocaleProvider;\n","import { type Consignment, type LineItemMap } from '@bigcommerce/checkout-sdk';\nimport { some } from 'lodash';\n\nimport hasUnassignedLineItems from './hasUnassignedLineItems';\n\nexport default function isUsingMultiShipping(\n    consignments: Consignment[],\n    lineItems: LineItemMap,\n): boolean {\n    if (consignments.length > 1) {\n        return true;\n    }\n\n    if (\n        some(consignments, (consignment) => consignment.lineItemIds.length) &&\n        hasUnassignedLineItems(consignments, lineItems)\n    ) {\n        return true;\n    }\n\n    return false;\n}\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nexport default PaymentMethodId;\n","import React, { type FunctionComponent } from 'react';\n\nexport const CartSummarySkeleton: FunctionComponent = () => (\n    <aside className=\"layout-cart\">\n        <article className=\"cart optimizedCheckout-orderSummary checkout-page-skeleton checkout-page-skeleton--cart\">\n            <div className=\"item--first\">\n                <div />\n                <div />\n            </div>\n            <div className=\"item\">\n                <div />\n            </div>\n            <div className=\"item--product\">\n                <div className=\"figure\" />\n                <div className=\"name\" />\n                <div />\n            </div>\n            <div className=\"item\">\n                <div />\n                <div />\n            </div>\n            <div className=\"item\">\n                <div />\n                <div />\n            </div>\n            <div className=\"item--coupon\">\n                <div />\n            </div>\n            <div className=\"item--total\">\n                <div />\n                <div />\n            </div>\n            <div className=\"item--tax\">\n                <div />\n            </div>\n            <div className=\"item--last\">\n                <div />\n                <div />\n            </div>\n        </article>\n    </aside>\n);\n"],"names":["IconSize","withIconContainer","OriginalComponent","memo","additionalClassName","size","testId","rest","className","Small","Large","Medium","A","displayNamePrefix","hasSelectedShippingOptions","consignments","length","every","consignment","selectedShippingOption","id","type","CustomError","Error","constructor","data","message","title","name","super","captureStackTrace","this","stack","setDefaultValues","defaultError","defaultTitle","ref","useRef","containerRef","createRef","focusOnError","current","erroredFormField","querySelector","join","focus","preventScroll","offsetParent","scrollIntoView","behavior","block","inline","handleSubmitCapture","useCallback","setSubmitted","setTimeout","renderContent","noValidate","onSubmitCapture","values","navigateToOrderConfirmation","orderId","url","toString","window","location","pathname","replace","Promise","noop","ErrorLevelType","height","role","viewBox","width","xmlns","d","fill","ErrorBoundary","Component","state","getDerivedStateFromError","error","componentDidCatch","filter","errorLogger","props","log","errorCode","render","children","fallback","FormContext","createContext","isSubmitted","FormProvider","initialIsSubmitted","useState","contextValue","useMemo","Provider","value","isFunction","hasUnassignedLineItems","lineItems","reduce","total","lineItemIds","physicalItems","item","addedByPromotion","AccountService","requestSender","createRequestSender","create","body","put","then","response","customer","AccountCreationRequirementsError","requirements","getLanguageService","translate","prototype","AccountCreationFailedError","isDefaultOrderPayment","payment","isGiftCertificatePayment","isStoreCreditPayment","order","gatewayPayment","payments","find","detail","instructions","minLength","renderPasswordInput","field","TextInput","renderPasswordConfirmationInput","passwordLabelContent","TranslatedString","passwordConfirmationLabelContent","FormField","input","labelContent","withLanguage","mapPropsToValues","password","confirmPassword","handleSubmit","onSignUp","validationSchema","language","passwordRequirements","description","numeric","alpha","required","matches","min","max","oneOf","isSigningUp","customerCanBeCreated","Fieldset","legend","Legend","Form","Button","isLoading","variant","Primary","Alert","Success","MandateTextComponent","mandateText","providerId","methodId","Object","keys","entries","map","index","key","PaymentsWithMandates","paymentsWithMandates","mandate","href","rel","target","isPaymentWithMandate","OrderStatusMessage","config","orderNumber","orderStatus","supportEmail","supportPhoneNumber","TranslatedHtml","checkoutSettings","features","status","hasDigitalItems","isDownloadable","ContinueButton","siteLink","action","method","Secondary","mapFromPayments","amount","code","remaining","used","balance","purchaseDate","getStoreCreditAmount","mapToOrderSummarySubtotalsProps","baseAmount","discountAmount","isTaxIncluded","shippingCostBeforeDiscount","handlingCostTotal","giftWrappingCostTotal","coupons","taxes","fees","isShippingDiscountDisplayEnabled","shippingAmount","shipping","discounts","discount","getTotalAutomaticDiscount","getOrderShippingCostAfterAutomaticDiscount","subtotalAmount","shippingAmountBeforeDiscount","undefined","giftWrappingAmount","storeCreditAmount","handlingAmount","giftCertificates","handleClick","throttle","print","onClick","preventDefault","OrderSummary","lazy","retry","OrderSummaryDrawer","OrderSummaryContainer","currency","shopperCurrency","MobileView","matched","LazyContainer","loadingSkeleton","headerLink","storeCurrency","orderAmount","CartSummarySkeleton","OrderConfirmationPage","hasSignedUp","onErrorModalClose","paymentInstructions","shopperConfig","shouldShowPasswordForm","isEmbedded","billingAddress","firstName","dangerouslySetInnerHTML","__html","sanitize","getPasswordRequirements","customerId","ErrorModal","onClose","shouldShowErrorCode","OrderConfirmation","containerId","createAccount","createEmbeddedMessenger","embeddedStylesheet","setError","setHasSignedUp","setIsSigningUp","embeddedMessengerRef","checkoutState","getOrder","getConfig","statuses","isLoadingOrder","checkoutService","loadOrder","analyticsTracker","useAnalytics","handleUnhandledError","e","postError","useEffect","links","messenger","parentOrigin","receiveStyles","styles","append","postFrameLoaded","contentId","orderPurchased","catch","OrderConfirmationPageSkeleton","storeProfile","orderEmail","storePhoneNumber","isExperimentEnabled","err","publicPath","sentryConfig","sentrySampleRate","accountService","createErrorLogger","sentry","errorTypes","sampleRate","locale","getLocale","shouldWarnMutation","extensionService","ExtensionService","createEmbeddedCheckoutStylesheet","newsletter","LocaleProvider","CheckoutProvider","AnalyticsProvider","ExtensionProvider","ThemeProvider","formFields","customFields","custom","schema","label","fieldType","maxValue","minValue","nullable","transform","originalValue","isNaN","CHECKBOX","requiredErrorMessage","query","isMobileView","matchMedia","AlertType","icon","describedBy","useId","Info","Warning","IconError","renderDefaultIcon","Toggle","openByDefault","isOpen","toggle","displayAdditionalInformation","shippingCostAfterDiscount","themeV2","imageUrl","alt","src","transitTime","additionalDescription","cost","ShopperCurrency","isBuyNowCart","cart","lastPathName","split","pop","params","URLSearchParams","search","source","get","toCustomerCurrency","rows","content","i","push","skeleton","findLineItems","compact","itemId","isNil","parentId","renderWhileLoading","createInjectHoc","ContextComponent","options","pickProps","InnerDecoratedComponent","DecoratedComponent","context","useContext","injectedProps","pickBy","isEmpty","mergedProps","displayName","isCustomError","customError","mapAddressToFormValues","fields","address","addressFormValues","default","defaultValue","fieldName","fieldId","fieldValue","getValue","shouldSaveAddress","stateOrProvince","stateOrProvinceCode","DATE","Date","getDefaultValue","year","month","day","Number","ExtensionActionType","onChange","footer","isFloatingLabelEnabled","renderField","htmlFor","errorId","kebabCase","ConsoleErrorLogger","console","customConsole","tags","level","meta","info","warn","NoopErrorLogger","FILENAME_PREFIX","SeverityLevelEnum","SentryErrorLogger","handleBeforeSend","event","hint","exception","shouldReportExceptions","originalException","handleRewriteFrame","frame","filename","RegExp","consoleLogger","dsn","sentryOnLoad","Sentry","init","beforeSend","bind","denyUrls","integrations","globalHandlersIntegration","onerror","onunhandledrejection","rewriteFramesIntegration","lazyLoadIntegration","addIntegration","iteratee","payload","loadSentry","computeErrorCode","captureException","mapToSentryLevel","extra","fingerprint","logMessage","captureMessage","loaderPromise","exec","loadScript","attributes","crossorigin","async","INFO","WARNING","Debug","DEBUG","ERROR","exceptions","stacktrace","frames","startsWith","serviceConfig","setCheckoutState","getState","unsubscribeRef","subscribe","newCheckoutState","getPasswordRequirementsFromConfig","minlength","allSlashes","LoadingSkeleton","shouldShowChildren","Boolean","style","position","left","top","getShippingCostAfterAutomaticDiscount","discountTotal","DEFAULT_OPTIONS","count","interval","fn","resolve","PaymentMethodId","hidden","InnerField","component","form","InnerFieldInput","hasError","errors","prevForm","prevField","prevProps","nextForm","nextField","nextProps","prevValueRef","isDate","getTime","createElement","renderInnerField","CustomerViewType","handleOnRequestClose","nativeEvent","renderErrorCode","isRequestError","headers","Modal","additionalModalClassName","aria","labelledby","header","ModalHeader","onRequestClose","shouldBeTranslatedAsHtml","isHtmlError","translationKey","createReloadCheckoutHandler","commandType","ReloadCheckout","handler","loadCheckout","getCheckout","include","createSetIframeStyleHandler","extension","SetIframeStyle","extensionContainer","document","iframe","assign","createShowLoadingIndicatorHandler","dispatch","ShowLoadingIndicator","show","SHOW_LOADING_INDICATOR","createReRenderShippingFormHandler","ReRenderShippingForm","RE_RENDER_SHIPPING_FORM","now","createReRenderShippingStepHandler","ReRenderShippingStep","createGetConsignmentHandler","queryType","GetConsignments","useCache","postMessageToExtension","handlers","setDispatch","loadExtensions","renderExtension","container","region","getExtensionByRegion","registerHandlers","extensionId","removeListeners","clearExtensionCache","removers","remover","isRegionEnabled","handlerProps","forEach","createCommandHandlerFactory","handlerFactory","isCommandHandler","handleExtensionCommand","createQueryHandlerFactory","isQueryHandler","handleExtensionQuery","isValidAddress","isValidSync","WHITELIST_REGEXP","maxLength","trim","concat","getCustomFormFieldsValidationSchema","getTranslateAddressError","requiredFieldErrorTranslationIds","countryCode","lastName","company","address1","address2","city","postalCode","phone","memoize","getFormFieldsValidationSchema","DynamicFormFieldType","forwardRef","placeholder","includes","getPaymentProviderCustomer","paymentWithCustomCheckout","providerWithCustomCheckout","isPayPalFastlaneEnabled","paymentProviderCustomer","paypalFastlaneCustomer","customerAuthenticationState","authenticationState","paypalFastlaneAddresses","addresses","shouldShowPayPalFastlaneLabel","shouldShowPayPalFastlaneShippingForm","CheckoutContext","useCheckout","queries","mobile","AmazonPayV2Button","module","ApplePayButton","BigCommercePaymentsButton","BigcommercePaymentsPayLaterButton","CheckoutButton","GooglePayButton","PayPalCommerceCreditButton","PayPalCommerceButton","StripeLinkV2Button","ComponentRegistry","resolveCheckoutButton","resolveId","components","resolveLazyComponent","ExtensionContext","NoopCheckoutSupport","isSupported","EmbeddedCheckoutUnsupportedError","EmbeddedCheckoutSupport","unsupportedMethods","langService","ids","methods","UNSUPPORTED_METHODS","CheckoutPageSkeletonDesktop","CheckoutPageSkeletonMobile","withExtension","waitInterval","loginUrl","isWaiting","setIsWaiting","waitToken","clearTimeout","LoadingOverlay","hideContentWhenLoading","buttonsCount","Array","_v","CheckoutButtonV1Resolver","paypalCommerceIds","withCheckout","getCustomer","isPaymentDataRequired","isInitializedCustomer","getInitializeCustomerError","providers","remoteCheckoutProviders","availableMethodIds","isGuest","checkEmbeddedSupport","isPaymentStepActive","onUnhandledError","onWalletButtonClick","isPayPalCommerce","ResolvedCheckoutButton","Suspense","deinitialize","deinitializeCustomer","initialize","initializeCustomer","isShowingWalletButtonsOnTop","onError","isExecutingPaymentMethodCheckout","executePaymentMethodCheckout","showSuggestion","setShowSuggestion","bolt","onInit","hasBoltAccount","email","customerSuggestionInit","stopPropagation","provider","providerFlow","IconBolt","checkout","handleExecutePaymentMethodCheckout","customerSuggestionExecute","Bolt","SUPPORTED_SIGNOUT_METHODS","isSupportedSignoutMethod","canSignOut","getBillingAddress","isSigningOut","checkoutLink","logoutLink","isSignedIn","shouldRedirectToStorefrontForAuth","signOut","signOutCustomer","onSignOut","onSignOutError","isCartEmpty","reload","isErrorWithType","Tiny","promotions","banners","result","promotion","banner","text","compactView","usePayPalFastlaneAddress","shippingAddress","showPayPalFastlaneAddressLabel","StaticAddress","AddressType","Shipping","PoweredByPayPalFastlaneLabel","StaticConsignmentItemList","StaticShippingOption","consignmentNumber","getShippingCountries","addressWithoutLocalization","localizeAddress","localizedProvince","localizedCountry","getLineItemsCount","ConsignmentLineItemDetail","isMultiShippingSummary","isMultiShippingMode","ShippingOptionExpiredError","heading","isActive","isComplete","isEditable","onEdit","summary","isBusy","suggestion","onExpanded","isClosed","setIsClosed","contentRef","timeoutRef","timeoutDelay","getParentContainer","parentElement","classList","contains","focusStep","delay","parseFloat","getComputedStyle","transitionDuration","getChildInput","topOffset","innerHeight","getBoundingClientRect","scrollY","pageYOffset","getScrollPosition","scrollTo","handleTransitionEnd","node","done","addEventListener","onAnimationEnd","CSSTransition","addEndListener","classNames","enter","exit","in","mountOnEnter","onExited","timeout","unmountOnExit","CheckoutStepType","some","lineItem","isShippingRequired","customItems","getCustomerStepStatus","getCart","hasEmail","isUsingWallet","isUsingStripeLinkAndCheckoutPageIsReloaded","shouldUseStripeLinkByMinimumAmount","StripeUPE","getStripeLinkAndCheckoutPageIsReloaded","Customer","stripeLinkAuthenticationState","isRequired","getBillingStepStatus","getBillingAddressFields","billingAddressFields","hasAddress","billingAddressCustomFields","hasCustomFields","isAmazonPayBillingStepComplete","Billing","getShippingStepStatus","getShippingAddress","getConsignments","getShippingAddressFields","shippingAddressFields","hasOptions","hasUnassignedItems","isCustomShippingSelected","getPaymentStepStatus","Payment","getOrderSubmitStatus","isSubmittingOrder","customerStep","shippingStep","billingStep","paymentStep","steps","defaultActiveStep","step","isPrevStepComplete","slice","prevStep","CartSummary","CartSummaryDrawer","Checkout","isBillingSameAsShipping","isRedirecting","isSubscribed","buttonConfigs","handleToggleMultiShipping","setState","navigateToNextIncompleteStep","activeStepIndex","findIndex","activeStep","previousStep","Math","trackStepCompleted","navigateToStep","embeddedMessenger","postComplete","SubscribeSessionStorage","removeSubscribeStatus","methodIds","embeddedSupport","handleCartChangedError","handleConsignmentsUpdated","prevHasSelectedShippingOptions","activeStepType","defaultStepType","newHasSelectedShippingOptions","isDefaultStepPaymentOrBilling","isShippingStepFinished","handleCloseErrorModal","handleExpanded","trackStepViewed","handleError","handleEditStep","handleReady","isDefault","handleNewsletterSubscription","subscribed","handleSignOut","cartUrl","isPriceHiddenFromGuests","isGuestEnabled","postSignedOut","setCustomerViewType","Guest","handleShippingNextStep","handleShippingSignIn","Login","handleShippingCreateAccount","CreateAccount","customerViewType","createAccountUrl","handleBeforeExit","exitCheckout","handleWalletButtonClick","methodName","walletButtonClick","reloadWindow","componentWillUnmount","unsubscribeFromConsignments","removeEventListener","componentDidMount","loadPaymentMethodByIds","subscribeToConsignments","supportedProviders","configs","getPaymentMethods","errorFlashMessages","getFlashMessages","postLoaded","prerendering","checkoutBegin","once","hasMultiShippingEnabled","checkoutBillingSameAsShippingEnabled","defaultNewsletterSignupOption","defaultNewsletterSignup","isUsingMultiShipping","errorModal","mapCheckoutComponentErrorMessage","isPending","extensionState","isShowingLoadingIndicator","renderStep","renderCartSummary","renderCustomerStep","renderShippingStep","renderBillingStep","renderPaymentStep","isWalletButtonsOnTop","onAccountCreated","onChangeViewType","onContinueAsGuest","onContinueAsGuestError","onReady","onSignIn","onSignInError","onSubscribeToNewsletter","viewType","hasCartChanged","AddressFormSkeleton","cartHasChanged","navigateNextStep","onCreateAccount","onToggleMultiShipping","setIsMultishippingMode","StaticBillingAddress","ChecklistSkeleton","onCartChangedError","onFinalize","onSubmit","onSubmitError","Extension","clearError","withAnalytics","submitOrderError","getSubmitOrderError","guestCheckoutEnabled","checkoutUserExperienceSettings","walletButtonsOnTop","floatingLabelEnabled","loginLink","createAccountLink","cartLink","displaySettings","hidePriceFromGuests","subscribeToConsignmentsSelector","subscriber","walletButtonsOnTopFlag","isLoadingCheckout","useLoadCheckout","checkoutId","initialState","setIsLoadingCheckout","useExtensions","fetchDataWithRetry","maxRetries","attemptFetch","attemptSequence","all","hydrateInitialState","scheduler","yield","CheckoutPage","createEmbeddedCheckoutSupport","setSubscribeStatus","shouldSubscribe","sessionStorage","setItem","getSubscribeStatus","getItem","removeItem","mapToPropsOrFactory","mapToProps","isMapToPropsFactory","mappedProps","setIsOpen","analyticsContext","ButtonVariant","ButtonSize","getClassName","isFullWidth","Action","disabled","normalizeAddress","omit","paypalFastlaneAddress","bcAddress","isEqual","isEqualToPayPalFastlaneAddress","getNestedValue","obj","path","acc","formikContext","touched","renderMessage","Consumer","ADD_ATTR","toCSSRule","selector","mergedStyles","EmbeddedCheckoutStyleParser","parse","rules","secondaryText","secondaryHeading","link","hover","button","active","secondaryButton","select","checkbox","radio","checklist","checked","discountBanner","loadingBanner","orderSummary","EmbeddedCheckoutStylesheet","embeddedCheckoutStyleParser","_parser","head","appendChild","sheet","CSSStyleSheet","rule","insertRule","appendStylesheet","toUpperCase","registry","results","resolveIds","resolverId","sort","a","b","matchedName","extensionContext","quantity","appearFocused","ThemeContext","useThemeContext","themeContext","useNewTheme","isPayPalFastlaneCustomer","filterError","LoadingSpinner","BigCommercePaymentsCreditCards","BigCommercePaymentsFastLane","OrderConfirmationPageSkeletonDesktop","OrderConfirmationPageSkeletonMobile","MOBILE_MAX_WIDTH","countries","country","states","subdivisions","ExtensionRegionContainer","extensionRegionToContainerMap","ShippingShippingAddressFormBefore","ShippingShippingAddressFormAfter","ShippingSelectedShippingMethod","PaymentPaymentMethodListBefore","SummaryAfter","SummaryLastItemAfter","getExtensions","extensions","showPayPalFastlaneLabel","getBillingCountries","LocaleContext","useLocale","stripeLinkMinAmount","cartAmount","isStripeLinkMinAmount","EMPTY_ARRAY","freeze","SUPPORTED_METHODS","getSupportedMethodIds","renderItemContent","option","renderProductOptionDetails","createAnalyticsService","createFn","createArguments","getStepTracker","getBodlService","getBraintreeAnalyticTracker","getPayPalCommerceAnalyticTracker","trackCheckoutStarted","currentStep","stepCompleted","trackOrderComplete","customerEmailEntry","customerPaymentMethodExecuted","showShippingMethods","selectedPaymentMethod","clickPayButton","paymentRejected","paymentComplete","AnalyticsContext","SMALL_SCREEN_MAX_WIDTH","currentScript","configurePublicPath","scriptPath","substr","renderCheckout","configuredPublicPath","CheckoutApp","getElementById","renderOrderConfirmation","OrderConfirmationApp","PaypalCommerceCreditCards","PayPalCommerceAcceleratedCheckout","FALLBACK_LOCALE","languageService","fallbackLocale","fallbackTranslations","initializeLanguageService","defaultLocale","defaultTranslations","setPrototypeOf","object","__proto__","Braintree","BraintreeAcceleratedCheckout","experimentName","fallbackValue","hasOwnProperty","call","extensionReducer","shippingFormRenderTimestamp","useReducer","extensionValues","unmountContentWhenLoading","loadingUI","display","closeButtonLabel","additionalHeaderClassName","additionalBodyClassName","shouldShowCloseButton","handleClose","ariaHideApp","bodyOpenClassName","base","afterOpen","beforeClose","closeTimeoutMS","overlayClassName","shouldCloseOnEsc","shouldCloseOnOverlayClick","setConfig","getContextValue","storeConfig","date","inputFormat","inputDateFormat","unsubscribe"],"sourceRoot":""}