{"version":3,"file":"cart-summary-104d8291.js","mappings":"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","sources":["webpack://checkout/./packages/core/src/app/cart/CartSummary.tsx","webpack://checkout/./packages/core/src/app/cart/EditLink.tsx","webpack://checkout/./packages/core/src/app/coupon/AppliedCoupon.tsx","webpack://checkout/./packages/core/src/app/giftCertificate/AppliedGiftCertificate.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconRemove.tsx","webpack://checkout/./packages/core/src/app/cart/AppliedRedeemable.tsx","webpack://checkout/./packages/core/src/app/cart/AppliedRedeemables.tsx","webpack://checkout/./packages/core/src/app/cart/Redeemable.tsx","webpack://checkout/./packages/core/src/app/cart/mapToCartSummaryProps.ts","webpack://checkout/./packages/core/src/app/cart/mapToRedeemableProps.ts","webpack://checkout/./packages/core/src/app/cart/withRedeemable.tsx","webpack://checkout/./packages/core/src/app/cart/mapToOrderSummarySubtotalsProps.ts","webpack://checkout/./packages/core/src/app/order/OrderSummaryHeader.tsx","webpack://checkout/./packages/core/src/app/avalara-certificates/CertificateSelect.tsx","webpack://checkout/./packages/core/src/app/avalara-certificates/services/LambdaService.ts","webpack://checkout/./packages/core/src/app/avalara-certificates/CreateCertificate.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummary.tsx"],"sourcesContent":["import { Checkout, ShopperCurrency, StoreCurrency } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent } from 'react';\n\nimport { withCheckout } from '../checkout';\nimport { isBuyNowCart } from '../common/utility';\nimport OrderSummary from '../order/OrderSummary';\n\nimport EditLink from './EditLink';\nimport mapToCartSummaryProps from './mapToCartSummaryProps';\nimport { RedeemableProps } from './Redeemable';\nimport withRedeemable from './withRedeemable';\n\nexport type WithCheckoutCartSummaryProps = {\n    checkout: Checkout;\n    cartUrl: string;\n    storeCurrency: StoreCurrency;\n    shopperCurrency: ShopperCurrency;\n    storeCreditAmount?: number;\n} & RedeemableProps;\n\nconst CartSummary: FunctionComponent<WithCheckoutCartSummaryProps> = ({ cartUrl, ...props }) => {\n    const headerLink = isBuyNowCart() ? null : <EditLink url={cartUrl} />;\n\n    return withRedeemable(OrderSummary)({\n        ...props,\n        cartUrl,\n        headerLink,\n    });\n};\n\nexport default withCheckout(mapToCartSummaryProps)(CartSummary);\n","import React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nexport interface EditLinkProps {\n    className?: string;\n    url: string;\n}\n\nconst EditLink: FunctionComponent<EditLinkProps> = ({ className, url }) => (\n    <a\n        className={className || 'cart-header-link'}\n        data-test=\"cart-edit-link\"\n        href={url}\n        id=\"cart-edit-link\"\n        target=\"_top\"\n    >\n        <TranslatedString id=\"cart.edit_cart_action\" />\n    </a>\n);\n\nexport default memo(EditLink);\n","import { Coupon } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nexport interface AppliedCouponProps {\n    coupon: Coupon;\n}\n\nconst AppliedCoupon: FunctionComponent<AppliedCouponProps> = ({ coupon }) => (\n    <div className=\"redeemable-column redeemable-info\" data-test=\"redeemable-item--coupon\">\n        <span className=\"redeemable-info-header\">\n            <span className=\"redeemable-info-header--highlight\" data-test=\"coupon-amount\">\n                {coupon.displayName}\n            </span>{' '}\n            <TranslatedString id=\"redeemable.coupon_text\" />\n        </span>\n\n        <span className=\"redeemable-info-subHeader\" data-test=\"coupon-code\">\n            {coupon.code}\n        </span>\n    </div>\n);\n\nexport default memo(AppliedCoupon);\n","import { GiftCertificate } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { ShopperCurrency } from '../currency';\n\nexport interface AppliedGiftCertificateProps {\n    giftCertificate: GiftCertificate;\n}\n\nconst AppliedGiftCertificate: FunctionComponent<AppliedGiftCertificateProps> = ({\n    giftCertificate,\n}) => (\n    <div className=\"redeemable-column redeemable-info\" data-test=\"redeemable-item--giftCertificate\">\n        <span className=\"redeemable-info-header\">\n            <span className=\"redeemable-info-header--highlight\" data-test=\"giftCertificate-amount\">\n                <ShopperCurrency amount={giftCertificate.used} />\n            </span>{' '}\n            <TranslatedString id=\"redeemable.gift_certificate_text\" />\n        </span>\n\n        <span className=\"redeemable-info-subHeader\">\n            {giftCertificate.remaining > 0 && (\n                <span className=\"redeemable-info-subHeader--remaining\">\n                    <TranslatedString id=\"redeemable.gift_certificate_remaining_text\" />{' '}\n                    <span data-test=\"giftCertificate-remaining\">\n                        <ShopperCurrency amount={giftCertificate.remaining} />\n                    </span>\n                </span>\n            )}\n\n            <span data-test=\"giftCertificate-code\">{giftCertificate.code}</span>\n        </span>\n    </div>\n);\n\nexport default memo(AppliedGiftCertificate);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconRemove: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M14.59 8L12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconRemove);\n","import classNames from 'classnames';\nimport React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { IconRemove } from '../ui/icon';\n\nimport './AppliedRedeemable.scss';\n\nexport interface AppliedRedeemableProps {\n    isRemoving: boolean;\n    onRemove(): void;\n}\n\nconst AppliedRedeemable: FunctionComponent<AppliedRedeemableProps> = ({\n    children,\n    isRemoving,\n    onRemove,\n}) => (\n    <div className=\"form-checklist-header\">\n        <div className=\"form-checklist-checkbox optimizedCheckout-form-checklist-checkbox\">\n            <span className=\"is-srOnly\">\n                <TranslatedString id=\"redeemable.applied_text\" />\n            </span>\n        </div>\n\n        <div className=\"form-label form-label-redeemable\">\n            <div className=\"redeemable\">\n                {children}\n                <div className=\"redeemable-column redeemable-actions\">\n                    <button\n                        className={classNames('redeemable-remove', { 'is-loading': isRemoving })}\n                        data-test=\"redeemable-remove\"\n                        disabled={isRemoving}\n                        onClick={onRemove}\n                        type=\"button\"\n                    >\n                        <IconRemove />\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n);\n\nexport default AppliedRedeemable;\n","import { Coupon, GiftCertificate } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\n\nimport { AppliedCoupon } from '../coupon';\nimport { AppliedGiftCertificate } from '../giftCertificate';\n\nimport AppliedRedeemable from './AppliedRedeemable';\n\ninterface AppliedCouponProps {\n    coupon: Coupon;\n    isRemoving?: boolean;\n    onRemoved(code: string): void;\n}\n\nconst AppliedCouponChecklistItem: FunctionComponent<AppliedCouponProps> = ({\n    coupon,\n    onRemoved,\n    isRemoving = false,\n}) => {\n    const handleRemove = useCallback(() => {\n        onRemoved(coupon.code);\n    }, [coupon, onRemoved]);\n\n    return (\n        <li className=\"form-checklist-item optimizedCheckout-form-checklist-item\">\n            <AppliedRedeemable isRemoving={isRemoving} onRemove={handleRemove}>\n                <AppliedCoupon coupon={coupon} />\n            </AppliedRedeemable>\n        </li>\n    );\n};\n\ninterface AppliedGiftCertificateProps {\n    giftCertificate: GiftCertificate;\n    isRemoving?: boolean;\n    onRemoved(code: string): void;\n}\n\nconst AppliedGiftCertificateChecklistItem: FunctionComponent<AppliedGiftCertificateProps> = ({\n    giftCertificate,\n    onRemoved,\n    isRemoving = false,\n}) => {\n    const handleRemove = useCallback(() => {\n        onRemoved(giftCertificate.code);\n    }, [giftCertificate, onRemoved]);\n\n    return (\n        <li className=\"form-checklist-item optimizedCheckout-form-checklist-item\">\n            <AppliedRedeemable isRemoving={isRemoving} onRemove={handleRemove}>\n                <AppliedGiftCertificate giftCertificate={giftCertificate} />\n            </AppliedRedeemable>\n        </li>\n    );\n};\n\nexport interface AppliedRedeemablesProps {\n    coupons?: Coupon[];\n    giftCertificates?: GiftCertificate[];\n    isRemovingGiftCertificate?: boolean;\n    isRemovingCoupon?: boolean;\n    onRemovedCoupon(code: string): void;\n    onRemovedGiftCertificate(code: string): void;\n}\n\nconst AppliedRedeemables: FunctionComponent<AppliedRedeemablesProps> = ({\n    coupons = [],\n    giftCertificates = [],\n    isRemovingCoupon = false,\n    isRemovingGiftCertificate = false,\n    onRemovedCoupon,\n    onRemovedGiftCertificate,\n}) => {\n    if (!coupons.length && !giftCertificates.length) {\n        return null;\n    }\n\n    return (\n        <ul\n            className=\"form-checklist optimizedCheckout-form-checklist\"\n            data-test=\"redeemables-list\"\n        >\n            {coupons.map((coupon) => (\n                <AppliedCouponChecklistItem\n                    coupon={coupon}\n                    isRemoving={isRemovingCoupon}\n                    key={coupon.code}\n                    onRemoved={onRemovedCoupon}\n                />\n            ))}\n\n            {giftCertificates.map((giftCertificate) => (\n                <AppliedGiftCertificateChecklistItem\n                    giftCertificate={giftCertificate}\n                    isRemoving={isRemovingGiftCertificate}\n                    key={giftCertificate.code}\n                    onRemoved={onRemovedGiftCertificate}\n                />\n            ))}\n        </ul>\n    );\n};\n\nexport default memo(AppliedRedeemables);\n","import { CheckoutSelectors, RequestError } from '@bigcommerce/checkout-sdk';\nimport { memoizeOne } from '@bigcommerce/memoize';\nimport { FieldProps, FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, KeyboardEvent, memo, useCallback } from 'react';\nimport { object, string } from 'yup';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\nimport { FormContextType, FormProvider } from '@bigcommerce/checkout/ui';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { FormField, Label, TextInput } from '../ui/form';\nimport { Toggle } from '../ui/toggle';\n\nimport AppliedRedeemables, { AppliedRedeemablesProps } from './AppliedRedeemables';\n\nexport interface RedeemableFormValues {\n    redeemableCode: string;\n}\n\nexport type ReedemableChildrenProps = Pick<\n    RedeemableProps,\n    | 'onRemovedCoupon'\n    | 'onRemovedGiftCertificate'\n    | 'isRemovingGiftCertificate'\n    | 'isRemovingCoupon'\n    | 'coupons'\n    | 'giftCertificates'\n>;\n\nexport type RedeemableProps = {\n    appliedRedeemableError?: RequestError;\n    isApplyingRedeemable?: boolean;\n    isRemovingRedeemable?: boolean;\n    removedRedeemableError?: RequestError;\n    showAppliedRedeemables?: boolean;\n    shouldCollapseCouponCode?: boolean;\n    applyCoupon(code: string): Promise<CheckoutSelectors>;\n    applyGiftCertificate(code: string): Promise<CheckoutSelectors>;\n    clearError(error: Error): void;\n} & AppliedRedeemablesProps;\n\nconst Redeemable: FunctionComponent<\n    RedeemableProps & WithLanguageProps & FormikProps<RedeemableFormValues>\n> = ({ shouldCollapseCouponCode, showAppliedRedeemables, ...formProps }) => (\n    <Toggle openByDefault={!shouldCollapseCouponCode}>\n        {({ toggle, isOpen }) => (\n            <>\n                {shouldCollapseCouponCode && (\n                    <a\n                        aria-controls=\"redeemable-collapsable\"\n                        aria-expanded={isOpen}\n                        className=\"redeemable-label\"\n                        data-test=\"redeemable-label\"\n                        href=\"#\"\n                        onClick={preventDefault(toggle)}\n                    >\n                        <TranslatedString id=\"redeemable.toggle_action\" />\n                    </a>\n                )}\n                {!shouldCollapseCouponCode && (\n                    <div className=\"redeemable-label\">\n                        <TranslatedString id=\"redeemable.toggle_action\" />\n                    </div>\n                )}\n                {(isOpen || !shouldCollapseCouponCode) && (\n                    <div data-test=\"redeemable-collapsable\" id=\"redeemable-collapsable\">\n                        <RedeemableForm {...formProps} />\n                        {showAppliedRedeemables && <AppliedRedeemables {...formProps} />}\n                    </div>\n                )}\n            </>\n        )}\n    </Toggle>\n);\n\nconst RedeemableForm: FunctionComponent<\n    Partial<RedeemableProps> & FormikProps<RedeemableFormValues> & WithLanguageProps\n> = ({ appliedRedeemableError, isApplyingRedeemable, clearError = noop, submitForm, language }) => {\n    const {\n        checkoutState: {\n            statuses: { isSubmittingOrder }\n        }\n    } = useCheckout();\n\n    const handleSubmitForm = (setSubmitted: FormContextType['setSubmitted']) => {\n        if (isSubmittingOrder()) {\n            return;\n        }\n\n        setSubmitted(true);\n        submitForm();\n    }\n\n    const handleKeyDown = useCallback(\n        memoizeOne((setSubmitted: FormContextType['setSubmitted']) => (event: KeyboardEvent) => {\n            if (appliedRedeemableError) {\n                clearError(appliedRedeemableError);\n            }\n\n            // note: to prevent submitting main form, we manually intercept\n            // the enter key event and submit the \"subform\".\n            if (event.keyCode === 13) {\n                handleSubmitForm(setSubmitted);\n                event.preventDefault();\n            }\n        }),\n        [appliedRedeemableError, clearError, submitForm],\n    );\n\n    const handleSubmit = useCallback(\n        memoizeOne((setSubmitted: FormContextType['setSubmitted']) => () => {\n            handleSubmitForm(setSubmitted);\n        }),\n        [],\n    );\n\n    const renderLabel = useCallback(\n        (name: string) => (\n            <Label hidden htmlFor={name}>\n                <TranslatedString id=\"redeemable.code_label\" />\n            </Label>\n        ),\n        [],\n    );\n\n    const renderErrorMessage = useCallback((errorCode: string) => {\n        switch (errorCode) {\n            case 'min_purchase':\n                return <TranslatedString id=\"redeemable.coupon_min_order_total\" />;\n\n            case 'not_applicable':\n                return <TranslatedString id=\"redeemable.coupon_location_error\" />;\n\n            default:\n                return <TranslatedString id=\"redeemable.code_invalid_error\" />;\n        }\n    }, []);\n\n    const renderInput = useCallback(\n        (setSubmitted: FormContextType['setSubmitted']) =>\n            ({ field }: FieldProps) =>\n                (\n                    <>\n                        {appliedRedeemableError &&\n                            appliedRedeemableError.errors &&\n                            appliedRedeemableError.errors[0] && (\n                                <Alert type={AlertType.Error}>\n                                    {renderErrorMessage(appliedRedeemableError.errors[0].code)}\n                                </Alert>\n                            )}\n\n                        <div className=\"form-prefixPostfix\">\n                            <TextInput\n                                {...field}\n                                aria-label={language.translate('redeemable.code_label')}\n                                className=\"form-input optimizedCheckout-form-input\"\n                                onKeyDown={handleKeyDown(setSubmitted)}\n                                testId=\"redeemableEntry-input\"\n                            />\n\n                            <Button\n                                className=\"form-prefixPostfix-button--postfix\"\n                                disabled={isSubmittingOrder()}\n                                id=\"applyRedeemableButton\"\n                                isLoading={isApplyingRedeemable}\n                                onClick={handleSubmit(setSubmitted)}\n                                testId=\"redeemableEntry-submit\"\n                                variant={ButtonVariant.Secondary}\n                            >\n                                <TranslatedString id=\"redeemable.apply_action\" />\n                            </Button>\n                        </div>\n                    </>\n                ),\n        [\n            appliedRedeemableError,\n            handleKeyDown,\n            handleSubmit,\n            isApplyingRedeemable,\n            language,\n            isSubmittingOrder,\n            renderErrorMessage,\n        ],\n    );\n\n    const renderContent = useCallback(\n        memoizeOne(({ setSubmitted }: FormContextType) => (\n            <FormField\n                input={renderInput(setSubmitted)}\n                label={renderLabel}\n                name=\"redeemableCode\"\n            />\n        )),\n        [renderLabel, renderInput],\n    );\n\n    return (\n        <fieldset className=\"form-fieldset redeemable-entry\">\n            <FormProvider>{renderContent}</FormProvider>\n        </fieldset>\n    );\n};\n\nexport default withLanguage(\n    withFormik<RedeemableProps & WithLanguageProps, RedeemableFormValues>({\n        mapPropsToValues() {\n            return {\n                redeemableCode: '',\n            };\n        },\n\n        async handleSubmit(\n            { redeemableCode },\n            { props: { applyCoupon, applyGiftCertificate, clearError } },\n        ) {\n            const code = redeemableCode.trim();\n\n            try {\n                await applyGiftCertificate(code);\n            } catch (error) {\n                if (error instanceof Error) {\n                    clearError(error);\n                }\n\n                applyCoupon(code);\n            }\n        },\n\n        validationSchema({ language }: RedeemableProps & WithLanguageProps) {\n            return object({\n                redeemableCode: string().required(\n                    language.translate('redeemable.code_required_error'),\n                ),\n            });\n        },\n    })(memo(Redeemable)),\n);\n","import { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { WithCheckoutCartSummaryProps } from './CartSummary';\nimport mapToRedeemableProps from './mapToRedeemableProps';\n\nexport default function mapToCartSummaryProps(\n    context: CheckoutContextProps,\n): WithCheckoutCartSummaryProps | null {\n    const {\n        checkoutState: {\n            data: { getConfig, getCustomer, getCheckout },\n        },\n    } = context;\n\n    const checkout = getCheckout();\n    const config = getConfig();\n    const customer = getCustomer();\n    const redeemableProps = mapToRedeemableProps(context);\n\n    if (!checkout || !config || !redeemableProps || !customer) {\n        return null;\n    }\n\n    const { isStoreCreditApplied, grandTotal } = checkout;\n    const { storeCredit } = customer;\n\n    return {\n        checkout,\n        shopperCurrency: config.shopperCurrency,\n        cartUrl: config.links.cartLink,\n        storeCurrency: config.currency,\n        storeCreditAmount: isStoreCreditApplied ? Math.min(grandTotal, storeCredit) : undefined,\n        ...redeemableProps,\n    };\n}\n","import { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { EMPTY_ARRAY } from '../common/utility';\n\nimport { RedeemableProps } from './Redeemable';\n\nexport default function mapToRedeemableProps(\n    context: CheckoutContextProps,\n): RedeemableProps | null {\n    const {\n        checkoutService,\n        checkoutState: {\n            data: { getConfig, getCoupons, getGiftCertificates },\n            statuses: {\n                isApplyingCoupon,\n                isApplyingGiftCertificate,\n                isRemovingCoupon,\n                isRemovingGiftCertificate,\n            },\n            errors: {\n                getApplyCouponError,\n                getApplyGiftCertificateError,\n                getRemoveCouponError,\n                getRemoveGiftCertificateError,\n            },\n        },\n    } = context;\n\n    const config = getConfig();\n\n    if (!config) {\n        return null;\n    }\n\n    return {\n        appliedRedeemableError: getApplyCouponError() || getApplyGiftCertificateError(),\n        applyCoupon: checkoutService.applyCoupon,\n        applyGiftCertificate: checkoutService.applyGiftCertificate,\n        clearError: checkoutService.clearError,\n        coupons: getCoupons() || EMPTY_ARRAY,\n        giftCertificates: getGiftCertificates() || EMPTY_ARRAY,\n        isApplyingRedeemable: isApplyingCoupon() || isApplyingGiftCertificate(),\n        isRemovingCoupon: isRemovingCoupon(),\n        isRemovingGiftCertificate: isRemovingGiftCertificate(),\n        onRemovedCoupon: checkoutService.removeCoupon,\n        onRemovedGiftCertificate: checkoutService.removeGiftCertificate,\n        removedRedeemableError: getRemoveCouponError() || getRemoveGiftCertificateError(),\n        shouldCollapseCouponCode: config.checkoutSettings.isCouponCodeCollapsed,\n    };\n}\n","import React, { ComponentType, FunctionComponent } from 'react';\n\nimport { OrderSummaryProps, OrderSummarySubtotalsProps } from '../order';\n\nimport { WithCheckoutCartSummaryProps } from './CartSummary';\nimport mapToOrderSummarySubtotalsProps from './mapToOrderSummarySubtotalsProps';\nimport Redeemable from './Redeemable';\n\nexport default function withRedeemable(\n    OriginalComponent: ComponentType<OrderSummaryProps & OrderSummarySubtotalsProps>,\n): FunctionComponent<WithCheckoutCartSummaryProps & { headerLink?: any }> {\n    return (props) => {\n        const {\n            checkout,\n            storeCurrency,\n            shopperCurrency,\n            headerLink,\n            onRemovedCoupon,\n            onRemovedGiftCertificate,\n            storeCreditAmount,\n            ...redeemableProps\n        } = props;\n\n        return (\n            <OriginalComponent\n                {...mapToOrderSummarySubtotalsProps(checkout)}\n                additionalLineItems={\n                    <Redeemable\n                        {...{\n                            ...redeemableProps,\n                            onRemovedCoupon,\n                            onRemovedGiftCertificate,\n                        }}\n                    />\n                }\n                headerLink={headerLink}\n                lineItems={checkout.cart.lineItems}\n                onRemovedCoupon={onRemovedCoupon}\n                onRemovedGiftCertificate={onRemovedGiftCertificate}\n                shopperCurrency={shopperCurrency}\n                storeCreditAmount={storeCreditAmount}\n                storeCurrency={storeCurrency}\n                total={checkout.outstandingBalance}\n            />\n        );\n    };\n}\n","import { Checkout } from '@bigcommerce/checkout-sdk';\n\nimport { OrderSummarySubtotalsProps } from '../order';\nimport { hasSelectedShippingOptions } from '../shipping';\n\nexport default function mapToOrderSummarySubtotalsProps({\n    subtotal,\n    cart: { discountAmount, isTaxIncluded },\n    giftCertificates,\n    consignments,\n    handlingCostTotal,\n    shippingCostBeforeDiscount,\n    giftWrappingCostTotal,\n    coupons,\n    taxes,\n    fees,\n}: Checkout): OrderSummarySubtotalsProps {\n    return {\n        subtotalAmount: subtotal,\n        discountAmount,\n        giftCertificates,\n        giftWrappingAmount: giftWrappingCostTotal,\n        shippingAmount: hasSelectedShippingOptions(consignments)\n            ? shippingCostBeforeDiscount\n            : undefined,\n        handlingAmount: handlingCostTotal,\n        coupons,\n        taxes,\n        fees,\n        isTaxIncluded,\n    };\n}\n","import React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nconst OrderSummaryHeader: FunctionComponent = ({ children }) => (\n    <header className=\"cart-header\">\n        <h3 className=\"cart-title optimizedCheckout-headingSecondary\">\n            <TranslatedString id=\"cart.cart_heading\" />\n        </h3>\n        {children}\n    </header>\n);\n\nexport default OrderSummaryHeader;\n","import React, { useEffect, useState } from 'react';\nimport { Certificate } from './interfaces/Certificate';\nimport { fetchCertificates } from './services/LambdaService';\ninterface CertificateSelectProps {\n    onSelect: (certificate: string) => void;\n}\n\n\nconst CertificateSelect: React.FC<CertificateSelectProps> = ({onSelect }) => {\n    const [certificates, setCertificates] = useState<Certificate[]>([]);\n    const [selectedCertificate, setSelectedCertificate] = useState<string>('');\n\n    const handleChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        setSelectedCertificate(e.target.value);\n        onSelect(e.target.value);\n    };\n    useEffect(() => {\n        const getCertificates = async () => {\n            try {\n                const data = await fetchCertificates();\n                setCertificates(data);\n                console.log(certificates);\n            } catch (error) {\n                console.error('Error loading certificates:', error);\n            }\n        };\n\n        getCertificates();\n    }, []);\n\n    return (\n        <div className=\"dynamic-form-field floating-form-field dynamic-form-field--countryCode\">\n            <div className=\"form-field\">\n                <div className=\"floating-select-chevron\">\n                    <div className=\"icon\">\n                        <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"></path>\n                        </svg>\n                    </div>\n                </div>\n                <select\n                    aria-labelledby=\"certificateSelect-label certificateSelect-field-error-message\"\n                    className=\"floating-select form-select optimizedCheckout-form-select\"\n                    data-test=\"certificateSelect-select\"\n                    id=\"certificateSelect\"\n                    name=\"certificateSelect\"\n                    value={selectedCertificate}\n                    onChange={handleChange}\n                >\n                    <option value=\"\">Select a certificate</option>\n                        {certificates.map(certificate => (\n                            <option key={certificate.id} value={certificate.id}>\n                                {certificate.companyId}\n                            </option>\n                        ))}\n                </select>\n                <label htmlFor=\"certificateSelect\" id=\"certificateSelect-label\" className=\"floating-label form-label optimizedCheckout-form-label\">\n                    Certificate\n                </label>\n            </div>\n        </div>\n    );\n};\n\nexport default CertificateSelect;\n","import axios from 'axios';\nconst API_URL = 'https://yx1041xohb.execute-api.us-east-2.amazonaws.com/Prod/query';\n\nexport const fetchToken = async (): Promise<string | null> => {\n    try {\n        const response = await fetch('/customer/current.jwt?app_client_id=bzhkzdt0f7vrrg92o4iym8rxvd872qj', {\n            method: 'GET',\n            headers: { Accept: 'application/json', 'Content-Type': 'application/json' },\n        });\n\n        const data = await response.json();\n        return data.token;\n    } catch (error) {\n        console.error('Error fetching token:', error);\n        return null;\n    }\n};\nexport const getHeaders = (token: string) => {\n    return {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'X-Current-Customer': token,\n    };\n};\n\nexport const fetchCertificates = async () => {\n    try {\n        const token = await fetchToken();\n        if (!token) {\n            throw new Error('Token not available');\n        }\n        const headers = getHeaders(token);\n        const response = await axios.get(API_URL, { headers });\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching certificates:', error);\n        return [];\n    }\n};\n","import React, { useState } from 'react';\nimport { withCheckout } from '../checkout';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport CertificateSelect from './CertificateSelect';\n\ninterface Customer {\n    id: number;\n    email: string;\n    isGuest: boolean;\n}\n\ninterface CreateCertificateProps {\n    customer: Customer;\n}\n\nconst CreateCertificate: React.FC<CreateCertificateProps> = ({ customer }) => {\n    const [selectedCertificate, setSelectedCertificate] = useState<string>('');\n\n    const handleSelect = (certificate: string) => {\n        setSelectedCertificate(certificate);\n        console.log('Selected Certificate:', certificate);\n    };\n\n    return !customer.isGuest ? (\n        <>\n            <>\n                <button>Use Tax/ Exempt Certificate</button>\n                <CertificateSelect onSelect={handleSelect} />\n                {selectedCertificate && <p>Selected Certificate ID: {selectedCertificate}</p>}\n            </>\n        </>\n    ) : null;\n};\n\ninterface WithCheckoutCustomerInfoProps {\n    email: string;\n    customer: Customer;\n}\n\nfunction mapToWithCheckoutCustomerInfoProps({\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutCustomerInfoProps | null {\n    const {\n        data: { getBillingAddress, getCheckout, getCustomer },\n    } = checkoutState;\n\n    const billingAddress = getBillingAddress();\n    const checkout = getCheckout();\n    const customer = getCustomer();\n\n    if (!billingAddress || !checkout || !customer) {\n        return null;\n    }\n\n    return {\n        email: billingAddress.email || customer.email,\n        customer,\n    };\n}\n\nexport default withCheckout(mapToWithCheckoutCustomerInfoProps)(CreateCertificate);\n","import {\n    ExtensionRegion,\n    LineItemMap,\n    ShopperCurrency,\n    StoreCurrency,\n} from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, ReactNode, useEffect, useMemo } from 'react';\n\nimport { ExtensionRegionContainer, useExtensions } from '@bigcommerce/checkout/checkout-extension';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport OrderSummaryHeader from './OrderSummaryHeader';\nimport OrderSummaryItems from './OrderSummaryItems';\nimport OrderSummaryPrice from './OrderSummaryPrice';\nimport OrderSummarySection from './OrderSummarySection';\nimport OrderSummarySubtotals, { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\nimport OrderSummaryTotal from './OrderSummaryTotal';\nimport removeBundledItems from './removeBundledItems';\nimport { CreateCertificate } from '../avalara-certificates';\n\nexport interface OrderSummaryProps {\n    lineItems: LineItemMap;\n    total: number;\n    headerLink: ReactNode;\n    storeCurrency: StoreCurrency;\n    shopperCurrency: ShopperCurrency;\n    additionalLineItems?: ReactNode;\n}\n\nconst OrderSummary: FunctionComponent<OrderSummaryProps & OrderSummarySubtotalsProps> = ({\n    isTaxIncluded,\n    taxes,\n    storeCurrency,\n    shopperCurrency,\n    headerLink,\n    additionalLineItems,\n    lineItems,\n    total,\n    ...orderSummarySubtotalsProps\n}) => {\n    const { extensionService, isExtensionEnabled } = useExtensions();\n    const isSummaryLastItemAfterExtensionRegionEnabled = Boolean(\n        isExtensionEnabled() &&\n            extensionService.isRegionEnabled(ExtensionRegion.SummaryLastItemAfter),\n    );\n    const nonBundledLineItems = useMemo(() => removeBundledItems(lineItems), [lineItems]);\n    const displayInclusiveTax = isTaxIncluded && taxes && taxes.length > 0;\n\n    useEffect(() => {\n        if (isSummaryLastItemAfterExtensionRegionEnabled) {\n            void extensionService.renderExtension(\n                ExtensionRegionContainer.SummaryLastItemAfter,\n                ExtensionRegion.SummaryLastItemAfter,\n            );\n\n            return () => {\n                extensionService.removeListeners(ExtensionRegion.SummaryLastItemAfter);\n            };\n        }\n    }, [extensionService, isSummaryLastItemAfterExtensionRegionEnabled]);\n\n    return (\n        <article className=\"cart optimizedCheckout-orderSummary\" data-test=\"cart\">\n            <OrderSummaryHeader>{headerLink}</OrderSummaryHeader>\n\n            <OrderSummarySection>\n                <OrderSummaryItems displayLineItemsCount items={nonBundledLineItems} />\n            </OrderSummarySection>\n\n            {isSummaryLastItemAfterExtensionRegionEnabled && (\n                <div id={ExtensionRegionContainer.SummaryLastItemAfter} />\n            )}\n\n            <OrderSummarySection>\n                <OrderSummarySubtotals isTaxIncluded={isTaxIncluded} taxes={taxes} {...orderSummarySubtotalsProps} />\n                {additionalLineItems}\n            </OrderSummarySection>\n            <OrderSummarySection>\n                <CreateCertificate/>\n            </OrderSummarySection>\n\n            <OrderSummarySection>\n                <OrderSummaryTotal\n                    orderAmount={total}\n                    shopperCurrencyCode={shopperCurrency.code}\n                    storeCurrencyCode={storeCurrency.code}\n                />\n            </OrderSummarySection>\n\n            {displayInclusiveTax && <OrderSummarySection>\n                <h5\n                    className=\"cart-taxItem cart-taxItem--subtotal optimizedCheckout-contentPrimary\"\n                    data-test=\"tax-text\"\n                >\n                    <TranslatedString\n                        id=\"tax.inclusive_label\"\n                    />\n                </h5>\n                {(taxes || []).map((tax, index) => (\n                    <OrderSummaryPrice\n                        amount={tax.amount}\n                        key={index}\n                        label={tax.name}\n                        testId=\"cart-taxes\"\n                    />\n                ))}\n            </OrderSummarySection>}\n        </article>\n    );\n};\n\nexport default OrderSummary;\n"],"names":["cartUrl","props","headerLink","url","memo","className","href","id","target","coupon","displayName","TranslatedString","code","giftCertificate","ShopperCurrency","amount","used","remaining","height","viewBox","width","xmlns","d","children","isRemoving","onRemove","disabled","onClick","type","AppliedCouponChecklistItem","onRemoved","handleRemove","useCallback","AppliedGiftCertificateChecklistItem","coupons","giftCertificates","isRemovingCoupon","isRemovingGiftCertificate","onRemovedCoupon","onRemovedGiftCertificate","length","map","key","RedeemableForm","appliedRedeemableError","isApplyingRedeemable","clearError","noop","submitForm","language","isSubmittingOrder","handleSubmitForm","setSubmitted","handleKeyDown","memoizeOne","event","keyCode","preventDefault","handleSubmit","renderLabel","name","Label","hidden","htmlFor","renderErrorMessage","errorCode","renderInput","field","errors","Alert","TextInput","translate","onKeyDown","testId","Button","isLoading","variant","renderContent","FormField","input","label","withLanguage","withFormik","mapPropsToValues","redeemableCode","applyCoupon","applyGiftCertificate","trim","Error","validationSchema","required","shouldCollapseCouponCode","showAppliedRedeemables","formProps","Toggle","openByDefault","toggle","isOpen","mapToCartSummaryProps","context","getConfig","getCustomer","checkout","getCheckout","config","customer","redeemableProps","isStoreCreditApplied","grandTotal","storeCredit","shopperCurrency","links","cartLink","storeCurrency","currency","storeCreditAmount","Math","min","undefined","mapToRedeemableProps","checkoutService","data","getCoupons","getGiftCertificates","statuses","isApplyingCoupon","isApplyingGiftCertificate","getApplyCouponError","getApplyGiftCertificateError","getRemoveCouponError","getRemoveGiftCertificateError","removeCoupon","removeGiftCertificate","removedRedeemableError","checkoutSettings","isCouponCodeCollapsed","withRedeemable","OriginalComponent","subtotal","discountAmount","isTaxIncluded","consignments","handlingCostTotal","shippingCostBeforeDiscount","giftWrappingCostTotal","taxes","fees","cart","subtotalAmount","giftWrappingAmount","shippingAmount","hasSelectedShippingOptions","handlingAmount","additionalLineItems","Redeemable","lineItems","total","outstandingBalance","onSelect","useState","certificates","setCertificates","selectedCertificate","setSelectedCertificate","useEffect","fetch","method","headers","Accept","json","token","console","error","getHeaders","axios","log","value","onChange","e","certificate","companyId","withCheckout","getBillingAddress","billingAddress","email","isGuest","orderSummarySubtotalsProps","useExtensions","extensionService","isExtensionEnabled","isSummaryLastItemAfterExtensionRegionEnabled","Boolean","isRegionEnabled","nonBundledLineItems","useMemo","removeBundledItems","displayInclusiveTax","renderExtension","ExtensionRegionContainer","removeListeners","OrderSummarySection","OrderSummaryItems","displayLineItemsCount","items","OrderSummarySubtotals","OrderSummaryTotal","orderAmount","shopperCurrencyCode","storeCurrencyCode","tax","index","OrderSummaryPrice"],"sourceRoot":""}