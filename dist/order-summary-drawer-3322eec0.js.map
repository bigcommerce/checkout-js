{"version":3,"file":"order-summary-drawer-3322eec0.js","mappings":"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","sources":["webpack://checkout/./packages/core/src/app/order/getLineItemsCount.ts","webpack://checkout/./packages/ui/src/icon/IconCloseWithBorder.tsx","webpack://checkout/./packages/core/src/app/order/OrderModalSummarySubheader.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryModal.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryDrawer.tsx","webpack://checkout/./packages/core/src/app/ui/modal/ModalTrigger.tsx"],"sourcesContent":["import { LineItemMap } from '@bigcommerce/checkout-sdk';\n\nexport default function getLineItemsCount({\n    physicalItems,\n    digitalItems,\n    giftCertificates,\n    customItems,\n}: LineItemMap): number {\n    return (\n        physicalItems.length +\n        digitalItems.length +\n        giftCertificates.length +\n        (customItems || []).length\n    );\n}\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconCloseWithBorder: FunctionComponent = () => (\n    <svg fill=\"none\" height=\"37\" viewBox=\"0 0 38 37\" width=\"38\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M38 18.5C38 28.7173 29.7173 37 19.5 37C9.28273 37 1 28.7173 1 18.5C1 8.28273 9.28273 0 19.5 0C29.7173 0 38 8.28273 38 18.5Z\"\n            fill=\"#F3F3F3\"\n        />\n        <path\n            clipRule=\"evenodd\"\n            d=\"M24.6671 24.6674L12.9998 13.0002L14.4141 11.5859L26.0813 23.2532L24.6671 24.6674Z\"\n            fill=\"black\"\n            fillRule=\"evenodd\"\n        />\n        <path\n            clipRule=\"evenodd\"\n            d=\"M25.6674 13.0004L14.0002 24.6676L12.5859 23.2534L24.2532 11.5862L25.6674 13.0004Z\"\n            fill=\"black\"\n            fillRule=\"evenodd\"\n        />\n    </svg>\n);\n\nexport default withIconContainer(IconCloseWithBorder);\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport getItemsCount from './getItemsCount';\n\nexport interface OrderModalSummarySubheaderProps {\n    items: LineItemMap\n    amountWithCurrency: ReactNode;\n    shopperCurrencyCode: string;\n    storeCurrencyCode: string;\n}\n\nconst OrderModalSummarySubheader: FunctionComponent<OrderModalSummarySubheaderProps> = ({\n    items,\n    shopperCurrencyCode,\n    storeCurrencyCode,\n    amountWithCurrency,\n}) => {\n    const itemsCount = getItemsCount(items);\n    const hasDifferentCurrency = shopperCurrencyCode !== storeCurrencyCode;\n    const itemsText = itemsCount === 1 ? 'cart.item' : 'cart.items';\n\n    return <>\n        {itemsCount} <TranslatedString id={itemsText} /> | {amountWithCurrency} {\n            hasDifferentCurrency && <span>({shopperCurrencyCode})</span>\n        }\n    </>;\n};\n\nexport default memo(OrderModalSummarySubheader);\n","import {\n    LineItemMap,\n    ShopperCurrency as ShopperCurrencyType,\n    StoreCurrency,\n} from '@bigcommerce/checkout-sdk';\nimport React, { cloneElement, FunctionComponent, isValidElement, ReactNode } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { Button, IconCloseWithBorder } from '@bigcommerce/checkout/ui';\n\nimport { ShopperCurrency } from '../currency';\nimport { Modal, ModalHeader } from '../ui/modal';\nimport { isSmallScreen } from '../ui/responsive';\n\nimport OrderModalSummarySubheader from './OrderModalSummarySubheader';\nimport OrderSummaryItems from './OrderSummaryItems';\nimport OrderSummaryPrice from './OrderSummaryPrice';\nimport OrderSummarySection from './OrderSummarySection';\nimport OrderSummarySubtotals, { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\nimport OrderSummaryTotal from './OrderSummaryTotal';\n\nexport interface OrderSummaryDrawerProps {\n    children: ReactNode;\n    additionalLineItems?: ReactNode;\n    items: LineItemMap;\n    total: number;\n    storeCurrency: StoreCurrency;\n    shopperCurrency: ShopperCurrencyType;\n    isOpen: boolean;\n    headerLink?: ReactNode & React.HTMLProps<HTMLDivElement>;\n    onRequestClose?(): void;\n    onAfterOpen?(): void;\n}\n\nconst OrderSummaryModal: FunctionComponent<\n    OrderSummaryDrawerProps & OrderSummarySubtotalsProps\n> = ({\n    additionalLineItems,\n    children,\n    isTaxIncluded,\n    taxes,\n    onRequestClose,\n    onAfterOpen,\n    storeCurrency,\n    shopperCurrency,\n    isOpen,\n    headerLink,\n    items,\n    total,\n    ...orderSummarySubtotalsProps\n}) => {\n    const displayInclusiveTax = isTaxIncluded && taxes && taxes.length > 0;\n\n    const subHeaderText = <OrderModalSummarySubheader\n        amountWithCurrency={<ShopperCurrency amount={total} />}\n        items={items}\n        shopperCurrencyCode={shopperCurrency.code}\n        storeCurrencyCode={storeCurrency.code}\n    />;\n\n    const continueButton = isSmallScreen() && <Button\n        className='cart-modal-continue'\n        data-test=\"manage-instrument-cancel-button\"\n        onClick={preventDefault(onRequestClose)}>\n            <TranslatedString id=\"cart.return_to_checkout\" />\n    </Button>;\n\n    return <Modal\n        additionalBodyClassName=\"cart-modal-body optimizedCheckout-orderSummary\"\n        additionalHeaderClassName=\"cart-modal-header optimizedCheckout-orderSummary with-continue-button\"\n        additionalModalClassName=\"optimizedCheckout-cart-modal\"\n        footer={continueButton}\n        header={renderHeader({\n            headerLink,\n            subHeaderText,\n            onRequestClose,\n        })}\n        isOpen={isOpen}\n        onAfterOpen={onAfterOpen}\n        onRequestClose={onRequestClose}\n    >\n        <OrderSummarySection>\n            <OrderSummaryItems displayLineItemsCount={false} items={items} />\n        </OrderSummarySection>\n        <OrderSummarySection>\n            <OrderSummarySubtotals isTaxIncluded={isTaxIncluded} taxes={taxes} {...orderSummarySubtotalsProps} />\n            {additionalLineItems}\n        </OrderSummarySection>\n        <OrderSummarySection>\n            <OrderSummaryTotal\n                orderAmount={total}\n                shopperCurrencyCode={shopperCurrency.code}\n                storeCurrencyCode={storeCurrency.code}\n            />\n        </OrderSummarySection>\n        {displayInclusiveTax && <OrderSummarySection>\n                <h5\n                    className=\"cart-taxItem cart-taxItem--subtotal optimizedCheckout-contentPrimary\"\n                    data-test=\"tax-text\"\n                >\n                    <TranslatedString\n                        id=\"tax.inclusive_label\"\n                    />\n                </h5>\n                {(taxes || []).map((tax, index) => (\n                    <OrderSummaryPrice\n                        amount={tax.amount}\n                        key={index}\n                        label={tax.name}\n                        testId=\"cart-taxes\"\n                    />\n                ))}\n            </OrderSummarySection>}\n    </Modal>\n};\n\nconst renderHeader: FunctionComponent<{\n    headerLink?: ReactNode & React.HTMLProps<HTMLDivElement>;\n    subHeaderText: ReactNode;\n    onRequestClose?(): void;\n}> = ({ onRequestClose, headerLink, subHeaderText }) => {\n    let newHeaderLink;\n\n    if (isValidElement(headerLink)) {\n        newHeaderLink = cloneElement(headerLink, { className: 'modal-header-link cart-modal-link test' });\n    }\n\n    return <>\n        {newHeaderLink ?? headerLink}\n        <ModalHeader additionalClassName=\"cart-modal-title\">\n            <div>\n                <TranslatedString id=\"cart.cart_heading\" />\n                <div className='cart-heading-subheader'>{subHeaderText}</div>\n            </div>\n        </ModalHeader>\n        <a className=\"cart-modal-close\" href=\"#\" onClick={preventDefault(onRequestClose)}>\n            <span className=\"is-srOnly\">\n                <TranslatedString id=\"common.close_action\" />\n            </span>\n            <IconCloseWithBorder />\n        </a>\n    </>\n};\n\nexport default OrderSummaryModal;\n","import {\n    LineItemMap,\n    ShopperCurrency as ShopperCurrencyType,\n    StoreCurrency,\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { FunctionComponent, memo, ReactNode, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { ShopperCurrency } from '../currency';\nimport { IconGiftCertificate } from '../ui/icon';\nimport { ModalTrigger } from '../ui/modal';\n\nimport getItemsCount from './getItemsCount';\nimport getLineItemsCount from './getLineItemsCount';\nimport OrderSummaryModal from './OrderSummaryModal';\nimport { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\nimport removeBundledItems from './removeBundledItems';\n\nexport interface OrderSummaryDrawerProps {\n    lineItems: LineItemMap;\n    total: number;\n    headerLink: ReactNode;\n    storeCurrency: StoreCurrency;\n    shopperCurrency: ShopperCurrencyType;\n    additionalLineItems?: ReactNode;\n}\n\nconst OrderSummaryDrawer: FunctionComponent<\n    OrderSummaryDrawerProps & OrderSummarySubtotalsProps\n> = ({\n    additionalLineItems,\n    coupons,\n    discountAmount,\n    giftCertificates,\n    handlingAmount,\n    headerLink,\n    isTaxIncluded,\n    lineItems,\n    onRemovedCoupon,\n    onRemovedGiftCertificate,\n    shippingAmount,\n    shippingAmountBeforeDiscount,\n    shopperCurrency,\n    storeCreditAmount,\n    giftWrappingAmount,\n    storeCurrency,\n    subtotalAmount,\n    taxes,\n    total,\n    fees,\n}) => {\n    const nonBundledLineItems = useMemo(() => removeBundledItems(lineItems), [lineItems]);\n\n    const renderModal = useCallback(\n        (props: any) => (\n            <OrderSummaryModal\n                {...props}\n                additionalLineItems={additionalLineItems}\n                coupons={coupons}\n                discountAmount={discountAmount}\n                fees={fees}\n                giftCertificates={giftCertificates}\n                giftWrappingAmount={giftWrappingAmount}\n                handlingAmount={handlingAmount}\n                headerLink={headerLink}\n                isTaxIncluded={isTaxIncluded}\n                items={nonBundledLineItems}\n                onRemovedCoupon={onRemovedCoupon}\n                onRemovedGiftCertificate={onRemovedGiftCertificate}\n                shippingAmount={shippingAmount}\n                shippingAmountBeforeDiscount={shippingAmountBeforeDiscount}\n                shopperCurrency={shopperCurrency}\n                storeCreditAmount={storeCreditAmount}\n                storeCurrency={storeCurrency}\n                subtotalAmount={subtotalAmount}\n                taxes={taxes}\n                total={total}\n            />\n        ),\n        [\n            additionalLineItems,\n            coupons,\n            discountAmount,\n            giftCertificates,\n            handlingAmount,\n            headerLink,\n            isTaxIncluded,\n            nonBundledLineItems,\n            onRemovedCoupon,\n            onRemovedGiftCertificate,\n            giftWrappingAmount,\n            shippingAmount,\n            shippingAmountBeforeDiscount,\n            shopperCurrency,\n            storeCreditAmount,\n            storeCurrency,\n            subtotalAmount,\n            taxes,\n            total,\n            fees,\n        ],\n    );\n\n    return (\n        <ModalTrigger modal={renderModal}>\n            {({ onClick, onKeyPress }) => (\n                <div\n                    className=\"cartDrawer optimizedCheckout-orderSummary\"\n                    onClick={onClick}\n                    onKeyPress={onKeyPress}\n                    tabIndex={0}\n                >\n                    <figure\n                        className={classNames('cartDrawer-figure', {\n                            'cartDrawer-figure--stack': getLineItemsCount(nonBundledLineItems) > 1,\n                        })}\n                    >\n                        <div className=\"cartDrawer-imageWrapper\">{getImage(nonBundledLineItems)}</div>\n                    </figure>\n                    <div className=\"cartDrawer-body\">\n                        <h3 className=\"cartDrawer-items optimizedCheckout-headingPrimary\">\n                            <TranslatedString\n                                data={{ count: getItemsCount(nonBundledLineItems) }}\n                                id=\"cart.item_count_text\"\n                            />\n                        </h3>\n                        <a>\n                            <TranslatedString id=\"cart.show_details_action\" />\n                        </a>\n                    </div>\n                    <div className=\"cartDrawer-actions\">\n                        <h3 className=\"cartDrawer-total optimizedCheckout-headingPrimary\">\n                            <ShopperCurrency amount={total} />\n                        </h3>\n                    </div>\n                </div>\n            )}\n        </ModalTrigger>\n    );\n};\n\nfunction getImage(lineItems: LineItemMap): ReactNode {\n    const productWithImage = lineItems.physicalItems[0] || lineItems.digitalItems[0];\n\n    if (productWithImage && productWithImage.imageUrl) {\n        return (\n            <img\n                alt={productWithImage.name}\n                data-test=\"cart-item-image\"\n                src={productWithImage.imageUrl}\n            />\n        );\n    }\n\n    if (lineItems.giftCertificates.length) {\n        return <IconGiftCertificate />;\n    }\n}\n\nexport default memo(OrderSummaryDrawer);\n","import React, {\n    KeyboardEvent,\n    KeyboardEventHandler,\n    MouseEventHandler,\n    ReactElement,\n    ReactNode,\n    useEffect,\n    useRef,\n    useState,\n} from 'react';\n\nexport interface ModalTriggerProps {\n    children(props: { onClick: MouseEventHandler; onKeyPress: KeyboardEventHandler<HTMLDivElement> }): ReactNode;\n    modal(props: ModalTriggerModalProps): ReactNode;\n}\n\nexport interface ModalTriggerModalProps {\n    isOpen: boolean;\n    onRequestClose(): void;\n}\n\nconst ModalTrigger = ({ children, modal }: ModalTriggerProps): ReactElement => {\n    const [isOpen, setIsOpen] = useState(false);\n    const canHandleEventRef = useRef(false);\n\n    useEffect(() => {\n        canHandleEventRef.current = true;\n\n        return () => {\n            canHandleEventRef.current = false;\n        };\n    }, []);\n\n    const handleOpen = (): void => {\n        if (!canHandleEventRef.current) {\n            return;\n        }\n\n        setIsOpen(true);\n    };\n\n    const handleClose = (): void => {\n        if (!canHandleEventRef.current) {\n            return;\n        }\n\n        setIsOpen(false);\n    };\n\n    const handleKeyOpen = (keyboardEvent: KeyboardEvent<HTMLElement>): void => {\n        if (keyboardEvent.key === 'Enter') {\n            handleOpen();\n        }\n    };\n\n    return (\n        <>\n            {children({\n                onClick: handleOpen,\n                onKeyPress: handleKeyOpen,\n            })}\n\n            {modal({\n                isOpen,\n                onRequestClose: handleClose,\n            })}\n        </>\n    );\n};\n\nexport default ModalTrigger;\n"],"names":["getLineItemsCount","physicalItems","digitalItems","giftCertificates","customItems","length","fill","height","viewBox","width","xmlns","d","clipRule","fillRule","memo","items","shopperCurrencyCode","storeCurrencyCode","amountWithCurrency","itemsCount","getItemsCount","hasDifferentCurrency","itemsText","TranslatedString","id","renderHeader","onRequestClose","headerLink","subHeaderText","newHeaderLink","isValidElement","cloneElement","className","ModalHeader","additionalClassName","href","onClick","preventDefault","additionalLineItems","children","isTaxIncluded","taxes","onAfterOpen","storeCurrency","shopperCurrency","isOpen","total","orderSummarySubtotalsProps","displayInclusiveTax","ShopperCurrency","amount","code","continueButton","isSmallScreen","Button","Modal","additionalBodyClassName","additionalHeaderClassName","additionalModalClassName","footer","header","OrderSummarySection","OrderSummaryItems","displayLineItemsCount","OrderSummarySubtotals","OrderSummaryTotal","orderAmount","map","tax","index","OrderSummaryPrice","key","label","name","testId","coupons","discountAmount","handlingAmount","lineItems","onRemovedCoupon","onRemovedGiftCertificate","shippingAmount","shippingAmountBeforeDiscount","storeCreditAmount","giftWrappingAmount","subtotalAmount","fees","nonBundledLineItems","useMemo","removeBundledItems","renderModal","useCallback","props","ModalTrigger","modal","onKeyPress","tabIndex","productWithImage","imageUrl","alt","src","IconGiftCertificate","getImage","data","count","setIsOpen","useState","canHandleEventRef","useRef","useEffect","current","handleOpen","keyboardEvent"],"sourceRoot":""}