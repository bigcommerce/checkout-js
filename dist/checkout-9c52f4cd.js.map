{"version":3,"file":"checkout-9c52f4cd.js","mappings":"8+EA2BA,SAFyB,E,SAAAA,oBAAiDC,E,wECzB3D,SAASC,EACpBC,EACAC,GAEA,IAAIC,EAEJ,YAJA,IAAAD,IAAAA,EAAA,IAIO,WACH,OAAIC,IAIJA,EAAmBF,EAAQ,aAAIC,GAGnC,CACJ,CCgIA,QAzH0B,SAAC,G,IAAEE,EAAe,kBAAEC,EAAQ,WAC5CC,GAAiB,IAAAC,UACnB,WAAM,OAAAP,EAAoC,EAAAQ,kBAAmB,CAACJ,GAAxD,GACN,CAACA,IAECK,GAAiB,IAAAF,UACnB,WAAM,OAAAP,EAAoC,EAAAU,kBAAmB,CAACN,EAAgBO,WAAxE,GACN,CAACP,IAECQ,GAA8B,IAAAL,UAChC,WACI,OAAAP,EACI,EAAAa,+BACA,CAACT,GAFL,GAIJ,CAACA,IAECU,GAAmC,IAAAP,UACrC,WACI,OAAAP,EACI,EAAAe,oCACA,CAACX,GAFL,GAIJ,CAACA,IAyECD,EAAoC,CACtCa,cAvEkB,WAClBV,IAAiBW,uBACjBR,IAAiBO,eACrB,EAqEIE,mBAnEuB,SAACC,GACxBb,IAAiBY,mBAAmBC,GACpCV,IAAiBW,cAAcD,EACnC,EAiEIE,gBA/DoB,SAACC,GACrBhB,IAAiBe,gBAAgBC,EACrC,EA8DIC,eA5DmB,WACnBjB,IAAiBkB,qBACjBf,IAAiBc,gBACrB,EA0DIE,mBAxDuB,SAACC,GACxBjB,IAAiBgB,mBAAmBC,EACxC,EAuDIC,uBArD2B,SAACC,GAC5BnB,IAAiBkB,uBAAuBC,EAC5C,EAoDIC,0BAlD8B,WAC9BpB,IAAiBoB,2BACrB,EAiDIC,8BA/CkC,SAACF,GACnCnB,IAAiBqB,8BAA8BF,GAC/ChB,IAA8BkB,gCAC9BhB,IAAmCgB,+BACvC,EA4CIC,oBA1CwB,WACxBtB,IAAiBsB,qBACrB,EAyCIC,sBAvC0B,SAACC,EAAoBC,GAC/CzB,IAAiBuB,sBAAsBC,GACvCrB,IAA8BoB,sBAAsBE,GACpDpB,IAAmCkB,sBAAsBE,EAC7D,EAoCIC,eAlCmB,SAACP,GACpBnB,IAAiB0B,eAAeP,EACpC,EAiCIQ,gBA/BoB,WACpB3B,IAAiB2B,iBACrB,EA8BIC,gBA5BoB,WACpB5B,IAAiB4B,kBACjBzB,IAA8ByB,kBAC9BvB,IAAmCuB,iBACvC,EAyBIC,aAvBiB,WACjB7B,IAAiB6B,cACrB,EAsBIC,kBApBsB,SAACL,GACvBtB,IAA8B2B,kBAAkBL,GAChDpB,IAAmCyB,kBAAkBL,EACzD,GAoBA,OACI,gBAACM,EAAAC,EAAiBC,SAAQ,CAACC,MAAO,CAAExC,iBAAgB,IAC/CE,EAGb,C,yCC3IYuC,E,uBAAZ,SAAYA,GACR,2FACA,yFACA,oFACA,gDACA,gEACH,CAND,CAAYA,IAAAA,EAAwB,KAQ7B,IAAMC,IAA6B,MACtC,uCACID,EAAyBE,kCAC7B,wCACIF,EAAyBG,iCAC7B,qCACIH,EAAyBI,+BAC7B,mBAAgCJ,EAAyBK,aACzD,4BAAwCL,EAAyBM,qB,cCNxDC,EAAY,SAAC,G,IAAEC,EAAM,SAGtB,GAEJ,SAAa,mBAFDC,EAAa,gBAAEC,EAAS,YAAEC,EAAW,cAG/CC,EAAaH,IACbI,EAASH,IACTI,EAAWH,IACTI,ECjBiB,WACzB,IAAMC,GAAmB,IAAAC,YAAWC,EAAA,GAEpC,IAAKF,EACD,MAAM,IAAIG,MAAM,4DAGpB,OAAOH,CACX,CDSiCI,GAAe,iBACtCC,EACFT,GAAcC,GAAUC,GAAYC,EAAiBM,gBAAgBb,GACnEc,EAAcrB,EAA8BO,GAYlD,OAVA,IAAAe,YAAU,WACN,GAAIF,EAGA,OAFKN,EAAiBS,gBAAgBF,EAAad,GAE5C,WACHO,EAAiBU,gBAAgBjB,EACrC,CAER,GAAG,CAACc,EAAaP,EAAkBM,EAAiBb,IAEhDa,EACO,uBAAKK,GAAIJ,IAGb,IACX,C,uCE/BaJ,GAAmB,E,SAAAhE,oBAAiDC,E,qNCRpEwE,EAAmB,SAC5BC,EACAC,GAEA,OAAQA,EAAOC,OACNC,EAAoBC,wBACd,gCAAKJ,GAAK,CAAEK,0BAA2BJ,EAAO7C,UAG9C4C,CAEnB,E,WCTO,SAASM,EAA4B,G,IACxC1E,EAAe,kBAEf,MAAO,CACH2E,YAAa,EAAAC,qBAAqBC,eAClCC,QAAS,W,MACA9E,EAAgB+E,aAA0D,QAA7C,EAAA/E,EAAgBgF,WAAWC,KAAK9B,qBAAa,eAAEe,GACrF,EAER,CCTO,SAASgB,EAA4B,G,IACxCC,EAAS,YAET,MAAO,CACHR,YAAa,EAAAC,qBAAqBQ,eAClCN,QAAS,SAACG,GACE,IAAAI,EAAUJ,EAAKzD,QAAO,MACxB8D,EAAqBC,SAASC,cAChC,iCAA0BL,EAAUjB,GAAE,OAEpCuB,EAASH,aAAkB,EAAlBA,EAAoBE,cAAc,UAE7CC,GACAC,OAAOC,OAAOF,EAAOJ,MAAOA,EAEpC,EAER,CCfO,SAASO,EAAkC,G,IAC9CC,EAAQ,WAER,MAAO,CACHlB,YAAa,EAAAC,qBAAqBkB,qBAClChB,QAAS,SAACG,GACE,IAAAc,EAASd,EAAKzD,QAAO,KAE7BqE,EAAS,CACLvB,KAAMC,EAAoBC,uBAC1BhD,QAASuE,GAEjB,EAER,CCRA,ICIYxB,EDJZ,aAGI,WACYvE,EACA6F,GADA,KAAA7F,gBAAAA,EACA,KAAA6F,SAAAA,EAJJ,KAAAG,SAAyD,CAAC,CAK/D,CAyGP,OAvGU,YAAAC,eAAN,W,sHACI,SAAMC,KAAKlG,gBAAgBiG,kB,cAA3B,S,YAGJ,YAAAE,kBAAA,W,QACU/B,EAAQ8B,KAAKlG,gBAAgBgF,WAC7B5B,EAAagB,EAAMa,KAAKhC,gBACxBmD,EAA6B,QAApB,EAAAhC,EAAMa,KAAKoB,iBAAS,eAAEnC,GAC/BoC,EAAqC,QAAtB,EAAAlC,EAAMa,KAAK/B,mBAAW,eAAEqD,MAAMC,SAE9CJ,GAAWE,IAIhBlD,SAAAA,EAAYqD,SAAQ,SAACtB,GACjB,IAAMuB,EAAM,IAAIC,IAAIxB,EAAUuB,KAE9BA,EAAIE,aAAaC,IAAI,cAAe1B,EAAUjB,IAC9CwC,EAAIE,aAAaC,IAAI,SAAUT,GAC/BM,EAAIE,aAAaC,IAAI,eAAgBP,GAErC,IAAMQ,EAAOvB,SAASwB,cAAc,QAEpCD,EAAKE,IAAM,UACXF,EAAKG,GAAK,WACVH,EAAKI,KAAOR,EAAIS,WAEH5B,SAAS6B,KAEjBC,YAAYP,EACrB,IACJ,EAEM,YAAA9C,gBAAN,SAAsBsD,EAAmBtE,G,4HAGrC,OAFMmC,EAAYe,KAAKlG,gBAAgBgF,WAAWC,KAAKsC,qBAAqBvE,IAM5E,GAAMkD,KAAKlG,gBAAgBgE,gBAAgBsD,EAAWtE,IAHlD,I,cAGJ,SAEAkD,KAAKsB,iBAAiBrC,G,YAG1B,YAAAlB,gBAAA,SAAgBjB,GACZ,IAAMmC,EAAYe,KAAKlG,gBAAgBgF,WAAWC,KAAKsC,qBAAqBvE,GAE5E,GAAKmC,EAAL,CAIA,IAAMsC,EAAWvB,KAAKF,SAASb,EAAUjB,IAEzC,GAAKuD,EAAL,CAIA,IAAsB,UAAAA,EAAA,eAAU,EAC5BC,EADc,O,QAIXxB,KAAKF,SAASb,EAAUjB,G,EACnC,EAEA,YAAAL,gBAAA,SAAgBb,GACZ,IAAMmC,EAAYe,KAAKlG,gBAAgBgF,WAAWC,KAAKsC,qBAAqBvE,GAE5E,OAAO2E,QAAQxC,EACnB,EAEQ,YAAAqC,iBAAR,SAAyBrC,GAAzB,WACUyC,EAAe,CACjB5H,gBAAiBkG,KAAKlG,gBACtB6F,SAAUK,KAAKL,SACfV,UAAS,GAGRe,KAAKF,SAASb,EAAUjB,MACzBgC,KAAKF,SAASb,EAAUjB,IAAM,IAGlCwB,OAAOmC,OAAO,GAAkBpB,SAAQ,SAACqB,GACrC,IAAMC,EAAiBD,EAAqBF,GAExC,EAAKI,iBAAiBD,EAAepD,YAAaoD,IAClD,EAAK/B,SAASb,EAAUjB,IAAI+D,KACxB,EAAKjI,gBAAgBkI,uBACjB/C,EAAUjB,GACV6D,EAAepD,YACfoD,EAAejD,SAI/B,GACJ,EAEQ,YAAAkD,iBAAR,SACI1D,EACAQ,GAEA,OAAOA,EAAQH,cAAgBL,CACnC,EACJ,EA/GA,ICIA,SAAYC,GACR,sDACH,CAFD,CAAYA,IAAAA,EAAmB,KASxB,IAAM4D,EAAoB,SAAC,G,IAAEnI,EAAe,kBAAEC,EAAQ,WACnD,GAA6B,IAAAmI,YAAWjE,EAAkB,CAC5DM,2BAA2B,IADxB4D,EAAc,KAAExC,EAAQ,KAKzByC,EAAkB,CACpB/E,iBAHqB,IAAIgF,EAAiBvI,EAAiB6F,GAI3DwC,eAAc,GAGlB,OACI,gBAAC3E,EAAA,EAAiBpB,SAAQ,CAACC,MAAO+F,GAAkBrI,EAE5D,C,kBCvCA,IAAKuI,E,iBAAL,SAAKA,GACD,oBACA,qBACH,CAHD,CAAKA,IAAAA,EAAW,KAKhB,S,yGCwGA,SAAe,EAAAC,EAAA,IAvBR,SACHC,EACA,G,IAAEC,EAAO,UAAErE,EAAI,OAIP,EAEJoE,EAAO,mBAFKE,EAAmB,sBAAEC,EAAoB,uBAAEC,EAAuB,0BAAEC,EAAwB,2BAI5G,MAAO,CACHC,UAAW1E,IAASkE,EAAAnG,EAAY4G,QAC1BL,IACAC,IACNK,OACI5E,IAASkE,EAAAnG,EAAY4G,QACfH,EAAwBH,EAAQQ,aAChC7E,IAASkE,EAAAnG,EAAY+G,SACrBL,EAAyBJ,EAAQQ,kBACjCxJ,EAElB,GAEA,EAAqD,IAAA0J,OAzEjD,SAAC,G,IAAEL,EAAS,YAAEE,EAAM,SAAWI,EAA0B,UACnDX,GAAU,EAAAY,EAAA,GAAgBD,EAA4BN,GAQ5D,OAPiBE,GAEX,EAAAM,EAAA,GACIb,EACAO,EAAOO,QAAO,SAACC,GAAU,OAACA,EAAMC,MAAP,OAH5B,IAAAC,SAAQjB,IAOX,uBAAKkB,UAAU,iCAAgC,YAAW,mBACpDlB,EAAQmB,WAAanB,EAAQoB,WAC3B,qBAAGF,UAAU,oBACT,wBAAMA,UAAU,cAAc,UAAGlB,EAAQmB,UAAS,MAClD,wBAAMD,UAAU,eAAelB,EAAQoB,YAI7CpB,EAAQqB,OAASrB,EAAQsB,UACvB,qBAAGJ,UAAU,iBACT,wBAAMA,UAAU,gBAAgB,UAAGlB,EAAQsB,QAAO,MAClD,wBAAMJ,UAAU,OAAOlB,EAAQqB,QAIvC,uBAAKH,UAAU,OACX,qBAAGA,UAAU,gCACT,wBAAMA,UAAU,kBAAkB,UAAGlB,EAAQuB,SAAQ,MACpDvB,EAAQwB,UACL,wBAAMN,UAAU,kBAAkB,aAAMlB,EAAQwB,YAIxD,qBAAGN,UAAU,iBACRlB,EAAQyB,MAAQ,wBAAMP,UAAU,YAAY,UAAGlB,EAAQyB,KAAI,OAC3DzB,EAAQ0B,mBACL,wBAAMR,UAAU,UAAU,UAAGlB,EAAQ0B,kBAAiB,OAEzD1B,EAAQ2B,YACL,wBAAMT,UAAU,eAAe,UAAGlB,EAAQ2B,WAAU,QAEvD3B,EAAQ4B,kBACL,wBAAMV,UAAU,gBAAgB,UAAGlB,EAAQ4B,iBAAgB,SAjC7D,IAuCtB,I,sGC7EaC,EAAmB,WAMhC,SAAe,IAAAC,UAAQ,SAAuC,G,IAC1DC,EAAU,aACV,IAAAC,UAAAA,OAAS,IAAG,aAAM,EAAS,EAE3B,OAAO,SAAO,iBACPD,EACEjB,QAAO,SAAC,GAAe,OAAP,QAAO,IACvBmB,QAAO,SAACC,EAAQ,G,IAAEC,EAAI,OAAEC,EAAQ,WAAEC,EAAK,QAcpC,OAbAH,EAAOC,IAAQ,UAEXC,IACAF,EAAOC,GAAQD,EAAOC,GACjBG,OACAF,SAASJ,EAAU,WAAY,CAAEK,MAAK,EAAEF,KAAI,MAGrDD,EAAOC,GAAQD,EAAOC,GAAMI,QACxBV,EACAG,EAAU,UAAW,CAAEG,KAAI,EAAEE,MAAK,KAG/BH,CACX,GAAG,CAAC,KACTM,QACC,EAAAC,EAAA,GAAoC,CAAEV,WAAU,EAAEC,UAAS,IAEnE,ICxBO,SAASU,EACZC,GAEA,IAAMC,EAAoE,CACtEpC,YAAa,kBACbW,UAAW,qBACXC,SAAU,oBACVE,QAAS,uBACTC,SAAU,yBACVC,SAAU,yBACVC,KAAM,eACNoB,gBAAiB,gBACjBC,oBAAqB,gBACrBnB,WAAY,sBACZN,MAAO,wBAGX,OAAO,SAAC1F,EAAM,G,IAAE0G,EAAK,QAAEF,EAAI,OAAEY,EAAG,MAAEC,EAAG,MACjC,GAAKL,EAIL,MAAa,aAAThH,EACIiH,EAAiCT,GAC1BQ,EAASX,UACZ,UAAGY,EAAiCT,GAAK,oBAI1CQ,EAASX,UAAU,gCAAiC,CAAEK,MAAK,IAGzD,QAAT1G,GAAkBqH,EACXL,EAASX,UAAU,2BAA4B,CAAEK,MAAK,EAAEW,IAAG,IAGzD,QAATrH,GAAkBoH,EACXJ,EAASX,UAAU,2BAA4B,CAAEK,MAAK,EAAEU,IAAG,IAGzD,YAATpH,EACOgH,EAASX,UAAU,mCAAoC,CAAEK,MAAK,SADzE,CAGJ,CACJ,CAEA,SAAe,IAAAP,UAAQ,SAA8C,G,IACjEC,EAAU,aACVY,EAAQ,WAER,OAAOM,EAA8B,CACjClB,WAAU,EACVC,UAAWU,EAAyBC,IAE5C,G,6DChEe,SAAS9B,EAAeb,EAAkB+B,GAGrD,OAFsB,OAAqC,CAAEA,WAAU,IAElDmB,aAAY,OAAuBnB,EAAY/B,GACxE,C,6DCDe,SAASmD,EACpB5C,EACAP,GAEA,IAAMd,GAAS,iBACRqB,EAAO0B,QACN,SAACmB,EAAmB,G,MAwF5BC,EAxF8BlB,EAAI,OAAEnB,EAAM,SAAEsC,EAAS,YAAWC,EAAY,UAChE,GAAIvC,EAAQ,CACHoC,EAAkBI,eACnBJ,EAAkBI,aAAe,CAAC,GAGtC,IAAMzC,EACFf,GACAA,EAAQwD,cACRxD,EAAQwD,aAAaC,MAAK,SAAC,GAAgB,OAAP,YAAmBtB,CAAZ,IAEzCuB,EAAa3C,GAASA,EAAM2C,WAQlC,OANAN,EAAkBI,aAAarB,GAAQwB,EACnCL,EACAI,EACAH,GAGGH,C,CAGX,GAoES,kBAFrBC,EAlEyClB,IAoEY,sBAAdkB,EApES,CAC1BK,EAAa1D,GAAWA,EAAQmC,GAEtCiB,EAAkBjB,IAIjB,QAJyB,EAAAwB,EACtBL,EACAI,EACAH,UACH,eAAE/E,aAAc,E,CAGrB,OAAO4E,CACX,GACA,CAAC,IAgBT,OAZAlE,EAAO0E,mBACH5D,QAAyChJ,IAA9BgJ,EAAQ4D,mBAAkC5D,EAAQ4D,uBAGlC5M,IAA3BkI,EAAO2D,kBACP3D,EAAO2D,gBAAkB,SAGM7L,IAA/BkI,EAAO4D,sBACP5D,EAAO4D,oBAAsB,IAG1B5D,CACX,CAEA,SAASyE,EACLL,EACAI,EACAH,GAEA,GAAIG,QACA,OAgBR,SAAyBJ,EAAoBC,GACzC,GAAIA,GAAgBD,IAAc,IAAqBO,KACnD,OAAO,IAAIC,KAAKP,GAGpB,GAAID,IAAc,IAAqBS,SACnC,MAAO,GAGX,OAAOR,GAAgB,EAC3B,CA1BeS,CAAgBV,EAAWC,GAGtC,GAAID,IAAc,IAAqBO,MAA8B,iBAAfH,EAUtD,OAAOA,EATH,GAAIA,EAAY,CACN,MAAqBA,EAAWO,MAAM,KAArCC,EAAI,KAAEC,EAAK,KAAEC,EAAG,KAEvB,OAAO,IAAIN,KAAKO,OAAOH,GAAOG,OAAOF,GAAO,EAAGE,OAAOD,G,CAOlE,C,iDClFA,SAFsB,E,SAAA,GAAgB,EAAA1K,EAAkB,CAAE4K,kBAAmB,iB,0ICwD7E,SAAe,QAhBR,SACH,EACA,G,IADEC,EAAa,gBACbvE,EAAO,UAGL,EACAuE,EAAa,KADLpE,EAAuB,0BAG7BxF,GAAWH,EAH+B,iBAKhD,MAAO,CACH+F,OAAQJ,EAAwBH,EAAQQ,aACxCgE,SAAU7J,GAAYA,EAAS6J,SAEvC,GAEA,EAA4D,IAAA9D,OArCxD,SAAC,G,IAAEV,EAAO,UAAE,IAAAwE,SAAAA,OAAQ,IAAG,MAAW,EAC1BC,GAA4B,SAA0B,wBACxDC,GAA0B,OAAwB1E,EAASyE,GAEjE,OAAID,EAASf,MAAK,SAACkB,GAAY,MAAuB,cAAvBA,EAAQC,UAAR,IAEvB,yBACI,gBAAC,IAAgB,CAACrJ,GAAG,uCAM7B,gCACI,gBAAC,IAAa,CAACyE,QAASA,EAASrE,KAAM,EAAAjC,EAAY4G,UAElDoE,GAA2B,gBAAC,IAA4B,MAGrE,I,uMCvCA,wBAIA,QAHI,YAAAG,YAAA,WACI,OAAO,CACX,EACJ,EAJA,G,yBCAA,cACI,WAAYC,GAAZ,MACI,YAAM,CACF3C,KAAM,sCACN2C,QAAO,KACT,K,OAEF,OAAe,EAAMC,EAAiCC,W,CAC1D,CACJ,OATsD,oBAStD,EATA,CAAsDC,EAAA,G,QCItD,WACI,WAAoBC,EAAsCC,GAAtC,KAAAD,mBAAAA,EAAsC,KAAAC,YAAAA,CAA+B,CAe7F,OAbI,YAAAN,YAAA,W,IAAA,WAAY,kDACR,IAAMK,EAAqBE,EAAItE,QAAO,SAACvF,GAAO,SAAK2J,mBAAmBG,QAAQ9J,IAAO,CAAvC,IAE9C,GAAkC,IAA9B2J,EAAmBI,OACnB,OAAO,EAGX,MAAM,IAAIP,EACNxH,KAAK4H,YAAYnD,UAAU,sCAAuC,CAC9DuD,QAASL,EAAmBM,KAAK,QAG7C,EACJ,EAhBA,G,eCCMC,EAAsB,CAAC,WAAY,WAAY,YAAa,YAAa,SAAU,c,mECH5EC,GAAgB,EAAAC,EAAA,GAAgB5K,EAAA,EAAkB,CAC3DuJ,kBAAmB,kB,+FCUvB,uE,OAII,EAAA7I,MAA+B,CAC3BmK,WAAW,G,CA2BnB,QAhC8C,oBAU1C,YAAAC,kBAAA,sBACYC,EAAiBvI,KAAKwI,MAAK,aAEnCxI,KAAKyI,UAAYC,YAAW,WACxB,EAAKC,SAAS,CAAEN,WAAW,GAC/B,GAAGE,EACP,EAEA,YAAAK,qBAAA,WACIC,cAAc7I,KAAKyI,UACvB,EAEA,YAAAK,OAAA,WACY,IAAAC,EAAa/I,KAAKwI,MAAK,SACvBH,EAAcrI,KAAK9B,MAAK,UAEhC,OACI,gBAAC8K,EAAA,EAAc,CAACC,wBAAsB,EAACC,UAAWb,GAC9C,gBAACc,EAAA,EAAc,CAACpK,KAAM,CAAEyB,IAAKuI,GAAY/K,GAAG,4BAGxD,EACJ,EAhCA,CAA8C,EAAAoL,e,ICfzCC,E,6CAAL,SAAKA,GACD,gBACA,gBACA,mCACA,iCACA,wDACA,gCACH,CAPD,CAAKA,IAAAA,EAAgB,KASrB,U,0BCkBA,QAjBI,SAAC,G,IAAEC,EAAY,eAAEvP,EAAQ,WAAEmP,EAAS,YAE9BK,EACF,uBAAK5F,UAAU,oCACV6F,MAAMF,GACFG,KAAK,GACLC,KAAI,SAACC,EAAIC,GAAM,OACZ,uBAAKjG,UAAU,qBAAqBkG,IAAK,6BAAsBD,IAC3D,uBAAKjG,UAAU,mBAFP,KAQ5B,OAAO,gBAACmG,EAAA,GAAe,iBAAK,CAAE/P,SAAQ,EAAEmP,UAAS,EAAEa,oBAbxB,EAa4CR,SAAQ,IACnF,ECrBe,SAASS,EAAiBC,GACrC,MAAO,oBAAqBA,CAChC,CCJA,IAAMC,EAAY,WAGLC,EAA8B,CACvC,YACAD,EACA,wBACA,kBACA,wBACA,aACA,iBACA,sBACA,uBACA,mBACA,mBACA,wBACA,eACA,qBACA,uBACA,yBACA,mBACA,kBACA,qBACA,0BACA,0BACA,yBAGSE,EAAwB,SAACC,GAClC,OAAOA,EAAU9G,QAAO,SAAC3H,GACrB,QAAIA,IAAasO,IAAcF,EAAiBC,WAIA,IAAzCE,EAAkBrC,QAAQlM,EACrC,GACJ,E,mBCtBA,yB,8CAqCA,QArC4C,oBACxC,YAAA0M,kBAAA,W,MACU,EAOFtI,KAAKwI,MANL5K,EAAW,cACX0M,EAAU,aACVC,EAA2B,8BAC3B3O,EAAQ,WACR4O,EAAO,UACP,IAAAC,QAAAA,OAAO,IAAG,IAAAC,KAAI,EAGZC,GAAeJ,GAA6C,oBAAb3O,GAA+C,0BAAbA,EAEjF,CAAC,EADD,CAAEgP,aAxBa,IA2BrBN,IAAU,GACN1O,SAAQ,IACPA,IAAQ,gCACF+O,GAAY,CACfvJ,UAAWxD,EACX4M,QAAO,EACPC,QAAS,WAAM,OAAAA,EAAQ7O,EAAR,I,GAG3B,EAEA,YAAAgN,qBAAA,WACU,MAA6B5I,KAAKwI,OAExCqC,EAFoB,gBAEP,CAAEjP,SAFe,YAGlC,EAEA,YAAAkN,OAAA,WACY,IAAAlL,EAAgBoC,KAAKwI,MAAK,YAElC,OAAO,uBAAKxK,GAAIJ,GACpB,EACJ,EArCA,CAA4C,EAAAwL,e,gBCZ7B,SAAS0B,GACpBC,GAEA,IAAIvK,EAUJ,OAPIA,EADAuK,IAAW,EAAAC,GAAA,KACL,uCAAgCD,EAAQ9J,YAExC,UAAGgJ,OAAOgB,SAASC,SAASC,QAAQ,MAAO,IAAG,uBAGxDlB,OAAOgB,SAASE,QAAQ3K,GAEjB,IAAI4K,QAAQ,EAAAV,KACvB,CCiBA,SA1B+D,SAAC,GAC5D,IAAAJ,EAAU,aACVE,EAAO,UACP,IAAAC,QAAAA,OAAO,IAAG,IAAAC,KAAI,EACXW,GAAI,cAJqD,oCAMtDC,GAAgB,IAAA/N,YAAWgO,EAAA,GAC3BC,GAAoB,IAAAC,cACtB,SAACC,GACG,OAAApB,GAAW,gCACJoB,GAAO,CACVC,SAAU,CACNvK,UAAWiK,EAAKzN,YAChBgO,cAAeN,aAAa,EAAbA,EAAelG,SAASX,UAAU,sBACjDoH,cAAeP,aAAa,EAAbA,EAAelG,SAASX,UAAU,sBACjD+F,QAAO,EACPC,QAAS,WAAM,OAAAA,EAAQY,EAAKzP,SAAb,EACfkQ,mBAAoBhB,MAR5B,GAWJ,CAACR,EAAYgB,EAAed,EAASa,EAAKzN,cAG9C,OAAO,gBAAC,GAAc,eAAC0M,WAAYkB,GAAuBH,GAC9D,ECjBA,SAZkE,SAAC7C,GAK/D,OAJA,IAAA3K,YAAU,WACNkO,IACJ,GAAG,IAGC,uBAAKpI,UAAU,sBACX,gBAAC,GAAc,iBAAK6E,IAGhC,EAIA,IAAMuD,GAAuB,W,MACzB,GAAK1M,SAASC,cAAc,8BAA5B,CAIA,IAAM8B,EAAY/B,SAASC,cAAc,kCACnC0M,EAAoC,QAArB,EAAA5K,aAAS,EAATA,EAAW6K,kBAAU,eAAE3M,cAAc,2BAEtD8B,GAAa4K,EACbA,EAAa7M,MAAM+M,OAAS,OAKhCxD,WAAWqD,GAAsB,G,CACrC,ECCA,SAzBqE,SAAC,GAClE,IAAAnQ,EAAQ,WACR0O,EAAU,aACVE,EAAO,UACP,IAAAC,QAAAA,OAAO,IAAG,IAAAC,KAAI,EACXW,GAAI,cAL2D,+CAO5DC,GAAgB,IAAA/N,YAAWgO,EAAA,GAC3BC,GAAoB,IAAAC,cACtB,SAACC,G,MACG,OAAApB,GAAW,gCACJoB,KAAO,MACT9P,GAAW,CACRwF,UAAWiK,EAAKzN,YAChB4M,QAAO,EACPC,QAAS,WAAM,OAAAA,EAAQ7O,EAAR,EACfuQ,WAAYrB,IACf,IAPL,GASJ,CAACR,EAAYgB,EAAed,EAASa,EAAKzN,cAG9C,OAAO,gBAAC,GAAc,eAAC0M,WAAYkB,EAAmB5P,SAAUA,GAAcyP,GAClF,ECmCA,SApDmF,SAAC,GAChF,QAAAd,4BAAAA,OAA2B,OAAO,EAClCC,EAAO,UACP5O,EAAQ,WACLyP,GAAI,cAJyE,sDAMhF,OAAQzP,GACJ,IAAK,WACD,OACI,gBAAC,IAAc,eACXgC,YAAa,UAAGhC,EAAQ,kBACxBiO,IAAKjO,EACLA,SAAUA,EACV4O,QAASA,GACLa,IAIhB,IAAK,YACD,OACI,gBAAC,IAAiB,eACdzN,YAAa,UAAGhC,EAAQ,kBACxBiO,IAAKjO,EACLA,SAAUA,EACV4O,QAASA,GACLa,IAIhB,IAAK,iBACL,IAAK,uBACD,OACI,gBAAC,IAAoB,eACjBzN,YAAa,UAAGhC,EAAQ,kBACxBiO,IAAKjO,EACLA,SAAUA,EACV4O,QAASA,GACLa,IAKpB,OAAO,gBAAC,GAAc,eACdzN,YAAa,UAAGhC,EAAQ,kBACxB2O,4BAA6BA,EAC7BV,IAAKjO,EACLA,SAAUA,EACV4O,QAASA,GACLa,GAEhB,ECrCA,IAAMe,GAAoB,CACtB,iBACA,uBACA,uBAmHJ,UAAe,IAAAjJ,OAAK,EAAAZ,EAAA,IAzCpB,SAA2C,G,MACvCyE,EAAa,gBACblN,EAAe,kBAGX,EAWCkN,EAAa,KAVVhK,EAAS,YACTqP,EAAW,cACXC,EAAqB,wBAGrBC,EAKHvF,EAAa,+BAFVwF,EAEHxF,EAAa,kCACZ7J,EAASH,IACTyP,EAAqBrC,EAAsE,QAAhD,EAAAjN,aAAM,EAANA,EAAQuP,iBAAiBC,+BAAuB,QAAI,IAC/FC,EAAWP,IAEjB,IAAKC,IACD,OAAO,KAGX,IAAKnP,GAAwC,IAA9BsP,EAAmB1E,UAAiB6E,aAAQ,EAARA,EAAUC,SACzD,OAAO,KAGX,IAAM3D,EAAYuD,EAAmBlJ,QACjC,SAAC3H,GAAa,OAAA6F,QAAQ+K,EAA2B5Q,KAAc2Q,EAAsB3Q,EAAvE,IAChBmM,SAAW0E,EAAmB1E,OAEhC,MAAO,CACHjO,gBAAe,EACfkN,cAAa,EACbyF,mBAAkB,EAClBvD,UAAS,EAEjB,GAEoB,EA9GwG,SACxH,G,IACIuD,EAAkB,qBAClB3S,EAAe,kBACfkN,EAAa,gBACb8F,EAAoB,uBACpB5D,EAAS,YACT6D,EAAmB,sBACnBC,EAAgB,mBAChBC,EAAmB,sBAEf7H,GAAa,SAAW,SAEhC,IACI0H,EAAqBL,E,CACvB,MAAOS,GACL,OAAO,I,CAkCX,OACI,uBAAKvJ,UAAU,4BACVxE,MAAQ4N,EAAsB,CAAEI,SAAU,WAAYC,KAAM,IAAKC,IAAK,cAAY5T,GAEnF,yBACI,gBAAC6T,EAAA,EAAgB,CAACtP,GAAG,4BAEzB,uBAAK2F,UAAU,gCACX,gBAAC,EAA8B,CAAC2F,aAAcmD,EAAmB1E,OAAQmB,UAAWA,GAChF,uBAAKvF,UAAU,kBAxCH8I,EAAmB/C,KAAI,SAAC9N,GAChD,GAAImR,GAtBa,SAACnR,GAA8B,OAAAwQ,GAAkBmB,SAAS3R,EAA3B,CAsBrB4R,CAAiB5R,GACxC,OAAO,KAGX,IClDJ6R,EDkDUC,GClDVD,EDkDyD,CAAEzP,GAAIpC,IChDxD,EAAA+R,EAAA,GACHF,EACA,EAAQ,SDgDR,OAAKC,EAYE,gBAACA,EAAsB,CAClB5T,gBAAiBA,EACjBkN,cAAeA,EACfpJ,YAAa,UAAGhC,EAAQ,kBACxBiO,IAAKjO,EACLwJ,SAAUA,EACVxJ,SAAUA,EACVoR,iBAAkBA,EAClBC,oBAAqBA,IAnBtB,gBAAC,GAAwB,CAC5BpC,aAAc/Q,EAAgB8T,qBAC9BtD,WAAYxQ,EAAgB+T,mBAC5BtD,6BAA6B,EAC7BV,IAAKjO,EACLA,SAAUA,EACV6O,QAASwC,EACTzC,QAASwC,GAcrB,OAgBQ,uBAAKrJ,UAAU,sBAAqB,4BAAM,gBAAC2J,EAAA,EAAgB,CAACtP,GAAG,qBAG3E,K,gBEpFA,SAfqB,WACjB,IAAM8P,GAAmB,IAAAvQ,YAAWrB,GAAAC,GAEpC,IAAK2R,EACD,MAAM,IAAIrQ,MAAM,2DAGpB,OAAO,IAAAxD,UACH,WAAM,OACFJ,iBAAkBiU,EAAiBjU,iBADjC,GAGN,CAACiU,GAET,E,2CCiFA,UAAe,IAAA3K,OAvEgE,SAAC,G,IAC5E4K,EAAgC,mCAChCnS,EAAQ,WACRgS,EAAoB,uBACpBI,EAA4B,+BAC5BH,EAAkB,qBAClB,IAAAb,iBAAAA,OAAgB,IAAG,IAAAtC,KAAI,EAEjB,GAAsC,IAAAuD,WAAkB,GAAvDC,EAAc,KAAEC,EAAiB,KAChCtU,EAAqB,KAAc,iBA2B3C,IAzBA,IAAAgE,YAAU,WACN+P,EAAqB,CAAEhS,SAAQ,IAE/B,IACIiS,EAAmB,CACfjS,SAAQ,EACRwS,KAAM,CACFC,OAAQ,SAACC,EAAgBlT,GACrB+S,EAAkBG,GAEdlT,GACAvB,EAAiBwB,uBAAuB,CAACiT,eAAc,GAE/D,I,CAGV,MAAOpB,GACLF,EAAiBE,E,CAGrB,OAAO,WACHU,EAAqB,CAAEhS,SAAQ,GACnC,CACJ,GAAG,CAACiS,EAAoBD,EAAsBhS,EAAUoR,KAEnDkB,EACD,OAAO,KAGX,IC9DFK,EDkEE,OACI,uBAAK5K,UAAU,qBAAqB8G,QClEjC,SAAC+D,GACJA,EAAMC,kBAEFF,GACAA,EAAGC,EAEX,GD6DQ,qBAAG7K,UAAU,8BACT,gBAAC2J,EAAA,EAAgB,CACbvO,KAAM,CACF2P,SAAU,OACVC,aAAc,iBAElB3Q,GAAG,8BAGX,gBAAC4Q,GAAA,GAAM,CACHjL,UAAU,4DAA2D,YAC3D,2BACVuF,UAAW6E,EACXtD,QAnBc,kE,iEACtB,SAAMuD,EAA6B,CAAEpS,SAAQ,K,cAA7C,S,aAoBQ,gBAACiT,GAAA,EAAQ,CAACC,oBAAoB,yCAC9B,gBAACxB,EAAA,EAAgB,CACbvO,KAAM,CAAE4P,aAAc,iBACtB3Q,GAAG,gCAKvB,IEdA,UAAe,EAAAuE,EAAA,IAzBsB,SAAC,G,IAClCzI,EAAe,kBACfkN,EAAa,gBAGT,EAEAA,EAAa,KAFL/J,EAAW,cAAED,EAAS,YAClB+Q,EACZ/G,EAAa,0CAEX5J,EAAWH,IACXE,EAASH,IAEf,OAAKI,GAAaD,EAIX,CACHyQ,qBAAsB9T,EAAgB8T,qBACtCI,6BAA8BlU,EAAgBkU,6BAC9CH,mBAAoB/T,EAAgB+T,mBACpCE,iCAAkCA,IAClCgB,2BAA4B5R,EAAOuP,iBAAiBqC,iCAA8BtV,GAR3E,IAUf,GAEA,EAA0D,IAAA0J,OAjDtD,SAAC,GACD,IAAA4L,EAA0B,6BAC1Bf,EAA4B,+BACzB3C,GAAI,cAHN,+DAKOxR,EAAqB,KAAc,iBAQ3C,OAAIkV,IAA+BC,GAAA,EAAgBC,KACxC,gBAAC,IAAsB,eAClBjB,6BAR2B,SAACtC,GAGxC,OAFA7R,EAAiB0B,4BAEVyS,EAA6BtC,EACxC,EAKgB9P,SAAUmT,GACN1D,IAIb,IACX,K,gBC7CM,GAAY,WAGL,GAA8B,CACvC,YACA,GACA,wBACA,kBACA,wBACA,WACA,aACA,iBACA,sBACA,uBACA,mBACA,mBACA,wBACA,eACA,qBACA,0BACA,uBACA,yBACA,mBACA,kBACA,qBACA,2BAoHJ,UAAe,IAAAlI,OA3FwD,SAAC,GACpE,IAAA2J,EAAoB,uBACpBtC,EAAO,UACP,IAAA0E,eAAAA,OAAc,IAAG,GAAK,EACtB,IAAA3E,4BAAAA,OAA2B,OAAO,EAClCF,EAAS,YACT,IAAA8E,SAAAA,OAAQ,IAAG,GAAK,EACb9D,GAAI,cAP6D,0GAS9D+D,EAnBgC,SAAC/E,GACvC,OAAO,EAAY9G,QAAO,SAAC3H,GACvB,QAAIA,IAAa,KAAcoO,EAAiBC,WAIA,IAAzC,GAAkBnC,QAAQlM,EACrC,GACJ,CAW+ByT,CAA2BhF,QAAAA,EAAa,IAEnE,GAAkC,IAA9B+E,EAAmBrH,OACnB,OAAO,KAGX,GAAI+E,EACA,IACIA,EAAqBsC,E,CACvB,MAAOlC,GACL,KAAIA,aAAiBzP,OAAS+M,GAG1B,MAAM0C,EAGV,OALI1C,EAAQ0C,GAKL,I,CAIf,OACI,iCACMgC,IAAmBC,GACjB,yBACI,gBAAC7B,EAAA,EAAgB,CAACtP,GAAG,+BAI7B,uBAAK2F,UAAU,kBACVyL,EAAmB1F,KAAI,SAAC9N,GACrB,MAAiB,aAAbA,EAEI,gBAAC,IAAc,eACXgC,YAAa,UAAGhC,EAAQ,kBACxBiO,IAAKjO,EACLA,SAAUA,EACV4O,QAASA,GACLa,IAKC,cAAbzP,EAEI,gBAAC,IAAiB,eACdgC,YAAa,UAAGhC,EAAQ,kBACxBiO,IAAKjO,EACLA,SAAUA,EACV4O,QAASA,GACLa,IAKC,mBAAbzP,GAA8C,yBAAbA,EAE7B,gBAAC,IAAoB,eACjBgC,YAAa,UAAGhC,EAAQ,kBACxBiO,IAAKjO,EACLA,SAAUA,EACV4O,QAASA,GACLa,IAMZ,gBAAC,GAAc,eACXzN,YAAa,UAAGhC,EAAQ,kBACxB2O,4BAA6BA,EAC7BV,IAAKjO,EACLA,SAAUA,EACV4O,QAASA,GACLa,GAGhB,KAIhB,IChJA,IAAMiE,GAA4B,CAAC,aAEtBC,GAA2B,SAAC3T,GACrC,OAAO0T,GAA0BxH,QAAQlM,IAAa,CAC1D,EAEe,SAAS4T,GACpB5C,EACAxP,EACAxB,GAEA,QAAI2T,GAAyB3T,KAIzBgR,EAASC,UAKN,IAAA4C,OACHrS,EAAS6J,UACT,SAACG,GAAY,OAAmD,IAAnD,GAAkBU,QAAQV,EAAQC,WAAlC,GAErB,CCoFA,UAAe,EAAA9E,EAAA,IA7Bf,SAA4C,G,IACxCzI,EAAe,kBACfkN,EAAa,gBAGT,EAEAA,EAAa,KAFL0I,EAAiB,oBAAEzS,EAAW,cAAEoP,EAAW,cACvCsD,EACZ3I,EAAa,sBAEX4I,EAAiBF,IACjBtS,EAAWH,IACX2P,EAAWP,IAEjB,IAAKuD,IAAmBxS,IAAawP,EACjC,OAAO,KAGX,IAAMhR,EACFwB,EAAS6J,UAAyC,IAA7B7J,EAAS6J,SAASc,OAAe3K,EAAS6J,SAAS,GAAGI,WAAa,GAE5F,MAAO,CACHjM,MAAOwU,EAAexU,OAASwR,EAASxR,MACxCQ,SAAQ,EACRiU,WAAYL,GAAW5C,EAAUxP,EAAUxB,GAC3C+T,aAAcA,IACdG,QAAShW,EAAgBiW,gBAEjC,GAEA,EAnF2F,SAAC,G,IACxF3U,EAAK,QACLQ,EAAQ,WACRiU,EAAU,aACVF,EAAY,eACZ,IAAAK,UAAAA,OAAS,IAAG,IAAAtF,KAAI,EAChB,IAAAuF,eAAAA,OAAc,IAAG,IAAAvF,KAAI,EACrBoF,EAAO,UAqBP,OACI,uBAAKnM,UAAU,eAAc,YAAW,0BACpC,uBACIA,UAAU,qDAAoD,YACpD,iBAETvI,GAGL,uBAAKuI,UAAU,wBACVkM,GACG,gBAACjB,GAAA,GAAM,CACH1F,UAAWyG,EACXlF,QAhCuB,kE,oGAE/B8E,GAAyB3T,GACzB,GAAMkU,EAAQ,CAAElU,SAAQ,KADxB,M,cACA,SACAoU,EAAU,CAAEE,aAAa,IACzBjG,OAAOgB,SAASkF,S,aAEhB,SAAML,K,OAAN,SACAE,EAAU,CAAEE,aAAa,I,uDAGzB,EAAAE,GAAA,GAAgB,IAAyB,2BAAf,EAAMhS,KAChC4R,EAAU,CAAEE,aAAa,IAEzBD,EAAe,G,+BAmBPI,KAAMzB,GAAA,GAAW0B,KACjBC,OAAO,gBACPC,QAAS5B,GAAA,GAAc6B,WAEvB,gBAACnD,EAAA,EAAgB,CAACtP,GAAG,+BAM7C,I,4BC1DA,SApBkE,SAAC,G,IAAEjE,EAAQ,WAAEmP,EAAS,YAC9EK,EACF,uBAAK5F,UAAU,mCACX,uBAAKA,UAAU,2BACX,uBAAKA,UAAU,sBACX,uBAAKA,UAAU,sBACX,uBAAKA,UAAU,oBAEnB,uBAAKA,UAAU,8DAEnB,uBAAKA,UAAU,wDACX,uBAAKA,UAAU,0CAM/B,OAAO,gBAACmG,EAAA,GAAe,iBAAK,CAAE/P,SAAQ,EAAEmP,UAAS,EAAEK,SAAQ,IAC/D,E,mJCpBamH,GACT,mGCMW,SAASC,GAAyB,G,IAC7CvL,EAAQ,WAER,OAAO,SAAO,CACVhK,OAAO,WACFqK,IAAI,KACJT,QAAQ0L,GAActL,EAASX,UAAU,iCACzCI,SAASO,EAASX,UAAU,mCAEzC,CCUA,SAASmM,GACLxL,GAEA,OAAO,SAAChH,EAAM,G,IAAE0G,EAAK,QAAEU,EAAG,MAAEC,EAAG,MAC3B,GAAKL,EAIL,MAAa,aAAThH,EACOgH,EAASX,UAAU,0BAA2B,CAAEK,MAAK,IAGnD,QAAT1G,GAAkBqH,EACXL,EAASX,UAAU,qBAAsB,CAAEK,MAAK,EAAEW,IAAG,IAGnD,QAATrH,GAAkBoH,EACXJ,EAASX,UAAU,qBAAsB,CAAEK,MAAK,EAAEU,IAAG,IAGnD,YAATpH,EACOgH,EAASX,UAAU,oCAAqC,CAAEK,MAAK,SAD1E,CAGJ,CACJ,CAEA,UAAe,KAAAP,UAAQ,SAA2C,G,IAC9DC,EAAU,aACVY,EAAQ,WACR,IAAAyL,qBAAwBC,EAAW,cAAEC,EAAO,UAAEC,EAAK,QAAEC,EAAS,YAE9D,OAAO,SAAO,CACVrN,WAAW,WAASiB,SAASO,EAASX,UAAU,sCAChDZ,UAAU,WAASgB,SAASO,EAASX,UAAU,qCAC/CyM,UAAU,WACLrM,SAASO,EAASX,UAAU,qCAAuCqM,GACnE9L,QACG+L,EACA3L,EAASX,UAAU,4CAA8CqM,GAEpE9L,QACGgM,EACA5L,EAASX,UAAU,4CAA8CqM,GAEpEtL,IACGyL,EACA7L,EAASX,UAAU,iDAEtBgB,IAAI,IAAKL,EAASX,UAAU,kDAEhCQ,OAAO0L,GAAyB,CAAEvL,SAAQ,KAC1CH,QACG,EAAAC,GAAA,GAAoC,CAChCV,WAAU,EACVC,UAAWmM,GAAgCxL,KAG3D,I,gBCrDA,SAAS+L,GAAiCC,EAAiCC,GACvE,OAAID,EACO,CAAC,KAGLC,EAA2B,GAAK,CAAC,IAC5C,CA0GA,UAAe,EAAAC,EAAA,IACX,KAAAC,YAAgF,CAC5EC,aAAc,SAAC7P,EAAQ,G,IAAW,UAAA8P,eAAQ,IAAG,IAAA/G,KAAI,GACpC/I,EACb,EACA+P,iBAAkB,SAAC,GAAyD,OACxE9N,UAAW,GACXC,SAAU,GACVzI,MAAO,GACP8V,SAAU,GACVjL,aAAc,CAAC,EACf0L,uBAAwBR,GANe,yBAA0B,4BAAO,EAQ5ES,iBAAkB,SAAC,G,MACfxM,EAAQ,WACRZ,EAAU,aAEJqM,EAEL,QAF4B,EAAArM,EAAW0B,MACpC,SAAC,GAAqB,OAAP,cAAO,WACzB,eAAE2L,aAEH,IAAKhB,EACD,MAAM,IAAIpT,MAAM,iCASpB,OANeqU,GAAkC,CAC7C1M,SAAQ,EACRZ,WAAU,EACVqM,sBAAsB,EAAAkB,GAAA,GAAwBlB,IAItD,GA/BJ,EA9EA,SAAC,G,IAAEmB,EAAsC,yCAAExN,EAAU,aAAEyN,EAAkB,qBAAEC,EAAiB,oBAAEnE,EAAgC,mCAAEoE,EAAQ,WAAEC,EAAsB,yBAAEhB,EAAsB,yBAClLiB,GAA4B,IAAApY,UAAQ,WACtC,GAAKgY,EAAL,CAIA,IAAI,EAAAK,GAAA,GAAeL,IAAqD,MAA9BA,EAAmBM,OAAgB,CACzE,IAAMC,EAAeP,EAAmB1K,QAAQb,MAAM,KAEtD,OAAI8L,EAAazK,OAAS,EAElB,gBAACuF,EAAA,EAAgB,CACbvO,KAAM,CAAE3D,MAAOoX,EAAa,GAAGzN,QAC/B/G,GAAG,+BAKR,gBAACsP,EAAA,EAAgB,CAACtP,GAAG,sC,CAGhC,OAAOiU,EAAmB1K,O,CAC9B,GAAG,CAAC0K,IAEEjP,EAASgP,EAnDnB,SAAiCxN,EAAyB4M,GACtD,OAAO5M,EAAWkF,KAAI,SAAAlG,GAClB,GAAmB,2BAAfA,EAAMoB,KAAmC,CACjC,IAAA8G,EAAYlI,EAAK,QAGnBiP,IAFQ/G,aAAO,EAAPA,EAASgH,QAAS,IAELhJ,KAAI,SAAAiJ,GAC3B,MAAO,CACHtW,MAAO+U,EAAyB,IAAMuB,EAAKtW,MAC3CyI,MAAO6N,EAAK7N,MAEpB,IAEA,OAAO,gCACAtB,GAAK,CACRkI,QAAS,CACLgH,MAAOD,I,CAKnB,OAAOjP,CACX,GACJ,CA6BQoP,CAAwBpO,EAAY4M,GAAyB5M,EAEjE,OACI,gBAACqO,GAAA,EAAI,CACDlP,UAAU,gBACV3F,GAAG,8BACHuS,OAAO,+BAEP,gBAACuC,GAAA,EAAQ,KACJT,GACG,gBAACU,GAAA5W,EAAK,CAACiC,KAAM2U,GAAA,EAAUtV,OAAQ4U,GAEnC,uBAAK1O,UAAU,uBACVX,EAAO0G,KAAI,SAAClG,GAAU,OACnB,gBAACwP,GAAA,EAAgB,CACbC,aAAczP,EAAMoB,KACpBsO,WAAY,8BAAuB1P,EAAMoB,MACzCpB,MAAOA,EACP4O,uBAAwBA,EACxBvI,IAAKrG,EAAMxF,GACXmV,gBAAiB3P,EAAMC,OAAS,oBAAiBhK,GAPlC,MAa/B,uBAAKkK,UAAU,gBACX,gBAACiL,GAAA,GAAM,CACHwE,SAAUlB,GAAqBnE,EAC/B/P,GAAG,2BACHkL,UAAWgJ,GAAqBnE,EAChCwC,OAAO,2BACPnS,KAAK,SACLoS,QAAS5B,GAAA,GAAcyE,SAEvB,gBAAC/F,EAAA,EAAgB,CAACtP,GAAG,oCAGzB,qBACI2F,UAAU,2CAA0C,YAC1C,yBACV3C,KAAK,IACLhD,GAAG,2BACHyM,SAAS,EAAA6I,GAAA,GAAenB,IAExB,gBAAC7E,EAAA,EAAgB,CAACtP,GAAG,2BAKzC,K,2ECvGA,UAAe,IAAAmF,OA3BwC,SAAC,G,IAAEoQ,EAAQ,WAAEnB,EAAsB,yBAChFoB,GAAc,IAAA/H,cAChB,SAACjD,GAAsB,OACnB,gBAACiL,GAAA,GAAS,iBACFjL,EAAMhF,MAAK,CACfkQ,aAAclL,EAAMhF,MAAMoB,KAC1B5G,GAAIwK,EAAMhF,MAAMoB,KAChBwN,uBAAwBA,EACxBhU,KAAK,UANU,GASvB,CAACgU,IAGCuB,GAAe,IAAA1Z,UAAQ,WAAM,uBAACqT,EAAA,EAAgB,CAACtP,GAAG,wBAArB,GAAgD,IAEnF,OACI,gBAAC4V,GAAA,EAAS,CACNC,MAAOL,EACPpB,uBAAwBA,EACxBuB,aAAcA,EACd/O,KAAK,QACL2O,SAAUA,GAGtB,IC6KA,UAAe,EAAAjC,EAAA,IACX,KAAAC,YAA0E,CACtEG,iBAAkB,SAAC,G,IAAE,IAAAtW,MAAiB,OAClCA,WADsB,IAAG,KAAE,EAAO,EAGtCoW,aAAc,SAAC7P,EAAQ,G,IAAW,UAAAmS,uBAAgB,IAAG,IAAApJ,KAAI,GACpC/I,EACrB,EACAiQ,iBAAkB,SAAC,GACf,OAAAjB,GAAyB,CAAEvL,SADF,YACzB,GARR,EASG,IAAAjC,OApLH,SAAC,G,IACD/H,EAAK,QACL2Y,EAAM,SACN,IAAAC,eAAAA,OAAc,IAAG,GAAK,EACtBC,EAAqB,wBACrB,IAAAC,eAAAA,OAAc,IAAG,IAAAxJ,KAAI,EACrByJ,EAAc,iBACdC,EAAS,YACTC,EAAU,aACVjC,EAAsB,yBACLkC,EAAS,eAEpBC,GAAsB,IAAAta,UAAQ,WAChC,OAAIga,EACIE,EACO,uBAGJ,0BAGP/Y,EACO,gCAGJ,oBACX,GAAG,CAAC6Y,EAAuBE,EAAgB/Y,IAErCoZ,GAAW,IAAAva,UACb,WAAM,OACF,uBAAK0J,UAAU,gBACX,gBAACiL,GAAA,GAAM,CAACnE,QAASyJ,GACb,gBAAC5G,EAAA,EAAgB,CAACtP,GAAG,sBAH3B,GAON,CAACkW,IAGCO,GAAS,IAAAxa,UAAQ,WACnB,OAAIka,GAA4C,MAA1BA,EAAe5B,OAC1BiC,EAGPP,IAA0BE,EACtBH,EACO,gBAACU,GAAA,EAAc,CAACxL,WAAS,IAGhCkL,GAAsC,mBAAzBA,EAAUO,WAChBH,EAIP,yBACI,gBAACI,GAAA,EAAc,CAAC5W,GAAG,0BAA0ByM,QAAS4J,IACtD,gBAACO,GAAA,EAAc,CAAC5W,GAAG,gCAAgCyM,QAASyJ,KAMpE,uBAAKvQ,UAAU,gBACX,gBAACiL,GAAA,GAAM,CACHjL,UAAU,oCACV8G,QAASyJ,EACT9V,KAAK,UAEL,gBAACkP,EAAA,EAAgB,CAACtP,GAAG,0BAEzB,gBAAC4Q,GAAA,GAAM,CAAC1F,UAAW8K,EAAgB5V,KAAK,SAASoS,QAAS5B,GAAA,GAAcyE,SACpE,gBAAC/F,EAAA,EAAgB,CAACtP,GAAG,sBAIrC,GAAG,CACCmW,EACAF,EACAO,EACAH,EACAL,EACAE,EACAE,IAGElH,GAAQ,IAAAjT,UAAQ,WAClB,IAAKka,EACD,OAAO,KAGH,IAAA5B,EAAW4B,EAAc,OAEjC,OACI,gBAACpB,GAAA5W,EAAK,CAACiC,KAAM2U,GAAA,EAAUtV,OACP,MAAX8U,EACG,gBAACjF,EAAA,EAAgB,CAACtP,GAAG,yCAErB,gBAACsP,EAAA,EAAgB,CACbtP,GACe,MAAXuU,EACM,8BACA,6BAM9B,GAAG,CAAC4B,IAEEU,GAAO,IAAA5a,UAAQ,WACjB,GAAIka,GAA4C,MAA1BA,EAAe5B,OACjC,OAAO,KAGX,GAAI0B,GAAyBG,IAAcD,EAAgB,CAC/C,IAAAW,EAAuBV,EAAS,OAAxBO,EAAeP,EAAS,WAExC,OACI,yBACI,gBAACjL,EAAA,EAAc,CACXpK,KAAM,CACFgW,QAASC,KAAKC,MAAMH,EAAS,KAEjC9W,GACmB,YAAf2W,EACM,wBACA,+C,CAO1B,OAAIV,IAA0BG,EACnB,gBAAC,GAAU,CAAChC,uBAAwBA,IAI3C,gCACI,yBACI,gBAAC9E,EAAA,EAAgB,CAACtP,GAAG,sBAEzB,gBAAC,GAAU,CAACoU,uBAAwBA,IAGhD,GAAG,CAAC+B,EAAgBF,EAAuBG,EAAWE,IAEtD,OACI,gBAACY,GAAA,EAAK,CACFC,wBAAwB,kBACxBC,yBAAyB,gBACzBC,OACI,gBAACC,GAAA,EAAW,KACR,gBAAChI,EAAA,EAAgB,CAACtP,GAAIuW,KAG9BR,OAAQA,EACRG,eAAgBA,EAChBqB,uBAAuB,GAEvB,gBAAC1C,GAAA,EAAI,KACD,gBAAC6B,GAAA,EAAc,CAACxL,UAAW8K,IAAmB5Y,IAC7C8R,EACA2H,EACAJ,GAIjB,M,4BC9Me,SAASe,GAAqBvL,GAEzC,OAAOA,EAAOwL,eAAe,mBAAqBxL,EAAOwL,eAAe,oBAC5E,CC+CA,SAzCmD,W,UAEzC,GADoB,UAAa,cACe1W,KAA9C2W,EAAgB,mBAClB3G,EAA0D,QAA7B,EAAW,QAAX,GAAA/R,EADA,sBACW,eAAE0P,wBAAgB,eAAEqC,2BAE5D4G,EACF5G,IACA,QAAuBA,IACvB2G,EAAiB3G,GAEf6G,IACAD,GACFH,GAAqBvL,UACY,QAAjC,EAAA0L,aAAa,EAAbA,EAAeE,0BAAkB,eAAEC,iCAiBvC,OAfA,IAAAjY,YAAU,WACH+X,GAAiCJ,GAAqBvL,WACpC,QAA0B8E,GACrC9E,OAAO8L,kBACP9L,OAAO+L,gBAEJC,2BAA2B,CAChCC,uBAAuB,IAEtBC,MAAK,SAACC,GACHA,EAAOtN,OAAO,2BAClB,GAEZ,GAAG,IAEC8M,EAEI,uBAAKjS,UAAU,qCACX,uBAAK3F,GAAG,0BAAyB,YAAW,6BAKjD,gCACX,E,gBC5CMqY,GAAqE,SAAC,G,IAAE7V,EAAG,MAAO,OACpF,gBAAC8V,GAAA,EAAiB,CACd3C,aAAc,gBAACxK,EAAA,EAAc,CAACpK,KAAM,CAAEyB,IAAG,GAAIxC,GAAG,yBAChD4G,KAAK,gBACL2L,OAAO,2BAJyE,EAQlFgG,GAA4D,SAAC,G,IAAE/V,EAAG,MAAO,OAC3E,gBAACsS,GAAA,EAAQ,CAAChE,oBAAoB,2BAC1B,gBAACuH,GAA8B,CAAC7V,IAAKA,IAFkC,EAMzEgW,GAA+D,SAAC,G,IAAEhW,EAAG,MAAO,OAC9E,yBACI,gBAAC2I,EAAA,EAAc,CAACpK,KAAM,CAAEyB,IAAG,GAAIxC,GAAG,sCAFwC,EAiBlF,UAAe,IAAAmF,OAXiF,SAAC,G,IAC7F3C,EAAG,MAGH,OAFsB,yBAGX,gBAACgW,GAAwB,CAAChW,IAAKA,IAGnC,gBAAC+V,GAAqB,CAAC/V,IAAKA,GACvC,IC3Be,SAASiW,GAAiC,G,IACrDC,EAAU,aACVtR,EAAQ,WAEFuR,EAEF,CAAC,EASL,OAPID,IACAC,EAAaC,eAAgB,WAAUC,MACnC,EAAC,GACDzR,EAASX,UAAU,oCAIpB,SAAOkS,EAClB,C,oDCaA,UAAe,IAAAxT,OA1BgD,SAAC,G,IAC5DK,EAAK,QACL6N,EAAwB,2BACtB,OACF,gCACI,gBAACyF,GAAA,GAAK,iBACEtT,EAAK,CACTuT,QAASvT,EAAMnH,MACfsH,UAAU,gBACV3F,GAAIwF,EAAMoB,KACV2L,OAAO,4BACPnS,KAAK,cAGT,gBAAC4Y,GAAA,EAAK,CAACC,QAASzT,EAAMoB,MAClB,gBAACuE,EAAA,EAAc,CACXnL,GACIqT,EACM,mCACA,iDAhBpB,ICdN,+BAgBA,QAbW,EAAA6F,mBAAP,SAA0BC,GACtBC,eAAeC,QAAQrX,KAAK6J,IAAK,UAAGsN,GACxC,EAEO,EAAAG,mBAAP,WAGI,MAAiB,SAFHF,eAAeG,QAAQvX,KAAK6J,IAG9C,EAEO,EAAA2N,sBAAP,WACIJ,eAAeK,WAAWzX,KAAK6J,IACnC,EAdO,EAAAA,IAAM,kBAejB,C,CAhBA,GCgBA,SAAS6N,GAAwBrG,EAAmCD,GAChE,QAAIuG,GAAwBL,uBAIrBjG,GAAmCD,CAC9C,CAiHA,UAAe,EAAAE,EAAA,IACX,KAAAC,YAAgE,CAC5DG,iBAAkB,SAAC,G,IACf,IAAAtW,MAAAA,OAAK,IAAG,KAAE,EACV,IAAAgW,uBAAAA,OAAsB,IAAG,GAAK,EAE5B,OACFhW,MAAK,EACL+b,gBAAiBO,GAHO,2BAG2CtG,GACnEwF,eAAe,EAHb,EAKNpF,aAAc,SAAC7P,EAAQ,IACnBiW,EAD+C,2BAC7BjW,EACtB,EACAiQ,iBAAkB,SAAC,G,IAAExM,EAAQ,WAAEyS,EAAgB,mBAAEC,EAAsB,yBAC7D1c,GAAQ,WACTA,MAAMgK,EAASX,UAAU,iCACzBgB,IAAI,KACJZ,SAASO,EAASX,UAAU,kCAE3BsT,GAAa,SAAO,CAAE3c,MAAK,IAEjC,OAAIyc,IAAqBC,EACdC,EAAW9S,OACdwR,GAAiC,CAC7BC,aAAcmB,EACdzS,SAAQ,KAKb2S,CACX,GA/BJ,EAgCG,IAAA5U,OAxHH,SAAC,G,IACD6U,EAAY,eACZC,EAAe,kBACfC,EAA4B,+BAC5BhP,EAAS,YACTiP,EAAa,gBACbC,EAAW,cACXP,EAAgB,mBAChBxG,EAAwB,2BACxByG,EAAsB,yBACtB1F,EAAsB,yBACtBiG,EAAwB,2BAElBC,GAAc,IAAA7M,cAChB,SAAC8M,GAAoC,OACjC,gBAAC,IAAc,iBAAKA,EAAU,CAAElH,yBAA0BA,IADzB,GAGrC,CAACA,IAGL,OACI,gBAACwB,GAAA,EAAI,CACDlP,UAAU,gBACV3F,GAAG,0BACHuS,OAAO,2BAEP,gBAACuC,GAAA,EAAQ,CACL0F,OACI,gBAACC,GAAA,EAAM,CAACC,QAAM,GACV,gBAACpL,EAAA,EAAgB,CAACtP,GAAG,mCAI7B,uBAAK2F,UAAU,2BACX,uBAAKA,UAAU,sBACX,gBAAC,GAAU,CAACyO,uBAAwBA,EAAwBmB,SAAU4E,IAErEE,GAA4B,gBAAC,GAAuB,OAEnDL,GAAgB3G,IACd,gBAACsH,GAAA,EAAc,CAAC/T,KAAK,kBAAkBkE,OAAQwP,KAIvD,uBACI3U,UAAW,IAAW,oCAAqC,CACvD,kCAAmCyO,KAGvC,gBAACxD,GAAA,GAAM,CACHjL,UAAU,uBACV3F,GAAG,6BACHkL,UAAWA,EACXqH,OAAO,oCACPnS,KAAK,SACLoS,QAAS5B,GAAA,GAAcyE,SAEvB,gBAAC/F,EAAA,EAAgB,CAACtP,GAAIka,OAKjCL,GACG,gBAAC,GAAkB,CAACC,uBAAwBA,EAAwBtX,IAAKqX,KAG3E3O,GACE,yBACI,gBAACoE,EAAA,EAAgB,CAACtP,GAAG,wBAAyB,IAC9C,iCACc,2BACVA,GAAG,0BACHyM,QAAS2N,EACTQ,KAAK,SACLC,SAAU,GAEV,gBAACvL,EAAA,EAAgB,CAACtP,GAAG,4BAKhCia,GAIjB,M,gBC3HA,UAAe,EAAAa,GAAA,IANoB,WAAM,OACrC,uBAAKC,QAAQ,cAAcC,MAAM,8BAC7B,wBAAMC,EAAE,kbAFyB,ICMzC,UAAe,EAAAH,GAAA,IANyB,WAAM,OAC1C,uBAAKC,QAAQ,cAAcC,MAAM,8BAC7B,wBAAMC,EAAE,qxBAF8B,I,gBCmD9C,UAAe,IAAA9V,OAzC6C,SAAC,G,IAAE,IAAAiP,uBAAAA,OAAsB,IAAG,GAAK,EACnFoB,GAAc,IAAA/H,cAChB,SAACjD,GAAsB,OACnB,gBAAC0Q,GAAA,EAAM,CAACC,eAAe,IAClB,SAAC,G,IAAEpF,EAAM,SAAEqF,EAAM,SAAO,OACrB,uBAAKzV,UAAU,uBACX,gBAAC8P,GAAA,GAAS,iBACFjL,EAAMhF,MAAK,CACfsL,oBAAoB,uBACpB9Q,GAAIwK,EAAMhF,MAAMoB,KAChBwN,uBAAwBA,EACxBhU,KAAM2V,EAAS,OAAS,cAE3B3B,GACG,gBAAC4E,GAAA,EAAK,CACFC,QAASzO,EAAMhF,MAAMoB,KACrB5G,GAAI,UAAGwK,EAAMhF,MAAMoB,KAAI,UACvBwN,wBAAwB,GAExB,gBAAC9E,EAAA,EAAgB,CAACtP,GAAG,6BAG7B,qBACI2F,UAAU,uCACV3C,KAAK,IACLyJ,QAAS2O,GAERrF,EAAS,gBAAC,GAAO,MAAM,gBAAC,GAAY,OAvBxB,GAFV,GA+BvB,CAAC3B,IAGCuB,GAAe,IAAA1Z,UAAQ,WAAM,uBAACqT,EAAA,EAAgB,CAACtP,GAAG,2BAArB,GAAmD,IAEtF,OAAO,gBAAC4V,GAAA,EAAS,CAACC,MAAOL,EAAapB,uBAAwBA,EAAwBuB,aAAcvB,EAAyB,KAAOuB,EAAc/O,KAAK,YAC3J,ICqKA,UAAe,EAAA0M,EAAA,IACX,KAAAC,YAAgE,CAC5DG,iBAAkB,SAAC,G,IAAE,IAAAtW,MAAiB,OAClCA,WADsB,IAAG,KAAE,EAE3B8V,SAAU,GAFwB,EAItCM,aAAc,SAAC7P,EAAQ,IACnB0X,EADsC,kBAC7B1X,EACb,EACAiQ,iBAAkB,SAAC,G,IAAExM,EAAQ,WACzB,OAAAuL,GAAyB,CAAEvL,SAAQ,IAAIH,QACnC,SAAO,CACHiM,UAAU,WAASrM,SACfO,EAASX,UAAU,uCAH/B,GATR,EAgBG,IAAAtB,OArLH,SAAC,G,IACDmW,EAAS,YACTpB,EAA4B,+BAC5BqB,EAAiB,oBACjBne,EAAK,QACLoe,EAAoB,uBACpBC,EAAW,cACX1L,EAAgC,mCAChC3I,EAAQ,WACR,IAAA+M,SAAAA,OAAQ,IAAG,IAAAzH,KAAI,EACfyN,EAAa,gBACbP,EAAiB,oBACjB,IAAA8B,gBAAAA,OAAe,IAAG,IAAAhP,KAAI,EACtB,IAAAoJ,iBAAAA,OAAgB,IAAG,IAAApJ,KAAI,EACvBiP,EAAW,cACXC,EAA2B,8BAC3BxH,EAAsB,yBACtB,IAAAyH,SAAAA,OAAQ,IAAG,IAAiBC,MAAK,EAE3BC,GAAkB,IAAAtO,cAAY,WAChC,OAAKrQ,EAKD,qBAAGuI,UAAU,sCACT,gBAACiR,GAAA,EAAc,CACX7V,KAAM,CAAE3D,MAAK,GACb4C,GAAG,0CACHyM,QAAS0H,EACT5B,OAAO,kBATR,IAaf,GAAG,CAACnV,EAAO+W,IAEX,OACI,gBAACU,GAAA,EAAI,CACDlP,UAAU,gBACV3F,GAAG,8BACHuS,OAAO,+BAEP,gBAACuC,GAAA,EAAQ,CACL0F,OACI,gBAACC,GAAA,EAAM,CAACC,QAAM,GACV,gBAACpL,EAAA,EAAgB,CAACtP,GAAG,uCAI5B2b,GACG,gBAAC5G,GAAA5W,EAAK,CAACoU,OAAO,+BAA+BnS,KAAM2U,GAAA,EAAUtV,OCxGlE,SACXyP,EACAzI,GAIA,OAFayI,EAAM8M,MAAQ9M,EAAM8M,KAAK5b,MAGlC,IAAK,kBACD,OAAOqG,EAAU,oCAErB,IAAK,8BACD,OAAOA,EAAU,8CAErB,QACI,OAAOA,EAAU,0BAE7B,CDyFyBwV,CAAgBN,GAAa,SAAC9P,GAAQ,OAAAzE,EAASX,UAAUoF,EAAnB,KAI9CgQ,IAAa,EAAiBK,gBAC3B,gBAACnH,GAAA5W,EAAK,CAACiC,KAAM2U,GAAA,EAAUoH,MACnB,gBAAChR,EAAA,EAAc,CAACpK,KAAM,CAAE3D,MAAK,GAAI4C,GAAG,gCAI3C6b,IAAa,EAAiBO,0BAC3B,gBAACrH,GAAA5W,EAAK,CAACiC,KAAM2U,GAAA,EAAUoH,MACnB,gBAAChR,EAAA,EAAc,CAACpK,KAAM,CAAE3D,MAAK,GAAI4C,GAAG,+BAI3C6b,IAAa,EAAiBQ,eAC3B,gBAACtH,GAAA5W,EAAK,CAACiC,KAAM2U,GAAA,EAAUtV,OACnB,gBAACmX,GAAA,EAAc,CACX5W,GAAG,oCACHyM,QAASiP,MAKnBG,IAAa,EAAiBC,OAC5BD,IAAa,EAAiBQ,gBAC9B,gBAAC,GAAU,CAACjI,uBAAwBA,EAAwBmB,SAAU4E,IAG1E,gBAAC,GAAa,CAAC/F,uBAAwBA,IAEvC,qBAAGzO,UAAU,yBACT,4BACM6V,GACE,gBAAC5E,GAAA,EAAc,CACX5W,GAAG,mBACHyM,QAAUqJ,EACVvD,OAAO,0BAGZiJ,GACC,iCACc,uBACVxY,KAAOuY,EACPzY,IAAI,sBACJwZ,OAAO,UAEP,gBAAChN,EAAA,EAAgB,CAACtP,GAAG,sCAI/B6b,IAAa,EAAiBC,OAASF,GACrC,4BACI,gBAAChF,GAAA,EAAc,CACX5W,GAAG,2CACHyM,QAASiP,MAMzB,uBAAK/V,UAAU,gBACX,gBAACiL,GAAA,GAAM,CACHwE,SAAUqG,GAAe1L,EACzB/P,GAAG,6BACHkL,UAAWuQ,GAAe1L,EAC1BwC,OAAO,2BACPnS,KAAK,SACLoS,QAAS5B,GAAA,GAAcyE,SAEvB,gBAAC/F,EAAA,EAAgB,CAACtP,GAAG,6BAGxB6b,IAAa,EAAiBK,gBAC3B,qBACIvW,UAAU,2CAA0C,YAC1C,0BACV3C,KAAK,IACLhD,GAAG,0BACHyM,SAAS,EAAA6I,GAAA,GAAesE,IAExB,gBAACtK,EAAA,EAAgB,CAACtP,GAAIka,KAI7BoB,GACGO,IAAa,EAAiBQ,eAC9BR,IAAa,EAAiBK,gBAC1B,qBACIvW,UAAU,2CAA0C,YAC1C,yBACV3C,KAAK,IACLhD,GAAG,2BACHyM,SAAS,EAAA6I,GAAA,GAAenB,IAExB,gBAAC7E,EAAA,EAAgB,CACbtP,GACI6b,IAAa,EAAiBO,yBACxB,gCACA,2BAO7BP,IAAa,EAAiBK,gBAAkBH,KAIjE,M,eElNe,SAASQ,GAA+B,GACnD,IAAA5I,EAAsB,yBACtB1L,EAAY,eACTtE,GAAM,cAH0C,2CAKnD,OAAO,gCACAA,GAAM,CACTgQ,uBAAwBA,GAA0BA,EAAuB5J,OAAS,EAClF9B,cAAc,EAAAuU,GAAA,GAAkCvU,IAExD,C,gBCwOA,UAAe,EAAAqL,EAAA,IACX,KAAAC,YAAkD,CAC1CG,iBAAkB,SAAC,G,IACf,IAAAtW,MAAAA,OAAK,IAAG,KAAE,EACV,IAAAgW,uBAAAA,OAAsB,IAAG,GAAK,EAE5B,OACFhW,MAAK,EACL+b,iBAHwB,4BAG4B/F,EACpDwF,eAAe,EAHb,EAKNpF,aAAc,SAAE7P,EAAQ,IACpB8Y,EAD+B,aACrB,CACNC,YAAY,EACZvD,gBAAiBxV,EAAOwV,iBAEhC,EACAvF,iBAAkB,SAAC,G,IAAExM,EAAQ,WAAEyS,EAAgB,mBAAEC,EAAsB,yBACnE,GAAID,IAAqBC,EACrB,OAAOrB,GAAiC,CAChCC,aAAcmB,EACdzS,SAAQ,GAGxB,GAvBR,EAwBO,IAAAjC,OA/OqF,SAAC,G,IAC7F+U,EAA4B,+BAC5BhP,EAAS,YACToB,EAAU,aACVwN,EAAsB,yBACtBjN,EAAY,eACZsN,EAAa,gBACbC,EAAW,cACXR,EAAiB,oBACjBI,EAAY,eACZC,EAAe,kBACf5G,EAAwB,2BACxBwG,EAAgB,mBAChB7c,EAAI,OACJuX,EAAM,SAGA,GAAsD,IAAAtE,WAAS,GAA9D0M,EAAsB,KAAEC,EAAyB,KAClD,GAA8B,IAAA3M,UAAS,IAAtC4M,EAAU,KAAEC,EAAa,KAC1B,GAAsC,IAAA7M,WAAS,GAA9C8M,EAAc,KAAEC,EAAiB,KAClC,GAAwC,IAAA/M,WAAS,GAAhDgN,EAAe,KAAEC,EAAkB,KACpC,GAA4B,IAAAjN,WAAS,GAApCkN,EAAS,KAAEC,EAAY,KACxBC,EAA4B,WAC9BzD,EAAkB,CACdxc,MAAOyf,EACP1D,mBAAmB5E,aAAM,EAANA,EAAQ4E,kBAEnC,EACMmE,GAAmB,IAAA7P,cAAY,SAAC8P,EAAwBngB,GAC1D+c,EAAc/c,GACd0f,EAAc1f,GACdwf,GAA2Bxf,GAC3B4f,EAAkBO,GAEdA,GACAH,GAAa,EAErB,GAAG,CAACR,EAA2BzC,KAE/B,IAAAta,YAAU,aACA7C,EAAKwgB,YAAcL,IAAcN,GAAcE,GACjDM,GAER,GAAG,CAACR,EAAYE,EAAgBI,KAEhC,IAAAtd,YAAU,YACF0U,aAAM,EAANA,EAAQmI,aACRW,GAER,GAAG,CAAC9I,aAAM,EAANA,EAAQmI,aAEZ,IAAMe,GAAgB,IAAAhQ,cAAY,SAACiQ,GAC/BR,EAAmBQ,EACvB,GAAG,KAqBH,IAAA7d,YAAU,WAGN,OAfAyM,EAAY,CACR1O,SAAU,YACV+f,UAAW,CACPva,UAAW,gBACXwa,cAAeN,EACfpS,UAAWuS,EACXI,UAAWC,EACXC,UAAW,YACXngB,SAAU,UAOX,WArBPiP,EAAa,CACTjP,SAAU,aAoBD,CACjB,GAAG,IAEH,IAAMogB,EAAuB,SACzBhe,EACAie,GACA,IAAMC,EAAkB7c,SAAS8c,eAAene,GAEhD,GAAIke,EACA,OAAO,EAAAE,GAAA,GAAiBF,EAAiBD,EAKjD,EAEMre,EAAc,8BAEdke,GAA8D,IAAArQ,cAAa,WAC7E,IAAM4Q,EAAYL,EAAqB,UAAGpe,EAAW,WAAW,CAAC,QAAS,mBAAoB,eAAgB,eACxG0e,EAAYN,EAAqB,UAAGpe,EAAW,WAAW,CAAC,UAC3D2e,EAAYP,EAAqB,UAAGpe,EAAW,WAAW,CAAC,UAEjE,OAAO0e,GAAaD,GAAaE,EAAY,CACzCC,UAAWF,EAAUG,MACrBC,UAAWL,EAAUI,MACrBE,qBAAsBN,EAAUI,MAChCG,eAAgBL,EAAUE,MAC1BI,gBAAiBR,EAAU,oBAC3BS,iBAAkBT,EAAU,cAC5BU,YAAaV,EAAU,sBACvB5iB,CACR,GAAG,IAyBG6e,GAAc,IAAA7M,cAAY,SAAC8M,GAAoC,OACjE,gBAAC,IAAc,iBACNA,EAAU,CACflH,yBAA2BA,IAHkC,GAKlE,CACCA,IAGE2L,EAAajC,IAAmBI,EAAW,8CAAgDjD,EAEjG,OACI,gCACI,gBAAC,GAAgB,CAAChP,UAAW+R,IAC7B,gBAACpI,GAAA,EAAI,CACDlP,UAAU,gBACV3F,GAAG,0BACHuS,OAAO,2BAEP,uBAAK5M,UAAU,gBAAgBxE,MAAQ,CAAC8d,QAAShC,EAAkB,YAASxhB,IACxE,gBAACqZ,GAAA,EAAQ,CACL0F,QAAUuC,GACN,gBAACtC,GAAA,EAAM,CAACC,QAAM,GACV,gBAACpL,EAAA,EAAgB,CAACtP,GAAG,mCAI7B,uBAAK2F,UAAU,2BACX,uBAAKA,UAAU,sBACX,uBAAK3F,GAAG,kBACR,4BACGga,GAAgB3G,IAA6B,gBAACsH,GAAA,EAAc,CAC3D/T,KAAK,kBACLkE,OAASwP,KAIjB,uBAAK3U,UAAU,uCACPoX,GAAmBA,IAAmBI,IAAgB,gBAACvM,GAAA,GAAM,CAC7DjL,UAAU,6BACVyP,SAAWuH,EACX3c,GAAG,oCACHkL,UAAYA,EACZqH,OAAO,2CACPnS,KAAK,SACLoS,QAAU5B,GAAA,GAAcyE,SAExB,gBAAC/F,EAAA,EAAgB,CAACtP,GAAKgf,OAKlCnF,GACG,gBAAC,GAAkB,CAACC,uBAAwBA,EAAwBtX,IAAKqX,KAIxE3O,GAAa,yBACV,gBAACoE,EAAA,EAAgB,CAACtP,GAAG,wBACnB,IACF,iCACc,2BACVA,GAAG,0BACHyM,QAAU2N,EACVQ,KAAK,SACLC,SAAU,GAEV,gBAACvL,EAAA,EAAgB,CAACtP,GAAG,6BAI9B+c,GAAkB9C,IA5FjC,uBACItU,UAAU,+BACV3F,GAAK,UAAGJ,EAAW,WACnBsf,YAAY,QAEZ,uBACIvZ,UAAU,qBAEV,uBACIA,UAAU,+BACV3F,GAAK,UAAGJ,EAAW,cAG3B,uBACI+F,UAAU,+BACV3F,GAAK,UAAGJ,EAAW,eAoFvC,MC1IA,8E,OACI,EAAAM,MAAuB,CACnBif,sBAAsB,EACtBC,SAAS,EACTC,wBAAwB,GA+JpB,EAAAC,wBAAsC,WAC1C,EAAK3U,SAAS,CACVwU,sBAAsB,EACtBE,wBAAwB,GAEhC,EA2EQ,EAAAE,wBAAsC,6D,uEAClC1D,EAAa7Z,KAAKwI,MAAK,S,8CAGvBqR,IAAa,EAAiBC,OAAS9Z,KAAKwd,WAC5C,GAAMxd,KAAKyd,qBAAqB,CAAEriB,MAAO4E,KAAKwd,cAD9C,M,OACA,S,2CAGJxd,KAAK2I,SAAS,CACVwU,sBAAsB,I,6BAK1B,EAAAM,qBAAwE,SAC5E9b,GAAM,kD,uEAEE+b,EAAmB1d,KAAKwI,MAAK,e,iBAGjC,O,sBAAA,GAAMkV,EAAe/b,I,cAArB,S,oBAEA3B,KAAK2I,SAAS,CACV0U,wBAAwB,I,6BAK5B,EAAAM,sBAAwE,SAC5EC,GAAU,kD,yGAEJ,EASF5d,KAAKwI,MARLwP,EAAY,eACZ6F,EAAe,kBACfC,EAAY,eACZ1M,EAAsB,yBACtB,IAAA2M,iBAAAA,OAAgB,IAAG,IAAArT,KAAI,EACvB,IAAAkN,kBAAAA,OAAiB,IAAG,IAAAlN,KAAI,EACxB,IAAAsT,uBAAAA,OAAsB,IAAG,IAAAtT,KAAI,EAC7BuT,EAAuB,0BAGrB7iB,EAAQwiB,EAAWxiB,MAAM2J,OACzBmZ,GACFJ,IAAgB1M,QAAiC3X,E,iBAGhC,O,sBAAA,GAAMokB,EAAgB,CACnCziB,MAAK,EACL+iB,8BACInG,IAAgB4F,EAAWzG,kBAErB+G,EACVE,6BAA4BR,EAAWzG,iBAEjC+G,K,OAWV,OAnBQnf,EAAS,SASf,KAEFkf,EAAwBL,EAAWzG,iBAEnCQ,GAAwBT,mBAAmB0G,EAAWzG,iBAEhDvK,EAAW7N,EAAKsN,cAEhBgS,EAA0Btf,EAAKuf,6BAEjC1R,GAAYA,EAAS2R,uBAAyB3R,EAASC,WAAYwR,aAAuB,EAAvBA,EAAyBG,+BACrF,CAAP,EAAOT,EAAiB,EAAiB7D,iBAG7C,GAAMla,KAAKye,0C,cAAX,SAEAze,KAAKwd,gBAAa/jB,E,aAYlB,O,aATI,EAAA2W,GAAA,GAAgB,IACA,yBAAf,EAAMhS,MACY,kCAAf,EAAMA,OAEV4B,KAAKwd,gBAAa/jB,EAElBme,MAGA,EAAAxH,GAAA,GAAgB,IAA2B,MAAjB,EAAMmC,OACzB,CAAP,EAAOwL,EAAiB,EAAiB1D,iBAGzC,EAAAjK,GAAA,GAAgB,IAA2B,MAAjB,EAAMmC,OACzB,CAAP,EAAOwL,EAAiB,EAAiB3D,4BAG7C4D,EAAuB,G,gCAIvB,EAAAU,aAAoE,SACxEC,GAAW,kD,mFAEL,EAIF3e,KAAKwI,MAHLoW,EAAM,SACN,IAAAvF,SAAAA,OAAQ,IAAG,IAAA3O,KAAI,EACf,IAAAmU,cAAAA,OAAa,IAAG,IAAAnU,KAAI,E,iBAIpB,O,sBAAA,GAAMkU,EAAOD,I,cAAb,SAEAtF,IAEArZ,KAAKwd,gBAAa/jB,E,+BAElBolB,EAAc,G,+BAId,EAAAC,oBAAiE,SAAOnd,GAAM,kD,+EAMlF,OALM,EAGF3B,KAAKwI,MAFL,IAAAuW,cAAAA,OAAa,IAAG,IAAArU,KAAI,EACpB,IAAAsU,iBAAAA,OAAgB,IAAG,IAAAtU,KAAI,EAG3B,GAAMqU,EAAcxE,GAA+B5Y,K,cAAnD,SAEAqd,I,YAGI,EAAAC,kBAAgC,WAC5B,MAA4B,EAAKzW,MAAK,uBAAtB,IAAG,IAAAkC,KAAI,GAEd,EAAiBwU,cACtC,EAEQ,EAAAC,0BAAwC,WACtC,MAA8D,EAAK3W,MAAjE4W,EAAU,aAAE,IAAArB,iBAAAA,OAAgB,IAAG,IAAArT,KAAI,EAAEuH,EAAkB,qBAE3DA,GACAmN,EAAWnN,GAGf8L,EAAiB,EAAiBjE,MACtC,EAEQ,EAAAuF,mBAAiC,WAC/B,MAAuD,EAAK7W,MAA1D4W,EAAU,aAAE,IAAArB,iBAAAA,OAAgB,IAAG,IAAArT,KAAI,EAAEiP,EAAW,cAEpDA,GACAyF,EAAWzF,GAGfoE,EAAiB,EAAiBuB,MACtC,EAEQ,EAAAC,kBAA6C,SAACnkB,GAC1C,IAAAvB,EAAqB,EAAK2O,MAAK,iBAEvC,EAAKgV,WAAapiB,EAClBvB,EAAiBsB,mBAAmBC,EACxC,EAEQ,EAAAokB,gBAA8B,WAC1B,MAA4B,EAAKhX,MAAK,uBAAtB,IAAG,IAAAkC,KAAI,GAEd,EAAiBoP,MACtC,EAEQ,EAAA2E,uCAAqD,6D,6FACnD,EAIFze,KAAKwI,MAHLwF,EAA4B,+BAC5B,IAAA4J,kBAAAA,OAAiB,IAAG,IAAAlN,KAAI,GACxBqE,EAA0B,+BAGIA,IAA+BC,GAAA,EAAgByQ,UAC7E,GAAMzR,EAA6B,CAC/BpS,SAAUmT,EACV2Q,6BAA8B9H,EAC9B+H,8BAA+B,SAACrkB,GAAY,SAAKqkB,8BAA8BrkB,EAAnC,KAJhD,M,cACA,S,aAMAsc,I,oCASZ,QAhbuB,oBASb,YAAAtP,kBAAN,W,4IACU,EAMFtI,KAAKwI,MALLqF,EAAkB,qBAClBzS,EAAK,QACL,IAAAwkB,QAAAA,OAAO,IAAG,IAAAlV,KAAI,EACd,IAAAsC,iBAAAA,OAAgB,IAAG,IAAAtC,KAAI,EACvBqE,EAA0B,6BAG9B/O,KAAKwd,WAAapiB,E,8CAGV2T,GAA8BA,IAA+BC,GAAA,EAAgByQ,UAC7E,GAAM5R,EAAmB,CAACjS,SAAUmT,KADpC,M,OACA,S,sDAGJ/B,EAAiB,G,oBAGrBhN,KAAK2I,SAAS,CAAEyU,SAAS,IAEzBwC,I,YAGE,YAAAhX,qBAAN,W,wIACU,EAIF5I,KAAKwI,MAHL,IAAAoF,qBAAAA,OAAoB,IAAG,IAAAlD,KAAI,EAC3BqE,EAA0B,6BAC1B,IAAA/B,iBAAAA,OAAgB,IAAG,IAAAtC,KAAI,E,iBAIvB,O,sBAAA,GAAMkD,EAAqB,CAAEhS,SAAUmT,K,cAAvC,S,+BAEA/B,EAAiB,G,+BAIzB,YAAAlE,OAAA,WACY,IAAA+Q,EAAa7Z,KAAKwI,MAAK,SACzB,EAAoCxI,KAAK9B,MAAvCif,EAAoB,uBAAEC,EAAO,UAC/ByC,EAAwBhG,IAAa,EAAiByF,MACtDQ,EAAgCjG,IAAa,EAAiBqF,cAC9Da,GAAyBF,IAA0BC,EAEzD,OACI,gBAAC,GAAgB,CAAC5W,WAAYkU,GACzBD,GAAwBnd,KAAKggB,2BAC7BD,GAAyB/f,KAAKigB,kBAC9BJ,GAAyB7f,KAAKkgB,kBAC9BJ,GAAiC9f,KAAKmgB,0BAGnD,EAEQ,YAAAD,gBAAR,WACU,MAsBFlgB,KAAKwI,MArBLwP,EAAY,eACZlL,EAAoB,uBACpBsT,EAAiB,oBACjBxS,EAAoB,uBACpBxS,EAAK,QACLyS,EAAkB,qBAClB,IAAAwS,oBAAAA,OAAmB,IAAG,GAAK,EAC3B,IAAAtS,iCAAAA,OAAgC,IAAG,GAAK,EACxC,IAAAmB,eAAAA,OAAc,IAAG,GAAK,EACtBoR,EAAY,eACZC,EAAoB,uBACpB1I,EAAgB,mBAChBxG,EAAwB,2BACxB,IAAArE,iBAAAA,OAAgB,IAAG,IAAAtC,KAAI,EACvB,IAAAuC,oBAAAA,OAAmB,IAAG,IAAAvC,KAAI,EAC1B1P,EAAI,OACJoX,EAAsB,yBACtB0F,EAAsB,yBACtBxL,EAAqB,wBACrBkU,EAAsB,yBACtBzR,EAA0B,6BAGxBkJ,EAAkBsI,IAAyBjU,EAC7C,KACA,gBAAC,GAAkB,CACnBQ,qBAAsBA,EACtBjC,aAAc+C,EACdtD,WAAYuD,EACZqB,eAAgBA,EAChB7E,UAAW+V,EACX3V,QAASwC,EACTzC,QAASwC,IAGPyT,EAAqBJ,GAAuBtS,EAElD,OACIyS,EACI,gBAAC,GAAe,CACZxI,aAAcA,EACdC,gBAAiBA,EACjBC,6BAA6B,oBAC7B9G,uBAAwBkP,EACxBzV,aAAc+C,EACdxS,MAAO4E,KAAKwd,YAAcpiB,EAC1BkP,WAAYuD,EACZiK,uBAAwBA,EACxB5O,UAAWmX,GAAuBnR,GAAkBnB,EACpDoK,cAAenY,KAAKuf,kBACpB3H,kBAAmB5X,KAAK2d,sBACxBvF,YAAapY,KAAKwf,gBAClB3H,iBAAkBA,EAClBxG,yBAA0BA,EAC1BrW,KAAMA,IAGd,gBAAC,GAAS,CACNgd,aAAcA,EACdC,gBAAiBA,EACjBC,6BAA6B,oBAC7B9G,uBAAwBkP,EACxBllB,MAAO4E,KAAKwd,YAAcpiB,EAC1B0c,uBAAwBA,EACxB1F,uBAAwBA,EACxBlJ,UAAWuX,EACXtI,cAAenY,KAAKuf,kBACpB3H,kBAAmB5X,KAAK2d,sBACxBvF,YAAapY,KAAKwf,gBAClB3H,iBAAkBA,EAClBQ,0BAA0B,QAAuBtJ,GACjDsC,yBAA0BA,GAGtC,EAEQ,YAAA2O,yBAAR,WACU,MAAmDhgB,KAAK9B,MAAtDif,EAAoB,uBAAEE,EAAsB,yBAE9C,EACFrd,KAAKwI,MADDkY,EAAoB,uBAAEC,EAAgB,mBAAEC,EAAW,cAAExO,EAAsB,yBAGnF,OACI,gBAAC,GAAc,CACXhX,MAAO4E,KAAKwd,WACZvJ,sBAAuBoJ,EACvBjL,uBAAwBA,EACxB2B,OAAQoJ,EACRnJ,eAAgB0M,EAChBxM,eAAgBlU,KAAKsd,wBACrBxJ,iBAAkB9T,KAAKyd,qBACvBrJ,UAAWwM,EACXzM,eAAgBwM,GAG5B,EASQ,YAAAR,wBAAR,WACU,MASFngB,KAAKwI,MARLqY,EAAqB,wBACrB9S,EAAgC,mCAChCmE,EAAiB,oBACjBD,EAAkB,qBAClBZ,EAAwB,2BACxBe,EAAsB,yBACtBhB,EAAsB,yBACtBY,EAAsC,yCAG1C,OACI,gBAAC,GAAiB,CACdC,mBAAoBA,EACpBb,uBAAwBA,EACxBY,uCAAwCA,EACxCxN,WAAYqc,EACZ3O,kBAAmBA,EACnBnE,iCAAkCA,EAClCqE,uBAAwBA,EACxBD,SAAUnS,KAAKmf,0BACf1N,SAAUzR,KAAK8e,oBACfzN,yBAA0BA,GAGtC,EAEQ,YAAA4O,gBAAR,WACU,MAcFjgB,KAAKwI,MAbLsY,EAAU,aACV1lB,EAAK,QACLme,EAAiB,oBACjBC,EAAoB,uBACpBuH,EAAc,iBACdL,EAAoB,uBACpBjH,EAAW,cACX1L,EAAgC,mCAChCiT,EAAwB,2BACxBjS,EAA0B,6BAC1B4K,EAAW,cACXvH,EAAsB,yBACtByH,EAAQ,WAGZ,OACI,gBAAC,GAAS,CACNP,UAAWyH,EACX7I,6BACInJ,EACM,oBACA,oCAEV3T,MAAO4E,KAAKwd,YAAcpiB,EAC1Bme,kBAAmBA,EACnBxL,iCAAkCA,EAClCqE,uBAAwBA,EACxBsO,qBAAsBA,EACtBlH,qBAAsBA,IAAyBsH,EAC/CrH,YAAaA,EACbtH,SAAUnS,KAAKqf,mBACflH,cAAenY,KAAKuf,kBACpB3H,kBAAmB5X,KAAKye,uCACxB/E,gBAAiB1Z,KAAKif,kBACtBnL,iBAAkB9T,KAAKud,wBACvBlE,SAAUrZ,KAAK0e,aACf9E,4BAA6BoH,EAC7BrH,YAAaA,EACbE,SAAUA,GAGtB,EA0LQ,YAAA8F,8BAAR,SAAsCrkB,GACL0E,KAAKwI,MAAK,iBAEtBhN,8BAA8BF,EACnD,EACJ,EAhbA,CAAuB,EAAA2lB,WAihBvB,UAAe,EAAAC,EAAA,IAAc,EAAA3e,EAAA,IA/FtB,SAAwC,G,IAC3CzI,EAAe,kBACfkN,EAAa,gBAGT,EAmBAA,EAAa,KAlBT0I,EAAiB,oBACjByR,EAAwB,2BACxBlkB,EAAW,cACXoP,EAAW,cACXlM,EAAO,UACPihB,EAAc,iBACdpkB,EAAS,YACTsP,EAAqB,wBAEzB,EASAtF,EAAa,OATHqa,EAAc,iBAAEC,EAAmB,sBAAEC,EAA6B,gCAC5E,EAQAva,EAAa,SAPTqZ,EAAmB,sBACnBtS,EAAgC,mCAChCyT,EAAsB,yBACtB/H,EAAW,cACXiH,EAAoB,uBACpBe,EAAyB,4BAI3B7R,EAAiBF,IACjBtS,EAAWH,IACX2P,EAAWP,IACXqV,EAAOvhB,IACPygB,EAAcQ,IACdjkB,EAASH,IAEf,IAAKI,IAAaD,IAAWukB,EACzB,OAAO,KAIP,MAQAvkB,EAAmF,iBAP/E0a,EAAgB,mBAChBxG,EAAwB,2BACxBmI,EAAoB,uBACpBwH,EAAwB,2BACxBlJ,EAAsB,yBACtB6J,EAAQ,WAIV5S,GAA6B,EAAA6S,GAAA,GAC/BzkB,EAAOuP,iBAAiBqC,4BAGtBiD,EAAyC2P,EAAS,wCAExD,MAAO,CACHd,sBAAuBM,IACvBnJ,aAAc7a,EAAO0kB,cAAcC,qBACnC1B,kBAAmBjjB,EAAOuP,iBAAiBC,wBAC3CyS,WAAYtlB,EAAgBslB,WAC5BL,cAAejlB,EAAgBioB,sBAC/BlE,gBAAiB/jB,EAAgB+jB,gBACjCH,eAAgB5jB,EAAgBkoB,gBAChC5Q,uBAAwBjU,EAAO0kB,cAAcI,wBAC7CrU,qBAAsB9T,EAAgB8T,qBACtCI,6BAA8BlU,EAAgBkU,6BAC9C5S,OAAOwU,aAAc,EAAdA,EAAgBxU,SAASwR,aAAQ,EAARA,EAAUxR,OAC1CwI,UAAWgJ,aAAQ,EAARA,EAAUhJ,UACrBoO,uCAAsC,EACtCuH,kBAAmBpc,EAAOkD,MAAM6hB,mBAChCrU,mBAAoB/T,EAAgB+T,mBACpCqE,kBAAmBuP,IACnBxP,mBAAoBsP,IACpBzD,gBAAgBlO,aAAc,EAAdA,EAAgB5R,IAChCqiB,oBAAqBA,IACrBtS,iCAAkCA,IAClCmB,eAAgBsS,IAChBhI,qBAAoB,EACpBwH,yBAAwB,EACxBD,eAAgB5jB,EAAOuP,iBAAiByV,qBACxC1I,YAAaA,IACbiH,qBAAsBA,IACtBE,YAAW,EACXD,iBAAkBW,IAClBzJ,iBAAgB,EAChB9I,2BAA0B,EAC1BsC,yBAAwB,EACxBuN,OAAQ9kB,EAAgBsoB,eACxBzI,YAAa0H,IACbjP,wBAAwB,EAAAA,GAAA,GAAuBjV,EAAOuP,kBACtDoL,uBAAsB,EACtBxL,sBAAuBA,IACvBkU,uBAAwBzR,IAA+BC,GAAA,EAAgByQ,YAAa,EAAA4C,GAAA,GAAmCX,GAE/H,GAE6B,CAA6CY,K,2BCnnB1E,UAAe,EAAAxJ,GAAA,IANoB,WAAM,OACrC,uBAAK5M,OAAO,KAAK6M,QAAQ,YAAYwJ,MAAM,KAAKvJ,MAAM,8BAClD,wBAAMC,EAAE,8PAFyB,ICqBzC,UAAe,IAAA9V,OAfkD,SAAC,G,IAAEoE,EAAO,UAAO,OAC9E,gBAACwL,GAAA5W,EAAK,CACF2S,oBAAoB,mCACpB0T,KAAM,gBAAC,GAAO,MACdpkB,KAAM2U,GAAA,EAAUoH,MAEhB,wBACIsI,wBAAyB,CACrBC,OAAQ,cAAmBnb,IAC9B,YACS,6BAV4D,ICqBlF,UAAe,IAAApE,OArB0D,SAAC,G,IAChEwf,GAD4E,cACnD,IAAIje,QAC/B,SAAC0R,EAAQwM,GAAc,iDAAIxM,GAAQ,GAAGwM,EAAUD,SAAO,EAAhC,GACvB,IAGJ,OAAKA,EAAQ5a,OAKT,uBAAKpE,UAAU,kBACX,sBAAIA,UAAU,sBACTgf,EAAQjZ,KAAI,SAACmZ,EAAQC,GAAU,OAC5B,gBAAC,GAAe,CAACjZ,IAAKiZ,EAAOvb,QAASsb,EAAOE,MADjB,MANjC,IAYf,I,0BCxBe,SAASC,GACpBC,EACAC,GAEA,OAAID,EAAalb,OAAS,OAKtB,IAAAob,MAAKF,GAAc,SAACG,GAAgB,OAAAA,EAAYC,YAAYtb,MAAxB,OACpC,EAAAub,GAAA,GAAuBL,EAAcC,GAM7C,C,wFC2BA,UAAe,IAAA/f,OA/BsD,SAAC,G,IAClEigB,EAAW,cACX1B,EAAI,OACJ6B,EAAW,cAEHrc,GAA4B,EAAAsc,GAAA,KAA0B,wBACrC/gB,EAAoC2gB,EAAW,gBAAtCK,EAA2BL,EAAW,uBAClEM,GAAiC,QAAwBjhB,EAASyE,GAExE,OACI,uBAAKvD,UAAU,qBACX,gBAACggB,GAAA,EAAa,CAAClhB,QAASA,EAASrE,KAAMkE,GAAAnG,EAAY+G,WAElDwgB,GAAkC,gBAACE,GAAA,EAA4B,OAE9DL,GAAe,gBAACM,GAAA,EAAyB,CAACnC,KAAMA,EAAM0B,YAAaA,IAEpEK,GACG,2BACI,uBAAK9f,UAAU,+DACX,gBAACmgB,GAAA,EAAoB,CACjBC,8BAA8B,EAC9BC,OAAQP,MAOpC,I,SC1CA,YACI,mBACI,YAAM,CACF7e,KAAM,0BACN2C,SAAS,EAAA0c,EAAA,KAAqBxf,UAAU,0CACxCyf,OAAO,EAAAD,EAAA,KAAqBxf,UAAU,+CACxC,K,OAEF,OAAe,EAAM0f,EAA2B1c,W,CACpD,CACJ,OAVwD,oBAUxD,EAVA,CAAwDC,EAAA,GCsBxD,UAAe,IAAAvE,OAlB0D,SAAC,GACtE,OADiF,YAM7E,uBAAKQ,UAAU,uBACX,uBAAKA,UAAU,8DACX,uBAAKA,UAAU,YAEf,oCAAgB,YAAYA,UAAU,QAAQiV,KAAK,SAC/C,gBAACtL,EAAA,EAAgB,CAACtP,GAAG,2BAT1B,IAcf,I,oDCdA,UAAe,EAAA8a,GAAA,IANsB,WAAM,OACvC,uBAAK5M,OAAO,KAAK6M,QAAQ,YAAYwJ,MAAM,KAAKvJ,MAAM,8BAClD,wBAAMC,EAAE,sDAF2B,ICsE3C,UAAe,IAAA9V,OApDwD,SAAC,G,IACpEihB,EAAO,UACPC,EAAQ,WACR7I,EAAU,aACV8I,EAAU,aACVC,EAAM,SACNC,EAAO,UACPpmB,EAAI,OAEJ,OACI,uBACIuF,UAAW,IAAW,aAAc,CAChC,eAAgB2gB,EAChB,eAAgBA,IAAeD,IAEnC5Z,SAAS,EAAA6I,GAAA,GAAegR,GAAcC,EAAS,WAAM,OAAAA,EAAOnmB,EAAP,EAAe,EAAAsM,OAEpE,uBAAK/G,UAAU,uCACX,gBAAC,GAAS,CACNmL,oBAAqB,IACjB,qBACA,yBACA,CAAE,+BAAgC0M,MAI1C,sBAAI7X,UAAU,qDAAqDygB,IAGvE,uBACIzgB,UAAU,qEAAoE,YACpE,cAER0gB,GAAY7I,GAAcgJ,GAG/BF,IAAeD,GACZ,uBAAK1gB,UAAU,wCACX,gBAACiL,GAAA,GAAM,iBACYyV,EACfhU,KAAMzB,GAAA,GAAW0B,KACjBC,OAAO,mBACPC,QAAS5B,GAAA,GAAc6B,WAEvB,gBAACnD,EAAA,EAAgB,CAACtP,GAAG,yBAM7C,I,SC7CA,uE,OACI,EAAAE,MAAQ,CACJumB,UAAU,GAGN,EAAAC,cAAe,IAAAC,aACf,EAAAC,YAAa,IAAAD,aAkLb,EAAAE,oBAAqE,SAACC,EAAMC,GAChFD,EAAKE,iBAAiB,iBAAiB,SAAC,GAAQ,WAC7BF,GACXC,GAER,GACJ,EAEQ,EAAAE,eAAiB,WACA,EAAKzc,MAAK,UAG3B,EAAKG,SAAS,CAAE8b,UAAU,GAElC,E,CACJ,QAvM0C,oBAUtC,YAAAnc,kBAAA,WACyBtI,KAAKwI,MAAK,UAG3BxI,KAAKklB,WAEb,EAEA,YAAAC,mBAAA,SAAmBC,GACP,IAAAf,EAAarkB,KAAKwI,MAAK,SAE3B6b,GAAYA,IAAae,EAAUf,UACnCrkB,KAAKklB,WAEb,EAEA,YAAAtc,qBAAA,WACQ5I,KAAKqlB,aACLpb,OAAOqb,aAAatlB,KAAKqlB,YAEzBrlB,KAAKqlB,gBAAa5rB,EAE1B,EAEA,YAAAqP,OAAA,W,MACU,EACF9I,KAAKwI,MADD4b,EAAO,UAAEC,EAAQ,WAAE7I,EAAU,aAAE8I,EAAU,aAAEC,EAAM,SAAEgB,EAAU,aAAEf,EAAO,UAAEpmB,EAAI,OAG5EqmB,EAAazkB,KAAK9B,MAAK,SAE/B,OACI,sBACIyF,UAAW,IAAW,gBAAiB,kCAAgC,KACnE,EAAC,yBAAkBvF,MAAWA,E,IAElConB,IAAKxlB,KAAK0kB,cAEV,uBAAK/gB,UAAU,wBACX,gBAAC,GAAkB,CACfygB,QAASA,EACTC,SAAUA,EACV7I,WAAYA,EACZ8I,WAAYA,EACZC,OAAQA,EACRC,QAASA,EACTpmB,KAAMA,KAIbmnB,GAAcd,IAAaJ,GACxB,uBAAK1gB,UAAU,sBAAqB,YAAW,mBAC1C4hB,GAIRvlB,KAAKylB,gBAGlB,EAEQ,YAAAA,cAAR,sBACU,EAAiCzlB,KAAKwI,MAApCzO,EAAQ,WAAEsqB,EAAQ,WAAEqB,EAAM,SAElC,OACI,gBAACC,GAAA,EAAU,MACN,SAACC,GAAY,OACV,gBAAC,GAAAC,cAAa,CACVC,eAAgB,EAAKjB,oBACrBkB,WAAW,wBACXC,OAAQJ,EACRK,MAAOL,EACPM,GAAI7B,EACJ8B,cAAY,EACZC,SAAW,EAAKnB,eAChBoB,QAAU,CAAC,EACXC,eAAa,GAEb,mCACeZ,EACX/hB,UAAU,wBACV6hB,IAAK,EAAKZ,YAETP,EAAWtqB,EAAW,MAjBrB,GAuB1B,EAEQ,YAAAmrB,UAAR,sBACUqB,EC3HFtc,OAAOuc,WAAW,sBAAe,KAAgB,QAE5CxhB,QDyHsB,EAAIhF,KAAKymB,qBAExCzmB,KAAK2I,SAAS,CAAE8b,UAAU,IAE1BzkB,KAAKqlB,WAAapb,OAAOvB,YAAW,WAChC,IAAMmL,EAAQ,EAAK6S,gBACbvZ,EAAW,EAAKwZ,oBAChB,EAA8B,EAAKne,MAAjCpK,EAAI,OAAE,IAAAwoB,WAAAA,OAAU,IAAG,IAAAlc,KAAI,EAE3BmJ,GACAA,EAAMgT,aAGOptB,IAAb0T,GAA2B2Z,MAAM3Z,IACjClD,OAAO8c,SAAS,EAAG5Z,GAGvByZ,EAAWxoB,GAEX,EAAKinB,gBAAa5rB,CACtB,GAAG8sB,EACP,EAEQ,YAAAG,cAAR,WACI,IAAMtlB,EAAYpB,KAAK0kB,aAAasC,QAEpC,GAAK5lB,EAML,OAFcA,EAAU9B,cAA2B,iCAEnC7F,CACpB,EAEQ,YAAAktB,kBAAR,WACI,IAAMvlB,EAAYpB,KAAKinB,qBACfzL,EAAexb,KAAKwI,MAAK,WAEjC,GAAKpH,GAAa6I,SAAWA,OAAOoD,IAApC,CAIA,IAAM6Z,EAAY1L,EAAa,EAAIvR,OAAOkd,YAAc,EAIxD,OAFI/lB,EAAUgmB,wBAAwB/Z,KAAOpD,OAAOod,SAAWpd,OAAOqd,aAE7CJ,C,CAC7B,EAKQ,YAAAD,mBAAR,WAGI,IAFA,IAAI7lB,EAAgCpB,KAAK0kB,aAAasC,QAE/C5lB,GAAaA,EAAUmmB,eAAe,CACzC,GAAInmB,EAAUmmB,cAAcC,UAAUC,SAAS,iBAC3C,OAAOrmB,EAAUmmB,cAGrBnmB,EAAYA,EAAUmmB,a,CAG1B,OAAOvnB,KAAK0kB,aAAasC,QAAUhnB,KAAK0kB,aAAasC,aAAUvtB,CACnE,EAEQ,YAAAgtB,mBAAR,WACI,YAA0BhtB,IAAtBuG,KAAK0nB,eAKT1nB,KAAK0nB,aAKG,IAJJC,WACI3nB,KAAK4kB,WAAWoC,QACVY,iBAAiB5nB,KAAK4kB,WAAWoC,SAASa,mBAC1C,OARH7nB,KAAK0nB,YAYpB,EAiBJ,EAvMA,CAA0C,EAAAzG,WE3B1C,IAAK6G,IAAL,SAAKA,GACD,oBACA,sBACA,oBACA,qBACH,CALD,CAAKA,KAAAA,GAAgB,KAOrB,Y,wCCYA,SAjB6B,SAACpG,EAAavkB,GACvC,QAAKukB,MAIDA,EAAKwB,UAAU6E,cAAc5E,MAAK,SAAC6E,GAAa,OAAAA,EAASC,kBAAT,QAIhD9qB,IAAUukB,EAAKwB,UAAUgF,cAElBxG,EAAKwB,UAAUgF,YAAYngB,OAAS,EAInD,ECKA,IAUMogB,IAAwB,KAAAC,iBAC1B,SAAC,GAAgC,OAA1B,OAA+BnrB,aAAL,IACjC,SAAC,GAAgC,OAA1B,OAA+BoP,aAAL,IACjC,SAAC,GAAgC,OAA1B,OAA+BqD,mBAAL,IACjC,SAAC,GAAgC,OAA1B,OAA+B1S,WAAL,IACjC,SAAC,GAAgC,OAA1B,OAA+BmD,SAAL,IACjC,SAAC,GAAgC,OAA1B,OAA+Bme,4BAAL,IACjC,SAAClhB,EAAUwP,EAAUgD,EAAgBzS,EAAQukB,EAAMrD,GAC/C,IAAMgK,KACDzb,GAAYA,EAASxR,OACrBwU,GAAkBA,EAAexU,OAEhCktB,KACFlrB,IAAYA,EAAS6J,WACf7J,EAAS6J,SAASkc,MACd,SAAC/b,GAAY,UAAkBU,QAAQV,EAAQC,aAAe,CAAjD,IAGrBwF,KAAaD,IAAYA,EAASC,SAClC2O,EAAa6M,GAAYC,EACzBhE,EAAa9I,IAAe8M,GAAiBzb,EAC7C0b,EA/BiC,SAC3CD,EACAD,EACAxb,EACAwV,EACAtT,GAEA,OAAQuZ,GAAiBvZ,IAA+BC,GAAA,EAAgByQ,WAAa4I,GAAYxb,GAAWwV,CAChH,CAuB2DmG,CAC/CF,EACAD,EACAxb,IACA6U,IAAO,EAAAW,GAAA,GAAmCX,GAC1CvkB,aAAM,EAANA,EAAQuP,iBAAiBqC,4BAG7B,OAAIwZ,EACO,CACHnqB,KAAM,GAAiBkkB,SACvB+B,UAAU,EACV7I,gBAAuE/hB,KAA3D4kB,aAAuB,EAAvBA,EAAyBG,+BACrC8F,WAAU,EACV5N,YAAY,GAIb,CACHtY,KAAM,GAAiBkkB,SACvB+B,UAAU,EACV7I,WAAU,EACV8I,WAAU,EACV5N,YAAY,EAEpB,IAGE+R,IAAuB,KAAAL,iBACzB,SAAC,GAAgC,OAA1B,OAA+BnrB,aAAL,IACjC,SAAC,GAAgC,OAA1B,OAA+ByS,mBAAL,IACjC,SAAC,G,IAAE3Q,EAAI,OACG6Q,EAAiB7Q,EAAK2Q,oBAE5B,OAAOE,EACD7Q,EAAK6D,wBAAwBgN,EAAe3M,aAC5C,IACV,IACA,SAAC7F,EAAUwS,EAAgB8Y,GACvB,IAAMC,IAAa/Y,IACb,EAAAtM,GAAA,GAAesM,EAAgB8Y,GAE/BJ,KACFlrB,IAAYA,EAAS6J,WACf7J,EAAS6J,SAASkc,MACd,SAAC/b,GAAY,UAAkBU,QAAQV,EAAQC,aAAe,CAAjD,IAGrBmU,EAAamN,GAAcL,EAMjC,MAJIlrB,IAAYA,EAAS6J,WACf7J,EAAS6J,SAASkc,MAAK,SAAC/b,GAAY,MAAuB,cAAvBA,EAAQC,UAAR,IAGxB,CAClB,IAAMuhB,EAA6BF,EAAqBnlB,QACpD,SAAC,GAAoC,OAA5B,QAA4B,IAEnCslB,EAAkBD,EAA2B7gB,OAAS,EACtD+gB,GACFlZ,IAAkBiZ,IACZ,EAAAvlB,GAAA,GAAesM,EAAgBgZ,GAGzC,MAAO,CACHxqB,KAAM,GAAiB2E,QACvBshB,UAAU,EACV7I,WAAYsN,EACZxE,WAAYwE,GAAkCD,EAC9CnS,YAAY,E,CAmBpB,SAdItZ,IAAYA,EAAS6J,WACf7J,EAAS6J,SAASkc,MAChB,SAAC/b,GACG,OACI,kBACA,wBACA,iBACA,iBACA,uBACA,uBAECmG,SAASnG,EAAQC,WARtB,IAYL,CACHjJ,KAAM,GAAiB2E,QACvBshB,UAAU,EACV7I,WAAYmN,EACZrE,WAAYqE,EACZjS,YAAY,GAIb,CACHtY,KAAM,GAAiB2E,QACvBshB,UAAU,EACV7I,WAAU,EACV8I,WAAY9I,IAAe8M,EAC3B5R,YAAY,EAEpB,IAGEqS,IAAwB,KAAAX,iBAC1B,SAAC,GAAgC,OAA1B,OAA+BY,oBAAL,IACjC,SAAC,GAAgC,OAA1B,OAA+BC,iBAAL,IACjC,SAAC,GAAgC,OAA1B,OAA+B9oB,SAAL,IACjC,SAAC,G,IAAEpB,EAAI,OACGmqB,EAAkBnqB,EAAKiqB,qBAE7B,OAAOE,EACDnqB,EAAK8D,yBAAyBqmB,EAAgBjmB,aAC9C,IACV,IACA,SAAC,GAAgC,OAA1B,OAA+BjG,WAAL,IACjC,SAACksB,EAAiBjG,EAAcvB,EAAMyH,EAAuBhsB,GACzD,IC3KJuP,EACA0c,E,ED0KUT,IAAaO,IACb,EAAA5lB,GAAA,GAAe4lB,EAAiBC,GAEhCE,IAAapG,IAAe,EAAAqG,GAAA,GAA2BrG,GACvDsG,GACF7H,IAAQuB,IAAe,EAAAK,GAAA,GAAuBL,EAAcvB,EAAKwB,WAC/D1H,EAAamN,GAAcU,IAAeE,EAC1C7S,EAAa,GAAqBgL,EAAMvkB,GACxCqsB,GCnLV9c,EDqLYvP,aAAM,EAANA,EAAQuP,iBCpLpB0c,EDqLY,oDCnLL3nB,QAAkD,QAA1C,EAAAiL,aAAgB,EAAhBA,EAAkBiV,SAASyH,UAAe,WDqLjDC,IACApG,aAAY,EAAZA,EAAcE,MACV,SAAC,G,IAAEM,EAAsB,yBAAO,MAAiC,YAAjCA,aAAsB,EAAtBA,EAAwBrlB,KAAxB,MAGxC,MAAO,CACHA,KAAM,GAAiB8E,SACvBmhB,UAAU,EACV7I,WAAU,EACV8I,WAAY9I,GAAc9E,IAAe8S,EACzC9S,WAAU,EAElB,IAGE+S,IAAuB,KAAArB,iBACzB,SAAC,GAAgC,OAA1B,OAA+BsB,UAAL,IACjC,SAACC,GACG,IAAMnO,IAAamO,GAAQA,EAAMnO,WAEjC,MAAO,CACHpd,KAAM,GAAiBwrB,QACvBvF,UAAU,EACV7I,WAAU,EACV8I,WAAY9I,EACZ9E,YAAY,EAEpB,IAGEmT,IAAuB,KAAAzB,iBACzB,SAAC,GAAoC,OAA1B,WAAmC0B,mBAAT,IACrC,SAACvX,GAAW,OAAAA,CAAA,IAiChB,UA9BgC,KAAA6V,gBAC5BD,GACAY,GACAN,GACAgB,GACAI,IACA,SAACE,EAAcC,EAAcC,EAAaC,EAAaC,GACnD,IAAML,EAAoBK,EAEpBC,GAAQ,IAAAC,SAAQ,CAACN,EAAcC,EAAcC,EAAaC,IAE1DI,EACFF,EAAMlkB,MAAK,SAAClL,GAAS,OAACA,EAAKwgB,YAAcxgB,EAAK0b,UAAzB,KAAwC0T,EAAMA,EAAMriB,OAAS,GAEtF,OAAOqiB,EAAM1gB,KAAI,SAAC1O,EAAM8nB,GACpB,IAAMyH,EAAqBH,EACtBI,MAAM,EAAG1H,GACTrT,OAAM,SAACgb,GAAa,OAAAA,EAASjP,aAAeiP,EAAS/T,UAAjC,IAEzB,OAAO,gCACA1b,GAAI,CACPqpB,SAAUiG,EAAkBlsB,OAASpD,EAAKoD,KAC1CsnB,QAAQ,EAERpB,WAAYiG,GAAsBvvB,EAAKspB,aAAewF,GAE9D,GACJ,IEnMJ,IAAM/mB,IAAU,IAAA2nB,OAAK,WACjB,SAAAC,EAAA,IACI,WACI,kFAFR,IASEC,IAAc,IAAAF,OAAK,WACrB,SAAAC,EAAA,IACI,WACI,gEAFR,IASEE,IAAoB,IAAAH,OAAK,WAC3B,SAAAC,EAAA,IACI,WACI,gEAFR,IASEf,IAAU,IAAAc,OAAK,WACjB,SAAAC,EAAA,IACI,WACI,yEAFR,IASEznB,IAAW,IAAAwnB,OAAK,WAClB,SAAAC,EAAA,IACI,WACI,2FAFR,IAwDJ,0E,OAQI,EAAAzsB,MAAuB,CACnB4sB,yBAAyB,EACzB5a,aAAa,EACb6a,eAAe,EACfC,qBAAqB,EACrB1B,4BAA4B,EAC5BhJ,cAAc,EACd2K,cAAe,IAwZX,EAAAC,0BAAwC,WACpC,IAAAF,EAAwB,EAAK9sB,MAAK,oBAE1C,EAAKyK,SAAS,CAAEqiB,qBAAsBA,GAC1C,EAEQ,EAAAG,6BAA4E,SAChFzf,GAEM,MAA8B,EAAKlD,MAAjC4hB,EAAK,QAAEvwB,EAAgB,mBACzBuxB,GAAkB,IAAAC,WAAUjB,EAAO,CAAE/F,UAAU,IAC/CiH,EAAaF,GAAmB,GAAKhB,EAAMgB,GAEjD,GAAKE,EAAL,CAIA,IAAMC,EAAenB,EAAMpV,KAAKvP,IAAI2lB,EAAkB,EAAG,IAErDG,GACA1xB,EAAiBe,mBAAmB2wB,EAAantB,MAGrD,EAAKotB,eAAeF,EAAWltB,KAAMsN,E,CACzC,EAEQ,EAAAZ,4BAA0D,SAACC,GACzD,MAA8B,EAAKvC,MAAjC4hB,EAAK,QAAkB,mBAEdxvB,mBAAmBwvB,EAAMA,EAAMriB,OAAS,GAAG3J,MAExD,EAAKqtB,mBACL,EAAKA,kBAAkBC,eAG3B/T,GAAwBH,wBAExB,EAAK7O,SAAS,CAAEoiB,eAAe,IAAQ,WACnCjgB,GAA4BC,EAChC,GACJ,EAEQ,EAAA+B,qBAAyD,SAACzC,GACtD,IAAAshB,EAAoB,EAAKnjB,MAAK,gBAEtC,OAAOmjB,EAAgBrkB,YAAW,MAA3BqkB,EAA+BthB,EAC1C,EAEQ,EAAAuhB,uBAA4D,WAChE,EAAKJ,eAAe,GAAiBtoB,SACzC,EAEQ,EAAA2oB,0BAAgE,SAAC,G,IAAE9sB,EAAI,OACrE,EACF,EAAKb,MAD2B4tB,EAA8B,6BAAEC,EAAc,iBAAEC,EAAe,kBAG3F5B,EAAU,EAAK5hB,MAAK,MAEtByjB,GAAgC,EAAA3C,GAAA,GAClCvqB,EAAKkqB,mBAAqB,IAGxBiD,GACDH,IACAC,IAAoB,GAAiBpC,SAClCoC,IAAoB,GAAiBjpB,SAEvCopB,GACF,IAAAd,WAAUjB,EAAO,CAAEhsB,KAAM,GAAiB8E,YACtC,IAAAmoB,WAAUjB,EAAO,CAAEhsB,KAAM2tB,KAAqBG,EAGlDJ,IACCG,GACDE,IAEA,EAAKX,eAAe,GAAiBtoB,UACrC,EAAKyF,SAAS,CAAEuE,MAAO,IAAI,MAG/B,EAAKvE,SAAS,CAAE2gB,2BAA4B2C,GAChD,EAEQ,EAAAG,sBAAoC,WACxC,EAAKzjB,SAAS,CAAEuE,WAAOzT,GAC3B,EAEQ,EAAA4yB,eAAmD,SAACjuB,GAC3B,EAAKoK,MAAK,iBAEtBzN,gBAAgBqD,EACrC,EAEQ,EAAAkuB,qBAA+C,SAACpf,GACpD,EAAKqf,YAAYrf,GAIjB,EAAKvE,SAAS,CAAEuE,MAAK,GACzB,EAEQ,EAAAqf,YAAsC,SAACrf,GACnB,EAAK1E,MAAK,YAEtBgkB,IAAItf,GAEZ,EAAKue,mBACL,EAAKA,kBAAkBgB,UAAUvf,EAEzC,EAEQ,EAAAwf,eAAmD,SAACtuB,GACxD,EAAKotB,eAAeptB,EACxB,EAEQ,EAAAuuB,YAA0B,WAC9B,EAAKxB,6BAA6B,CAAEyB,WAAW,GACnD,EAEQ,EAAAC,6BAA8D,SAACC,GACnE,EAAKnkB,SAAS,CAAE2X,aAAcwM,GAClC,EAEQ,EAAAC,cAAuD,SAAC,G,IAAE7c,EAAW,cACnE,EAAiE,EAAK1H,MAApEO,EAAQ,WAAEikB,EAAO,UAAEC,EAAuB,0BAAElM,EAAc,iBAElE,OAAIkM,GACIhjB,OAAOoD,IACCpD,OAAOoD,IAAIpC,SAASjK,KAAOgsB,GAIvC,EAAKvB,mBACL,EAAKA,kBAAkByB,gBAGvBnM,GACA,EAAKoM,oBAAoB,EAAiB7N,OAG1CpP,IACA,EAAKvH,SAAS,CAAEuH,aAAa,MAExB,EAAA4Q,EAAA,MACG7W,OAAOoD,KACApD,OAAOoD,IAAIpC,SAASxL,OAAOsJ,QAK9C,EAAKyiB,eAAe,GAAiBlJ,UACzC,EAEQ,EAAA8K,uBAAqE,SACzEtC,GAEA,EAAKniB,SAAS,CAAEmiB,wBAAuB,IAEnCA,EACA,EAAKK,+BAEL,EAAKK,eAAe,GAAiBzoB,QAE7C,EAEQ,EAAAsqB,qBAAmC,WACvC,EAAKF,oBAAoB,EAAiBrT,MAC9C,EAEQ,EAAAwT,4BAA0C,WAC9C,EAAKH,oBAAoB,EAAiBjO,cAC9C,EAEQ,EAAAiO,oBAA4D,SAACI,GACzD,IAAAC,EAAqB,EAAKhlB,MAAK,iBAEnC+kB,IAAqB,EAAiBrO,gBAAiB,EAAA4B,EAAA,KACnD7W,OAAOoD,KACPpD,OAAOoD,IAAIpC,SAASE,QAAQqiB,IAMpC,EAAKhC,eAAe,GAAiBlJ,UACrC,EAAK3Z,SAAS,CAAE4kB,iBAAgB,IACpC,EAEQ,EAAAE,iBAA+B,WACN,EAAKjlB,MAAK,iBAEtBxM,cACrB,EAEQ,EAAA0xB,wBAAwD,SAAC/xB,GAChC,EAAK6M,MAAK,iBAEtBvM,kBAAkBN,EACvC,E,CACJ,QA9mBuB,oBAqBnB,YAAAiN,qBAAA,WACQ5I,KAAK2tB,8BACL3tB,KAAK2tB,8BACL3tB,KAAK2tB,iCAA8Bl0B,GAGvCwQ,OAAO2jB,oBAAoB,eAAgB5tB,KAAKytB,kBAChDztB,KAAKytB,kBACT,EAEM,YAAAnlB,kBAAN,W,kMACU,EAUFtI,KAAKwI,MATL3O,EAAgB,mBAChBg0B,EAAU,aACVjwB,EAAW,cACXkwB,EAAuB,0BACvBC,EAAkB,qBAClB1wB,EAAgB,mBAChBwB,EAAY,eACZmvB,EAAsB,yBACtBC,EAAuB,0B,iBAIJ,O,sBAAA,GAAM7iB,QAAQ8iB,IAAI,CAACrvB,EAAagvB,EAAY,CAC3DM,OAAQ,CACJC,QAAS,CACL,6CACA,gDAGR/wB,EAAiB0C,oB,cAPZhB,EAAU,SAOoB,QAEjCsvB,GAA8C,QAAlC,EAAgB,QAAhB,EAAAtvB,EAAK/B,mBAAW,eAAE0P,wBAAgB,eAAEC,0BAA2B,GAC3E2hB,EAAqBlkB,EAAsBikB,GAE7CA,EAAUtmB,OAAS,EACH,GAAMimB,EAAuBM,IAD7C,M,OACMC,EAAU,SAEhBvuB,KAAK2I,SAAS,CACVsiB,cAAesD,EAAQxvB,KAAKyvB,qBAAuB,K,wBAI3DnxB,EAAiB4C,oBAET,GAAkClB,EAAK/B,aAAe,CAAC,GAAC,MAA/C,QAAT,MAA2B,CAAC,EAAC,GAApBsD,SAAAA,OAAQ,IAAG,KAAE,GACxBmuB,EAAqB1vB,EAAK2vB,iBAAiB,UAAY,IAEtC3mB,SACX3C,EAAapF,KAAKwI,MAAK,SAE/BxI,KAAK2I,SAAS,CACVuE,MAAO,IAAIxF,EAAA,EAAY,CACnBwc,MACIuK,EAAmB,GAAGvK,OACtB9e,EAASX,UAAU,wBACvB8C,QAASknB,EAAmB,GAAGlnB,QAC/BxI,KAAM,CAAC,EACP6F,KAAM,eAKZ+pB,EAAYb,EAAwB,CAAE1tB,aAAcE,IAE1DN,KAAK2tB,4BAA8BM,EAC/BjuB,KAAK6rB,2BAET7rB,KAAKyrB,kBAAoBkD,EACzBA,EAAUC,eAAc,SAACC,GAAW,OAAAd,EAAmBe,OAAOD,EAA1B,IACpCF,EAAUI,gBAAgB,CAAEC,UAAWpxB,IACvC+wB,EAAUM,aAEVp1B,EAAiBa,gBAEXuoB,EAAelkB,EAAKkqB,kBACpBvH,EAAO3iB,EAAKoB,UAEZ+uB,EACc,QAAhB,EAAAnwB,EAAK/B,mBAAW,eAAE0P,iBAAiBwiB,wBACjCC,EACqE,QAAvE,EAAgB,QAAhB,EAAApwB,EAAK/B,mBAAW,eAAE0P,iBAAiByiB,4CAAoC,SACrEC,EACqD,QAAvD,EAAgB,QAAhB,EAAArwB,EAAK/B,mBAAW,eAAE6kB,cAAcI,+BAAuB,SAErD+I,IACAtJ,KACAuB,GACFiM,GACAlM,GAAqBC,EAAcvB,EAAKwB,WAE5CljB,KAAK2I,SAAS,CACVmiB,wBAAyBqE,EACzB7O,aAAc8O,IAGdpE,EACAhrB,KAAK2I,SAAS,CAAEqiB,oBAAmB,GAAIhrB,KAAK2sB,aAE5C3sB,KAAK2sB,cAGT1iB,OAAO+a,iBAAiB,eAAgBhlB,KAAKytB,kB,0CAGxBhwB,OACjBuC,KAAKssB,qBAAqB,G,+BAKtC,YAAAxjB,OAAA,WACY,IAAAoE,EAAUlN,KAAK9B,MAAK,MACxBmxB,EAAa,KAgBjB,OAdIniB,IAEImiB,GADA,EAAAC,EAAA,GAAcpiB,GAEV,gBAACqiB,EAAA,EAAU,CACPriB,MAAOA,EACPsiB,QAASxvB,KAAKosB,sBACdlI,MAAOhX,EAAMgX,QAIR,gBAACqL,EAAA,EAAU,CAACriB,MAAOA,EAAOsiB,QAASxvB,KAAKosB,yBAKzD,uBAAKzoB,UAAW,IAAW,+BAAgC,CAAE,eAAe,EAAAmd,EAAA,OAAe,YAAY,0BAA0B9iB,GAAG,2BAChI,uBAAK2F,UAAU,2CACV3D,KAAKylB,iBAET4J,EAGb,EAEQ,YAAA5J,cAAR,e,EAAA,OACU,EAA+FzlB,KAAKwI,MAAlGinB,EAAS,YAAE1mB,EAAQ,WAAE,IAAA2mB,WAAAA,OAAU,IAAG,KAAE,EAAEtF,EAAK,QAAE7f,EAA2B,8BAAEpI,EAAc,iBAE1F,EAAkEnC,KAAK9B,MAArE6tB,EAAc,iBAAEC,EAAe,kBAAE9b,EAAW,cAAE6a,EAAa,gBAEnE,GAAI7a,EACA,OAAO,gBAAC,EAAgB,CAACnH,SAAUA,EAAUR,aAAc,MAG/D,IAAMwE,EAAsBgf,EACtBA,IAAmB,GAAiBnC,QACpCoC,IAAoB,GAAiBpC,QAE3C,OACI,gBAAC5gB,EAAA,EAAc,CAACC,wBAAsB,EAACC,UAAW6hB,GAC9C,uBAAKpnB,UAAU,eACX,gBAAC,GAAmB,CAACuF,WAAaqB,GAA+BklB,GAActtB,EAAe5D,4BAE9F,gBAAC,GAAmB,CAACmxB,WAAYA,IAEhCnlB,IAAuD,QAAxB,EAAAvK,KAAK9B,MAAM+sB,qBAAa,eAAEljB,QAAS,GAC/D,gBAAC,GAAuB,CACpB+E,qBAAsB9M,KAAK8M,qBAC3BC,oBAAqBA,EACrBC,iBAAkBhN,KAAKssB,qBACvBrf,oBAAqBjN,KAAK0tB,0BAIlC,sBAAI/pB,UAAU,kBACTymB,EACI7mB,QAAO,SAACvI,GAAS,OAAAA,EAAK0b,UAAL,IACjBhN,KAAI,SAAC1O,GACF,SAAK20B,YAAW,gCACT30B,GAAI,CACPqpB,SAAU0H,EACJA,IAAmB/wB,EAAKoD,KACxB4tB,IAAoBhxB,EAAKoD,KAC/BsnB,OAAQ+J,IALZ,MAWfzvB,KAAK4vB,oBAGlB,EAEQ,YAAAD,WAAR,SAAmB30B,GACf,OAAQA,EAAKoD,MACT,KAAK,GAAiBkkB,SAClB,OAAOtiB,KAAK6vB,mBAAmB70B,GAEnC,KAAK,GAAiBkI,SAClB,OAAOlD,KAAK8vB,mBAAmB90B,GAEnC,KAAK,GAAiB+H,QAClB,OAAO/C,KAAK+vB,kBAAkB/0B,GAElC,KAAK,GAAiB4uB,QAClB,OAAO5pB,KAAKgwB,kBAAkBh1B,GAElC,QACI,OAAO,KAEnB,EAEQ,YAAA60B,mBAAR,SAA2B70B,GACjB,MAAkDgF,KAAKwI,MAArDuY,EAAc,iBAAExW,EAA2B,8BAC7C,EAGFvK,KAAK9B,MAFL,IAAAqvB,iBAAAA,OAAgB,IAAG,EAAAxM,EAAiB,EAAiBzB,MAAQ,EAAiBxF,MAAK,EACnFwG,EAAY,eAGhB,OACI,gBAAC,IAAY,iBACLtlB,EAAI,CACRopB,QAAS,gBAAC9W,EAAA,EAAgB,CAACtP,GAAG,8BAC9B6L,IAAK7O,EAAKoD,KACVmmB,OAAQvkB,KAAK0sB,eACb9F,WAAY5mB,KAAKqsB,eACjB9G,WAAY,gBAAC,GAAkB,MAC/Bf,QACI,gBAAC,GAAY,CACTxU,UAAWhQ,KAAK+sB,cAChB9c,eAAgBjQ,KAAKusB,gBAI7B,gBAAC,GAAQ,CACLzf,qBAAsB9M,KAAK8M,qBAC3BgU,YAAY,EAAAA,EAAA,KACZR,aAAcA,EACdC,qBAAwBhW,EACxByU,iBAAkBhf,KAAKmrB,6BACvBpN,iBAAkB/d,KAAKmtB,oBACvBvV,kBAAmB5X,KAAKmrB,6BACxBnN,uBAAwBhe,KAAKusB,YAC7B3M,QAAS5f,KAAK2sB,YACdtT,SAAUrZ,KAAKmrB,6BACftM,cAAe7e,KAAKusB,YACpBtO,wBAAyBje,KAAK6sB,6BAC9B7f,iBAAkBhN,KAAKssB,qBACvBrf,oBAAqBjN,KAAK0tB,wBAC1B1yB,KAAMA,EACN6e,SAAU0T,IAI1B,EAEQ,YAAAuC,mBAAR,SAA2B90B,GACjB,MAA8CgF,KAAKwI,MAAjDynB,EAAc,iBAAEvO,EAAI,OAAE,IAAAuB,aAAAA,OAAY,IAAG,KAAE,EAEzC,EAAmDjjB,KAAK9B,MAAtD4sB,EAAuB,0BAAEE,EAAmB,sBAEpD,GAAKtJ,EAIL,OACI,gBAAC,IAAY,iBACL1mB,EAAI,CACRopB,QAAS,gBAAC9W,EAAA,EAAgB,CAACtP,GAAG,8BAC9B6L,IAAK7O,EAAKoD,KACVmmB,OAAQvkB,KAAK0sB,eACb9F,WAAY5mB,KAAKqsB,eACjB7H,QAASvB,EAAavZ,KAAI,SAAC0Z,GAAgB,OACvC,uBAAKzf,UAAU,6BAA6BkG,IAAKuZ,EAAYplB,IACzD,gBAAC,GAAiB,CACd0jB,KAAMA,EACN6B,YAAaN,EAAalb,OAAS,EACnCqb,YAAaA,IALkB,MAU3C,gBAAC8M,GAAA,EAAa,CAACC,gBAAiB,gBAACC,EAAAj0B,EAAmB,OAChD,gBAAC+G,GAAQ,CACLmtB,eAAgBJ,EAChBnF,wBAAyBA,EACzBE,oBAAqBA,EACrBsF,iBAAkBtwB,KAAKotB,uBACvB1T,gBAAiB1Z,KAAKstB,4BACtB1N,QAAS5f,KAAK2sB,YACdtT,SAAUrZ,KAAKqtB,qBACfkD,sBAAuBvwB,KAAKkrB,0BAC5Ble,iBAAkBhN,KAAKssB,qBACvBtxB,KAAMA,KAK1B,EAEQ,YAAA+0B,kBAAR,SAA0B/0B,GACd,IAAA4U,EAAmB5P,KAAKwI,MAAK,eAErC,OACI,gBAAC,IAAY,iBACLxN,EAAI,CACRopB,QAAS,gBAAC9W,EAAA,EAAgB,CAACtP,GAAG,4BAC9B6L,IAAK7O,EAAKoD,KACVmmB,OAAQvkB,KAAK0sB,eACb9F,WAAY5mB,KAAKqsB,eACjB7H,QAAS5U,GAAkB,gBAAC4gB,EAAA,EAAoB,CAAC/tB,QAASmN,MAE1D,gBAACsgB,GAAA,EAAa,CAACC,gBAAiB,gBAACC,EAAAj0B,EAAmB,OAChD,gBAAC4G,GAAO,CACJutB,iBAAkBtwB,KAAKmrB,6BACvBvL,QAAS5f,KAAK2sB,YACd3f,iBAAkBhN,KAAKssB,wBAK3C,EAEQ,YAAA0D,kBAAR,SAA0Bh1B,GAChB,MAAsCgF,KAAKwI,MAAzCya,EAAY,eAAEvB,EAAI,OAAE+O,EAAW,cAEvC,OACI,gBAAC,IAAY,iBACLz1B,EAAI,CACRopB,QAAS,gBAAC9W,EAAA,EAAgB,CAACtP,GAAG,4BAC9B6L,IAAK7O,EAAKoD,KACVmmB,OAAQvkB,KAAK0sB,eACb9F,WAAY5mB,KAAKqsB,iBAEjB,gBAAC6D,GAAA,EAAa,CAACC,gBAAiB,gBAACO,EAAA,EAAiB,OAC9C,gBAAC9G,GAAO,CACJ9c,qBAAsB9M,KAAK8M,qBAC3B2jB,YAAaA,EACb3P,YAAY,EAAAA,EAAA,KACZkC,wBACItB,IAAQuB,IACFD,GAAqBC,EAAcvB,EAAKwB,WAGlDyN,mBAAoB3wB,KAAK4rB,uBACzBgF,WAAY5wB,KAAK8K,4BACjB8U,QAAS5f,KAAK2sB,YACdlb,SAAUzR,KAAK8K,4BACf+lB,cAAe7wB,KAAKusB,YACpBvf,iBAAkBhN,KAAKssB,wBAK3C,EAEQ,YAAAsD,kBAAR,WACI,OACI,gBAACjK,GAAA,EAAU,MACN,SAACC,GACE,OAAIA,EAEI,gBAACsK,GAAA,EAAa,KACV,gBAACrzB,EAAA,EAAS,CAACC,OAAM,kBACjB,gBAAC+tB,GAAiB,OAM1B,yBAAOlnB,UAAU,eACb,gBAACusB,GAAA,EAAa,KACV,gBAACtF,GAAW,MACZ,gBAAC/tB,EAAA,EAAS,CAACC,OAAM,mBAIjC,GAGZ,EAEQ,YAAA0uB,eAAR,SAAuBptB,EAAwBsN,GACrC,MAA+B1L,KAAKwI,MAAlC4W,EAAU,aAAElS,EAAK,QAAEkd,EAAK,QACxB2B,EAAmB/rB,KAAK9B,MAAK,eAC/BlD,GAAO,IAAAkL,MAAKkkB,EAAO,CAAEhsB,KAAI,IAE1BpD,GAID+wB,IAAmB/wB,EAAKoD,OAIxBsN,GAAWA,EAAQkhB,UACnB5sB,KAAK2I,SAAS,CAAEqjB,gBAAiBhxB,EAAKoD,OAEtC4B,KAAK2I,SAAS,CAAEojB,eAAgB/wB,EAAKoD,OAGrC8O,GACAkS,EAAWlS,GAEnB,EAyMJ,EA9mBA,CAAuB,EAAA+T,WAgnBvB,SAAe9Y,GACX,EAAA+Y,EAAA,IAAc,EAAA5P,EAAA,IAAa,EAAA/O,EAAA,IC9vBhB,SAA4B,G,IACvCzI,EAAe,kBACfkN,EAAa,gBAELjI,EAA2BiI,EAAa,KAAlC8pB,EAAqB9pB,EAAa,OAA1B+pB,EAAa/pB,EAAa,SACxC,GAA6BjI,EAAK9B,eAAiB,CAAC,GAAC,WAArDyyB,OAAU,IAAG,OAAW,EAC1BsB,EAAmBF,EAAOG,sBAC1B,EAcFlyB,EAAK/B,aAAe,CAAC,EAbrB,IAAA0P,iBAAA,aAMI,CAAC,EAAC,EALF,IAAAyV,qBAAsBpB,OAAc,IAAG,GAAK,EAC5C,IAAAmQ,+BAAAA,OAA8B,IAAG,GAC7BC,oBAAoB,EACpBC,sBAAsB,GACzB,EAEL,IAAA/wB,MAAA,aAII,CAAC,EAAC,EAHF,IAAAgxB,UAAWtoB,OAAQ,IAAG,KAAE,EACxB,IAAAuoB,kBAAmB9D,OAAgB,IAAG,KAAE,EACxC,IAAA+D,SAAUvE,OAAO,IAAG,KAAE,EAE1B,IAAAwE,gBAAmB,QAAnB,MAA4E,CAAC,EAAC,GAA3DC,oBAAqBxE,OAAuB,IAAG,GAAK,EAGrEyE,GAAkC,KAAAtJ,iBACpC,SAAC,GAA6D,OAA/B,2BAA+B,IAC9D,SAAC/tB,GAAc,gBAACs3B,GACZ,OAAOt3B,EAAUs3B,GAAY,SAAC,GAAkC,OAAA1I,EAAT,yBAAS,GACpE,CAFe,IAKb2I,EAAyBnwB,QAAQyvB,EAA+BC,oBAEtE,MAAO,CACHvhB,eAAgB7Q,EAAK2Q,oBACrBgS,KAAM3iB,EAAKoB,UACXif,WAAYtlB,EAAgBslB,WAC5B6D,aAAclkB,EAAKkqB,kBACnBgH,eAAgBe,GAA8C,iBAA1BA,EAAiB5yB,KACrD2iB,eAAc,EACd8Q,kBAAmBd,EAASc,oBAC5BpC,UAAWsB,EAAStB,YACpBxC,wBAAuB,EACvB1iB,4BAA6BqnB,EAC7B/yB,aAAc/E,EAAgB+E,aAC9BmvB,uBAAwBl0B,EAAgBk0B,uBACxCjlB,SAAQ,EACRikB,QAAO,EACPQ,iBAAgB,EAChBkC,WAAU,EACVzB,wBAAyByD,EAAgC,CACrD53B,gBAAe,EACfkN,cAAa,IAEjBojB,MAAOrrB,EAAK9B,cAAgB,GAAwB+J,GAAiB,KAE7E,GDusB+B,CAAiC8qB,O,SE3uBhE,YASI,WAAYtpB,GAAZ,I7D7BkDpD,E6D6BlD,EACI,YAAMoD,IAAM,K,OATR,EAAA1O,iBAAkB,IAAAi4B,uBAAsB,CAC5CC,QAAQ,EAAA/N,EAAA,KAAqBgO,YAC7BC,oBAAoB,IAEhB,EAAAnE,oBAAqB,EAAAoE,EAAA,KACrB,EAAAxG,iB7D1B0CvmB,G6D0BM,EAAA6e,EAAA,M7DzBjD,EAAAnD,EAAA,KACD,IAAI,EAAwB5Y,EAAqB9C,GACjD,IAAI,G6D6BN,EAAKqrB,aAAc,EAAA2B,EAAA,GACf,CAAEC,OAAQ7pB,EAAM8pB,cAChB,CACIC,WAAY,CAAC,sBACbC,WAAYhqB,EAAMgqB,WAClBC,WAAYjqB,EAAMkqB,iBAAmBlqB,EAAMkqB,iBAAmB,K,CAG1E,CA6BJ,OAjDyC,oBAsBrC,YAAApqB,kBAAA,WACY,IAAA1K,EAAgBoC,KAAKwI,MAAK,YAElC,kBAAyB,WAAI5K,GACjC,EAEA,YAAAkL,OAAA,WACI,OACI,gBAAC6pB,EAAA,EAAa,CAACC,OAAQ5yB,KAAKywB,aACxB,gBAACoC,EAAA,EAAc,CAAC/4B,gBAAiBkG,KAAKlG,iBAClC,gBAACg5B,EAAA,EAAgB,CAACh5B,gBAAiBkG,KAAKlG,iBACpC,gBAACi5B,EAAA52B,EAAiB,CAACrC,gBAAiBkG,KAAKlG,iBACrC,gBAACmI,EAAA,EAAiB,CAACnI,gBAAiBkG,KAAKlG,iBACrC,gBAAC,IAAQ,iBACDkG,KAAKwI,MAAK,CACdslB,wBAAyB,EAAAkF,gCACzBjF,mBAAoB/tB,KAAK+tB,mBACzBpC,gBAAiB3rB,KAAK2rB,gBACtB8E,YAAazwB,KAAKywB,mBAQlD,EACJ,EAjDA,CAAyC,EAAAxP,U,iECdrCgS,EACAvnB,E,WCPJ,SDMIunB,ECVyCC,EAAA,EDWzCxnB,ECX0D,CAC1D3E,kBAAmB,gBDYZ,SACHosB,GAIA,OAAO,SACHC,GAEA,IAAMC,GAAqD,IAAAlwB,OAAK,SAACqF,GAAU,OACvE,gBAAC4qB,GAAiB,iBAAK5qB,GADgD,IAIrE8qB,EAA0E,SAC5E9qB,GAEA,IAAMhG,GAAU,IAAAjF,YAAW01B,GAErBM,GAAa,IAAAt5B,UACf,WACI,OA/BxB,SACIs5B,GAIA,OAA6B,IAAtBA,EAAWxrB,MACtB,CAyBwByrB,CAAoBL,GACdA,IACAA,CAFN,GAGJ,IAGEM,EAAcjxB,EACd+wB,EAAW/wB,EAASgG,GACpBhG,EAEN,IAAKixB,EACD,OAAO,KAGX,IAAMC,GAAc,gCAAKD,GAAgBjrB,GAEzC,OAAO,gBAAC6qB,GAAuB,iBAAKK,GACxC,EAQA,OANIhoB,GAAWA,EAAQ3E,mBAAqBqsB,IACxCE,EAAmBK,YAAc,UAAGjoB,EAAQ3E,kBAAiB,YACzDqsB,EAAkBO,aAAeP,EAAkBxuB,KAAI,MAIxD0uB,CACX,CACJ,E,yDEhEJ,YAOI,WAAY,G,IACR,IAAAv0B,KAAAA,OAAI,IAAG,GAAC,EAAC,EACT,IAAAwI,QAAAA,OAAO,IAAG,KAAE,EACZ,IAAA2c,MAAAA,OAAK,IAAG,KAAE,EACV,IAAAtf,KAAAA,OAAI,IAAG,KAAE,EAJb,EAWI,cAAO,K,MAEgC,mBAA5BnH,MAAMm2B,kBACbn2B,MAAMm2B,kBAAkB,EAAMlsB,GAE9B,EAAKmsB,OAAQ,IAAIp2B,OAAQo2B,MAI7B,EAAK90B,KAAOA,EACZ,EAAKwI,QAAUA,EACf,EAAK3C,KAAOA,EACZ,EAAKsf,MAAQA,EACb,EAAK9lB,KAAO,S,CAChB,CAkBJ,OAlDyC,oBAqC3B,YAAA01B,iBAAV,SAA2B,G,IACvBlvB,EAAI,OACJmvB,EAAY,eACZC,EAAY,eAMZh0B,KAAK4E,KAAO5E,KAAK4E,MAAQA,EACzB5E,KAAKuH,QAAUvH,KAAKuH,SAAWwsB,EAC/B/zB,KAAKkkB,MAAQlkB,KAAKkkB,OAAS8P,CAC/B,EACJ,EAlDA,CAAyCv2B,M,+JCsBzC,SAAe,IAAA0F,OAXsC,SAAC,G,IAAE8wB,EAAI,OAAEnvB,EAAK,QAC/D,OACI,uBAAKnB,UAAU,aACX,wBAAMA,UAAU,mBACXmB,QAAAA,EAAS,gBAACwI,EAAA,EAAgB,CAACtP,GAAG,uBAC3B,IACR,wBAAM2F,UAAU,mBAAmBswB,GAG/C,I,sCCUA,uE,OACY,EAAAC,KAAO,CACXC,WAAY,qBAwFR,EAAAC,qBAAwD,SAAC5lB,GACvD,MAA4B,EAAKhG,MAA/B0E,EAAK,QAAE,IAAAsiB,QAAAA,OAAO,IAAG,IAAA9kB,KAAI,EAEzBwC,GACAsiB,EAAQhhB,EAAM6lB,YAAa,CAAEnnB,MAAK,GAE1C,E,CACJ,QAjGwC,oBAKpC,YAAApE,OAAA,WACY,IAAAoE,EAAUlN,KAAKwI,MAAK,MAE5B,OACI,gBAAC0M,EAAA,EAAK,CACFE,yBAAyB,eACzB8e,KAAMl0B,KAAKk0B,KACXzf,OAAQzU,KAAKs0B,eACbjf,OAAQrV,KAAKu0B,eACbxgB,SAAU7G,EACVgH,eAAgBlU,KAAKo0B,sBAEpBp0B,KAAKw0B,aAGlB,EAEQ,YAAAD,aAAR,WACU,MAAkEv0B,KAAKwI,MAArE0E,EAAK,QAAE,IAAAgX,MAAAA,OAAK,IAAG,EAAAhX,IAAS,EAAAoiB,EAAA,GAAcpiB,IAAUA,EAAMgX,MAAK,EAEnE,OACI,gBAAC5O,EAAA,EAAW,KACR,gBAACmf,EAAA,EAAS,CACN3lB,oBAAoB,gCACpBuB,KAAM,IAASqkB,QAEnB,oCAAgB,YAAY9b,KAAK,SAC5BsL,GAAS,gBAAC5W,EAAA,EAAgB,CAACtP,GAAG,0BAI/C,EAEQ,YAAAw2B,WAAR,WACU,MAA8Cx0B,KAAKwI,MAAjD0E,EAAK,QAAE,IAAA3F,QAAAA,OAAO,IAAG,EAAA2F,GAASA,EAAM3F,QAAO,EAE/C,OACI,gCACK2F,GCvEF,SAAqBA,GAEhC,MAAO,SAAUA,GACE,WAAfA,EAAM9O,MACN,SAAU8O,GACY,iBAAfA,EAAMnO,MACE,OAAfmO,EAAMnO,MACN,6BAA8BmO,EAAMnO,MACW,kBAAxCmO,EAAMnO,KAAK41B,wBAC1B,CD8D0BC,CAAY1nB,IAClB,gBAAC/D,EAAA,EAAc,CAACnL,GAAIkP,EAAMnO,KAAK81B,iBAElCttB,GACG,iCAAa,YAAYvJ,GAAG,oBAAoB4a,KAAK,SAChDrR,GAIT,uBAAK5D,UAAU,sCAAsC3D,KAAK80B,mBAGtE,EAEQ,YAAAR,aAAR,WACI,OACI,gBAAC1lB,EAAA,GAAM,CAACnE,QAASzK,KAAKo0B,qBAAsB/jB,KAAMzB,EAAA,GAAW8lB,OACzD,gBAACpnB,EAAA,EAAgB,CAACtP,GAAG,qBAGjC,EAEQ,YAAA82B,gBAAR,W,MACU,EAAwC90B,KAAKwI,MAA3C0E,EAAK,QAAE,IAAA6nB,oBAEf,GAAK7nB,SAF6B,IAAG,GAAI,GAEzC,CAIA,IAAI,EAAAoF,EAAA,GAAepF,KAAuB,QAAb,EAAAA,EAAM8nB,eAAO,eAAG,iBACzC,OACI,gBAAC,EAAS,CACNf,KAAM/mB,EAAM8nB,QAAQ,gBACpBlwB,MAAO,gBAACwI,EAAA,EAAgB,CAACtP,GAAG,wBAKxC,IAAMi3B,GAAY,EAAAC,EAAA,GAAiBhoB,GAEnC,GAAK+nB,EAIL,OAAO,gBAAC,EAAS,CAAChB,KAAMgB,G,CAC5B,EASJ,EAjGA,CAAwC,EAAA7rB,c,2DE5BzB,SAAS8rB,EAAiB74B,GACrC,IACI,OAAO,IAAWA,GAAO84B,a,CAC3B,MAAOjoB,GAAO,CACpB,C,kBCkCO,SAASkoB,EAAeC,EAAa5tB,GAOxC,OANIjI,OAAO41B,eACP51B,OAAO41B,eAAeC,EAAQ5tB,GAE9B4tB,EAAOC,UAAY7tB,EAGhB4tB,CACX,C,uDCbYE,E,YAAZ,SAAYA,GACR,cACA,oBACA,gBACA,eACH,CALD,CAAYA,IAAAA,EAAc,K,QCtB1B,WAGI,WAAY7pB,GACA,OAAqCA,GAAW,CAAC,GAAC,QAAzC8pB,OAAa,IAAG,EAAAC,QAAO,EAExCz1B,KAAKy1B,QAAUD,CACnB,CAsBJ,OApBI,YAAAhJ,IAAA,SACItf,EACAwoB,EACAC,EACAC,GAEA,YAHA,IAAAD,IAAAA,EAAwBJ,EAAe93B,OAG/Bk4B,GACJ,KAAKJ,EAAe93B,MAChB,OAAOuC,KAAKy1B,QAAQvoB,MAAMA,EAAOwoB,EAAME,GAE3C,KAAKL,EAAepb,KAChB,OAAOna,KAAKy1B,QAAQI,KAAK3oB,EAAOwoB,EAAME,GAE1C,KAAKL,EAAeO,QAChB,OAAO91B,KAAKy1B,QAAQM,KAAK7oB,EAAOwoB,EAAME,GAE1C,QACI,OAAO51B,KAAKy1B,QAAQjJ,IAAItf,EAAOwoB,EAAME,GAEjD,EACJ,EA7BA,G,6CCXA,wBAEA,QADI,YAAApJ,IAAA,WAAO,EACX,EAFA,GCsBA,IASYwJ,EATNC,EAAkB,UASxB,SAAYD,GACR,gBACA,gBACA,cACA,mBACH,CALD,CAAYA,IAAAA,EAAiB,K,QAO7B,WAII,WAAY74B,EAAwBuO,GAApC,WAuGQ,KAAAwqB,iBAAqE,SAAC1nB,EAAO2nB,G,QACjF,OAAI3nB,EAAM4nB,UAED,EAAKC,uBACoB,QAAtB,EAAA7nB,EAAM4nB,UAAUz0B,cAAM,QAAI,GACH,QAAvB,EAAAw0B,aAAI,EAAJA,EAAMG,yBAAiB,QAAI,MAM5B9nB,EAHI,KAMRA,CACX,EAEQ,KAAA+nB,mBAAwD,SAACC,GAC7D,GAAI,EAAKhE,YAAcgE,EAAMC,SAAU,CAInC,IAAMA,EAAWD,EAAMC,SAAStrB,QAAQ,IAAIurB,OAAO,WAAI,EAAKlE,WAAU,OAAO,IAIzEiE,IAAaD,EAAMC,WACnBD,EAAMC,SAAW,UAAGR,EAAe,YAAIQ,G,CAI/C,OAAOD,CACX,EAtIU,MAIF9qB,GAAW,CAAC,EAHZ,IAAAirB,cAAAA,OAAa,IAAG,MAAI,EAAiB,EACrC,IAAAnE,WAAAA,OAAU,IAAG,KAAE,EACf,IAAAC,WAAAA,OAAU,IAAG,KAAG,EAGpBzyB,KAAK22B,cAAgBA,EACrB32B,KAAKwyB,WAAaA,GAElB,SAAK,eACDC,WAAU,EACVmE,WAAY52B,KAAKk2B,iBACjBW,UAAU,0CACF15B,EAAO05B,UAAY,IAAG,IAC1B,oBACA,oB,GAEJC,aAAc,CACV,IAAI,KAAaC,eAAe,CAC5BC,SAAS,EACTC,sBAAsB,IAE1B,IAAI,IAAc,CACdC,SAAUl3B,KAAKu2B,uBAGpBp5B,GAEX,CA2GJ,OAzGI,YAAAqvB,IAAA,SACItf,EACAwoB,EACAC,EACAr6B,GAJJ,gBAGI,IAAAq6B,IAAAA,EAAwBJ,EAAe93B,OAGvCuC,KAAK22B,cAAcnK,IAAItf,EAAOwoB,EAAMC,IAEpC,SAAU,SAACwB,GACC,OAAwCzB,GAAQ,CAAC,GAAC,UAAlDT,OAAS,IAAG,KAAAC,EAAA,GAAiBhoB,GAAM,EAEvC+nB,GACAkC,EAAMC,QAAQ,CAAEnC,UAAS,IAG7BkC,EAAME,SAAS,EAAKC,iBAAiB3B,IAEjCr6B,GACA67B,EAAMI,UAAUj8B,GAGpB67B,EAAMK,eAAe,CAAC,mBAEtB,QAAiBtqB,EACrB,GACJ,EAEQ,YAAAoqB,iBAAR,SAAyB3B,GACrB,OAAQA,GACJ,KAAKJ,EAAepb,KAChB,OAAO6b,EAAkByB,KAE7B,KAAKlC,EAAeO,QAChB,OAAOE,EAAkB0B,QAE7B,KAAKnC,EAAeoC,MAChB,OAAO3B,EAAkB4B,MAE7B,KAAKrC,EAAe93B,MACpB,QACI,OAAOu4B,EAAkB6B,MAErC,EAUQ,YAAAxB,uBAAR,SAA+ByB,EAAyBxB,GAKpD,SAAKwB,EAAW/vB,QAAYuuB,aAA6B74B,QAIlDq6B,EAAWroB,OAAM,SAAC2mB,G,QACrB,SAAiC,QAA5B,EAAoB,QAApB,EAAAA,EAAU2B,kBAAU,eAAEC,cAAM,eAAEjwB,SAI5BquB,EAAU2B,WAAWC,OAAOvoB,OAAM,SAAC+mB,GAAK,MAC3C,OAAc,QAAd,EAAAA,EAAMC,gBAAQ,eAAEwB,WAAWhC,EAAgB,GAEnD,GACJ,EAmCJ,EA5IA,GC9Be,SAAS7D,EACpB8F,EACAxsB,GAEA,OAAIwsB,GAAiBA,EAAc7F,OACxB,IAAI,EAAkB6F,EAAc7F,QAAQ,gCAC5C3mB,GAAO,CACVirB,cAAe,IAAI,EAAmBjrB,MAQvC,IAAI,EAAmBA,EAClC,C,kBCxBe,SAAS4jB,EAAcpiB,GAClC,IAAMirB,EAAcjrB,EAEpB,YACiC,IAAtBirB,EAAYjU,YACS,IAArBiU,EAAYp5B,WACS,IAArBo5B,EAAY/5B,IAE3B,C,kCCIe,SAASgS,EAAgBlD,GACpC,MACqB,iBAAVA,GACG,OAAVA,IATJkrB,EAUmBlrB,EATnBrD,EAS0B,OAPnBrK,OAAOiI,UAAUgO,eAAe4iB,KAAKD,EAAKvuB,KAQvB,iBAAfqD,EAAM9O,KAZrB,IACIg6B,EACAvuB,CAYJ,C,kCCnBe,SAASyI,EAAepF,GAGnC,MAA6B,YAFRA,EAED9O,IACxB,C,kCCFe,SAASk6B,EAEpBrX,GAEA,MAAO,eAAgBA,CAC3B,CCCe,SAAStT,EACpB4qB,EACAC,GAIA,I,QAFMC,EAAwC,GAEjB,MAAAj5B,OAAOk5B,QAAQF,GAAf,eAA4B,CAA9C,WAAIvX,GAAF,KAAW,MACpB,GAAKqX,EAA0CrX,GAI/C,IAAyB,UAAAA,EAAU0X,WAAV,eAAsB,CAG3C,IAHC,IAAMC,EAAU,KACXxiB,EAAS,CAAEyiB,UAAW5X,EAAWjc,QAAS,EAAG8zB,SAAS,GAEjC,MAAAt5B,OAAOk5B,QAAQE,GAAf,eAA4B,CAA5C,WAAC/uB,EAAG,KAAExN,EAAK,KAClB,GAAIwN,KAAO0uB,GAASA,EAAM1uB,KAASxN,EAAO,CACtC+Z,EAAOpR,QAAU,EACjB,K,CAGAuzB,EAAM1uB,KAASxN,GACf+Z,EAAOpR,UAGC,YAAR6E,IAA+B,IAAVxN,IACrB+Z,EAAO0iB,SAAU,E,CAIzBL,EAAQ12B,KAAKqU,E,EAIrB,IAAMwP,EAAU6S,EACXM,MAAK,SAACC,EAAGC,GAAM,OAAAA,EAAEj0B,QAAUg0B,EAAEh0B,OAAd,IACfzB,QAAO,SAAC6S,GAAW,OAAAA,EAAOpR,QAAU,CAAjB,IAAoB,GAE5C,OAAyB,QAAlB,EAAA4gB,aAAO,EAAPA,EAASiT,iBAAS,QAA4C,QAAxC,EAAAJ,EAAQvyB,MAAK,SAACkQ,GAAW,OAAAA,EAAO0iB,OAAP,WAAe,eAAED,SAC3E,C,mDC9CO,IAAMK,EAAc15B,OAAO25B,OAAO,IACb35B,OAAO25B,OAAO,CAAC,E,kBCH5B,SAASnuB,IACpB,IAAMouB,EAAenvB,OAAOgB,SAASC,SAASxE,MAAM,KAAK2yB,MAEzD,QAA0B,aAAjBD,GAAgD,sBAAjBA,EAC5C,C,kCCFe,SAAShnB,EAAuB1F,GAC3C,OAAOjL,QAAQiL,EAAiBwkB,+BAA+BE,qBACnE,C,kECJMkI,EAAkB,CACpBC,MAAO,EACPC,SAAU,KAQC,SAAe7O,EAASpc,EAAsB7C,G,kIACnD,mCAA2B4tB,GAAoB5tB,GAA7C6tB,EAAK,QAAEC,EAAQ,W,iBAGZ,O,sBAAA,GAAMjrB,K,OAAb,MAAO,CAAP,EAAO,U,OAEP,G,WAAc,IAAVgrB,EACA,MAAM,EAGV,SAAM,IAAInuB,SAAQ,SAACquB,GAAY,OAAA/wB,WAAW+wB,EAASD,EAApB,K,OAE/B,OAFA,SAEO,CAAP,EAAO7O,EAAMpc,EAAI,CAAEirB,SAAQ,EAAED,MAAOA,EAAQ,K,0ECTpD,SAAe,E,SAAA,IALsE,SAAC,G,IAClFG,EAAM,SACNC,EAAQ,WACN,uCAAGA,EAASC,mBAAmBF,GAA/B,G,kBCFC,SAASG,EAAkC18B,GAE1C,MACAA,EAAM,qBAEV,OAAO4U,EAAwB,CAC3B+nB,UAJiC,YAKjChpB,YALqD,QAMrDE,MAN4D,QAO5DD,QAPqE,WAS7E,CAEe,SAASgB,EAAwB,G,IAC5C+nB,EAAS,YACThpB,EAAW,cACXE,EAAK,QACLD,EAAO,UAEDgpB,EAAa,IAAIrD,OAAO,IAAK,KAEnC,MAAO,CACHzlB,UAAW6oB,EACXhpB,YAAW,EACXE,MAAO,IAAI0lB,OAAO1lB,EAAM7F,QAAQ4uB,EAAY,KAC5ChpB,QAAS,IAAI2lB,OAAO3lB,EAAQ5F,QAAQ4uB,EAAY,KAExD,C,qFClCe,SAASC,EACpBC,G,IACA,wDAEA,IAAMC,EAAe,EAAAz6B,OAAM,kCAAC,CAAC,GAAMovB,GAAM,IACnCrmB,GAAQ,IAAAkB,MACV,IAAAywB,QAAOD,GAAc,SAAC79B,GAAU,MAAiB,iBAAVA,CAAP,KAChC,SAACA,EAAOwN,GAAQ,iBAAG,IAAAuwB,WAAUvwB,GAAI,aAAKxN,EAAK,IAA3B,IAClB4L,KAAK,KAEP,MAAO,UAAGgyB,EAAQ,aAAKzxB,EAAK,IAChC,C,QCTA,wBAmXA,QAlXI,YAAA6xB,MAAA,SAAMxL,GACF,IAAMyL,EAAkB,GA+WxB,OA7WIzL,EAAO7U,OACPsgB,EAAMv4B,KAAKi4B,EAAU,OAAQnL,EAAO7U,OACpCsgB,EAAMv4B,KAAKi4B,EAAU,6BAA8BnL,EAAO7U,QAG1D6U,EAAO9L,MACPuX,EAAMv4B,KAAKi4B,EAAU,oCAAqCnL,EAAO9L,OAGjE8L,EAAO0L,eACPD,EAAMv4B,KAAKi4B,EAAU,sCAAuCnL,EAAO0L,gBAGnE1L,EAAOzK,SACPkW,EAAMv4B,KAAKi4B,EAAU,oCAAqCnL,EAAOzK,UAGjEyK,EAAO2L,kBACPF,EAAMv4B,KAAKi4B,EAAU,sCAAuCnL,EAAO2L,mBAGnE3L,EAAOjuB,OACP05B,EAAMv4B,KAAKi4B,EAAU,IAAKnL,EAAOjuB,OACjC05B,EAAMv4B,KAAKi4B,EAAU,UAAWnL,EAAOjuB,KAAMiuB,EAAOjuB,KAAKimB,QACzDyT,EAAMv4B,KAAKi4B,EAAU,UAAWnL,EAAOjuB,KAAMiuB,EAAOjuB,KAAK65B,SAGzD5L,EAAO/pB,QACPw1B,EAAMv4B,KAAKi4B,EAAU,gCAAiCnL,EAAO/pB,QAC7Dw1B,EAAMv4B,KACFi4B,EACI,mDACAnL,EAAO/pB,MACP+pB,EAAO/pB,MAAMoI,QAGrBotB,EAAMv4B,KACFi4B,EACI,yCACAnL,EAAO/pB,MACP+pB,EAAO/pB,MAAMoI,SAKrB2hB,EAAO6L,SACPJ,EAAMv4B,KAAKi4B,EAAU,mCAAoCnL,EAAO6L,SAChEJ,EAAMv4B,KACFi4B,EACI,0CACAnL,EAAO6L,OACP7L,EAAO6L,OAAOC,SAGtBL,EAAMv4B,KACFi4B,EACI,yCACAnL,EAAO6L,OACP7L,EAAO6L,OAAO7T,QAGtByT,EAAMv4B,KACFi4B,EACI,yCACAnL,EAAO6L,OACP7L,EAAO6L,OAAOD,QAGtBH,EAAMv4B,KACFi4B,EACI,6CACAnL,EAAO6L,OACP7L,EAAO6L,OAAOtnB,WAGtBknB,EAAMv4B,KACFi4B,EACI,oDACAnL,EAAO6L,OACP7L,EAAO6L,OAAOtnB,WAGtBknB,EAAMv4B,KACFi4B,EACI,mDACAnL,EAAO6L,OACP7L,EAAO6L,OAAOtnB,WAGtBknB,EAAMv4B,KACFi4B,EACI,mDACAnL,EAAO6L,OACP7L,EAAO6L,OAAOtnB,WAGtBknB,EAAMv4B,KACFi4B,EACI,uDACAnL,EAAO6L,OACP7L,EAAO6L,OAAOtnB,WAGtBknB,EAAMv4B,KACFi4B,EACI,wDACAnL,EAAO6L,OACP7L,EAAO6L,OAAOtnB,YAKtByb,EAAO+L,kBACPN,EAAMv4B,KAAKi4B,EAAU,qCAAsCnL,EAAO+L,kBAClEN,EAAMv4B,KACFi4B,EACI,4CACAnL,EAAO+L,gBACP/L,EAAO+L,gBAAgBD,SAG/BL,EAAMv4B,KACFi4B,EACI,2CACAnL,EAAO+L,gBACP/L,EAAO+L,gBAAgB/T,QAG/ByT,EAAMv4B,KACFi4B,EACI,2CACAnL,EAAO+L,gBACP/L,EAAO+L,gBAAgBH,QAG/BH,EAAMv4B,KACFi4B,EACI,+CACAnL,EAAO+L,gBACP/L,EAAO+L,gBAAgBxnB,WAG/BknB,EAAMv4B,KACFi4B,EACI,sDACAnL,EAAO+L,gBACP/L,EAAO+L,gBAAgBxnB,WAG/BknB,EAAMv4B,KACFi4B,EACI,qDACAnL,EAAO+L,gBACP/L,EAAO+L,gBAAgBxnB,WAG/BknB,EAAMv4B,KACFi4B,EACI,qDACAnL,EAAO+L,gBACP/L,EAAO+L,gBAAgBxnB,WAG/BknB,EAAMv4B,KACFi4B,EACI,yDACAnL,EAAO+L,gBACP/L,EAAO+L,gBAAgBxnB,WAG/BknB,EAAMv4B,KACFi4B,EACI,0DACAnL,EAAO+L,gBACP/L,EAAO+L,gBAAgBxnB,YAK/Byb,EAAOhb,QACPymB,EAAMv4B,KAAKi4B,EAAU,gCAAiCnL,EAAOhb,QAC7DymB,EAAMv4B,KACFi4B,EAAU,sCAAuCnL,EAAOhb,MAAOgb,EAAOhb,MAAMgT,QAEhFyT,EAAMv4B,KACFi4B,EAAU,sCAAuCnL,EAAOhb,MAAOgb,EAAOhb,MAAM4mB,QAEhFH,EAAMv4B,KACFi4B,EACI,6CACAnL,EAAOhb,MACPgb,EAAOhb,MAAMqJ,cAGrBod,EAAMv4B,KACFi4B,EACI,mDACAnL,EAAOhb,MACPgb,EAAOhb,MAAM3G,QAGrBotB,EAAMv4B,KACFi4B,EACI,yDACAnL,EAAOhb,MACPgb,EAAOhb,MAAM3G,QAGrBotB,EAAMv4B,KACFi4B,EACI,yDACAnL,EAAOhb,MACPgb,EAAOhb,MAAM3G,SAKrB2hB,EAAOgM,SACPP,EAAMv4B,KAAKi4B,EAAU,iCAAkCnL,EAAOgM,SAC9DP,EAAMv4B,KACFi4B,EACI,uCACAnL,EAAOgM,OACPhM,EAAOgM,OAAOhU,QAGtByT,EAAMv4B,KACFi4B,EACI,uCACAnL,EAAOgM,OACPhM,EAAOgM,OAAOJ,QAGtBH,EAAMv4B,KACFi4B,EACI,oDACAnL,EAAOgM,OACPhM,EAAOgM,OAAO3tB,QAGtBotB,EAAMv4B,KACFi4B,EACI,0DACAnL,EAAOgM,OACPhM,EAAOgM,OAAO3tB,QAGtBotB,EAAMv4B,KACFi4B,EACI,0DACAnL,EAAOgM,OACPhM,EAAOgM,OAAO3tB,SAKtB2hB,EAAOroB,WACP8zB,EAAMv4B,KAAKi4B,EAAU,mCAAoCnL,EAAOroB,WAChE8zB,EAAMv4B,KACFi4B,EACI,yCACAnL,EAAOroB,SACPqoB,EAAOroB,SAASqgB,QAGxByT,EAAMv4B,KACFi4B,EACI,yCACAnL,EAAOroB,SACPqoB,EAAOroB,SAASi0B,QAGxBH,EAAMv4B,KACFi4B,EACI,sDACAnL,EAAOroB,SACPqoB,EAAOroB,SAAS0G,QAGxBotB,EAAMv4B,KACFi4B,EACI,4DACAnL,EAAOroB,SACPqoB,EAAOroB,SAAS0G,QAGxBotB,EAAMv4B,KACFi4B,EACI,4DACAnL,EAAOroB,SACPqoB,EAAOroB,SAAS0G,SAKxB2hB,EAAOiM,QACPR,EAAMv4B,KAAKi4B,EAAU,gCAAiCnL,EAAOiM,QAC7DR,EAAMv4B,KACFi4B,EAAU,sCAAuCnL,EAAOiM,MAAOjM,EAAOiM,MAAMjU,QAEhFyT,EAAMv4B,KACFi4B,EAAU,sCAAuCnL,EAAOiM,MAAOjM,EAAOiM,MAAML,QAEhFH,EAAMv4B,KACFi4B,EACI,mDACAnL,EAAOiM,MACPjM,EAAOiM,MAAM5tB,QAGrBotB,EAAMv4B,KACFi4B,EACI,yDACAnL,EAAOiM,MACPjM,EAAOiM,MAAM5tB,QAGrBotB,EAAMv4B,KACFi4B,EACI,yDACAnL,EAAOiM,MACPjM,EAAOiM,MAAM5tB,SAKrB2hB,EAAO7zB,OACPs/B,EAAMv4B,KAAKi4B,EAAU,kCAAmCnL,EAAO7zB,OAC/Ds/B,EAAMv4B,KAAKi4B,EAAU,0BAA2BnL,EAAO7zB,KAAKwnB,QAG5DqM,EAAOkM,YACPT,EAAMv4B,KAAKi4B,EAAU,oCAAqCnL,EAAOkM,YACjET,EAAMv4B,KAAKi4B,EAAU,yCAA0CnL,EAAOkM,YACtET,EAAMv4B,KACFi4B,EACI,+CACAnL,EAAOkM,UACPlM,EAAOkM,UAAUN,QAGzBH,EAAMv4B,KACFi4B,EACI,mDACAnL,EAAOkM,UACPlM,EAAOkM,UAAUhkB,WAKzB8X,EAAOmM,gBACPV,EAAMv4B,KAAKi4B,EAAU,oCAAqCnL,EAAOmM,iBAGjEnM,EAAOoM,eACPX,EAAMv4B,KAAKi4B,EAAU,oCAAqCnL,EAAOoM,gBAGjEpM,EAAOqM,eACPZ,EAAMv4B,KAAKi4B,EAAU,kCAAmCnL,EAAOqM,eAC/DZ,EAAMv4B,KACFi4B,EAAU,8CAA+CnL,EAAOqM,gBAIjEZ,CACX,EACJ,EAnXA,G,QCEA,WAGI,WAAYa,GACRn7B,KAAKo7B,QAAUD,CACnB,CAKJ,OAHI,YAAArM,OAAA,SAAOD,GACH,OCdO,SAA0ByL,GACrC,IAAMn7B,EAAQE,SAASwB,cAAc,SAIrC,GAFAxB,SAAS6B,KAAKC,YAAYhC,GAEtBA,EAAMk8B,iBAAiBC,cAAe,CAC9B,MAAUn8B,EAAK,MAEvBm7B,EAAM/5B,SAAQ,SAACg7B,EAAMzY,GACjB,EAAM0Y,WAAWD,EAAMzY,EAC3B,G,CAGJ,OAAO3jB,CACX,CDAes8B,CAAiBz7B,KAAKo7B,QAAQf,MAAMxL,GAC/C,EACJ,EAVA,GEHe,SAASsD,IACpB,IAAMgJ,EAA8B,IAAI,EAExC,OAAO,IAAI,EAA2BA,EAC1C,C,kBCPe,SAASra,EAAW5V,GAG/B,YAH+B,IAAAA,IAAAA,EAAmB7L,SAAS4L,SAASC,UAGhD,uBAFH,WAAIA,EAASxE,MAAM,KAAK,GAG7C,C,wFCmCA,SAAe,IAAAnC,UAAQ,SAA6C,G,IAChEC,EAAU,aACV,IAAAC,UAAAA,OAAS,IAAG,aAAM,EAAS,EAE3B,OAAO,QAAO,CACVwB,cAAc,QACVzB,EACKjB,QAAO,SAAC,GAAe,QAAP,QAAO,IACvBmB,QAAO,SAACC,EAAQ,G,IACT+2B,EACAC,EAFW/2B,EAAI,OAAEE,EAAK,QAAED,EAAQ,WAAEkB,EAAS,YAAE3H,EAAI,OAAEoH,EAAG,MAAEC,EAAG,MA0C/D,GAtCa,SAATrH,EACAuG,EAAOC,IAAQ,UAGVg3B,QAAO,GACPC,UAAS,GACTC,WAAU,SAACz/B,EAAO0/B,GACf,MAAkB,KAAlBA,EAAuB,KAAO1/B,CAA9B,IAEQ,YAAT+B,GACPuG,EAAOC,IAAQ,UAGVg3B,QAAO,GACPE,WAAU,SAACz/B,GAAU,OAACyqB,MAAMzqB,QAAS5C,EAAY4C,CAA5B,IAE1Bq/B,EAA0B,iBAARj2B,EAAmBA,OAAMhM,EAC3CkiC,EAA0B,iBAARn2B,EAAmBA,OAAM/L,GACpCsM,IAAc,IAAqBS,SAC1C7B,EAAOC,IAAQ,UAEfD,EAAOC,IAAQ,eAGFnL,IAAbiiC,IACA/2B,EAAOC,GAASD,EAAOC,GAAuBa,IAC1Ci2B,EACAj3B,EAAU,MAAO,CAAEK,MAAK,EAAEF,KAAI,EAAEa,IAAKi2B,EAAW,WAIvCjiC,IAAbkiC,IACAh3B,EAAOC,GAASD,EAAOC,GAAuBY,IAC1Cm2B,EACAl3B,EAAU,MAAO,CAAEK,MAAK,EAAEF,KAAI,EAAEY,IAAKm2B,EAAW,MAIpD92B,EAAU,CACV,IAAMm3B,EAAuBv3B,EAAU,WAAY,CAAEG,KAAI,EAAEE,MAAK,IAEhEH,EAAOC,GACHmB,IAAc,IAAqBS,SAC5B7B,EAAOC,GAA8BY,IAAI,EAAGw2B,GAC5Cr3B,EAAOC,GAA8BC,SAClCm3B,E,CAIlB,OAAOr3B,CACX,GAAG,CAAC,IACVk3B,UAAS,IAEnB,G,iDCtGe,SAASrhB,EAAkCyhB,GAGtD,IAAMh2B,EAA+D,GAoBrE,OAlBA,IAAAi2B,OAAMD,GAAoB,SAAC5/B,EAAOwN,GAC9B,IAAI1D,EAEJ,IAAI,IAAAg2B,QAAO9/B,GAAQ,CACf,IAAM+/B,GAAW,IAAAC,WAAUhgC,EAAMigC,WAAa,GAAGr7B,WAAY,EAAG,KAC1Ds7B,GAAS,IAAAF,UAAShgC,EAAMmgC,UAAUv7B,WAAY,EAAG,KAEvDkF,EAAa,UAAG9J,EAAMogC,cAAa,YAAIL,EAAQ,YAAIG,E,MAEnDp2B,EAAa9J,EAGjB4J,EAAalE,KAAK,CACd26B,QAAS7yB,EACT1D,WAAU,GAElB,IAEOF,CACX,C,uGCcA,SAAe,EAAA02B,EAAA,IAhCgD,SAAC,G,IAC5D,IAAA7iC,gBAAmB8T,EAAoB,uBAAEC,EAAkB,qBAC3DjQ,EAAW,cACXhC,EAAQ,WACRoR,EAAgB,mBAChBC,EAAmB,sBAwBnB,OAtBA,IAAApP,YAAU,W,MAUN,OATAgQ,GAAkB,GACdjS,SAAQ,GACR,EAACA,GAAW,CACRwF,UAAWxD,EACXoP,iBAAgB,EAChBvC,QAAS,WAAM,OAAAwC,EAAoBrR,EAApB,G,IAEpBghC,MAAM5vB,GAEF,WACHY,EAAqB,CAAEhS,SAAQ,IAAIghC,MAAM5vB,EAC7C,CACJ,GAAG,CACCpP,EACAgQ,EACAC,EACAjS,EACAoR,EACAC,IAGG,uBAAKjP,GAAIJ,GACpB,GAII,I,uBCtCJ,YACI,WAAY2J,GAAZ,ICLqD8tB,EAAW5tB,EDKhE,EACI,YAAM,CACF7C,KAAM,sCACN2C,QAAO,KACT,K,OCT+C8tB,EDWlC,ECX6C5tB,EDWvCD,EAAiCC,UCTtDjI,OAAO41B,eACP51B,OAAO41B,eAAeC,EAAQ5tB,GAUtC,SAAkB4tB,GACd,MAAO,cAAeA,CAC1B,CAXewH,CAASxH,KAEhBA,EAAOC,UAAY7tB,G,CDMvB,CACJ,OAT8D,oBAS9D,EATA,C,SAA8D,GEyB9D,SAAe,EAAAk1B,EAAA,IAlBiD,SAACn0B,GACrD,ICZuB0C,EDYvB9F,EAA+BoD,EAAK,SAA1BwE,EAAqBxE,EAAK,iBAE5C,YCd+B,IAAA0C,IAAAA,EAAmB7L,SAAS4L,SAASC,UAGhD,uBAFH,WAAIA,EAASxE,MAAM,KAAK,KDcrCsG,EACI,IAAI,EACA5H,EAASX,UAAU,sCAAuC,CACtDuD,QAAS,gBAKd,MAGJ,gBAAC,GAAc,iBAAKQ,GAC/B,GAII,CACI,CAAExK,GAAI,oBACN,CAAEA,GAAI,oBACN,CAAEA,GAAI,yBACN,CAAEA,GAAI,gBACN,CAAEA,GAAI,sBACN,CAAEA,GAAI,2BACN,CAAEA,GAAI,wBACN,CAAEA,GAAI,0BACN,CAAEA,GAAI,oBACN,CAAEA,GAAI,mBACN,CAAEA,GAAI,sBACN,CAAEA,GAAI,2BACN,CAAEA,GAAI,0B,kBEtCC,SAAS8+B,EACpB11B,GAEA,MAA8B,oBAAvBA,EAAQC,UACnB,C,4KCRM01B,EAAO19B,SAAS29B,cAAiB39B,SAAS29B,cAAoCC,SAAMxjC,ECA3E,SAASyjC,EAAoB1K,GACxC,IAAKA,EAAY,CACb,IAAM2K,EDCHJ,ECCH,IAAKI,EACD,MAAM,IAAI1/B,MACN,sJAMR,OAFA,IAA0B,UAAG0/B,EAAWz2B,MAAM,KAAK8jB,MAAM,GAAI,GAAGviB,KAAK,KAAI,KAElE,G,CAKX,OAFA,IAAoD,MAA1BuqB,EAAW4K,QAAQ,GAAa5K,EAAa,UAAGA,EAAU,KAE7E,GACX,CCVe,SAAS6K,EAAe,GACnC,IAAAz/B,EAAW,cACX40B,EAAU,aACPhqB,GAAK,cAH2B,8BAK7B80B,EAAuBJ,EAAoB1K,GAIhC+K,EAAgB,WAYjC,SACI,gBAACA,GAAW,eAAC3/B,YAAaA,EAAa40B,WAAY8K,GAA0B90B,IAC7EnJ,SAAS8c,eAAeve,GAEhC,CCzBe,SAAS4/B,EAAwB,GAC5C,IAAA5/B,EAAW,cACX40B,EAAU,aACPhqB,GAAK,cAHoC,8BAKtC80B,EAAuBJ,EAAoB1K,GAIhCiL,EAAyB,WAY1C,SACI,gBAACA,GAAoB,eACjB7/B,YAAaA,EACb40B,WAAY8K,GACR90B,IAERnJ,SAAS8c,eAAeve,GAEhC,C,+NC5BA,WACI,WAAoB8/B,QAAA,IAAAA,IAAAA,GAA+B,WAA/B,KAAAA,cAAAA,CAAuD,CAO/E,OALI,YAAAC,OAAA,SAAO3jB,GACH,OAAOha,KAAK09B,cACPE,IAA6B,oCAAqC,CAAE5jB,KAAI,IACxE7D,MAAK,SAAC0nB,GAAa,OAAAA,EAAS7jB,KAAKjb,KAAK6N,QAAnB,GAC5B,EACJ,EARA,G,yNC8CA,SAAe,IAAAzJ,OA9C+C,SAAC,G,IAAE8N,EAAS,YAChE6sB,GAAsB,IAAAryB,cACxB,SAAC,G,IAAEjI,EAAK,QAA2B,uBAACiQ,EAAA,GAAS,iBAAKjQ,EAAK,CAAExF,GAAIwF,EAAMoB,KAAMxG,KAAK,aAA3C,GACnC,IAGE2/B,GAAkC,IAAAtyB,cACpC,SAAC,G,IAAEjI,EAAK,QAA2B,uBAACiQ,EAAA,GAAS,iBAAKjQ,EAAK,CAAExF,GAAIwF,EAAMoB,KAAMxG,KAAK,aAA3C,GACnC,IAGE4/B,GAAuB,IAAA/jC,UACzB,WAAM,OACF,gCACI,gBAACqT,EAAA,EAAgB,CAACtP,GAAG,4BAA6B,IAClD,6BACK,UAAGiT,EAAS,KACb,gBAAC3D,EAAA,EAAgB,CAACtP,GAAG,+CAL3B,GASN,CAACiT,IAGCgtB,GAAmC,IAAAhkC,UACrC,WAAM,uBAACqT,EAAA,EAAgB,CAACtP,GAAG,wCAArB,GACN,IAGJ,OACI,gCACI,gBAAC4V,EAAA,EAAS,CACNC,MAAOiqB,EACPnqB,aAAcqqB,EACdp5B,KAAK,aAGT,gBAACgP,EAAA,EAAS,CACNC,MAAOkqB,EACPpqB,aAAcsqB,EACdr5B,KAAK,oBAIrB,ICcA,SAAe,EAAA0M,EAAA,IACX,IAAAC,YAAkE,CAC9DG,iBAAkB,WAAM,OACpBR,SAAU,GACVgtB,gBAAiB,GAFG,EAIxB1sB,aAAc,SAAC7P,EAAQ,IACnBw8B,EADsC,kBAC7Bx8B,EACb,EACAiQ,iBAAkB,SAAC,G,IACfxM,EAAQ,WACR,IAAAyL,qBAAwBC,EAAW,cAAEC,EAAO,UAAEC,EAAK,QAAEC,EAAS,YAE9D,eAAO,CACHC,UAAU,UACLrM,SAASiM,GAAe1L,EAASX,UAAU,qCAC3CO,QACG+L,EACAD,GACI1L,EAASX,UAAU,4CAE1BO,QACGgM,EACAF,GACI1L,EAASX,UAAU,4CAE1Be,IACGyL,EACAH,GACI1L,EAASX,UAAU,iDAE1BgB,IAAI,IAAKL,EAASX,UAAU,gDACjCy5B,iBAAiB,UACZr5B,SAASO,EAASX,UAAU,kDAC5BoS,MACG,EAAC,QAAI,aACLzR,EAASX,UAAU,0CAvB/B,GAZR,EAsCG,IAAAtB,OAlFH,SAAC,G,IAAEi7B,EAAW,cAAEC,EAAoB,uBAA0BptB,EAAS,iCAAS,OAChF,gBAAC6B,EAAA,EAAQ,CACL0F,OACI,gBAACC,EAAA,EAAM,KACH,gBAACnL,EAAA,EAAgB,CACbtP,GACIqgC,EACM,+BACA,kCAMpBA,GACE,yBACI,gBAAC/wB,EAAA,EAAgB,CAACtP,GAAG,mCAI7B,gBAAC6U,EAAA,EAAI,CAAClP,UAAU,qBACZ,gBAAC,EAAmB,CAACsN,UAAWA,IAEhC,uBAAKtN,UAAU,gBACX,gBAACiL,EAAA,GAAM,CACH5Q,GAAG,sBACHkL,UAAWk1B,EACXhgC,KAAK,SACLoS,QAAS5B,EAAA,GAAcyE,SAEvB,gBAAC/F,EAAA,EAAgB,CACbtP,GACIqgC,EACM,iCACA,oCAlCkD,M,eCZpF,QARqD,WAAM,OACvD,gBAACtrB,EAAA5W,EAAK,CAACiC,KAAM2U,EAAA,EAAUurB,SACnB,8BACI,gBAAChxB,EAAA,EAAgB,CAACtP,GAAG,mCAH0B,ECQ3D,QARgD,WAAM,OAClD,gBAAC+U,EAAA5W,EAAK,CAACiC,KAAM2U,EAAA,EAAUurB,SACnB,8BACI,gBAAChxB,EAAA,EAAgB,CAACtP,GAAG,qCAHqB,E,iCCFtD,YACI,WAAYe,EAAa8S,GAAzB,MACI,YAAM,CACFjN,KAAM,sCACN2C,QAASsK,EACTqS,OAAO,EAAAD,EAAA,KAAqBxf,UACxB,sDAEJ1F,KAAI,KACN,K,OAEF,OAAe,EAAMw/B,EAAiC92B,W,CAC1D,CACJ,OAb8D,oBAa9D,EAbA,CAA8DC,EAAA,G,QCA9D,YACI,WAAY3I,GAAZ,MACI,YAAM,CACF6F,KAAM,0BACN2C,SAAS,EAAA0c,EAAA,KAAqBxf,UAAU,iCACxC1F,KAAI,KACN,K,OAEF,OAAe,EAAMy/B,EAA2B/2B,W,CACpD,CACJ,OAVwD,oBAUxD,EAVA,CAAwDC,EAAA,G,2DCKxD,SAAS+2B,EAAsBr3B,GAC3B,QAAQ,EAAA01B,EAAA,GAAyB11B,MAAa,EAAAs3B,EAAA,GAAqBt3B,EACvE,CASA,QAPA,SAAgCuiB,GAC5B,IAAMgV,GAAkBhV,EAAM1iB,UAAY,IAAIf,KAAKu4B,GAGnD,OAFqBE,GAAkBA,EAAeC,OAAOC,cAEtC,EAC3B,ECde,SAASC,GAAgB73B,GACpC,OAAOA,EAAS1D,OAAOu5B,EAAA,GAA0BpzB,KAAI,SAAC,G,IAAEgwB,EAAM,SAAEkF,EAAM,SAAO,OACzE3K,KAAM2K,EAAO3K,KACb8K,UAAWH,EAAOG,UAClBC,KAAMtF,EACNuF,QAASvF,EAASkF,EAAOG,UACzBG,aAAc,GAL2D,GAOjF,CCRe,SAASC,GAAqBl4B,GACzC,OAAQA,GAAY,IACf1D,OAAOm7B,EAAA,GACPh6B,QAAO,SAAC06B,EAAOh4B,GAAY,OAAAg4B,EAAQh4B,EAAQsyB,MAAhB,GAAwB,EAC5D,CCDe,SAAS2F,GAAgC,G,IACpDC,EAAU,aACVC,EAAc,iBACdC,EAAa,gBACbC,EAA0B,6BAC1Bx4B,EAAQ,WACRy4B,EAAiB,oBACjBC,EAAqB,wBACrBC,EAAO,UACPC,EAAK,QACLC,EAAI,OAEJ,MAAO,CACHC,eAAgBT,EAChBU,eAAgBP,EAChBQ,mBAAoBN,EACpBJ,eAAc,EACdW,kBAAmBf,GAAqBl4B,GACxCk5B,eAAgBT,EAChBE,QAAO,EACPQ,iBAAkBn5B,GAAY63B,GAAgB73B,GAC9C44B,MAAK,EACLL,cAAa,EACbM,KAAI,EAEZ,CC1BA,SAJoD,SAAC,G,IAAE/lC,EAAQ,WAAO,OAClE,2BAAS4J,UAAU,6BAA6B5J,EADkB,E,gBCUzDsmC,GAAqE,SAAC,G,IAC/EC,EAAW,cACXj5B,EAAU,aACVzL,EAAQ,WAER,OAAK4D,OAAO+gC,KAAKD,GAAav4B,OAK1B,kCAAc,wCACTvI,OAAOk5B,QAAQ4H,GAAa52B,KAAI,SAAClG,EAAOsf,GACrC,OACI,kCAAe,oDAA6CA,GAASjZ,IAAKiZ,GACtE,gBAACxV,EAAA,EAAgB,CACbtP,GAAI,qCAA8BqJ,EAAU,YAAIzL,EAAQ,YAAI4H,EAAM,M,IAEtE,yBACK,WAAIA,EAAM,KAI3B,KAhBG,IAmBf,EC1Bag9B,GAAqE,SAAC,G,IAC/EC,EAAoB,uBAClB,uCACDA,EAAqB/2B,KAAI,SAACtC,G,UACvB,OAAoB,QAAhB,EAAAA,aAAO,EAAPA,EAASs5B,eAAO,eAAElgC,KAEd,iCACc,uCACVQ,KAAMoG,EAAQs5B,QAAQlgC,IACtBqJ,IAAK,UAAGzC,EAAQC,WAAU,YAAID,EAAQxL,SAAQ,YAC9CkF,IAAI,sBACJwZ,OAAO,UAEP,gBAAChN,EAAA,EAAgB,CACbtP,GAAI,qCAA8BoJ,EAAQC,WAAU,YAAID,EAAQxL,cAIrD,QAAhB,EAAAwL,aAAO,EAAPA,EAASs5B,eAAO,eAAE1iC,IAErB,iCACc,qCACV6L,IAAK,UAAGzC,EAAQC,WAAU,YAAID,EAAQxL,SAAQ,aAE9C,gBAAC0R,EAAA,EAAgB,CACbvO,KAAM,CAAE2hC,QAASt5B,EAAQs5B,QAAQ1iC,IACjCA,GAAI,qCAA8BoJ,EAAQC,WAAU,YAAID,EAAQxL,cAIrD,QAAhB,EAAAwL,aAAO,EAAPA,EAASs5B,eAAO,eAAEJ,cAAel5B,EAAQxL,SACzC,gBAACykC,GAAoB,CACxBx2B,IAAI,kBACJy2B,YAAal5B,EAAQs5B,QAAQJ,YAC7B1kC,SAAUwL,EAAQxL,SAClByL,WAAYD,EAAQC,kBALrB,CAQX,IApCE,ECKAs5B,GAAuB,SACzBv5B,GACgC,QAAEA,EAAQxL,UAAY,YAAawL,KAAaA,EAAQs5B,OAAxD,EAwD9BE,GAAiE,SAAC,G,IACpEzjC,EAAM,SACN0jC,EAAW,cACX1W,EAAW,cACX2W,EAAY,eACZC,EAAkB,qBAElB,OAAQ5W,GACJ,IAAK,+BACL,IAAK,mBACD,OAAO,gBAAChhB,GAAA,EAAc,CAACnL,GAAG,iDAE9B,IAAK,UACD,OACI,gBAACmL,GAAA,EAAc,CACXpK,KAAM,CAAE8hC,YAAW,EAAEC,aAAY,GACjC9iC,GAAG,iDAIf,IAAK,aACD,OAAIb,EAAOuP,iBAAiBiV,SAAS,4EAE7B,gBAACxY,GAAA,EAAc,CACXpK,KAAM,CAAE8hC,YAAW,EAAEC,aAAY,GACjC9iC,GAAG,iDAMX,gBAACmL,GAAA,EAAc,CACXpK,KAAM,CAAE8hC,YAAW,EAAEC,aAAY,GACjC9iC,GAAG,oDAIf,QACI,OACI,gBAACmL,GAAA,EAAc,CACXpK,KAAM,CAAE8hC,YAAW,EAAEC,aAAY,EAAEC,mBAAkB,GACrD/iC,GACI+iC,EACM,oDACA,yDAK9B,EAEA,UAAe,IAAA59B,OAzG0C,SAAC,G,MACtDhG,EAAM,SACNwsB,EAAK,QACLmX,EAAY,eACZC,EAAkB,qBAEZN,GAAqC,QAAd,EAAA9W,EAAM1iB,gBAAQ,eAAE1D,OAAOo9B,MAAyB,GAE7E,OACI,gBAAC,GAAwB,KACpBhX,EAAM5e,SACH,iCAAa,wCACT,gBAAC5B,GAAA,EAAc,CACXpK,KAAM,CAAE8hC,YAAalX,EAAM5e,SAC3B/M,GAAG,0CAKf,iCAAa,wCACT,gBAAC4iC,GAAkB,CACfzjC,OAAQA,EACR0jC,YAAalX,EAAM5e,QACnBof,YAAaR,EAAMpX,OACnBuuB,aAAcA,EACdC,mBAAoBA,KAG5B,gBAACP,GAAoB,CACjBC,qBAAsBA,IAEzB9W,EAAMqX,iBACH,iCAAa,yCACT,gBAAC73B,GAAA,EAAc,CACXnL,GACI2rB,EAAMsX,eACA,gEACA,sEAOlC,I,4BCxDA,UAAe,E,SAAA,IANsB,WAAM,OACvC,uBAAK/0B,OAAO,KAAK6M,QAAQ,YAAYwJ,MAAM,KAAKvJ,MAAM,8BAClD,wBAAMC,EAAE,sJAF2B,ICkC3C,UAAe,IAAA9V,OAxBsC,SAAC,G,IAAEQ,EAAS,YACvDu9B,GAAc,IAAAz1B,cAChB,KAAA01B,WAAS,WACLl3B,OAAOm3B,OACX,GANqB,KAOrB,IAGJ,MAA4B,mBAAjBn3B,OAAOm3B,MACP,KAIP,qBACIz9B,UAAWA,GAAa,mBACxB3C,KAAK,IACLhD,GAAG,kBACHyM,SAAS,EAAA6I,GAAA,GAAe4tB,IAExB,gBAAC,GAAS,M,IAAI,gBAAC5zB,EAAA,EAAgB,CAACtP,GAAG,sBAG/C,ICxBA,SANsD,SAAC,G,IAAEjE,EAAQ,WAAEwW,EAAM,SAAO,OAC5E,sBAAI5M,UAAU,mCAAkC,YAAY4M,GACvDxW,EAFuE,ECchF,UAAe,IAAAoJ,OAVwC,SAAC,G,IAAEyB,EAAI,OAAO,OACjE,gBAAC,GAAa,CAAC2L,OAAO,8BACjB3L,GACG,gBAAC0I,EAAA,EAAgB,CAACvO,KAAM,CAAE6F,KAAI,GAAI5G,GAAG,mDAGvC4G,GAAQ,gBAAC0I,EAAA,EAAgB,CAACtP,GAAG,yCAN8B,ICmCrE,IAAMqjC,IAAe,IAAA3W,OAAK,WACtB,SAAAC,EAAA,IACI,WACI,gEAFR,IASE2W,IAAqB,IAAA5W,OAAK,WAC5B,SAAAC,EAAA,IACI,WACI,+DAFR,IA+BJ,0E,OAII,EAAAzsB,MAAgC,CAAC,EAuLzB,EAAAqjC,sBAAoC,WACxC,EAAK54B,SAAS,CAAEuE,WAAOzT,GAC3B,EAEQ,EAAA+nC,aAAmD,SAAC,G,IAAEtwB,EAAQ,WAAEgtB,EAAe,kBAC7E,EAA4B,EAAK11B,MAA/BuW,EAAa,gBAAE5hB,EAAM,SAEvB0kB,EAAgB1kB,GAAUA,EAAO0kB,cACjChR,EACDgR,GACGA,EAAchR,sBACdgR,EAAchR,qBAAqB3D,OACvC,GAEJ,EAAKvE,SAAS,CACVy1B,aAAa,IAGjBrf,EAAc,CACV7N,SAAQ,EACRgtB,gBAAe,IAEd/nB,MAAK,WACF,EAAKxN,SAAS,CACV84B,aAAa,EACbrD,aAAa,GAErB,IACCxB,OAAM,SAAC1vB,GACJ,EAAKvE,SAAS,CACVuE,MACIA,EAAMqF,OAAS,IACT,IAAI,EAAiCrF,EAAO2D,GAC5C,IAAI,EAA2B3D,GACzCu0B,aAAa,EACbrD,aAAa,GAErB,GACR,EAEQ,EAAA9R,qBAA+C,SAACpf,GAC5C,IAAAujB,EAAgB,EAAKjoB,MAAK,YAElC,EAAKG,SAAS,CAAEuE,MAAK,IACrBujB,EAAYjE,IAAItf,GAEZ,EAAKue,mBACL,EAAKA,kBAAkBgB,UAAUvf,EAEzC,E,CACJ,QA7OgC,oBAQ5B,YAAA5E,kBAAA,sBACU,EAOFtI,KAAKwI,MANL5K,EAAW,cACXkwB,EAAuB,0BACvBC,EAAkB,qBAClB2T,EAAS,YACT32B,EAAO,UACPlR,EAAgB,mBAGpB6nC,EAAU32B,GACLoL,MAAK,SAAC,G,IACK,GADC,OACsCnZ,aAAe,CAAC,GAAC,MAA/C,QAAT,MAA2B,CAAC,EAAC,GAApBsD,SACXquB,EAAYb,EAAwB,CAAE1tB,kBADnB,IAAG,KAAE,IAG9B,EAAKqrB,kBAAoBkD,EAEzBA,EAAUC,eAAc,SAACC,GAAW,OAAAd,EAAmBe,OAAOD,EAA1B,IACpCF,EAAUI,gBAAgB,CAAEC,UAAWpxB,IAEvC/D,EAAiBoB,gBACrB,IACC2hC,MAAM58B,KAAKssB,qBACpB,EAEA,YAAAxjB,OAAA,WACU,MAAoC9I,KAAKwI,MAAvCmhB,EAAK,QAAExsB,EAAM,SAAEwkC,EAAc,iBAErC,IAAKhY,IAAUxsB,GAAUwkC,IACrB,OAAO,gBAACjtB,EAAA,EAAc,CAACxL,WAAW,IAGtC,IAAM04B,EAAsB,EAAuBjY,GAE/C,EAGAxsB,EAAM,aAHU0kC,EAAU,aAAEC,EAAgB,mBAC5CjgB,EAEA1kB,EAAM,cADGmD,EACTnD,EAAM,eAEV,OACI,uBACIwG,UAAW,IAAW,0CAA2C,CAC7D,eAAe,EAAAmd,EAAA,QAGnB,uBAAKnd,UAAU,eACX,uBAAKA,UAAU,qBACX,gBAAC,GAAc,CAACiB,KAAM+kB,EAAM/Z,eAAehM,YAE3C,gBAAC,GAAW,CACRzG,OAAQA,EACRwsB,MAAOA,EACPmX,aAAce,EACdd,mBAAoBe,IAGvBF,GACG,gBAAC,GAAwB,KACrB,uBACInf,wBAAyB,CACrBC,OAAQ,aAAmBkf,IAC9B,YACS,0BAKrB5hC,KAAK+hC,kBAAkB,CACpBC,uBAAwBrY,EAAM0U,qBAC9BA,sBAAuB1U,EAAMsY,WAC7BpgB,cAAa,IAGjB,uBAAKle,UAAU,2BACX,wBAAMxF,OAAQmC,EAAU0jB,OAAO,MAAM1J,OAAO,QACxC,gBAAC1L,EAAA,GAAM,CAACxQ,KAAK,SAASoS,QAAS5B,EAAA,GAAc6B,WACzC,gBAACnD,EAAA,EAAgB,CAACtP,GAAG,8CAOxCgC,KAAKkiC,qBACLliC,KAAKmiC,mBAGlB,EAEQ,YAAAJ,kBAAR,SAA0B,G,IACtB1D,EAAoB,uBACpB2D,EAAsB,yBACtBngB,EAAa,gBAMP,EAA+B7hB,KAAK9B,MAAlCkgC,EAAW,cAAEqD,EAAW,cAExB9X,EAAU3pB,KAAKwI,MAAK,MAE5B,OACI,gCACKw5B,IAA2BP,GACxB,gBAAC,EAAe,CACZpD,qBAAsBA,EACtBD,YAAaA,EACbD,SAAUn+B,KAAKwhC,aACf3wB,sBAAsB,EAAAkB,EAAA,GAAkC8P,KAI/D4f,KACI9X,aAAK,EAALA,EAAOsY,YAAa,gBAAC,EAAyB,MAAM,gBAAC,EAAoB,OAG1F,EAEQ,YAAAC,mBAAR,WACU,MAAoBliC,KAAKwI,MAAvBmhB,EAAK,QAAExsB,EAAM,SAErB,IAAKwsB,IAAUxsB,EACX,OAAO,KAGH,IAAAw8B,EAA8Bx8B,EAAM,SAA1BilC,EAAoBjlC,EAAM,gBAE5C,OACI,gBAACwoB,EAAA,EAAU,MACN,SAACC,GACE,OAAIA,EAEI,gBAACsK,EAAA,EAAa,KACV,gBAACoR,IAAkB,iBACXjC,GAAgC1V,GAAM,CAC1C0Y,WACI,gBAAC,GAAS,CAAC1+B,UAAU,sCAEzBuf,UAAWyG,EAAMzG,UACjBkf,gBAAiBA,EACjBE,cAAe3I,EACfyF,MAAOzV,EAAM4Y,gBAOzB,yBAAO5+B,UAAU,eACb,gBAACusB,EAAA,EAAa,KACV,gBAACmR,IAAY,eACTgB,WAAY,gBAAC,GAAS,OAClBhD,GAAgC1V,GAAM,CAC1CzG,UAAWyG,EAAMzG,UACjBkf,gBAAiBA,EACjBE,cAAe3I,EACfyF,MAAOzV,EAAM4Y,gBAKjC,GAGZ,EAEQ,YAAAJ,iBAAR,WACY,IAAAj1B,EAAUlN,KAAK9B,MAAK,MAE5B,OACI,gBAACqxB,EAAA,EAAU,CACPriB,MAAOA,EACPsiB,QAASxvB,KAAKuhC,sBACdxM,qBAAqB,GAGjC,EAoDJ,EA7OA,CAAgC,EAAA9T,WAqQhC,UAAe,EAAAC,EAAA,IAAc,EAAA3e,EAAA,IAtBtB,SACHC,GAGI,MAKAA,EAAO,cAJH,IAAAzD,KAAQ2qB,EAAQ,WAAE1sB,EAAS,YACf2kC,EAAc,0BAE9B7nC,EACA0I,EAAO,gBAELrF,EAASH,IACT2sB,EAAQD,IAEd,MAAO,CACHvsB,OAAM,EACNwkC,eAAc,EACdD,UAAW5nC,EAAgB4nC,UAC3B/X,MAAK,EAEb,GAE6B,CAA0C6Y,KChQvE,SAjEA,YASI,WAAYh6B,GAAZ,MACI,YAAMA,IAAM,K,OATR,EAAAi6B,eAAiB,IAAI,EACrB,EAAA3oC,iBAAkB,IAAAi4B,uBAAsB,CAC5CC,QAAQ,EAAA/N,EAAA,KAAqBgO,YAC7BC,oBAAoB,IAEhB,EAAAnE,oBAAqB,EAAAoE,EAAA,KA4CrB,EAAApT,cAAwE,SAAC,G,IAC7E7N,EAAQ,WACRgtB,EAAe,kBAEPnzB,EAAY,EAAKvC,MAAK,QAE9B,OAAO,EAAKi6B,eAAe9E,OAAO,CAC9B5yB,QAAO,EACP23B,YAAY,EACZxxB,SAAQ,EACRgtB,gBAAe,GAEvB,EAlDI,EAAKzN,aAAc,EAAA2B,EAAA,GACf,CAAEC,OAAQ7pB,EAAM8pB,cAChB,CACIC,WAAY,CAAC,sBACbC,WAAYhqB,EAAMgqB,WAClBC,WAAYjqB,EAAMkqB,iBAAmBlqB,EAAMkqB,iBAAmB,K,CAG1E,CA2CJ,OA/DmC,oBAsB/B,YAAApqB,kBAAA,WACY,IAAA1K,EAAgBoC,KAAKwI,MAAK,YAElC,kBAAyB,WAAI5K,GACjC,EAEA,YAAAkL,OAAA,WACI,OACI,gBAAC6pB,EAAA,EAAa,CAACC,OAAQ5yB,KAAKywB,aACxB,gBAACoC,EAAA,EAAc,CAAC/4B,gBAAiBkG,KAAKlG,iBAClC,gBAACg5B,EAAA,EAAgB,CAACh5B,gBAAiBkG,KAAKlG,iBACpC,gBAACi5B,EAAA52B,EAAiB,CAACrC,gBAAiBkG,KAAKlG,iBACrC,gBAACmI,EAAA,EAAiB,CAACnI,gBAAiBkG,KAAKlG,iBACrC,gBAAC,IAAiB,iBACVkG,KAAKwI,MAAK,CACduW,cAAe/e,KAAK+e,cACpB+O,wBAAyB,EAAAkF,gCACzBjF,mBAAoB/tB,KAAK+tB,mBACzB0C,YAAazwB,KAAKywB,mBAQlD,EAeJ,EA/DA,CAAmC,EAAAxP,U,kDCzBpB,SAASW,EAA8BhmB,GAClD,GAAKA,EAIL,OAAIA,IAAa,IAAgB+mC,gBAAkB/mC,IAAa,IAAgBgnC,0BACrE,IAAgBC,kCAGvBjnC,IAAa,IAAgBknC,UACtB,IAAgBC,6BAGpBnnC,CACX,C,mCCdA,Q,SAA8B,C,kBCAf,SAAS8iC,EAAqBt3B,GACzC,MAA8B,gBAAvBA,EAAQC,UACnB,C,uGCiCA,SAAe,IAAAlE,OAxBsE,SAAC,G,IAI5E+f,ECdK,SAAuBxB,EAAY0B,GAC9C,OAAO,IAAAiH,UACH,IAAA3gB,KAAI0Z,EAAYC,aAAa,SAAC2f,GAC1B,WAAA98B,MACIwb,EAAKwB,UAAU6E,eACf,SAACpV,GAAS,OAAAA,EAAK3U,KAAOglC,IAAU,IAAAC,OAAMtwB,EAAKuwB,SAAjC,GAFd,IAMZ,CDKsBC,CAHd,OACO,eAIX,OACI,uBAAKx/B,UAAU,2BACX,8BACI,gBAAC2J,EAAA,EAAgB,CACbvO,KAAM,CAAEw6B,OAAO,EAAA6J,EAAA,GAAkBlgB,IACjCllB,GAAG,0BAIX,0BACKklB,EAAUxZ,KAAI,SAACiJ,GAAS,OACrB,sBAAI9I,IAAK8I,EAAK3U,IAAK,UAAG2U,EAAK0wB,SAAQ,cAAM1wB,EAAK/N,MADzB,KAMzC,G,kDEhCe,SAASw+B,EAAkBlgB,GACtC,OAAO,IAAAxe,QAAOwe,GAAW,SAACkc,EAAOzsB,GAAS,OAAAysB,EAAQzsB,EAAK0wB,QAAb,GAAuB,EACrE,C,iDCFe,SAAS/Z,EAA2BrG,GAC/C,QAAKA,EAAalb,SAIX,IAAA0H,OACHwT,GACA,SAACG,G,MACG,OAACA,EAAYK,wBACTL,EAAYK,uBAAuBzlB,IAEnColB,EAAYkgB,0BACZlgB,EAAYkgB,yBAAyB//B,QACjC,SAAC,G,MAAW,OAAP,QAAgD,QAAlC,EAAA6f,EAAYK,8BAAsB,eAAEzlB,G,IACzD+J,QACuC,YAAX,QAAlC,EAAAqb,EAAYK,8BAAsB,eAAErlB,K,GAEhD,C,iDCjBe,SAASklB,EACpBL,EACAC,GAQA,OANsB,IAAAxe,QAClBue,GACA,SAACmc,EAAOhc,GAAgB,OAAAgc,EAAQhc,EAAYC,YAAYtb,MAAhC,GACxB,GAGmBmb,EAAU6E,cAAcxkB,QAAO,SAACoP,GAAS,OAACA,EAAK4wB,gBAAN,IAAwBx7B,MAC5F,C,8FC4BA,SAAe,IAAA5E,OA7BX,SAAC,G,IAAE2N,EAAW,cAGd,OACI,uBAAKnN,UAAU,mDACX,gBAACuV,EAAA,EAAM,CAACC,cAAerI,EAAY/I,OAJpB,KAKV,SAAC,G,IAAEgM,EAAM,SAAEqF,EAAM,SAAO,OACrB,gCACI,wBACIzV,UAAW,+CACPoQ,EACM,iDACA,oDAGTjD,IAEHiD,GACE,qBAAGpQ,UAAU,0BAA0B8G,SAAS,EAAA6I,EAAA,GAAe8F,IAC3D,gBAAC9L,EAAA,EAAgB,CAACtP,GAAG,sBAbZ,IAqBzC,ICMA,QAjCiF,SAAC,G,IAC9E,IAAA+lB,6BAAAA,OAA4B,IAAG,GAAI,EACnCC,EAAM,SAEN,OACI,uBAAKrgB,UAAU,sCACVqgB,EAAOwf,UACJ,wBAAM7/B,UAAU,yBACZ,uBACI8/B,IAAKzf,EAAOlT,YACZnN,UAAU,qBACVs5B,IAAKjZ,EAAOwf,YAIxB,wBAAM7/B,UAAU,uBACXqgB,EAAOlT,YACPkT,EAAO0f,aACJ,wBAAM//B,UAAU,8BAA8BqgB,EAAO0f,aAExD1f,EAAO2f,uBAAyB5f,GAC7B,gBAAC,EAAmC,CAChCjT,YAAakT,EAAO2f,yBAIhC,wBAAMhgC,UAAU,wBACZ,gBAACigC,EAAA,EAAe,CAAClK,OAAQ1V,EAAO6f,QAIhD,C,mGClCA,SAAe,EAAA/qB,EAAA,IANwB,WAAM,OACzC,uBAAK5M,OAAO,KAAK6M,QAAQ,YAAYwJ,MAAM,KAAKvJ,MAAM,8BAClD,wBAAMC,EAAE,0HAF6B,ICM7C,SAAe,EAAAH,EAAA,IANqB,WAAM,OACtC,uBAAK5M,OAAO,KAAK6M,QAAQ,YAAYwJ,MAAM,KAAKvJ,MAAM,8BAClD,wBAAMC,EAAE,qGAF0B,ICQ1C,IAAY6qB,GAAZ,SAAYA,GACR,gBACA,cACA,oBACA,mBACH,CALD,CAAYA,IAAAA,EAAS,KAgDrB,QA1B6C,SAAC,G,IAC1Ch1B,EAAmB,sBACnB/U,EAAQ,WACRyoB,EAAI,OACJjS,EAAM,SACNnS,EAAI,OACF,OACF,uBACIuF,UAAW,IACP,WACAmL,EACA,CAAE,iBAAkB1Q,IAAS0lC,EAAU3pB,OAAS/b,GAChD,CAAE,kBAAmBA,IAAS0lC,EAAUrmC,OACxC,CAAE,oBAAqBW,IAAS0lC,EAAUxF,SAC1C,CAAE,oBAAqBlgC,IAAS0lC,EAAUhO,UAC7C,YACUvlB,GAEX,uBAAK5M,UAAU,iCAAiC6e,GAjCxD,SAA2BpkB,GACvB,OAAQA,GACJ,KAAK0lC,EAAUrmC,MACf,KAAKqmC,EAAUhO,QACX,OAAO,gBAACrB,EAAA,EAAS,MAErB,KAAKqP,EAAUxF,QACX,OAAO,gBAAC,EAAW,MAEvB,KAAKwF,EAAU3pB,KACf,QACI,OAAO,gBAAC,EAAQ,MAE5B,CAoBgE4pB,CAAkB3lC,IAE1E,mCAAe,YAAYuF,UAAU,mCAAmCiV,KAAK,SACxE7e,GAfP,C,0DC7BMiqC,EAMAC,E,yCAMZ,SAASC,EACL17B,GAEQ,IAAA7E,EAAqD6E,EAAK,UAA/C27B,EAA0C37B,EAAK,YAAlCU,EAA6BV,EAAK,UAAvB6H,EAAkB7H,EAAK,KAAjBgI,EAAYhI,EAAK,QAElE,OAAO,IACH,SACA7E,EACA,CAAE,kBAAmB6M,IAAYwzB,EAAc3wB,SAC/C,CAAE,mBAAoB7C,IAAYwzB,EAAcvzB,WAChD,CAAE,iBAAkBD,IAAYwzB,EAAcI,QAC9C,CAAE,gBAAiB/zB,IAAS4zB,EAAWvP,OACvC,CAAE,eAAgBrkB,IAAS4zB,EAAW3zB,MACtC,CAAE,gBAAiBD,IAAS4zB,EAAWI,OACvC,CAAE,eAAgBF,GAClB,CACI,kCACI3zB,IAAYwzB,EAAc3wB,SAAW7C,IAAYwzB,EAAcI,QAEvE,CAAE,oCAAqC5zB,IAAYwzB,EAAcvzB,WACjE,CAAE,aAAcvH,GAExB,EAlCA,SAAY86B,GACR,oBACA,wBACA,iBACH,CAJD,CAAYA,IAAAA,EAAa,KAMzB,SAAYC,GACR,gBACA,cACA,eACH,CAJD,CAAYA,IAAAA,EAAU,KAqDtB,QAvB+C,SAAC,GAC5C,IAAAlqC,EAAQ,WACR4J,EAAS,YACTyP,EAAQ,WACR+wB,EAAW,cACXj7B,EAAS,YACTmH,EAAI,OACJE,EAAM,SACNnS,EAAI,OACJoS,EAAO,UACJnF,GAAI,cAVqC,gGAW1C,OACF,2CACQA,EAAI,CACR1H,UAAWugC,EAAa,CAAEvgC,UAAS,EAAEwgC,YAAW,EAAEj7B,UAAS,EAAEmH,KAAI,EAAEG,QAAO,IAAG,YAClED,EACX6C,SAAUA,GAAYlK,EACtB9K,KAAMA,GAAQ,WAEbrE,E,mHChBHuqC,GAAiD,IAAAnhC,OACnD,SAAC,G,IAAE2L,EAAmB,sBAAE+pB,EAAS,YAAEr1B,EAAK,QAAEqR,EAAI,OAAEtB,EAAQ,WAAEzK,EAAM,SAAEyH,EAAM,SAC9DsD,GAAQ,IAAA5Z,UACV,WAAM,OACF,gBAACsqC,EAAe,CACZ1L,UAAWA,EACXr1B,MAAOA,EACPqR,KAAMA,EACNtB,SAAUA,EACVzK,OAAQA,GANV,GASN,CAACtF,EAAOqR,EAAMtB,EAAUslB,EAAW/vB,IAGvC,OACI,gBAAC,IAAkB,CACfgG,oBAAqBA,EACrB01B,UAAU,IAAAC,OAAM5vB,EAAKic,OAAQttB,EAAMoB,MACnC2L,OAAQA,GAEPsD,EAGb,IACA,SACI,EACA,GADE,IAAM6wB,EAAQ,OAASC,EAAS,QAAKvf,GAAS,cAAhD,kBACQwf,EAAQ,OAASC,EAAS,QAAKC,GAAS,cAAhD,kBAEA,WAAa1f,EAAW0f,IACxB,IAAaJ,EAAUE,IACvB,IAAaD,EAAWE,E,IAQhC,2B,8CA6BA,QA7B8B,oBAC1B,YAAA1f,mBAAA,SAAmB,G,IAASwf,EAAS,QAC3B,EAGF3kC,KAAKwI,MAFInM,EAAK,cACd,IAAAkX,SAAAA,OAAQ,IAAG,IAAA7I,KAAI,IAEK,IAAAyxB,QAAO9/B,GAASA,EAAM0oC,UAAY1oC,OAC9B,IAAA8/B,QAAOwI,EAAUtoC,OACvCsoC,EAAUtoC,MAAM0oC,UAChBJ,EAAUtoC,QAGZkX,EAASlX,EAEjB,EAEA,YAAAyM,OAAA,WACU,MAAyC9I,KAAKwI,MAA5C,IAAAqwB,UAAAA,OAAS,IAAG,UAAO,EAAEr1B,EAAK,QAAEsF,EAAM,SAE1C,OAAIA,EACQA,EAAe9I,KAAKwI,OAGP,iBAAdqwB,GACA,IAAAh4B,eAAcg4B,EAAkBr1B,IAGpC,IAAA3C,eAAcg4B,EAAkB74B,KAAKwI,MAChD,EACJ,EA7BA,CAA8B,EAAAyY,WA+B9B,SAAe,IAAA9d,OAnGgD,SAAC,GAC5D,IAAA2L,EAAmB,sBACnBnL,EAAS,YACTk1B,EAAS,YACT/vB,EAAM,SACNyH,EAAM,SACNgD,EAAQ,WACLlI,GAAI,cAPqD,8EAStD25B,GAAmB,IAAAv5B,cACrB,SAACjD,GAAsB,OACnB,gBAAC87B,GAAU,iBACH97B,EAAK,CACTsG,oBAAqBA,EACrBnL,UAAWA,EACXk1B,UAAWA,EACXtlB,SAAUA,EACVzK,OAAQA,EACRyH,OAAQA,IARO,GAWvB,CAACzB,EAAqBnL,EAAWk1B,EAAW/vB,EAAQyH,EAAQgD,IAGhE,OAAO,gBAAC,EAAA0xB,OAAK,iBAAK55B,EAAI,CAAEvC,OAAQk8B,IACpC,G,yGCaA,SAAe,IAAA7hC,OAzCsD,SAAC,G,IAClE2L,EAAmB,sBACnB,IAAAsE,SAAAA,OAAQ,IAAG,GAAK,EAChBO,EAAY,eACZJ,EAAQ,WACR3O,EAAI,OACJ5G,EAAE,KACFuS,EAAM,SAEA+H,GAAc,IAAA7M,cAChB,SAAC,G,IAAEjI,EAAK,QAAmB,OACvB,gCACI,gBAAC,KAAa,iBACNA,EAAK,CACTuT,UAAWvT,EAAMnH,MACjB+W,SAAUA,EACVpV,GAAIA,GAAMwF,EAAMoB,KAChBE,MAAO6O,EACPpD,OAAQA,KAGZ,gBAAC,IAAc,CACX20B,QAAS,UAAGlnC,QAAAA,EAAM4G,EAAI,wBACtBA,KAAMA,EACN2L,OAAQ,WAAG,IAAA6pB,WAAUx1B,GAAK,0BAdX,GAkB3B,CAACwO,EAAUpV,EAAI2V,EAAc/O,IAGjC,OACI,gBAAC,IAAc,CACXkK,oBAAqBA,EACrBlK,KAAMA,EACN2O,SAAUA,EACVzK,OAAQwP,GAGpB,G,sGCrBA,SAvBsB,IAAA6sB,aAClB,SACI,EACA3f,GADE,IAAA1W,EAAmB,sBAAEhK,EAAK,QAAE9G,EAAE,KAAEuS,EAAM,SAAKlF,GAAI,cAAjD,+CAEC,OACD,gCACI,gBAAC,KAAK,iBACEA,EAAI,CACR1H,UAAW,IACP,gBACA,kCACAmL,GAEJ9Q,GAAIA,EACJwnB,IAAKA,EACLjV,OAAQA,EACRnS,KAAK,cAET,gBAAC,IAAK,CAAC6Y,QAASjZ,GAAK8G,G,0MCMjC,SAxBmB,IAAAqgC,aACf,SACI,EACA3f,GADE,IAAA1W,EAAmB,sBAAEhK,EAAK,QAAEzI,EAAK,QAAE0a,EAAO,UAAE/Y,EAAE,KAAKqN,GAAI,cAAzD,wDAEC,OACD,gCACI,gBAACyL,EAAA,GAAK,iBACEzL,EAAI,CACR0L,QAASA,EACTpT,UAAW,IACP,aACA,+BACAmL,GAEJ9Q,GAAIA,EACJwnB,IAAKA,EACLpnB,KAAK,QACL/B,MAAOA,KAEX,gBAAC2a,EAAA,EAAK,CAACC,QAASjZ,GAAK8G,G,8BC6JjC,SAAe,IAAA3B,OAAK,EAAAiiC,EAAA,IAlKuD,SAAC,GACrD,sBAAnB,IACA9+B,EAAI,OACJP,EAAS,YACT/H,EAAE,KACF4G,EAAI,OACJ,IAAA2O,SAAAA,OAAQ,IAAG,IAAA7I,KAAI,EACfgB,EAAO,UACPwR,EAAW,cACX9K,EAAsB,yBACtB/V,EAAK,QACFgP,GAAI,cAXiE,4HAahEg6B,EAAgB/+B,EAAI,YACtBg/B,GAAmB,IAAA75B,cACrB,SAAC85B,EAAW/2B,GACR,OAAA+E,GAAS,gCACF/E,GAAK,CACR8L,OAAQ,CACJ1V,KAAI,EACJvI,MAAOkpC,KAJf,GAOJ,CAAChyB,EAAU3O,IAGf,OAAQmB,GACJ,KAAKy/B,EAAA,EAAqBC,SACtB,OACI,gCACI,uBACI9hC,UAAW,IACP,CAAE,oBAAqByO,GACvB,CAAE,0BAA2BA,KAEjC,gBAACszB,EAAA,EAAe,OAEpB,2CACSr6B,EAAY,CACjB1H,UAAW,IACP,CAAE,kBAAmByO,GACrB,6CACH,YACU,UAAGpU,EAAE,WAChBA,GAAIA,EACJ4G,KAAMA,EACN2O,SAAUA,EACVlX,MAAiB,OAAVA,EAAiB,GAAKA,IAE5B6gB,GAAe,0BAAQ7gB,MAAM,IAAI6gB,GACjCxR,GACGA,EAAQhC,KAAI,SAAC,G,IAAE5E,EAAK,QAAS6gC,EAAW,QAAO,OAC3C,0BAAQ97B,IAAK87B,EAAatpC,MAAOspC,GAC5B7gC,EAFsC,MASnE,KAAK0gC,EAAA,EAAqB1K,MACtB,OAAKpvB,GAAYA,EAAQ3D,OAKrB,gCACK2D,EAAQhC,KAAI,SAAC,G,IAAE5E,EAAK,QAAS6gC,EAAW,QAAO,OAC5C,gBAAC,GAAU,iBACHt6B,EAAI,CACR0L,QAAS4uB,IAAgBtpC,EACzB2B,GAAI,UAAGA,EAAE,YAAI2nC,GACb97B,IAAK87B,EACL7gC,MAAOA,EACPF,KAAMA,EACN2O,SAAUA,EACVhD,OAAQ,UAAGvS,EAAE,YAAI2nC,EAAW,UAC5BtpC,MAAOspC,IAViC,KAL7C,KAqBf,KAAKH,EAAA,EAAqBh/B,SACtB,OAAKkF,GAAYA,EAAQ3D,OAKrB,gCACK2D,EAAQhC,KAAI,SAAC,G,IAAE5E,EAAK,QAAS6gC,EAAW,QAAO,OAC5C,gBAACC,EAAA,GAAa,iBACNv6B,EAAI,CACR0L,UAASvN,MAAMq8B,QAAQxpC,IAASA,EAAMkR,SAASo4B,GAC/C3nC,GAAI,UAAGA,EAAE,YAAI2nC,GACb97B,IAAK87B,EACL7gC,MAAOA,EACPF,KAAMA,EACN2O,SAAUA,EACVhD,OAAQ,UAAGvS,EAAE,YAAI2nC,EAAW,aAC5BtpC,MAAOspC,IAViC,KAL7C,KAqBf,KAAKH,EAAA,EAAqBl/B,KACtB,OACI,gBAAC,KAAe,iBACP+E,EAAY,CACjBqI,aAAa,MAIboyB,kBAAkB,mCAClBniC,UAAW,IAAW,0CAA2C,CAC7D,iBAAkByO,IAEtB2zB,WAAYV,EACZW,QAAS36B,EAAK5F,IAAM,IAAIc,KAAK,UAAG8E,EAAK5F,IAAG,oBAAgBhM,EACxDwsC,QAAS56B,EAAK7F,IAAM,IAAIe,KAAK,UAAG8E,EAAK7F,IAAG,oBAAgB/L,EACxDmL,KAAMA,EACN2O,SAAU+xB,EACVY,gBAAiBb,EAAYlQ,cAC7BgR,gBAAgB,mCAChBC,UAAU,IAAAjK,QAAO9/B,GAASA,OAAQ5C,KAI9C,KAAK+rC,EAAA,EAAqBa,UACtB,OACI,gBAACC,EAAA,GAAQ,iBACAj7B,EAAY,CACjBrN,GAAIA,EACJoU,uBAAwBA,EACxBxN,KAAMA,EACN2O,SAAUA,EACVhD,OAAQ,UAAGvS,EAAE,SACbI,KAAM2H,EACN1J,MAAOA,KAInB,QACI,OACI,gBAACoX,EAAA,GAAS,iBACFpI,EAAI,CACRrN,GAAIA,EACJoU,uBAAwBA,EACxBxN,KAAMA,EACN2O,SAAUA,EACV2J,YAAaA,EACb3M,OAAQ,UAAGvS,EAAE,YACT+H,IAAcy/B,EAAA,EAAqBt0B,SAAW,WAAa,QAE/D9S,KAAM2H,EACN1J,MAAOA,KAI3B,K,0BC7HA,SAAe,IAAA8G,OAlD4D,SAAC,G,IACxEoN,EAAM,SACNg2B,EAAa,gBACbC,EAAc,iBAERC,GAAuB,IAAAh7B,cACzB,SAAC+C,GACGA,EAAM8E,iBACNizB,GACJ,GACA,CAACA,IAGCG,GAAwB,IAAAj7B,cAC1B,SAAC+C,GACGA,EAAM8E,iBACNkzB,GACJ,GACA,CAACA,IAGL,OACI,sBAAI7iC,UAAU,2BACV,sBAAIA,UAAU,0BACV,gBAAC2J,EAAA,EAAgB,CAACtP,GAAG,oBAGzB,sBAAI2F,UAAU,0BACV,iCACe,UAAG4M,EAAM,uBACpBvP,KAAK,IACLyJ,QAASg8B,GAET,gBAACn5B,EAAA,EAAgB,CAACtP,GAAG,yBAI7B,sBAAI2F,UAAU,0BACV,iCACe,UAAG4M,EAAM,wBACpBvP,KAAK,IACLyJ,QAASi8B,GAET,gBAACp5B,EAAA,EAAgB,CAACtP,GAAG,0BAKzC,ICtCA,IAAM2oC,EAAyE,SAAC,G,IAC5E,IAAA9xB,KAAQlT,EAAM,SAAEmvB,EAAM,SACtB9yB,EAAE,KACF8G,EAAK,QACLF,EAAI,OACJ,IAAA2O,SAAAA,OAAQ,IAAG,IAAA7I,KAAI,EACfgB,EAAO,UACP3J,EAAI,OACJ6kC,EAAM,SAEAC,GAAkB,IAAAp7B,cAAY,WAChC,IAAMq7B,GAA0B,IAAArC,OAAM9iC,EAAQiD,IAAS,IAEvD,IAAAmiC,YACIr7B,EAAQhC,KAAI,SAAC,GAAc,OAAP,OAAO,IAC3Bo9B,GACFvmC,SAAQ,SAACymC,GAAQ,OAAAjlC,EAAKilC,EAAL,IAEnBzzB,GAAS,IAAAkxB,OAAM9iC,EAAQiD,GAC3B,GAAG,CAACA,EAAM2O,EAAU7H,EAAS3J,EAAMJ,IAE7BslC,GAAmB,IAAAx7B,cAAY,aACD,IAAAg5B,OAAM9iC,EAAQiD,IAAS,IAEzCrE,SAAQ,WAAM,OAAAqmC,EAAO,EAAP,IAE5BrzB,GAAS,IAAAkxB,OAAM9iC,EAAQiD,GAC3B,GAAG,CAACA,EAAM2O,EAAUqzB,EAAQjlC,IAEtBulC,GAAoB,IAAAz7B,cACtB,SAAC+C,GACG,IAAMs4B,GAA0B,IAAArC,OAAM9iC,EAAQiD,IAAS,GACjD,EAAqB4J,EAAM8L,OAAzBje,EAAK,QAAS,UAGlB0F,EAAK1F,GAELuqC,EAAOE,EAAch/B,QAAQzL,IAGjCkX,GAAS,IAAAkxB,OAAM9iC,EAAQiD,GAC3B,GACA,CAACA,EAAM2O,EAAUxR,EAAM6kC,EAAQjlC,IAGnC,OACI,gBAACwlC,EAAA,EAAkB,CAAC3C,UAAU,IAAAC,OAAM3T,EAAQlsB,KAAS,IAAA6/B,OAAM3T,EAAQlsB,GAAMmD,QACpEjD,EAEA4G,EAAQ3D,OAAS,GACd,gBAAC,EAAoB,CACjBw+B,cAAeM,EACfL,eAAgBS,EAChB12B,OAAQvS,IAIhB,gBAAC,EAAY,CACT+H,UAAWy/B,EAAA,EAAqBh/B,SAChCxI,GAAIA,EACJ4G,KAAMA,EACN2O,SAAU2zB,EACVx7B,QAASA,EACTrP,OAAO,IAAAooC,OAAM9iC,EAAQiD,IAAS,KAGlC,gBAACwiC,EAAA,EAAc,CACXlC,QAAS,UAAGlnC,QAAAA,EAAM4G,EAAI,wBACtBA,KAAMA,EACN2L,OAAQ,WAAG,IAAA6pB,WAAUx1B,GAAK,0BAI1C,EA0BA,SAAe,IAAAzB,OAxBgE,SAAC,G,IAC5EnF,EAAE,KACF8G,EAAK,QACLF,EAAI,OACJ2O,EAAQ,WACR7H,EAAO,UAED4M,GAAc,IAAA7M,cAChB,SAAC47B,GAAuC,OACpC,gBAACV,GAAsB,eACnB3oC,GAAIA,EACJ8G,MAAOA,EACPF,KAAMA,EACN2O,SAAUA,EACV7H,QAASA,IACL,IAAA47B,MAAKD,EAAa,CAAC,OAAQ,MAAO,OAAQ,YAPd,GAUxC,CAACrpC,EAAI8G,EAAOF,EAAM2O,EAAU7H,IAGhC,OAAO,gBAAC,EAAA67B,WAAU,CAAC3iC,KAAMA,EAAMkE,OAAQwP,GAC3C,I,eCqCA,SAAe,IAAAnV,OA7HoD,SAAC,G,IAChE,IAAAK,MACIuC,EAAS,YACT3H,EAAI,OACJopC,EAAM,SACN5iC,EAAI,OACG6iC,EAAU,QACjB5iC,EAAQ,WACR6G,EAAO,UACPjG,EAAG,MACHD,EAAG,MACHkiC,EAAS,YAEbv0B,EAAe,kBACfI,EAAQ,WACR2J,EAAW,cACXyqB,EAAO,UACP10B,EAAY,eACZnO,EAAK,QACLoO,EAAU,aACVd,EAAsB,yBAEhBw1B,EAAeD,GAAW/iC,EAC1BkB,EAAYqN,EAAkB,UAAGA,EAAe,YAAIvO,GAASA,EAC7DijC,EAAoCpmC,QACtC2Q,KACK,IAAA7E,UAAS,CAAC,OAAQ,WAAY,WAAY,OAAQ,aAAcxH,KAC5DA,IAEP+hC,GAAiB,IAAA7tC,UACnB,WAAM,OACF,gBAAC+c,EAAA,EAAK,CACFC,QAAS2wB,EACT5pC,GAAI,UAAG4pC,EAAY,UACnBx1B,uBAAwBy1B,GAEvB/iC,GAAS2iC,GACR5iC,GACE,gCACK,IACD,yBAAOlB,UAAU,sCACb,gBAAC2J,EAAA,EAAgB,CAACtP,GAAG,2BAXnC,GAiBN,CAAC4pC,EAAcH,EAAY5iC,EAAUgjC,EAAmC/iC,IAGtEijC,GAAuB,IAAA9tC,UAAQ,WACjC,MAAkB,SAAd8L,EACa,YAAT3H,EACOonC,EAAA,EAAqBwC,QAG5B,IAAAz6B,UAAS3I,EAAM,WAAY,IAAA2I,UAAS3I,EAAM,OACnC4gC,EAAA,EAAqByC,UAGzBT,EAAShC,EAAA,EAAqBt0B,SAAWs0B,EAAA,EAAqBziB,KAGlEhd,CACX,GAAG,CAACA,EAAW3H,EAAMopC,EAAQ5iC,IAEvB4O,GAAc,IAAA/H,cAChB,SAAC,G,IAAEjI,EAAK,QAA2B,OAC/B,gBAAC,GAAY,iBACLA,EAAK,mBACQ,UAAGokC,EAAY,kBAAUA,EAAY,wBACtDl0B,aAAcT,EACdlN,UAAWgiC,EACX/pC,GAAI4pC,EACJx1B,uBAAwBy1B,EACxBpiC,IAAKA,EACLiiC,UAAWA,QAAajuC,EACxB+L,IAAKA,EACLkG,QAASA,GAAWA,EAAQgH,MAC5BwK,YAAaA,GAAgBxR,GAAWA,EAAQw8B,YAChDC,KAAMz8B,GAAYA,EAAgBy8B,OAbP,GAgBnC,CACIP,EACAniC,EACAiiC,EACAliC,EACAkG,EACAwR,EACA6qB,EACA90B,IAIR,OACI,uBACItP,UAAW,IACP,qBACA,CAAE,sBAAuBkkC,GACzB30B,IAGHnN,IAAcy/B,EAAA,EAAqBh/B,SAChC,gBAAC,EAAsB,CACnBxI,GAAI4pC,EACJ9iC,MAAOgjC,EACPljC,KAAMkB,EACNyN,SAAUA,EACV7H,QAAUA,GAAWA,EAAQgH,OAAU,KAG3C,gBAACkB,EAAA,EAAS,CACN5V,GAAI4pC,EACJ/zB,MAAOL,EACPpB,uBAAwBy1B,EACxB/iC,MAAOgjC,EACPljC,KAAMkB,EACNyN,SAAUA,IAK9B,G,kBC1JA,IAAKiyB,E,iBAAL,SAAKA,GACD,kBACA,sBACA,kBACA,sBACA,sBACA,wBACA,cACA,gBACA,aACH,CAVD,CAAKA,IAAAA,EAAoB,KAYzB,S,gFCeA,SAlBiB,IAAAL,aACb,SACI,EACA3f,GADE,IAAA1W,EAAmB,sBAAE/U,EAAQ,WAAE4J,EAAS,YAAE6U,EAAM,SAAEjI,EAAM,SAAKlF,GAAI,cAAnE,kEAEC,OACD,6CACQA,EAAI,CACR1H,UAAWA,GAAa,IAAW,gBAAiBmL,GAAoB,YAC7DyB,EACXiV,IAAKA,IAEJhN,EAED,uBAAK7U,UAAU,aAAa5J,G,0GCsDxC,SAAe,IAAAoJ,OAjE4B,SAAC,GAAE,IAAAQ,EAAS,YAAE4M,EAAM,SAAKlF,GAAI,cAA5B,wBAClCma,GAAM,IAAA4iB,QAAO,CAAE1jB,cAAc,IAAAC,eAE7B0jB,EAAe,W,QACTrhB,EAAYxB,EAAIwB,QAAQtC,aAAY,QAE5C,GAAKsC,EAAL,CAIA,IAMMshB,EAAmBthB,EAAQ1nB,cANL,CACxB,2BACA,8BACA,6BAG4E2I,KAAK,OAErF,GAAIqgC,EAAkB,CAClBA,EAAiBzhB,MAAM,CAAE0hB,eAAe,IAExC,IACiC,QAA7B,EAAAD,EAAiBE,oBAAY,SAAEC,eAAe,CAC1CC,SAAU,SACVC,MAAO,SACPC,OAAQ,U,CAEd,SAC+B,QAA7B,EAAAN,EAAiBE,oBAAY,SAAEC,gB,GAG3C,EAEMI,GAAsB,IAAAp9B,cACxB,IAAAq9B,aAAW,SAACC,GACR,OAAO,WACHA,GAAa,GAGbrgC,YAAW,WAAM,OAAA2/B,GAAA,GACrB,CACJ,IACA,CAACA,IAGC5iB,GAAgB,IAAAha,cAClB,IAAAq9B,aAAW,SAAC,G,IAAEC,EAAY,eACtB,OACI,uBAAKvjB,IAAKA,EAAIwB,QAAQtC,cAClB,gBAAC,EAAA7R,MAAU,iBACHxH,EAAI,CACR1H,UAAWA,EAAS,YACT4M,EACXy4B,YAAU,EACVC,gBAAiBJ,EAAoBE,MAIrD,KAAE,oBACDplC,EAAWklC,EAAqBt4B,IAAW,IAAA5O,QAAO0J,IAAK,IAG5D,OAAO,gBAAC,KAAY,KAAEoa,EAC1B,G,8FCHA,SAAe,IAAAtiB,OAnDsC,SAAC,G,IAClD2L,EAAmB,sBACnB6E,EAAY,eACZ7O,EAAK,QACLyO,EAAQ,WACRkB,EAAM,SACNZ,EAAK,QACLjP,EAAI,OACJ5G,EAAE,KACFoU,EAAsB,yBAEhBkG,GAAc,IAAA7M,cAChB,SAACjD,GAAU,OACP,gCACK4J,GAA0ByB,EAAMrL,GAEhC1D,IAA2B,mBAAVA,EAAuBA,EAAMF,GAAQE,GACtD6O,IAAiB7O,GACd,gBAAC,IAAK,CACFmS,QAASrS,EACT5G,GAAI,UAAGA,QAAAA,EAAM4G,EAAI,UACjBwN,uBAAwBA,GAEvBuB,IAIPvB,GAA0ByB,EAAMrL,GAElC,gBAAC,IAAc,CACX08B,QAAS,UAAGlnC,QAAAA,EAAM4G,EAAI,wBACtBA,KAAMA,EACN2L,OAAQ,WAAG,IAAA6pB,WAAUx1B,GAAK,0BAG7B6P,EAvBE,GA0BX,CAAC3P,EAAO6O,EAAc3V,EAAI6V,EAAOjP,EAAM6P,EAAQrC,IAGnD,OACI,gBAAC,IAAc,CACXtD,oBAAqBA,EACrBlK,KAAMA,EACN2O,SAAUA,EACVzK,OAAQwP,GAGpB,G,+EChCA,SAAe,IAAAnV,OAxBwD,SAAC,G,IACpE2L,EAAmB,sBACnB/U,EAAQ,WACR4J,EAAS,YACT6gC,EAAQ,WACRj0B,EAAM,SACJ,OACF,gBAAC,KAAY24B,SAAQ,MAChB,SAAC,G,IAAEC,EAAW,cAAO,OAClB,uBACIxlC,UACIA,GACA,IAAW,aAAcmL,EAAqB,CAC1C,oBAAqB01B,GAAY2E,IACnC,YAEK54B,GAEVxW,EAVa,GAFxB,G,uECqBN,SAAe,IAAAoJ,OA7BgD,SAAC,G,IAAEyB,EAAI,OAAE2L,EAAM,SAAE20B,EAAO,UAC7EkE,GAAgB,IAAA39B,cAClB,SAAClE,GAAoB,OACjB,sBAAI5D,UAAU,oBAAmB,YAAY4M,GACzC,sBAAI5M,UAAU,oBACV,qCACc,SACVA,UAAU,qBACVsT,QAASrS,EACT5G,GAAIknC,EACJtsB,KAAK,SAEJrR,IAVI,GAerB,CAAC29B,EAAStgC,EAAM2L,IAGpB,OACI,gBAAC,KAAY24B,SAAQ,MAChB,SAAC,GACE,OADW,eACI,gBAAC,EAAAG,aAAY,CAACzkC,KAAMA,EAAMkE,OAAQsgC,GAAjD,GAIhB,G,2FCJA,SAzBc,IAAAjE,aACV,SACI,EACA3f,GADE,IAAA7hB,EAAS,YAAE4M,EAAM,SAAE2M,EAAW,cAAEtY,EAAI,OAAEwN,EAAsB,yBAAK/G,GAAI,cAAvE,sEAKA,OACI,2EAEWA,GAAI,CACP1H,UAAW,IAAWA,EAAW,CAC7B,iBACIyO,KAA2B,IAAA7E,UARP,CAAC,eAAgB,kBAQgC3I,KAE7EA,KAAI,iBAEG2L,EACX2M,YAAa9K,EAAyB,IAAM8K,EAC5CsI,IAAKA,IAGjB,G,gFCAJ,QAtB6C,SAAC,GAC1C,IAAAzrB,EAAQ,WACR4J,EAAS,YACT+U,EAAM,SACNnI,EAAM,SACN6B,EAAsB,yBACnB/G,GAAI,cANmC,qEAOxC,OACF,0CACSA,EAAI,CACT1H,UAAY,IACR,CAAE,iBAAkByO,GACpBzO,GAAa,aACb,CAAE,YAAa+U,GACf,gCACH,YACWnI,IAEVxW,E,iFCCV,QApB+C,SAAC,GAC5C,IAAAA,EAAQ,WACR4J,EAAS,YACT+U,EAAM,SACNnI,EAAM,SACHlF,GAAI,cALqC,4CAM1C,OACF,2CACQA,EAAI,CACR1H,UAAW,IACPA,GAAa,cACb,CAAE,YAAa+U,GACf,CAAE,sCAAuCA,IAC5C,YACUnI,IAEVxW,E,iFCST,SAxBiB,IAAAorC,aACb,SACI,EACA3f,GADE,IAAA1W,EAAmB,sBAAEyB,EAAM,SAAE5M,EAAS,YAAEyO,EAAsB,yBAAK/G,GAAI,cAAzE,uEAGA,OACI,6CACQA,EAAI,CACR1H,UACIA,GACA,IACI,CAAE,oBAAqByO,GACvB,aACA,+BACAtD,GACH,YAEMyB,EACXiV,IAAKA,IAGjB,G,2FCSJ,SA3BkB,IAAA2f,aACd,SACI,EAOA3f,GANI,IAAA1W,EAAmB,sBACnBsD,EAAsB,yBACtBk3B,EAAa,gBACb,IAAAlrC,KAAAA,OAAI,IAAG,SAAM,EACViN,GAAI,cALX,yEAQC,OACD,gBAAC,KAAK,iBACEA,EAAI,CACR1H,UAAW,IACP,aACA,+BACA,CAAE,oBAAqB2lC,GACvB,CAAE,sCAAuCA,GACzCx6B,GAEJsD,uBAAwBA,EACxBoT,IAAKA,EACLpnB,KAAMA,I,oDCflB,SAAe,E,SAAA,IAfqB,WAAM,OACtC,yCACoB,oBAAmB,YACzB,YACV8N,OAAO,KACP0M,KAAK,MACLG,QAAQ,YACRwJ,MAAM,KACNvJ,MAAM,8BAEN,yBAAOhb,GAAG,qBAAmB,QAC7B,wBAAMib,EAAE,mCAAmCxP,KAAK,UAAUzL,GAAG,SAX3B,G,kDCM1C,SAAe,E,SAAA,IAN4B,WAAM,OAC7C,uBAAKkO,OAAO,KAAK6M,QAAQ,YAAYwJ,MAAM,KAAKvJ,MAAM,8BAClD,wBAAMC,EAAE,iDAFiC,G,kDCMjD,SAAe,E,SAAA,IANsB,WAAM,OACvC,uBAAK/M,OAAO,KAAK6M,QAAQ,YAAYwJ,MAAM,KAAKvJ,MAAM,8BAClD,wBAAMC,EAAE,qGAF2B,G,+CCD/BswB,E,yCAaG,SAASzwB,EACpBsa,GAEA,OAAO,IAAAjwB,OAAK,SAAC,GAAE,IAAA2L,EAAmB,sBAAEuB,EAAI,OAAEE,EAAM,SAAKlF,GAAI,cAA5C,yCAAmD,OAC5D,uBACI1H,UAAW,IACP,OACAmL,EACAuB,IAASk5B,EAAS7U,MAAQ,cAAgB,KAC1CrkB,IAASk5B,EAASlF,MAAQ,cAAgB,KAC1Ch0B,IAASk5B,EAASC,OAAS,eAAiB,MAC/C,YACUj5B,GAEX,gBAAC6iB,GAAiB,iBAAM/nB,I,GAGpC,EA9BA,SAAYk+B,GACR,oBACA,gBACA,kBACA,eACH,CALD,CAAYA,IAAAA,EAAQ,I,kFCUdE,EAAc,SAACv8B,GAAiB,MAAe,mBAAfA,EAAMtI,IAAN,EAetC,QAb6D,SAAC,G,IAAEurB,EAAe,kBAAEp2B,EAAQ,WAAO,OAC5F,gBAAC44B,EAAA,EAAa,CACV+W,SACI,uBAAK/lC,UAAU,uBACX,gBAAC2J,EAAA,EAAgB,CAACtP,GAAG,mCAG7BuF,OAAQkmC,GAER,gBAAC,EAAAE,SAAQ,CAACD,SAAUvZ,GAAmB,gBAACzb,EAAA,EAAc,CAACxL,WAAS,KAAMnP,GATkB,C,6DC0BhG,QA/B+D,SAAC,G,IAC5DA,EAAQ,WACRkP,EAAsB,yBACtB2gC,EAAyB,4BACzB1gC,EAAS,YAET,OAAID,GAA0B2gC,EAEtB,gCACI,gBAAC,IAAc,CAAC1gC,UAAWA,IAC1B0gC,GAA6B1gC,EAAY,KACtC,uBACI/J,MAAO,CACH8d,QAAShU,GAA0BC,EAAY,YAASzP,IAG3DM,IAQjB,uBAAK4J,UAAU,4BACV5J,EACAmP,GAAa,uBAAKvF,UAAU,6CAGzC,C,kDCrBA,SAAe,IAAAR,OAZgD,SAAC,GAC5D,OADuE,YAMnE,uBAAKQ,UAAU,0CAA0CxE,MAAO,CAAE+M,OAAQ,MACtE,uBAAKvI,UAAU,8CALZ,IAQf,G,yHCNA,SAAe,E,SAAA,IANsB,WAAM,OACvC,uBAAKuI,OAAO,KAAK6M,QAAQ,YAAYwJ,MAAM,KAAKvJ,MAAM,8BAClD,wBAAMC,EAAE,0GAF2B,ICgG3C,QA5E6C,SAAC,GAC1C,IAAAlf,EAAQ,WACR,IAAA8vC,iBAAAA,OAAgB,IAAG,UAAO,EAC1Bp1B,EAAM,SACNY,EAAM,SACNy0B,EAAyB,4BACzB30B,EAAuB,0BACvBC,EAAwB,2BACxB,IAAAlB,eAAAA,OAAc,IAAG,IAAAxJ,KAAI,EACrB,IAAA6K,sBAAAA,OAAqB,IAAG,GAAK,EAC1BlK,GAAI,cAVmC,6KAYpC0+B,GAAc,IAAAt+B,cAChB,SAAC+C,GACG0F,EAAe1F,EACnB,GACA,CAAC0F,IAGL,OACI,gBAAC,KAAU,iBACH7I,EAAI,CACR2+B,aAAa,EACbC,kBAAkB,kBAClBtmC,UAAW,CACPumC,KAAM,IACF,yCACA90B,GAEJ+0B,UAAW,mBACXC,YAAa,sBAEjBC,eAAgB,IAChBn2B,eAAgBA,EAChBo2B,iBAAkB,CACdJ,KAAM,eACNC,UAAW,0BACXC,YAAa,6BAEjBG,kBAAkB,EAClBC,2BAA2B,IAE3B,uBAAK7mC,UAAW,IAAW,eAAgBmmC,IACtCz0B,EAEAE,GAEG,qBACI5R,UAAU,cAAa,YACb,qBACV3C,KAAK,IACLyJ,SAAS,EAAA6I,EAAA,GAAey2B,IAEvBF,GAAoB,wBAAMlmC,UAAU,aAAakmC,GAElD,gBAAC,EAAS,QAKtB,uBACIlmC,UAAW,IAAW,aAAcwR,GAAwB,YAClD,cAETpb,GAGJ0H,QAAQgT,IACL,uBAAK9Q,UAAU,eAAc,YAAW,gBACnC8Q,GAKrB,C,qEC9EA,QAZyD,SAAC,G,IAAE1a,EAAQ,WAAE+U,EAAmB,sBAAO,OAC5F,sBACInL,UAAW,IACP,wDACAmL,GACH,YACS,iBAET/U,EARuF,C,iFCH1F0wC,EAAU,CACZrJ,MAAO,QACPsJ,OAAQ,iCAA0B,IAAgB,QAStD,SAAe,IAAAvnC,OAN4E,SAAC,G,IACxFpJ,EAAQ,WAER,OAAO,gBAAC,IAAK,CAAC0wC,QAASA,GAAU1wC,EACrC,ICEA,SAAe,IAAAoJ,OAZwE,SAAC,G,IACpFpJ,EAAQ,WAER,OACI,gBAAC,EAAU,MACN,SAACiL,GACE,OAAOjL,EAASiL,EAAQ0lC,OAC5B,GAGZ,G,2CCbO,IAAMC,EAAmB,IACnBC,EAAyB,G,0DCStC,YACI,WAAYpiC,GAAZ,MACI,YAAMA,IAAM,K,OAeR,EAAA4Q,OAAiC,SAAC5K,GAC9B,IAAAuF,EAAW,EAAK7V,MAAK,OAE7BsQ,EAAM8E,iBAEN,EAAK3K,SAAS,CAAEoL,QAASA,GAC7B,EAnBI,EAAK7V,MAAQ,CAAE6V,SAAUvL,EAAM2Q,e,CACnC,CAmBJ,OAxBoC,oBAOhC,YAAArQ,OAAA,WAII,OAAO/O,EAHciG,KAAKwI,MAAK,UAGf,CACZuL,OAHe/T,KAAK9B,MAAK,OAIzBkb,OAAQpZ,KAAKoZ,QAErB,EASJ,EAxBA,C,SAAoC6H,U,6DCTrB,SAAS7E,EACpByuB,EACA5uB,GAEA,IAAM6uB,EAAc7gC,OAAO2d,iBAAiBijB,GAE5C,OAAO5uB,EAAWvX,QACd,SAAC0R,EAAQ20B,G,MAAiB,OAAC,gCACpB30B,KAAM,MACR20B,GAAeD,EAAYE,kBAAiB,IAAA5Q,WAAU2Q,IAAc,GAF/C,GAI1B,CAAC,EAET,C,kBCfe,SAASE,EAAYloB,GAChC,IAAMmoB,EAAM7rC,SAASwB,cAAc,OAEnCqqC,EAAIC,UAAYpoB,EAEhB,IAAMqoB,EAASF,EAAI5rC,cAAc,KAEjC,IAAK8rC,EACD,MAAO,GAGX,IAAMC,EAAiBH,EAAIC,UAAUzkC,MAAM0kC,EAAOE,WAElD,MAAO,CAACD,EAAe,GAAID,EAAOroB,KAAMsoB,EAAe,GAC3D,C,kCCZe,SAAS/3B,EAGtB/E,GACE,OAAO,SAACC,GACJA,EAAM8E,iBAEF/E,GACAA,EAAGC,EAEX,CACJ,C,iECmCA,QAjCA,uE,OAMI,EAAAtQ,MAA4B,CAAC,E,CAyBjC,QA/B4B,oBACjB,EAAAqtC,yBAAP,SAAgCr+B,GAC5B,MAAO,CAAEA,MAAK,EAClB,EAKA,YAAAs+B,kBAAA,SAAkBt+B,GACR,MAAkClN,KAAKwI,MAArC,IAAAjF,OAAAA,OAAM,IAAG,aAAM,UAAI,EAAEqvB,EAAM,SAEnC,IAAKrvB,EAAO2J,GACR,MAAMA,EAGN0lB,GACAA,EAAOpG,IAAItf,EAEnB,EAEA,YAAApE,OAAA,WACU,MAA8C9I,KAAKwI,MAAjDzO,EAAQ,WAAE2vC,EAAQ,WAAE,IAAAnmC,OAAAA,OAAM,IAAG,aAAM,UAAI,EAEvC2J,EAAUlN,KAAK9B,MAAK,MAE5B,OAAIgP,GAAS3J,EAAO2J,GACTw8B,GAAY,KAGhB3vC,CACX,EACJ,EA/BA,C,SAA4BknB,U,kBCT5B,IAAKwqB,E,iBAAL,SAAKA,GACD,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,iBACA,mBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,iBACA,iBACA,iBACA,kBACA,iBACH,CAzBD,CAAKA,IAAAA,EAAmB,KA4CxB,QAb2C,SAAC/pB,GAExB,IAAAuS,EAEZvS,EAAI,cADJgqB,EACAhqB,EAAI,WAER,SAV0B,SAACuS,GAC3B,OAAOA,KAAQwX,CACnB,CAQQE,CAAsB1X,IAASyX,GAAcD,EAAoBxX,GAKzE,C,wECtCe,SAAS7rB,EAIpB6qB,EACAvnB,GAEA,OAAO,SAA8B0nB,GAC3B,MAAqD1nB,GAAW,CAAC,EAA/D,IAAA3E,kBAAAA,OAAiB,IAAG,KAAE,EAAE,IAAA6kC,UAAAA,OAAS,IAAG,aAAM,UAAI,EAEhDvY,GAAqD,IAAAlwB,OAAK,SAACqF,GAAU,OACvE,gBAAC4qB,GAAiB,iBAAK5qB,GADgD,IAIrE8qB,EAAqB,SAAC9qB,GACxB,IAAMhG,GAAU,IAAAjF,YAAW01B,GACrB4Y,GAAgB,IAAA1R,QAAO33B,GAAS,SAACnG,EAAOwN,GAC1C,OAAA+hC,EAAUvvC,EAAOwN,EAAjB,IAGJ,IAAI,IAAAnG,SAAQmoC,GACR,OAAO,KAGX,IAAMnY,GAAc,gCAAKmY,GAAkBrjC,GAE3C,OAAO,gBAAC6qB,GAAuB,iBAAKK,GACxC,EAQA,OANI3sB,IACAusB,EAAmBK,YAAc,UAAG5sB,EAAiB,YACjDqsB,EAAkBO,aAAeP,EAAkBxuB,KAAI,MAIxD0uB,CACX,CACJ,C,0DCpCM/nB,GAAgB,IAAA/R,oBAA6CC,GAEnE,UAEO,SAASqyC,IACZ,IAAMtpC,GAAU,IAAAjF,YAAWgO,GAE3B,IAAK/I,EACD,MAAM,IAAI/E,MAAM,yDAGpB,OAAO+E,CACX,C,yGCwCA,QAhDA,uE,OACI,EAAAtE,MAAuC,CAAC,EAEhC,EAAA6tC,iBAAkB,SAGlB,EAAAC,iBAAkB,IAAAlD,aAAW,SAAC3rC,GAClC,MAAO,CACHw8B,SAAUx8B,GAAS,IAAA8uC,uBAAsB9uC,QAAU1D,EACnD6M,KAAMnJ,EACA,CACIkoC,YAAaloC,EAAO+uC,sBAExBzyC,EACN2L,SAAU,EAAK2mC,gBAEvB,I,CA8BJ,QA9C6B,oBAkBzB,YAAAzjC,kBAAA,sBACYxO,EAAoBkG,KAAKwI,MAAK,gBAEtCxI,KAAKmsC,YAAcryC,EAAgBO,WAC/B,SAAC,G,IAAE0E,EAAI,OACH,EAAK4J,SAAS,CAAExL,OAAQ4B,EAAK/B,aACjC,IACA,SAAC,GAAa,OAAP,OAAYA,WAAL,GAEtB,EAEA,YAAA4L,qBAAA,WACQ5I,KAAKmsC,cACLnsC,KAAKmsC,cACLnsC,KAAKmsC,iBAAc1yC,EAE3B,EAEA,YAAAqP,OAAA,WACY,IAAA/O,EAAaiG,KAAKwI,MAAK,SACvBrL,EAAW6C,KAAK9B,MAAK,OAE7B,OACI,gBAAC,IAAc9B,SAAQ,CAACC,MAAO2D,KAAKgsC,gBAAgB7uC,IAC/CpD,EAGb,EACJ,EA9CA,CAA6B,EAAAknB,U,iFCO7B,QAZsE,SAAC,G,IAAEliB,EAAI,OAAEf,EAAE,KACrEoH,GAAa,SAAW,SAEhC,OACI,wBACIqd,wBAAyB,CACrBC,OAAQ,aAAmBtd,EAASX,UAAUzG,EAAIe,GAAO,CAAEqtC,SAAU,CAAC,cAItF,C,mFCUA,QAlB+D,SAAC,G,IAAErtC,EAAI,OAAEf,EAAE,KAAEyM,EAAO,UAAE8F,EAAM,SAEjF87B,GADe,SAAW,SACE5nC,UAAUzG,EAAIe,GAC1CutC,GAAe,OAAYD,GAEjC,OAAOC,EAAavkC,OAChB,gCACKukC,EAAa,GACd,iCAAc/7B,EAAQvP,KAAK,IAAIyJ,SAAS,OAAeA,IAClD6hC,EAAa,IAEjBA,EAAa,IAGlB,gCAAGD,EAEX,C,6DCbA,QANmE,SAAC,G,IAAEttC,EAAI,OAAEf,EAAE,KAClEoH,GAAa,SAAW,SAEhC,OAAO,gCAAGA,EAASX,UAAUzG,EAAIe,GACrC,C,qECXawtC,EAAkB,K,w+tCCE/B,IAAIR,EAEW,SAAS9nB,IAQpB,OAPA8nB,EACIA,QAAAA,GACA,IAAAS,uBAAsB,CAClBC,eAAgBF,EAChBG,qBAAsB,GAIlC,CAIO,SAASC,EAA0BxvC,GAStC,OARA4uC,GAAkB,IAAAS,wBAAsB,gCACjCrvC,GAAM,CACTyvC,cAAezvC,EAAO60B,OACtB6a,oBAAqB1vC,EAAO0vC,oBAC5BJ,eAAgBF,EAChBG,qBAAsB,IAI9B,C,6DCNA,QAfwB,SACpBjqC,EACAK,GAEA,IAAMgqC,GAAU,IAAA5mC,MAAKpD,EAAW,CAAEmxB,KAAMxxB,EAAQQ,cAC1C8pC,GAAUD,IAAW,IAAAppC,SAAQopC,EAAQE,cAAgB,GAAKF,EAAQE,aAClE9uC,GAAQ,IAAAgI,MAAK6mC,EAAQ,CAAE9Y,KAAMxxB,EAAQ8C,sBAE3C,OAAO,gCACA9C,GAAO,CACV4B,iBAAkByoC,EAAUA,EAAQloC,KAAOnC,EAAQqqC,QACnD3oC,kBAAmBjG,EAAQA,EAAM0G,KAAOnC,EAAQ6C,iBAExD,C,6DCNA,SALmD,OAAgB,IAAe,CAC9EyB,kBAAmB,eACnB6kC,UAAW,SAACvvC,EAAOwN,GAAQ,MAAQ,aAARA,KAAwBxN,CAAxB,G,6DCG/B,SAL2C,OAAgB,IAAe,CACtE0K,kBAAmB,WACnB6kC,UAAW,SAACvvC,EAAOwN,GAAQ,MAAQ,SAARA,KAAoBxN,CAApB,G,6DCG/B,SALmD,OAAgB,IAAe,CAC9E0K,kBAAmB,eACnB6kC,UAAW,SAACvvC,EAAOwN,GAAQ,MAAQ,aAARA,KAAwBxN,CAAxB,G,kBCZ/B,IAAK2S,E,iBAAL,SAAKA,GACD,gBACA,oBACA,sCACA,sCACA,oBACA,kBACA,sBACA,wBACA,sBACA,4BACA,0BACA,kCACA,kBACA,cACA,wBACA,8BACA,kCACA,gDACA,8BACA,8DACA,0CACA,wEACA,oDACA,gDACA,sDACA,gDACA,qBACA,8BACA,4BACA,8CACA,sBACA,sBACA,kDACA,8BACA,gBACA,cACA,gBACA,kBACA,kBACA,0BACA,kBACA,oBACA,YACA,sCACA,cACA,gCACA,6BACA,kCACA,8CACA,wDACA,qEACA,4CACA,cACA,oBACA,oBACA,oBACA,cACA,kBACA,sBACA,oCACA,0CACA,sBACA,wBACA,kCACA,oDACA,YACA,+CACH,CApED,CAAKA,IAAAA,EAAe,KAsEpB,S,0DC9DMkkB,GAAkB,IAAA15B,oBAAgDC,GAEjE,SAASwzC,IACZ,IAAMzqC,GAAU,IAAAjF,YAAW21B,GAE3B,IAAK1wB,EACD,MAAM,IAAI/E,MAAM,6DAGpB,OAAO+E,CACX,CAEA,S,2FCNA,YAiBI,WAAYgG,GAAZ,MACI,YAAMA,IAAM,K,OAVR,EAAAwjC,iBAAkB,IAAAlD,aACtB,SAAChvC,EAAkCkN,GAC/B,MAAO,CACHlN,gBAAe,EACfkN,cAAa,EAErB,IAMA,EAAK9I,MAAQ,CACT8I,cAAewB,EAAM1O,gBAAgBgF,Y,CAE7C,CA2BJ,OAlD8C,oBAyB1C,YAAAwJ,kBAAA,sBACYxO,EAAoBkG,KAAKwI,MAAK,gBAEtCxI,KAAKmsC,YAAcryC,EAAgBO,WAAU,SAAC2M,GAC1C,SAAK2B,SAAS,CAAE3B,cAAa,GAA7B,GAER,EAEA,YAAA4B,qBAAA,WACQ5I,KAAKmsC,cACLnsC,KAAKmsC,cACLnsC,KAAKmsC,iBAAc1yC,EAE3B,EAEA,YAAAqP,OAAA,WACU,MAAgC9I,KAAKwI,MAAnC1O,EAAe,kBAAEC,EAAQ,WACzBiN,EAAkBhH,KAAK9B,MAAK,cAEpC,OACI,gBAAC,IAAgB9B,SAAQ,CAACC,MAAO2D,KAAKgsC,gBAAgBlyC,EAAiBkN,IAClEjN,EAGb,EACJ,EAlDA,CAA8C,EAAAknB,U,0DCd9C,YAOI,WAAY,G,IACR,IAAAliB,KAAAA,OAAI,IAAG,GAAC,EAAC,EACT,IAAAwI,QAAAA,OAAO,IAAG,KAAE,EACZ,IAAA2c,MAAAA,OAAK,IAAG,KAAE,EACV,IAAAtf,KAAAA,OAAI,IAAG,KAAE,EAJb,EAWI,cAAO,K,MAEgC,mBAA5BnH,MAAMm2B,kBACbn2B,MAAMm2B,kBAAkB,EAAMlsB,GAE9B,EAAKmsB,OAAQ,IAAIp2B,OAAQo2B,MAI7B,EAAK90B,KAAOA,EACZ,EAAKwI,QAAUA,EACf,EAAK3C,KAAOA,EACZ,EAAKsf,MAAQA,EACb,EAAK9lB,KAAO,S,CAChB,CACJ,OAjCyC,oBAiCzC,EAjCA,CAAyCX,M,6DCI1B,SAASk/B,EAEpB1b,EACA0X,GAEA,OAAOn5B,OAAOC,QAAO,SAAC+I,GAAkB,uBAACyY,GAAS,iBAAKzY,GAAf,GAA0B,CAAEmwB,WAAU,GAClF,C,kDCGA,SAAe,E,QAAA,IAT+B,WAAM,OAChD,uBAAK5f,QAAQ,aAAaC,MAAM,8BAC5B,wBACIC,EAAE,szLACFxP,KAAK,YAJmC,ICQpD,QANqC,WAAM,OACvC,uBAAK9F,UAAU,6BAA4B,YAAW,wBAClD,gBAAC,EAAkB,MAFgB,C,kDCG3C,QAPkC,SAAC/H,GAC/B,OACIA,IAAa,IAAgBknC,WAC7BlnC,IAAa,IAAgBmnC,4BAErC,C,kDCEA,QAPuC,SAACnnC,GACpC,OACIA,IAAa,IAAgBgnC,2BAC7BhnC,IAAa,IAAgBinC,iCAErC,C,kDCIMqK,EAAmB,SAACzqC,GAWtB,OAAO,IAAA0qC,MAAK1qC,EAVqC,CAC7C,KACA,oBACA,kBACA,OACA,QACA,UACA,gBAIR,EAiBA,QAVgC,SAACA,EAAkB2qC,GAC/C,SAAKA,GAAkC,IAArBA,EAAUrlC,SAIrBqlC,EAAUjqB,MAAK,SAACkqB,GACnB,OAX+B,SACnCC,EACAD,GACU,WAAAE,SAAQL,EAAiBI,GAAYJ,EAAiBG,GAAtD,CAQNG,CAA+B/qC,EAAS4qC,EAAxC,GAER,C,kBC1Be,SAASI,EACpB7gC,GAEA,QAAKA,IAKD,wBAAyBA,GAAY,cAAeA,GAAY,gBAAiBA,EAEzF,C,6ECfA,QAJ+B,SAAChR,GAC5B,OAAO,OAA0BA,KAAa,OAA+BA,EACjF,C,wECqCA,QArCiC,W,QAEvB,GADoB,SAAa,cACyBmD,KAAxD/B,EAAS,YAAEshB,EAA0B,6BACvCovB,GACS,QAAX,EAAA1wC,WAAW,eAAE0P,iBAAiBqC,6BAA8B,GAE1D4+B,GAA0B,OAAuBD,GAEjDrvB,EAA0BC,IAC1BsvB,GAAyB,OAAyBvvB,GAClDA,EACA,CAAC,EAEDwvB,EAEFxvB,aAAuB,EAAvBA,EAAyByvB,oBAEvB5mC,EAA0B0mC,EAAuBR,WAAa,GAYpE,MAAO,CACHO,wBAAuB,EACvBzmC,wBAAuB,EACvB6mC,8BAZA7mC,EAAwBa,OAAS,GAAK4lC,EAatCK,qCAVA9mC,EAAwBa,OAAS,GACjC8lC,GACgC,aAAhCA,GACgC,iBAAhCA,IACW,QAAX,EAAA7wC,WAAW,eAAE0P,iBAAiBiV,SAAS,gDAQ/C,C,wECPA,QA7BqE,SAAC,G,IAClE5nB,EAAQ,WACRmP,EAAS,YACTa,EAAkB,qBAEZR,EACF,uBAAK5F,UAAU,iBACX,uBAAKA,UAAU,yBACX,uBAAKA,UAAU,kFAEnB,uBAAKA,UAAU,yBACX,uBAAKA,UAAU,wBACX,uBAAKA,UAAU,sBACX,uBAAKA,UAAU,oBAEnB,uBAAKA,UAAU,sBACX,uBAAKA,UAAU,qBAGvB,uBAAKA,UAAU,sBACX,uBAAKA,UAAU,sBAM/B,OAAO,gBAAC,KAAe,iBAAK,CAAE5J,SAAQ,EAAEmP,UAAS,EAAEa,mBAAkB,EAAER,SAAQ,IACnF,C,2FCGA,QAxB4F,SAAC,GAQzF,I,IAPAuF,EAAmB,sBACnB/U,EAAQ,WACR,IAAAmP,UAAAA,OAAS,IAAG,GAAI,EAChB,IAAAi/B,KAAAA,OAAI,IAAG,IAAC,EAEF8F,EAAU,GAEPrkC,EAAI,EAAGA,EAAIu+B,EAAMv+B,GAAK,EAC3BqkC,EAAQlsC,KACJ,uBAAK4B,UAAU,qBAAqBkG,IAAK,iCAA0BD,IAC/D,uBAAKjG,UAAU,8BACf,uBAAKA,UAAU,mCAK3B,IAAM4F,EACF,uBAAK5F,UAAW,IAAWmL,EAAqB,uBAAwBm/B,GAG5E,OAAO,gBAAC,KAAe,iBAAK,CAAEl0C,SAAQ,EAAEmP,UAAS,EAAEK,SAAQ,IAC/D,C,kDCxBaO,EAA2D,SAAC,G,IACrE/P,EAAQ,WACR,IAAAmP,UAAAA,OAAS,IAAG,GAAI,EAChB,IAAAa,mBAAAA,OAAkB,IAAG,GAAK,EAC1BR,EAAQ,WAEF2kC,EAAqBnkC,IAAuBb,EAElD,OACI,gCACKA,GAAaK,EACb9H,QAAQ1H,IAAam0C,GAClB,uBACIvqC,UAAU,mBACVxE,MACI+J,EAAY,CAAEiE,SAAU,WAAYC,KAAM,OAAQC,IAAK,cAAY5T,GAGtEM,GAKrB,C,sECvBao0C,GAAc,IAAA30C,eAA+B,CACtD2vC,aAAa,EACbJ,aAAc,EAAAr+B,OAUL0jC,GAAqD,IAAAjrC,OAC9D,SAAC,G,IAAEpJ,EAAQ,WAAE,IAAAs0C,mBAAAA,OAAkB,IAAG,GAAK,EAC7B,GAA8B,IAAApgC,UAASogC,GAAtClF,EAAW,KAAEJ,EAAY,KAC1BuF,GAAe,IAAAr0C,UAAQ,WAAM,OAAGkvC,YAAW,EAAEJ,aAAY,EAA5B,GAAiC,CAACI,IAErE,OACI,gBAACgF,EAAY/xC,SAAQ,CAACC,MAAOiyC,IACxB,IAAAC,YAAWx0C,GAAYA,EAAS,CAAEovC,YAAW,EAAEJ,aAAY,IAAMhvC,EAG9E,IAGJ,S,8CC9BYwvC,E,yCAaG,SAASzwB,EACpBsa,GAEA,OAAO,IAAAjwB,OAAK,SAAC,GAAE,IAAA2L,EAAmB,sBAAEuB,EAAI,OAAEE,EAAM,SAAKlF,GAAI,cAA5C,yCAAmD,OAC5D,uBACI1H,UAAW,IACP,OACAmL,EACAuB,IAASk5B,EAAS7U,MAAQ,cAAgB,KAC1CrkB,IAASk5B,EAASlF,MAAQ,cAAgB,KAC1Ch0B,IAASk5B,EAASC,OAAS,eAAiB,MAC/C,YACUj5B,GAEX,gBAAC6iB,GAAiB,iBAAM/nB,I,GAGpC,EA9BA,SAAYk+B,GACR,oBACA,gBACA,kBACA,eACH,CALD,CAAYA,IAAAA,EAAQ,I","sources":["webpack://checkout/./packages/analytics/src/AnalyticsContext.ts","webpack://checkout/./packages/analytics/src/createAnalyticsService.ts","webpack://checkout/./packages/analytics/src/AnalyticsProvider.tsx","webpack://checkout/./packages/checkout-extension/src/ExtensionRegionContainer.ts","webpack://checkout/./packages/checkout-extension/src/Extension.tsx","webpack://checkout/./packages/checkout-extension/src/useExtensions.tsx","webpack://checkout/./packages/checkout-extension/src/ExtensionContext.tsx","webpack://checkout/./packages/checkout-extension/src/ExtensionReducer.ts","webpack://checkout/./packages/checkout-extension/src/handlers/createReloadCheckoutHandler.ts","webpack://checkout/./packages/checkout-extension/src/handlers/createSetIframeStyleHandler.ts","webpack://checkout/./packages/checkout-extension/src/handlers/createShowLoadingIndicatorHandler.ts","webpack://checkout/./packages/checkout-extension/src/ExtensionService.ts","webpack://checkout/./packages/checkout-extension/src/ExtensionProvider.tsx","webpack://checkout/./packages/core/src/app/address/AddressType.ts","webpack://checkout/./packages/core/src/app/address/StaticAddress.tsx","webpack://checkout/./packages/core/src/app/formFields/getFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/address/getAddressFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/address/isValidAddress.ts","webpack://checkout/./packages/core/src/app/address/mapAddressToFormValues.ts","webpack://checkout/./packages/core/src/app/analytics/withAnalytics.ts","webpack://checkout/./packages/core/src/app/billing/StaticBillingAddress.tsx","webpack://checkout/./packages/core/src/app/checkout/NoopCheckoutSupport.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/errors/EmbeddedCheckoutUnsupportedError.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutSupport.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/createEmbeddedCheckoutSupport.ts","webpack://checkout/./packages/checkout-extension/src/withExtension.ts","webpack://checkout/./packages/core/src/app/cart/EmptyCartMessage.tsx","webpack://checkout/./packages/core/src/app/customer/CustomerViewType.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/WalletButtonContainerSkeleton.tsx","webpack://checkout/./packages/core/src/app/common/utility/is-apple-pay-window.ts","webpack://checkout/./packages/core/src/app/customer/getSupportedMethods.ts","webpack://checkout/./packages/core/src/app/customer/CheckoutButton.tsx","webpack://checkout/./packages/core/src/app/checkout/navigateToOrderConfirmation.tsx","webpack://checkout/./packages/core/src/app/customer/customWalletButton/ApplePayButton.tsx","webpack://checkout/./packages/core/src/app/customer/customWalletButton/AmazonPayV2Button.tsx","webpack://checkout/./packages/core/src/app/customer/customWalletButton/PayPalCommerceButton.tsx","webpack://checkout/./packages/core/src/app/customer/WalletButtonV1Resolver.tsx","webpack://checkout/./packages/core/src/app/customer/CheckoutButtonContainer.tsx","webpack://checkout/./packages/core/src/app/customer/resolveCheckoutButton.ts","webpack://checkout/./packages/analytics/src/useAnalytics.tsx","webpack://checkout/./packages/core/src/app/customer/checkoutSuggestion/BoltCheckoutSuggestion.tsx","webpack://checkout/./packages/dom-utils/src/stopPropagation.ts","webpack://checkout/./packages/core/src/app/customer/checkoutSuggestion/CheckoutSuggestion.tsx","webpack://checkout/./packages/core/src/app/customer/CheckoutButtonList.tsx","webpack://checkout/./packages/core/src/app/customer/canSignOut.ts","webpack://checkout/./packages/core/src/app/customer/CustomerInfo.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/CustomerSkeleton.tsx","webpack://checkout/./packages/core/src/app/customer/validationPatterns.ts","webpack://checkout/./packages/core/src/app/customer/getEmailValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/getCreateCustomerValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/CreateAccountForm.tsx","webpack://checkout/./packages/core/src/app/customer/EmailField.tsx","webpack://checkout/./packages/core/src/app/customer/EmailLoginForm.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-fastlane-window.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/PayPalFastlaneWatermark.tsx","webpack://checkout/./packages/core/src/app/privacyPolicy/PrivacyPolicyField.tsx","webpack://checkout/./packages/core/src/app/privacyPolicy/getPrivacyPolicyValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/SubscribeField.tsx","webpack://checkout/./packages/core/src/app/customer/SubscribeSessionStorage.ts","webpack://checkout/./packages/core/src/app/customer/GuestForm.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconEye.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconEyeSlash.tsx","webpack://checkout/./packages/core/src/app/customer/PasswordField.tsx","webpack://checkout/./packages/core/src/app/customer/LoginForm.tsx","webpack://checkout/./packages/core/src/app/customer/mapErrorMessage.ts","webpack://checkout/./packages/core/src/app/customer/mapCreateAccountFromFormValues.ts","webpack://checkout/./packages/core/src/app/customer/StripeGuestForm.tsx","webpack://checkout/./packages/core/src/app/customer/Customer.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconTag.tsx","webpack://checkout/./packages/core/src/app/promotion/PromotionBanner.tsx","webpack://checkout/./packages/core/src/app/promotion/PromotionBannerList.tsx","webpack://checkout/./packages/core/src/app/shipping/isUsingMultiShipping.ts","webpack://checkout/./packages/core/src/app/shipping/StaticConsignment.tsx","webpack://checkout/./packages/core/src/app/shipping/shippingOption/ShippingOptionExpiredError.ts","webpack://checkout/./packages/core/src/app/ui/loading/LoadingNotification.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconCheck.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStepHeader.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStep.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/isMobileView.ts","webpack://checkout/./packages/core/src/app/checkout/CheckoutStepType.ts","webpack://checkout/./packages/core/src/app/shipping/itemsRequireShipping.ts","webpack://checkout/./packages/core/src/app/checkout/getCheckoutStepStatuses.ts","webpack://checkout/./packages/core/src/app/common/utility/isExperimentEnabled.ts","webpack://checkout/./packages/core/src/app/checkout/Checkout.tsx","webpack://checkout/./packages/core/src/app/checkout/mapToCheckoutProps.ts","webpack://checkout/./packages/core/src/app/checkout/CheckoutApp.tsx","webpack://checkout/./packages/legacy-hoc/src/createMappableInjectHoc.tsx","webpack://checkout/./packages/core/src/app/checkout/withCheckout.tsx","webpack://checkout/./packages/core/src/app/common/error/CustomError.ts","webpack://checkout/./packages/core/src/app/common/error/ErrorCode.tsx","webpack://checkout/./packages/core/src/app/common/error/ErrorModal.tsx","webpack://checkout/./packages/core/src/app/common/error/isHtmlError.tsx","webpack://checkout/./packages/core/src/app/common/error/computeErrorCode.ts","webpack://checkout/./packages/core/src/app/common/error/createCustomErrorType.ts","webpack://checkout/./packages/error-handling-utils/src/ErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/ConsoleErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/NoopErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/SentryErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/createErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/isCustomError.ts","webpack://checkout/./packages/core/src/app/common/error/isErrorWithType.ts","webpack://checkout/./packages/core/src/app/common/error/isRequestError.ts","webpack://checkout/./packages/payment-integration-api/src/isResolvableComponent.ts","webpack://checkout/./packages/core/src/app/common/resolver/resolveComponent.ts","webpack://checkout/./packages/core/src/app/common/utility/emptyData.ts","webpack://checkout/./packages/core/src/app/common/utility/isBuyNowCart.ts","webpack://checkout/./packages/core/src/app/common/utility/isFloatingLabelEnabled.ts","webpack://checkout/./packages/core/src/app/common/utility/retry.ts","webpack://checkout/./packages/core/src/app/currency/ShopperCurrency.tsx","webpack://checkout/./packages/core/src/app/customer/getPasswordRequirements.ts","webpack://checkout/./packages/core/src/app/common/dom/toCssRule.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutStyleParser.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutStylesheet.ts","webpack://checkout/./packages/core/src/app/common/dom/appendStylesheet.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/createEmbeddedCheckoutStylesheet.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/isEmbedded.ts","webpack://checkout/./packages/core/src/app/formFields/getCustomFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/formFields/mapCustomFormFieldsFromFormValues.ts","webpack://checkout/./packages/checkout-button-integration/src/CheckoutButton.tsx","webpack://checkout/./packages/payment-integration-api/src/errors/EmbeddedCheckoutUnsupportedError.ts","webpack://checkout/./packages/payment-integration-api/src/setPrototypeOf.ts","webpack://checkout/./packages/google-pay-integration/src/GooglePayButton.tsx","webpack://checkout/./packages/payment-integration-api/src/isEmbedded.ts","webpack://checkout/./packages/core/src/app/giftCertificate/isGiftCertificatePayment.ts","webpack://checkout/./packages/core/src/app/common/bundler/getCurrentScriptPath.ts","webpack://checkout/./packages/core/src/app/common/bundler/configurePublicPath.ts","webpack://checkout/./packages/core/src/app/checkout/renderCheckout.tsx","webpack://checkout/./packages/core/src/app/order/renderOrderConfirmation.tsx","webpack://checkout/./packages/core/src/app/guestSignup/AccountService.ts","webpack://checkout/./packages/core/src/app/guestSignup/SignUpPasswordField.tsx","webpack://checkout/./packages/core/src/app/guestSignup/GuestSignUpForm.tsx","webpack://checkout/./packages/core/src/app/guestSignup/PasswordSavedSuccessAlert.tsx","webpack://checkout/./packages/core/src/app/guestSignup/SignedUpSuccessAlert.tsx","webpack://checkout/./packages/core/src/app/guestSignup/errors/AccountCreationRequirementsError.ts","webpack://checkout/./packages/core/src/app/guestSignup/errors/AccountCreationFailedError.ts","webpack://checkout/./packages/core/src/app/order/getPaymentInstructions.ts","webpack://checkout/./packages/core/src/app/giftCertificate/mapFromPayments.ts","webpack://checkout/./packages/core/src/app/order/getStoreCreditAmount.ts","webpack://checkout/./packages/core/src/app/order/mapToOrderSummarySubtotalsProps.ts","webpack://checkout/./packages/core/src/app/order/OrderConfirmationSection.tsx","webpack://checkout/./packages/core/src/app/order/MandateTextComponent.tsx","webpack://checkout/./packages/core/src/app/order/PaymentsWithMandates.tsx","webpack://checkout/./packages/core/src/app/order/OrderStatus.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconPrint.tsx","webpack://checkout/./packages/core/src/app/order/PrintLink.tsx","webpack://checkout/./packages/core/src/app/ui/header/PrimaryHeader.tsx","webpack://checkout/./packages/core/src/app/order/ThankYouHeader.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmation.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmationApp.tsx","webpack://checkout/./packages/core/src/app/payment/getProviderWithCustomCheckout.ts","webpack://checkout/./packages/core/src/app/payment/paymentMethod/PaymentMethodId.ts","webpack://checkout/./packages/core/src/app/payment/storeCredit/isStoreCreditPayment.ts","webpack://checkout/./packages/core/src/app/shipping/StaticConsignmentItemList.tsx","webpack://checkout/./packages/core/src/app/shipping/findLineItems.ts","webpack://checkout/./packages/core/src/app/shipping/getLineItemsCount.ts","webpack://checkout/./packages/core/src/app/shipping/hasSelectedShippingOptions.ts","webpack://checkout/./packages/core/src/app/shipping/hasUnassignedLineItems.ts","webpack://checkout/./packages/core/src/app/shipping/shippingOption/ShippingOptionAdditionalDescription.tsx","webpack://checkout/./packages/core/src/app/shipping/shippingOption/StaticShippingOption.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconSuccess.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconInfo.tsx","webpack://checkout/./packages/core/src/app/ui/alert/Alert.tsx","webpack://checkout/./packages/core/src/app/ui/button/Button.tsx","webpack://checkout/./packages/core/src/app/ui/form/BasicFormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxFormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxInput.tsx","webpack://checkout/./packages/core/src/app/ui/form/RadioInput.tsx","webpack://checkout/./packages/core/src/app/ui/form/DynamicInput.tsx","webpack://checkout/./packages/core/src/app/ui/form/MultiCheckboxControl.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxGroupFormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/DynamicFormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/DynamicFormFieldType.ts","webpack://checkout/./packages/core/src/app/ui/form/Fieldset.tsx","webpack://checkout/./packages/core/src/app/ui/form/Form.tsx","webpack://checkout/./packages/core/src/app/ui/form/FormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/FormFieldContainer.tsx","webpack://checkout/./packages/core/src/app/ui/form/FormFieldError.tsx","webpack://checkout/./packages/core/src/app/ui/form/Input.tsx","webpack://checkout/./packages/core/src/app/ui/form/Label.tsx","webpack://checkout/./packages/core/src/app/ui/form/Legend.tsx","webpack://checkout/./packages/core/src/app/ui/form/TextArea.tsx","webpack://checkout/./packages/core/src/app/ui/form/TextInput.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconBolt.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconChevronDown.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconError.tsx","webpack://checkout/./packages/core/src/app/ui/icon/withIconContainer.tsx","webpack://checkout/./packages/core/src/app/ui/loading/LazyContainer.tsx","webpack://checkout/./packages/core/src/app/ui/loading/LoadingOverlay.tsx","webpack://checkout/./packages/core/src/app/ui/loading/LoadingSpinner.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconClose.tsx","webpack://checkout/./packages/core/src/app/ui/modal/Modal.tsx","webpack://checkout/./packages/core/src/app/ui/modal/ModalHeader.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/ViewPicker.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/MobileView.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/breakpoints.ts","webpack://checkout/./packages/core/src/app/ui/toggle/Toggle.tsx","webpack://checkout/./packages/dom-utils/src/getAppliedStyles.ts","webpack://checkout/./packages/dom-utils/src/parseAnchor.ts","webpack://checkout/./packages/dom-utils/src/preventDefault.ts","webpack://checkout/./packages/error-handling-utils/src/ErrorBoundary.tsx","webpack://checkout/./packages/instrument-utils/src/guards/shouldUseStripeLinkByMinimumAmount.ts","webpack://checkout/./packages/legacy-hoc/src/createInjectHoc.tsx","webpack://checkout/./packages/locale/src/LocaleContext.ts","webpack://checkout/./packages/locale/src/LocaleProvider.tsx","webpack://checkout/./packages/locale/src/TranslatedHtml.tsx","webpack://checkout/./packages/locale/src/TranslatedLink.tsx","webpack://checkout/./packages/locale/src/TranslatedString.tsx","webpack://checkout/./packages/locale/src/translations/index.ts","webpack://checkout/./packages/locale/src/getLanguageService.ts","webpack://checkout/./packages/locale/src/localizeAddress.ts","webpack://checkout/./packages/locale/src/withCurrency.tsx","webpack://checkout/./packages/locale/src/withDate.tsx","webpack://checkout/./packages/locale/src/withLanguage.tsx","webpack://checkout/./packages/payment-integration-api/src/PaymentMethodId.ts","webpack://checkout/./packages/payment-integration-api/src/contexts/checkout-context/CheckoutContext.tsx","webpack://checkout/./packages/payment-integration-api/src/contexts/checkout-context/CheckoutProvider.tsx","webpack://checkout/./packages/payment-integration-api/src/errors/CustomError.ts","webpack://checkout/./packages/payment-integration-api/src/toResolvableComponent.tsx","webpack://checkout/./packages/ui/src/icon/IconPayPalFastlane.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/PoweredByPayPalFastlaneLabel.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-braintree-fastlane-method.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-commerce-fastlane-method.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-address.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-customer.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-method.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/usePayPalFastlaneAddress.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/AddressFormSkeleton.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/ChecklistSkeleton.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/LoadingSkeleton.tsx","webpack://checkout/./packages/ui/src/form/contexts/FormContext.tsx","webpack://checkout/./packages/ui/src/icon/withIconContainer.tsx"],"sourcesContent":["import { CheckoutPaymentMethodExecutedOptions } from '@bigcommerce/checkout-sdk';\nimport { createContext } from 'react';\n\nexport interface AnalyticsEvents {\n    checkoutBegin(): void;\n    trackStepCompleted(step: string): void;\n    trackStepViewed(step: string): void;\n    orderPurchased(): void;\n    customerEmailEntry(email: string): void;\n    customerSuggestionInit(payload?: CheckoutPaymentMethodExecutedOptions): void;\n    customerSuggestionExecute(): void;\n    customerPaymentMethodExecuted(payload?: CheckoutPaymentMethodExecutedOptions): void;\n    showShippingMethods(): void;\n    selectedPaymentMethod(methodName: string, methodId: string): void;\n    clickPayButton(payload?: { [key: string]: unknown }): void;\n    paymentRejected(): void;\n    paymentComplete(): void;\n    exitCheckout(): void;\n    walletButtonClick(methodId: string): void;\n}\n\nexport interface AnalyticsContextProps {\n    analyticsTracker: AnalyticsEvents;\n}\n\nconst AnalyticsContext = createContext<AnalyticsContextProps | undefined>(undefined);\n\nexport default AnalyticsContext;\n","export default function createAnalyticsService<T>(\n    createFn: (args?: any) => T,\n    createArguments: unknown[] = [],\n) {\n    let analyticsTracker: T;\n\n    return () => {\n        if (analyticsTracker) {\n            return analyticsTracker;\n        }\n\n        analyticsTracker = createFn(...createArguments);\n\n        return analyticsTracker;\n    };\n}\n","import {\n    BodlEventsPayload,\n    BodlService,\n    BraintreeAnalyticTrackerService,\n    CheckoutService,\n    createBodlService,\n    createBraintreeAnalyticTracker,\n    createPayPalCommerceAnalyticTracker,\n    createStepTracker,\n    PayPalCommerceAnalyticTrackerService,\n    StepTracker,\n} from '@bigcommerce/checkout-sdk';\nimport React, { ReactNode, useMemo } from 'react';\n\nimport AnalyticsContext, { AnalyticsEvents } from './AnalyticsContext';\nimport createAnalyticsService from './createAnalyticsService';\n\ninterface AnalyticsProviderProps {\n    checkoutService: CheckoutService;\n    children: ReactNode;\n}\n\nconst AnalyticsProvider = ({ checkoutService, children }: AnalyticsProviderProps) => {\n    const getStepTracker = useMemo(\n        () => createAnalyticsService<StepTracker>(createStepTracker, [checkoutService]),\n        [checkoutService],\n    );\n    const getBodlService = useMemo(\n        () => createAnalyticsService<BodlService>(createBodlService, [checkoutService.subscribe]),\n        [checkoutService],\n    );\n    const getBraintreeAnalyticTracker = useMemo(\n        () =>\n            createAnalyticsService<BraintreeAnalyticTrackerService>(\n                createBraintreeAnalyticTracker,\n                [checkoutService],\n            ),\n        [checkoutService],\n    );\n    const getPayPalCommerceAnalyticTracker = useMemo(\n        () =>\n            createAnalyticsService<PayPalCommerceAnalyticTrackerService>(\n                createPayPalCommerceAnalyticTracker,\n                [checkoutService],\n            ),\n        [checkoutService],\n    );\n\n    const checkoutBegin = () => {\n        getStepTracker().trackCheckoutStarted();\n        getBodlService().checkoutBegin();\n    };\n\n    const trackStepCompleted = (currentStep: string) => {\n        getStepTracker().trackStepCompleted(currentStep);\n        getBodlService().stepCompleted(currentStep);\n    };\n\n    const trackStepViewed = (step: string) => {\n        getStepTracker().trackStepViewed(step);\n    };\n\n    const orderPurchased = () => {\n        getStepTracker().trackOrderComplete();\n        getBodlService().orderPurchased();\n    };\n\n    const customerEmailEntry = (email: string) => {\n        getBodlService().customerEmailEntry(email);\n    };\n\n    const customerSuggestionInit = (payload: BodlEventsPayload) => {\n        getBodlService().customerSuggestionInit(payload);\n    };\n\n    const customerSuggestionExecute = () => {\n        getBodlService().customerSuggestionExecute();\n    };\n\n    const customerPaymentMethodExecuted = (payload: BodlEventsPayload) => {\n        getBodlService().customerPaymentMethodExecuted(payload);\n        getBraintreeAnalyticTracker().customerPaymentMethodExecuted();\n        getPayPalCommerceAnalyticTracker().customerPaymentMethodExecuted();\n    };\n\n    const showShippingMethods = () => {\n        getBodlService().showShippingMethods();\n    };\n\n    const selectedPaymentMethod = (methodName: string, methodId: string) => {\n        getBodlService().selectedPaymentMethod(methodName);\n        getBraintreeAnalyticTracker().selectedPaymentMethod(methodId);\n        getPayPalCommerceAnalyticTracker().selectedPaymentMethod(methodId);\n    };\n\n    const clickPayButton = (payload: BodlEventsPayload) => {\n        getBodlService().clickPayButton(payload);\n    };\n\n    const paymentRejected = () => {\n        getBodlService().paymentRejected();\n    };\n\n    const paymentComplete = () => {\n        getBodlService().paymentComplete();\n        getBraintreeAnalyticTracker().paymentComplete();\n        getPayPalCommerceAnalyticTracker().paymentComplete();\n    };\n\n    const exitCheckout = () => {\n        getBodlService().exitCheckout();\n    };\n\n    const walletButtonClick = (methodId: string) => {\n        getBraintreeAnalyticTracker().walletButtonClick(methodId);\n        getPayPalCommerceAnalyticTracker().walletButtonClick(methodId);\n    };\n\n    const analyticsTracker: AnalyticsEvents = {\n        checkoutBegin,\n        trackStepCompleted,\n        trackStepViewed,\n        orderPurchased,\n        customerEmailEntry,\n        customerSuggestionInit,\n        customerSuggestionExecute,\n        customerPaymentMethodExecuted,\n        showShippingMethods,\n        selectedPaymentMethod,\n        clickPayButton,\n        paymentRejected,\n        paymentComplete,\n        exitCheckout,\n        walletButtonClick,\n    };\n\n    return (\n        <AnalyticsContext.Provider value={{ analyticsTracker }}>\n            {children}\n        </AnalyticsContext.Provider>\n    );\n};\n\nexport default AnalyticsProvider;\n","import { ExtensionRegion } from '@bigcommerce/checkout-sdk';\n\nexport enum ExtensionRegionContainer {\n    ShippingShippingAddressFormBefore = 'extension-region-shipping-shippingaddressform-before',\n    ShippingShippingAddressFormAfter = 'extension-region-shipping-shippingaddressform-after',\n    ShippingSelectedShippingMethod = 'extension-region-shipping-selectedshippingmethod',\n    SummaryAfter = 'extension-region-summary-after',\n    SummaryLastItemAfter = 'extension-region-summary-lastitem-after',\n}\n\nexport const extensionRegionToContainerMap: Record<ExtensionRegion, ExtensionRegionContainer> = {\n    [ExtensionRegion.ShippingShippingAddressFormBefore]:\n        ExtensionRegionContainer.ShippingShippingAddressFormBefore,\n    [ExtensionRegion.ShippingShippingAddressFormAfter]:\n        ExtensionRegionContainer.ShippingShippingAddressFormAfter,\n    [ExtensionRegion.ShippingSelectedShippingMethod]:\n        ExtensionRegionContainer.ShippingSelectedShippingMethod,\n    [ExtensionRegion.SummaryAfter]: ExtensionRegionContainer.SummaryAfter,\n    [ExtensionRegion.SummaryLastItemAfter]: ExtensionRegionContainer.SummaryLastItemAfter,\n};\n","import { ExtensionRegion } from '@bigcommerce/checkout-sdk';\nimport React, { useEffect } from 'react';\n\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { extensionRegionToContainerMap } from './ExtensionRegionContainer';\nimport { useExtensions } from './useExtensions';\n\ninterface ExtensionProps {\n    region: ExtensionRegion;\n}\n\nexport const Extension = ({ region }: ExtensionProps): React.JSX.Element | null => {\n    const {\n        checkoutState: {\n            data: { getExtensions, getConfig, getCheckout },\n        },\n    } = useCheckout();\n    const extensions = getExtensions();\n    const config = getConfig();\n    const checkout = getCheckout();\n    const { extensionService } = useExtensions();\n    const isRegionEnabled =\n        extensions && config && checkout && extensionService.isRegionEnabled(region);\n    const containerId = extensionRegionToContainerMap[region];\n\n    useEffect(() => {\n        if (isRegionEnabled) {\n            void extensionService.renderExtension(containerId, region);\n\n            return () => {\n                extensionService.removeListeners(region);\n            };\n        }\n    }, [containerId, extensionService, isRegionEnabled, region]);\n\n    if (isRegionEnabled) {\n        return <div id={containerId} />;\n    }\n\n    return null;\n};\n","import { useContext } from 'react';\n\nimport { ExtensionContext } from './ExtensionContext';\n\nexport const useExtensions = () => {\n    const extensionContext = useContext(ExtensionContext);\n\n    if (!extensionContext) {\n        throw new Error('useExtensions must be used within an <ExtensionProvider>');\n    }\n\n    return extensionContext;\n};\n","import { createContext } from 'react';\n\nimport { ExtensionState } from './ExtensionProvider';\nimport { ExtensionService } from './ExtensionService';\n\nexport interface ExtensionContextProps {\n    extensionService: ExtensionService;\n    extensionState: ExtensionState;\n}\n\nexport const ExtensionContext = createContext<ExtensionContextProps | undefined>(undefined);\n","import { ExtensionAction, ExtensionActionType, ExtensionState } from './ExtensionProvider';\n\nexport const extensionReducer = (\n    state: ExtensionState,\n    action: ExtensionAction,\n): ExtensionState => {\n    switch (action.type) {\n        case ExtensionActionType.SHOW_LOADING_INDICATOR:\n            return { ...state, isShowingLoadingIndicator: action.payload };\n\n        default:\n            return state;\n    }\n};\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { CommandHandler, HandlerProps } from './CommandHandler';\n\nexport function createReloadCheckoutHandler({\n    checkoutService,\n}: HandlerProps): CommandHandler<ExtensionCommandType.ReloadCheckout> {\n    return {\n        commandType: ExtensionCommandType.ReloadCheckout,\n        handler: () => {\n            void checkoutService.loadCheckout(checkoutService.getState().data.getCheckout()?.id);\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { CommandHandler, HandlerProps } from './CommandHandler';\n\nexport function createSetIframeStyleHandler({\n    extension,\n}: HandlerProps): CommandHandler<ExtensionCommandType.SetIframeStyle> {\n    return {\n        commandType: ExtensionCommandType.SetIframeStyle,\n        handler: (data) => {\n            const { style } = data.payload;\n            const extensionContainer = document.querySelector(\n                `div[data-extension-id=\"${extension.id}\"]`,\n            );\n            const iframe = extensionContainer?.querySelector('iframe');\n\n            if (iframe) {\n                Object.assign(iframe.style, style);\n            }\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { ExtensionActionType } from '../ExtensionProvider';\n\nimport { CommandHandler, HandlerProps } from './CommandHandler';\n\nexport function createShowLoadingIndicatorHandler({\n    dispatch,\n}: HandlerProps): CommandHandler<ExtensionCommandType.ShowLoadingIndicator> {\n    return {\n        commandType: ExtensionCommandType.ShowLoadingIndicator,\n        handler: (data) => {\n            const { show } = data.payload;\n\n            dispatch({\n                type: ExtensionActionType.SHOW_LOADING_INDICATOR,\n                payload: show,\n            });\n        },\n    };\n}\n","import {\n    CheckoutService,\n    Extension,\n    ExtensionCommandMap,\n    ExtensionRegion,\n} from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { ExtensionAction } from './ExtensionProvider';\nimport * as handlerFactories from './handlers';\nimport { CommandHandler } from './handlers/CommandHandler';\n\nexport class ExtensionService {\n    private handlers: { [extensionId: string]: Array<() => void> } = {};\n\n    constructor(\n        private checkoutService: CheckoutService,\n        private dispatch: React.Dispatch<ExtensionAction>,\n    ) {}\n\n    async loadExtensions(): Promise<void> {\n        await this.checkoutService.loadExtensions();\n    }\n\n    preloadExtensions(): void {\n        const state = this.checkoutService.getState();\n        const extensions = state.data.getExtensions();\n        const cartId = state.data.getCart()?.id;\n        const parentOrigin = state.data.getConfig()?.links.siteLink;\n\n        if (!cartId || !parentOrigin) {\n            return;\n        }\n\n        extensions?.forEach((extension) => {\n            const url = new URL(extension.url);\n\n            url.searchParams.set('extensionId', extension.id);\n            url.searchParams.set('cartId', cartId);\n            url.searchParams.set('parentOrigin', parentOrigin);\n\n            const link = document.createElement('link');\n\n            link.rel = 'preload';\n            link.as = 'document';\n            link.href = url.toString();\n\n            const head = document.head;\n\n            head.appendChild(link);\n        });\n    }\n\n    async renderExtension(container: string, region: ExtensionRegion): Promise<void> {\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        if (!extension) {\n            return;\n        }\n\n        await this.checkoutService.renderExtension(container, region);\n\n        this.registerHandlers(extension);\n    }\n\n    removeListeners(region: ExtensionRegion): void {\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        if (!extension) {\n            return;\n        }\n\n        const removers = this.handlers[extension.id];\n\n        if (!removers) {\n            return;\n        }\n\n        for (const remover of removers) {\n            remover();\n        }\n\n        delete this.handlers[extension.id];\n    }\n\n    isRegionEnabled(region: ExtensionRegion): boolean {\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        return Boolean(extension);\n    }\n\n    private registerHandlers(extension: Extension): void {\n        const handlerProps = {\n            checkoutService: this.checkoutService,\n            dispatch: this.dispatch,\n            extension,\n        };\n\n        if (!this.handlers[extension.id]) {\n            this.handlers[extension.id] = [];\n        }\n\n        Object.values(handlerFactories).forEach((createHandlerFactory) => {\n            const handlerFactory = createHandlerFactory(handlerProps);\n\n            if (this.isCommandHandler(handlerFactory.commandType, handlerFactory)) {\n                this.handlers[extension.id].push(\n                    this.checkoutService.handleExtensionCommand(\n                        extension.id,\n                        handlerFactory.commandType,\n                        handlerFactory.handler,\n                    ),\n                );\n            }\n        });\n    }\n\n    private isCommandHandler<T extends keyof ExtensionCommandMap>(\n        type: T,\n        handler: CommandHandler<any>,\n    ): handler is CommandHandler<T> {\n        return handler.commandType === type;\n    }\n}\n","import { CheckoutService } from '@bigcommerce/checkout-sdk';\nimport React, { ReactNode, useReducer } from 'react';\n\nimport { ExtensionContext } from './ExtensionContext';\nimport { extensionReducer } from './ExtensionReducer';\nimport { ExtensionService } from './ExtensionService';\n\nexport interface ExtensionState {\n    isShowingLoadingIndicator: boolean;\n}\n\nexport interface ExtensionAction {\n    type: ExtensionActionType;\n    payload: boolean;\n}\n\nexport enum ExtensionActionType {\n    SHOW_LOADING_INDICATOR,\n}\n\nexport interface ExtensionProviderProps {\n    checkoutService: CheckoutService;\n    children: ReactNode;\n}\n\nexport const ExtensionProvider = ({ checkoutService, children }: ExtensionProviderProps) => {\n    const [extensionState, dispatch] = useReducer(extensionReducer, {\n        isShowingLoadingIndicator: false,\n    });\n    const extensionService = new ExtensionService(checkoutService, dispatch);\n\n    const extensionValues = {\n        extensionService,\n        extensionState,\n    };\n\n    return (\n        <ExtensionContext.Provider value={extensionValues}>{children}</ExtensionContext.Provider>\n    );\n};\n","enum AddressType {\n    Billing = 'billing',\n    Shipping = 'shipping',\n}\n\nexport default AddressType;\n","import {\n    Address,\n    CheckoutSelectors,\n    Country,\n    FormField,\n    ShippingInitializeOptions,\n} from '@bigcommerce/checkout-sdk';\nimport { isEmpty } from 'lodash';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { localizeAddress } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { withCheckout } from '../checkout';\n\nimport AddressType from './AddressType';\nimport isValidAddress from './isValidAddress';\n\nimport './StaticAddress.scss';\n\nexport interface StaticAddressProps {\n    address: Address;\n    type?: AddressType;\n}\n\nexport interface StaticAddressEditableProps extends StaticAddressProps {\n    initialize?(options: ShippingInitializeOptions): Promise<CheckoutSelectors>;\n}\n\ninterface WithCheckoutStaticAddressProps {\n    countries?: Country[];\n    fields?: FormField[];\n}\n\nconst StaticAddress: FunctionComponent<\n    StaticAddressEditableProps & WithCheckoutStaticAddressProps\n> = ({ countries, fields, address: addressWithoutLocalization }) => {\n    const address = localizeAddress(addressWithoutLocalization, countries);\n    const isValid = !fields\n        ? !isEmpty(address)\n        : isValidAddress(\n              address,\n              fields.filter((field) => !field.custom),\n          );\n\n    return !isValid ? null : (\n        <div className=\"vcard checkout-address--static\" data-test=\"static-address\">\n            {(address.firstName || address.lastName) && (\n                <p className=\"fn address-entry\">\n                    <span className=\"first-name\">{`${address.firstName} `}</span>\n                    <span className=\"family-name\">{address.lastName}</span>\n                </p>\n            )}\n\n            {(address.phone || address.company) && (\n                <p className=\"address-entry\">\n                    <span className=\"company-name\">{`${address.company} `}</span>\n                    <span className=\"tel\">{address.phone}</span>\n                </p>\n            )}\n\n            <div className=\"adr\">\n                <p className=\"street-address address-entry\">\n                    <span className=\"address-line-1\">{`${address.address1} `}</span>\n                    {address.address2 && (\n                        <span className=\"address-line-2\">{` / ${address.address2}`}</span>\n                    )}\n                </p>\n\n                <p className=\"address-entry\">\n                    {address.city && <span className=\"locality\">{`${address.city}, `}</span>}\n                    {address.localizedProvince && (\n                        <span className=\"region\">{`${address.localizedProvince}, `}</span>\n                    )}\n                    {address.postalCode && (\n                        <span className=\"postal-code\">{`${address.postalCode} / `}</span>\n                    )}\n                    {address.localizedCountry && (\n                        <span className=\"country-name\">{`${address.localizedCountry} `}</span>\n                    )}\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport function mapToStaticAddressProps(\n    context: CheckoutContextProps,\n    { address, type }: StaticAddressProps,\n): WithCheckoutStaticAddressProps | null {\n    const {\n        checkoutState: {\n            data: { getBillingCountries, getShippingCountries, getBillingAddressFields, getShippingAddressFields },\n        },\n    } = context;\n\n    return {\n        countries: type === AddressType.Billing\n            ? getBillingCountries()\n            : getShippingCountries(),\n        fields:\n            type === AddressType.Billing\n                ? getBillingAddressFields(address.countryCode)\n                : type === AddressType.Shipping\n                ? getShippingAddressFields(address.countryCode)\n                : undefined,\n    };\n}\n\nexport default withCheckout(mapToStaticAddressProps)(memo(StaticAddress));\n","import { memoize } from '@bigcommerce/memoize';\nimport { object, ObjectSchema, string, StringSchema } from 'yup';\n\nimport getCustomFormFieldsValidationSchema, {\n    FormFieldsValidationSchemaOptions,\n} from './getCustomFormFieldsValidationSchema';\n\nexport const WHITELIST_REGEXP = /^[^<>]*$/;\n\nexport interface FormFieldValues {\n    [key: string]: string | { [id: string]: any };\n}\n\nexport default memoize(function getFormFieldsValidationSchema({\n    formFields,\n    translate = () => undefined,\n}: FormFieldsValidationSchemaOptions): ObjectSchema<FormFieldValues> {\n    return object({\n        ...formFields\n            .filter(({ custom }) => !custom)\n            .reduce((schema, { name, required, label }) => {\n                schema[name] = string();\n\n                if (required) {\n                    schema[name] = schema[name]\n                        .trim()\n                        .required(translate('required', { label, name }));\n                }\n\n                schema[name] = schema[name].matches(\n                    WHITELIST_REGEXP,\n                    translate('invalid', { name, label }),\n                );\n\n                return schema;\n            }, {} as { [key: string]: StringSchema }),\n    }).concat(\n        getCustomFormFieldsValidationSchema({ formFields, translate }),\n    ) as ObjectSchema<FormFieldValues>;\n});\n","import { FormField, LanguageService } from '@bigcommerce/checkout-sdk';\nimport { memoize } from 'lodash';\nimport { ObjectSchema } from 'yup';\n\nimport {\n    FormFieldValues,\n    getFormFieldsValidationSchema,\n    TranslateValidationErrorFunction,\n} from '../formFields';\n\nexport interface AddressFormFieldsValidationSchemaOptions {\n    formFields: FormField[];\n    language?: LanguageService;\n}\n\nexport function getTranslateAddressError(\n    language?: LanguageService,\n): TranslateValidationErrorFunction {\n    const requiredFieldErrorTranslationIds: { [fieldName: string]: string } = {\n        countryCode: 'address.country',\n        firstName: 'address.first_name',\n        lastName: 'address.last_name',\n        company: 'address.company_name',\n        address1: 'address.address_line_1',\n        address2: 'address.address_line_2',\n        city: 'address.city',\n        stateOrProvince: 'address.state',\n        stateOrProvinceCode: 'address.state',\n        postalCode: 'address.postal_code',\n        phone: 'address.phone_number',\n    };\n\n    return (type, { label, name, min, max }) => {\n        if (!language) {\n            return;\n        }\n\n        if (type === 'required') {\n            if (requiredFieldErrorTranslationIds[name]) {\n                return language.translate(\n                    `${requiredFieldErrorTranslationIds[name]}_required_error`,\n                );\n            }\n\n            return language.translate(`address.custom_required_error`, { label });\n        }\n\n        if (type === 'max' && max) {\n            return language.translate(`address.custom_max_error`, { label, max });\n        }\n\n        if (type === 'min' && min) {\n            return language.translate(`address.custom_max_error`, { label, min });\n        }\n\n        if (type === 'invalid') {\n            return language.translate(`address.invalid_characters_error`, { label });\n        }\n    };\n}\n\nexport default memoize(function getAddressFormFieldsValidationSchema({\n    formFields,\n    language,\n}: AddressFormFieldsValidationSchemaOptions): ObjectSchema<FormFieldValues> {\n    return getFormFieldsValidationSchema({\n        formFields,\n        translate: getTranslateAddressError(language),\n    });\n});\n","import { Address, FormField } from '@bigcommerce/checkout-sdk';\n\nimport getAddressFormFieldsValidationSchema from './getAddressFormFieldsValidationSchema';\nimport mapAddressToFormValues from './mapAddressToFormValues';\n\nexport default function isValidAddress(address: Address, formFields: FormField[]): boolean {\n    const addressSchema = getAddressFormFieldsValidationSchema({ formFields });\n\n    return addressSchema.isValidSync(mapAddressToFormValues(formFields, address));\n}\n","import { Address, AddressKey, FormField } from '@bigcommerce/checkout-sdk';\n\nimport { DynamicFormFieldType } from '../ui/form';\n\nexport type AddressFormValues = Pick<Address, Exclude<AddressKey, 'customFields'>> & {\n    customFields: { [id: string]: any };\n};\n\nexport default function mapAddressToFormValues(\n    fields: FormField[],\n    address?: Address,\n): AddressFormValues {\n    const values = {\n        ...fields.reduce(\n            (addressFormValues, { name, custom, fieldType, default: defaultValue }) => {\n                if (custom) {\n                    if (!addressFormValues.customFields) {\n                        addressFormValues.customFields = {};\n                    }\n\n                    const field =\n                        address &&\n                        address.customFields &&\n                        address.customFields.find(({ fieldId }) => fieldId === name);\n\n                    const fieldValue = field && field.fieldValue;\n\n                    addressFormValues.customFields[name] = getValue(\n                        fieldType,\n                        fieldValue,\n                        defaultValue,\n                    );\n\n                    return addressFormValues;\n                }\n\n                if (isSystemAddressFieldName(name)) {\n                    const fieldValue = address && address[name];\n\n                    addressFormValues[name] = getValue(\n                        fieldType,\n                        fieldValue,\n                        defaultValue,\n                    )?.toString() || '';\n                }\n\n                return addressFormValues;\n            },\n            {} as AddressFormValues,\n        ),\n    };\n\n    values.shouldSaveAddress =\n        address && address.shouldSaveAddress !== undefined ? address.shouldSaveAddress : true;\n\n    // Manually backfill stateOrProvince to avoid Formik warning (uncontrolled to controlled input)\n    if (values.stateOrProvince === undefined) {\n        values.stateOrProvince = '';\n    }\n\n    if (values.stateOrProvinceCode === undefined) {\n        values.stateOrProvinceCode = '';\n    }\n\n    return values;\n}\n\nfunction getValue(\n    fieldType?: string,\n    fieldValue?: string | string[] | number,\n    defaultValue?: string,\n): string | string[] | number | Date | undefined {\n    if (fieldValue === undefined || fieldValue === null) {\n        return getDefaultValue(fieldType, defaultValue);\n    }\n\n    if (fieldType === DynamicFormFieldType.date && typeof fieldValue === 'string') {\n        if (fieldValue) {\n            const [year, month, day] = fieldValue.split('-');\n\n            return new Date(Number(year), Number(month)-1, Number(day));\n        }\n\n        return undefined;\n    }\n\n    return fieldValue;\n}\n\nfunction getDefaultValue(fieldType?: string, defaultValue?: string): string | string[] | Date {\n    if (defaultValue && fieldType === DynamicFormFieldType.date) {\n        return new Date(defaultValue);\n    }\n\n    if (fieldType === DynamicFormFieldType.checkbox) {\n        return [];\n    }\n\n    return defaultValue || '';\n}\n\nfunction isSystemAddressFieldName(\n    fieldName: string,\n): fieldName is Exclude<keyof Address, 'customFields' | 'shouldSaveAddress'> {\n    return fieldName !== 'customFields' && fieldName !== 'shouldSaveAddress';\n}\n","import { AnalyticsContext } from '@bigcommerce/checkout/analytics';\nimport { createInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nconst withAnalytics = createInjectHoc(AnalyticsContext, { displayNamePrefix: 'WithAnalytics' });\n\nexport default withAnalytics;\n","import { Address, CheckoutPayment, FormField } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { isPayPalFastlaneAddress, PoweredByPayPalFastlaneLabel, usePayPalFastlaneAddress } from '@bigcommerce/checkout/paypal-fastlane-integration';\n\nimport { AddressType, StaticAddress } from '../address';\nimport { withCheckout } from '../checkout';\nimport { EMPTY_ARRAY } from '../common/utility';\n\nexport interface StaticBillingAddressProps {\n    address: Address;\n}\n\ninterface WithCheckoutStaticBillingAddressProps {\n    fields: FormField[];\n    payments?: CheckoutPayment[];\n}\n\nconst StaticBillingAddress: FunctionComponent<\n    StaticBillingAddressProps & WithCheckoutStaticBillingAddressProps\n> = ({ address, payments = EMPTY_ARRAY }) => {\n    const { paypalFastlaneAddresses } = usePayPalFastlaneAddress();\n    const showPayPalFastlaneLabel = isPayPalFastlaneAddress(address, paypalFastlaneAddresses);\n\n    if (payments.find((payment) => payment.providerId === 'amazonpay')) {\n        return (\n            <p>\n                <TranslatedString id=\"billing.billing_address_amazonpay\" />\n            </p>\n        );\n    }\n\n    return (\n        <>\n            <StaticAddress address={address} type={AddressType.Billing} />\n\n            {showPayPalFastlaneLabel && <PoweredByPayPalFastlaneLabel />}\n        </>\n    );\n};\n\nexport function mapToStaticBillingAddressProps(\n    { checkoutState }: CheckoutContextProps,\n    { address }: StaticBillingAddressProps,\n): WithCheckoutStaticBillingAddressProps | null {\n    const {\n        data: { getBillingAddressFields, getCheckout },\n    } = checkoutState;\n\n    const checkout = getCheckout();\n\n    return {\n        fields: getBillingAddressFields(address.countryCode),\n        payments: checkout && checkout.payments,\n    };\n}\n\nexport default withCheckout(mapToStaticBillingAddressProps)(memo(StaticBillingAddress));\n","import CheckoutSupport from './CheckoutSupport';\n\nexport default class NoopCheckoutSupport implements CheckoutSupport {\n    isSupported(): boolean {\n        return true;\n    }\n}\n","import { CustomError, setPrototypeOf } from '../../common/error';\n\nexport class EmbeddedCheckoutUnsupportedError extends CustomError {\n    constructor(message: string) {\n        super({\n            name: 'EMBEDDED_CHECKOUT_UNSUPPORTED_ERROR',\n            message,\n        });\n\n        setPrototypeOf(this, EmbeddedCheckoutUnsupportedError.prototype);\n    }\n}\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { CheckoutSupport } from '../checkout';\n\nimport { EmbeddedCheckoutUnsupportedError } from './errors';\n\nexport default class EmbeddedCheckoutSupport implements CheckoutSupport {\n    constructor(private unsupportedMethods: string[], private langService: LanguageService) {}\n\n    isSupported(...ids: string[]): boolean {\n        const unsupportedMethods = ids.filter((id) => this.unsupportedMethods.indexOf(id) >= 0);\n\n        if (unsupportedMethods.length === 0) {\n            return true;\n        }\n\n        throw new EmbeddedCheckoutUnsupportedError(\n            this.langService.translate('embedded_checkout.unsupported_error', {\n                methods: unsupportedMethods.join(', '),\n            }),\n        );\n    }\n}\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { CheckoutSupport, NoopCheckoutSupport } from '../checkout';\n\nimport EmbeddedCheckoutSupport from './EmbeddedCheckoutSupport';\nimport isEmbedded from './isEmbedded';\n\nconst UNSUPPORTED_METHODS = ['afterpay', 'applepay', 'amazonpay', 'googlepay', 'klarna', 'masterpass'];\n\nexport default function createEmbeddedCheckoutSupport(language: LanguageService): CheckoutSupport {\n    return isEmbedded()\n        ? new EmbeddedCheckoutSupport(UNSUPPORTED_METHODS, language)\n        : new NoopCheckoutSupport();\n}\n","import { createInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport { ExtensionContext } from './ExtensionContext';\n\nexport const withExtension = createInjectHoc(ExtensionContext, {\n    displayNamePrefix: 'WithExtension',\n});\n","import React, { PureComponent, ReactNode } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\n\nimport { LoadingOverlay } from '../ui/loading';\n\nexport interface EmptyCartMessageProps {\n    waitInterval?: number;\n    loginUrl: string;\n}\n\ninterface EmptyCartMessageState {\n    isWaiting: boolean;\n}\n\nexport default class EmptyCartMessage extends PureComponent<\n    EmptyCartMessageProps,\n    EmptyCartMessageState\n> {\n    state: EmptyCartMessageState = {\n        isWaiting: true,\n    };\n\n    private waitToken?: number;\n\n    componentDidMount(): void {\n        const { waitInterval } = this.props;\n\n        this.waitToken = setTimeout(() => {\n            this.setState({ isWaiting: false });\n        }, waitInterval);\n    }\n\n    componentWillUnmount(): void {\n        clearInterval(this.waitToken);\n    }\n\n    render(): ReactNode {\n        const { loginUrl } = this.props;\n        const { isWaiting } = this.state;\n\n        return (\n            <LoadingOverlay hideContentWhenLoading isLoading={isWaiting}>\n                <TranslatedHtml data={{ url: loginUrl }} id=\"cart.empty_cart_message\" />\n            </LoadingOverlay>\n        );\n    }\n}\n","enum CustomerViewType {\n    Guest = 'guest',\n    Login = 'login',\n    SuggestedLogin = 'suggested_login',\n    EnforcedLogin = 'enforced_login',\n    CancellableEnforcedLogin = 'cancellable_enforced_login',\n    CreateAccount = 'create_account',\n}\n\nexport default CustomerViewType;\n","import React, { FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\n\ninterface WalletButtonsProps {\n    buttonsCount: number;\n}\n\nconst WalletButtonContainerSkeleton: FunctionComponent<\n    LoadingSkeletonProps & WalletButtonsProps\n> = ({ buttonsCount, children, isLoading }) => {\n    const renderWhileLoading = true;\n    const skeleton = (\n        <div className=\"checkoutRemote customer-skeleton\">\n            {Array(buttonsCount)\n                .fill(0)\n                .map((_v, i) => (\n                    <div className=\"skeleton-container\" key={`skeleton-container-${i}`}>\n                        <div className=\"input-skeleton\" />\n                    </div>\n                ))}\n        </div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, renderWhileLoading, skeleton }} />;\n};\n\nexport default WalletButtonContainerSkeleton;\n","interface ApplePayWindow extends Window {\n    ApplePaySession: void;\n}\n\nexport default function isApplePayWindow(window: Window): window is ApplePayWindow {\n    return 'ApplePaySession' in window;\n}\n","import { isApplePayWindow } from \"../common/utility\";\n\nconst APPLE_PAY = 'applepay';\n\n// TODO: The API should tell UI which payment method offers its own checkout button\nexport const SUPPORTED_METHODS: string[] = [\n    'amazonpay',\n    APPLE_PAY,\n    'braintreevisacheckout',\n    'braintreepaypal',\n    'braintreepaypalcredit',\n    'masterpass',\n    'paypalcommerce',\n    'paypalcommercevenmo',\n    'paypalcommercecredit',\n    'googlepayadyenv2',\n    'googlepayadyenv3',\n    'googlepayauthorizenet',\n    'googlepaybnz',\n    'googlepaybraintree',\n    'googlepaycheckoutcom',\n    'googlepaycybersourcev2',\n    'googlepayorbital',\n    'googlepaystripe',\n    'googlepaystripeupe',\n    'googlepayworldpayaccess',\n    'googlepaypaypalcommerce',\n    'googlepaytdonlinemart',\n];\n\nexport const getSupportedMethodIds = (methodIds: string[]): string[] => {\n    return methodIds.filter((methodId) => {\n        if (methodId === APPLE_PAY && !isApplePayWindow(window)) {\n            return false;\n        }\n\n        return SUPPORTED_METHODS.indexOf(methodId) !== -1;\n    });\n}\n","import { CustomerInitializeOptions, CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { PureComponent } from 'react';\n\nconst WALLET_BUTTON_HEIGHT = 36;\n\nexport interface CheckoutButtonProps {\n    containerId: string;\n    methodId: string;\n    isShowingWalletButtonsOnTop?: boolean;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onError?(error: Error): void;\n    onClick?(methodId: string): void;\n}\n\nexport default class CheckoutButton extends PureComponent<CheckoutButtonProps> {\n    componentDidMount() {\n        const {\n            containerId,\n            initialize,\n            isShowingWalletButtonsOnTop,\n            methodId,\n            onError,\n            onClick = noop,\n        } = this.props;\n\n        const heightOption = isShowingWalletButtonsOnTop && (methodId === 'braintreepaypal' || methodId === 'braintreepaypalcredit' )\n            ? { buttonHeight: WALLET_BUTTON_HEIGHT }\n            : {};\n\n        initialize({\n            methodId,\n            [methodId]: {\n                ...heightOption,\n                container: containerId,\n                onError,\n                onClick: () => onClick(methodId),\n            },\n        });\n    }\n\n    componentWillUnmount() {\n        const { deinitialize, methodId } = this.props;\n\n        deinitialize({ methodId });\n    }\n\n    render() {\n        const { containerId } = this.props;\n\n        return <div id={containerId} />;\n    }\n}\n","import { noop } from 'lodash';\n\nimport { isBuyNowCart } from '../common/utility';\n\nexport default function navigateToOrderConfirmation(\n    orderId?: number,\n): Promise<never> {\n    let url: string;\n\n    if (orderId && isBuyNowCart()) {\n        url = `/checkout/order-confirmation/${orderId.toString()}`;\n    } else {\n        url = `${window.location.pathname.replace(/\\/$/, '')}/order-confirmation`;\n    }\n\n    window.location.replace(url);\n\n    return new Promise(noop);\n}\n","import { CustomerInitializeOptions } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, useCallback, useContext } from 'react';\n\nimport { LocaleContext } from '@bigcommerce/checkout/locale';\n\nimport { navigateToOrderConfirmation } from '../../checkout';\nimport CheckoutButton, { CheckoutButtonProps } from '../CheckoutButton';\n\nconst ApplePayButton: FunctionComponent<CheckoutButtonProps> = ({\n    initialize,\n    onError,\n    onClick = noop,\n    ...rest\n}) => {\n    const localeContext = useContext(LocaleContext);\n    const initializeOptions = useCallback(\n        (options: CustomerInitializeOptions) =>\n            initialize({\n                ...options,\n                applepay: {\n                    container: rest.containerId,\n                    shippingLabel: localeContext?.language.translate('cart.shipping_text'),\n                    subtotalLabel: localeContext?.language.translate('cart.subtotal_text'),\n                    onError,\n                    onClick: () => onClick(rest.methodId),\n                    onPaymentAuthorize: navigateToOrderConfirmation,\n                },\n            }),\n        [initialize, localeContext, onError, rest.containerId],\n    );\n\n    return <CheckoutButton initialize={initializeOptions} {...rest} />;\n};\n\nexport default ApplePayButton;\n","import React, { FunctionComponent, useEffect } from 'react';\n\nimport CheckoutButton, { CheckoutButtonProps } from '../CheckoutButton';\n\nconst AmazonPayV2Button: FunctionComponent<CheckoutButtonProps> = (props) => {\n    useEffect(() => {\n        beautifyAmazonButton();\n    }, []);\n\n    return (\n        <div className=\"AmazonPayContainer\">\n            <CheckoutButton {...props} />\n        </div>\n    );\n}\n\nexport default AmazonPayV2Button;\n\nconst beautifyAmazonButton = (): void => {\n    if (!document.querySelector('.checkout-button-container')) {\n        return;\n    }\n\n    const container = document.querySelector('#amazonpayCheckoutButton > div') as unknown as HTMLElement;\n    const amazonButton = container?.shadowRoot?.querySelector('.amazonpay-button-view1') as unknown as HTMLElement;\n\n    if (container && amazonButton) {\n        amazonButton.style.height = '36px';\n\n        return;\n    }\n\n    setTimeout(beautifyAmazonButton, 10);\n}\n","import { CustomerInitializeOptions } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, useCallback, useContext } from 'react';\n\nimport { LocaleContext } from '@bigcommerce/checkout/locale';\n\nimport { navigateToOrderConfirmation } from '../../checkout';\nimport CheckoutButton, { CheckoutButtonProps } from '../CheckoutButton';\n\nconst PayPalCommerceButton: FunctionComponent<CheckoutButtonProps> = ({\n    methodId,\n    initialize,\n    onError,\n    onClick = noop,\n    ...rest\n}) => {\n    const localeContext = useContext(LocaleContext);\n    const initializeOptions = useCallback(\n        (options: CustomerInitializeOptions) =>\n            initialize({\n                ...options,\n                [methodId]: {\n                    container: rest.containerId,\n                    onError,\n                    onClick: () => onClick(methodId),\n                    onComplete: navigateToOrderConfirmation,\n                },\n            }),\n        [initialize, localeContext, onError, rest.containerId],\n    );\n\n    return <CheckoutButton initialize={initializeOptions} methodId={methodId} {...rest} />;\n};\n\nexport default PayPalCommerceButton;\n","import { CustomerInitializeOptions, CustomerRequestOptions } from \"@bigcommerce/checkout-sdk\";\nimport React, { FunctionComponent } from \"react\";\n\nimport CheckoutButton from \"./CheckoutButton\";\nimport { AmazonPayV2Button, ApplePayButton, PayPalCommerceButton } from \"./customWalletButton\";\n\ninterface CheckoutButtonV1ResolverProps {\n    methodId: string;\n    deinitialize(options: CustomerRequestOptions): void;\n    isShowingWalletButtonsOnTop?: boolean;\n    initialize(options: CustomerInitializeOptions): void;\n    onError?(error: Error): void;\n    onClick?(methodName: string): void;\n}\n\nconst CheckoutButtonV1Resolver: FunctionComponent<CheckoutButtonV1ResolverProps> = ({\n    isShowingWalletButtonsOnTop= false,\n    onError,\n    methodId,\n    ...rest\n}) => {\n    switch (methodId) {\n        case 'applepay':\n            return (\n                <ApplePayButton\n                    containerId={`${methodId}CheckoutButton`}\n                    key={methodId}\n                    methodId={methodId}\n                    onError={onError}\n                    {...rest}\n                />\n            );\n\n        case 'amazonpay':\n            return (\n                <AmazonPayV2Button\n                    containerId={`${methodId}CheckoutButton`}\n                    key={methodId}\n                    methodId={methodId}\n                    onError={onError}\n                    {...rest}\n                />\n            );\n\n        case 'paypalcommerce':\n        case 'paypalcommercecredit':\n            return (\n                <PayPalCommerceButton\n                    containerId={`${methodId}CheckoutButton`}\n                    key={methodId}\n                    methodId={methodId}\n                    onError={onError}\n                    {...rest}\n                />\n            );\n    }\n\n    return <CheckoutButton\n            containerId={`${methodId}CheckoutButton`}\n            isShowingWalletButtonsOnTop={isShowingWalletButtonsOnTop}\n            key={methodId}\n            methodId={methodId}\n            onError={onError}\n            {...rest}\n        />;\n};\n\nexport default CheckoutButtonV1Resolver;\n","import { CheckoutSelectors, CheckoutService } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString, useLocale } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { WalletButtonsContainerSkeleton } from '@bigcommerce/checkout/ui';\n\n\nimport { withCheckout } from '../checkout';\n\nimport { getSupportedMethodIds } from './getSupportedMethods';\nimport resolveCheckoutButton from './resolveCheckoutButton';\nimport CheckoutButtonV1Resolver from './WalletButtonV1Resolver';\n\ninterface CheckoutButtonContainerProps {\n    isPaymentStepActive: boolean;\n    checkEmbeddedSupport(methodIds: string[]): void;\n    onUnhandledError(error: Error): void;\n    onWalletButtonClick(methodId: string): void;\n}\n\ninterface WithCheckoutCheckoutButtonContainerProps {\n    availableMethodIds: string[];\n    checkoutState: CheckoutSelectors;\n    checkoutService: CheckoutService;\n    isLoading: boolean;\n}\n\nconst paypalCommerceIds = [\n    'paypalcommerce',\n    'paypalcommercecredit',\n    'paypalcommercevenmo',\n];\n\nconst isPayPalCommerce = (methodId: string): boolean => paypalCommerceIds.includes(methodId);\n\nconst CheckoutButtonContainer: FunctionComponent<CheckoutButtonContainerProps & WithCheckoutCheckoutButtonContainerProps> = (\n    {\n        availableMethodIds,\n        checkoutService,\n        checkoutState,\n        checkEmbeddedSupport,\n        isLoading,\n        isPaymentStepActive,\n        onUnhandledError,\n        onWalletButtonClick,\n    }) => {\n    const { language } = useLocale();\n\n    try {\n        checkEmbeddedSupport(availableMethodIds);\n    } catch (error) {\n        return null;\n    }\n\n    const renderButtons = () => availableMethodIds.map((methodId) => {\n        if (isPaymentStepActive && isPayPalCommerce(methodId)) {\n            return null;\n        }\n\n        const ResolvedCheckoutButton = resolveCheckoutButton({ id: methodId });\n\n        if (!ResolvedCheckoutButton) {\n            return <CheckoutButtonV1Resolver\n                deinitialize={checkoutService.deinitializeCustomer}\n                initialize={checkoutService.initializeCustomer}\n                isShowingWalletButtonsOnTop={true}\n                key={methodId}\n                methodId={methodId}\n                onClick={onWalletButtonClick}\n                onError={onUnhandledError}\n            />\n        }\n\n        return <ResolvedCheckoutButton\n                    checkoutService={checkoutService}\n                    checkoutState={checkoutState}\n                    containerId={`${methodId}CheckoutButton`}\n                    key={methodId}\n                    language={language}\n                    methodId={methodId}\n                    onUnhandledError={onUnhandledError}\n                    onWalletButtonClick={onWalletButtonClick}\n                />;\n    });\n\n    return (\n        <div className='checkout-button-container'\n             style={ isPaymentStepActive ? { position: 'absolute', left: '0', top: '-100%' } : undefined }\n        >\n            <p>\n                <TranslatedString id=\"remote.start_with_text\" />\n            </p>\n            <div className='checkout-buttons-auto-layout'>\n                <WalletButtonsContainerSkeleton buttonsCount={availableMethodIds.length} isLoading={isLoading}>\n                    <div className=\"checkoutRemote\">\n                        {renderButtons()}\n                    </div>\n                </WalletButtonsContainerSkeleton>\n            </div>\n            <div className='checkout-separator'><span><TranslatedString id='remote.or_text' /></span></div>\n        </div>\n    );\n};\n\nfunction mapToCheckoutButtonContainerProps({\n    checkoutState,\n    checkoutService,\n}: CheckoutContextProps): WithCheckoutCheckoutButtonContainerProps | null {\n    const {\n        data: {\n            getConfig,\n            getCustomer,\n            isPaymentDataRequired,\n        },\n        statuses: {\n            isInitializedCustomer,\n        },\n        errors: {\n            getInitializeCustomerError,\n        }\n     } = checkoutState;\n    const config = getConfig();\n    const availableMethodIds = getSupportedMethodIds(config?.checkoutSettings.remoteCheckoutProviders ?? []);\n    const customer = getCustomer();\n\n    if (!isPaymentDataRequired()) {\n        return null;\n    }\n\n    if (!config || availableMethodIds.length === 0 || !customer?.isGuest) {\n        return null;\n    }\n\n    const isLoading = availableMethodIds.filter(\n        (methodId) => Boolean(getInitializeCustomerError(methodId)) || isInitializedCustomer(methodId)\n    ).length !== availableMethodIds.length;\n\n    return {\n        checkoutService,\n        checkoutState,\n        availableMethodIds,\n        isLoading,\n    }\n}\n\nexport default memo(withCheckout(mapToCheckoutButtonContainerProps)(CheckoutButtonContainer));\n","import { ComponentType } from 'react';\n\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nimport { resolveComponent } from '../common/resolver';\n\nexport default function resolveCheckoutButton(\n    resolveId: CheckoutButtonResolveId,\n): ComponentType<CheckoutButtonProps> | undefined {\n    return resolveComponent<CheckoutButtonResolveId, CheckoutButtonProps>(\n        resolveId,\n        require('../generated/checkoutButtons'),\n    );\n}\n","import { useContext, useMemo } from 'react';\n\nimport AnalyticsContext from './AnalyticsContext';\n\nconst useAnalytics = () => {\n    const analyticsContext = useContext(AnalyticsContext);\n\n    if (!analyticsContext) {\n        throw new Error('useAnalytics must be used within an <AnalyticsProvider>');\n    }\n\n    return useMemo(\n        () => ({\n            analyticsTracker: analyticsContext.analyticsTracker,\n        }),\n        [analyticsContext],\n    );\n};\n\nexport default useAnalytics;\n","import {\n    CheckoutSelectors,\n    CustomerInitializeOptions,\n    CustomerRequestOptions,\n    ExecutePaymentMethodCheckoutOptions,\n} from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, useEffect, useState } from 'react';\n\nimport { useAnalytics } from '@bigcommerce/checkout/analytics';\nimport { stopPropagation } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button } from '../../ui/button';\nimport { IconBolt } from '../../ui/icon';\n\nexport interface BoltCheckoutSuggestionProps {\n    isExecutingPaymentMethodCheckout: boolean;\n    methodId: string;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n    onUnhandledError?(error: Error): void;\n}\n\nconst BoltCheckoutSuggestion: FunctionComponent<BoltCheckoutSuggestionProps> = ({\n    isExecutingPaymentMethodCheckout,\n    methodId,\n    deinitializeCustomer,\n    executePaymentMethodCheckout,\n    initializeCustomer,\n    onUnhandledError = noop,\n}) => {\n    const [showSuggestion, setShowSuggestion] = useState<boolean>(false);\n    const { analyticsTracker } = useAnalytics();\n\n    useEffect(() => {\n        deinitializeCustomer({ methodId });\n\n        try {\n            initializeCustomer({\n                methodId,\n                bolt: {\n                    onInit: (hasBoltAccount, email) => {\n                        setShowSuggestion(hasBoltAccount);\n\n                        if (email) {\n                            analyticsTracker.customerSuggestionInit({hasBoltAccount});\n                        }\n                    },\n                },\n            });\n        } catch (error) {\n            onUnhandledError(error);\n        }\n\n        return () => {\n            deinitializeCustomer({ methodId });\n        };\n    }, [initializeCustomer, deinitializeCustomer, methodId, onUnhandledError]);\n\n    if (!showSuggestion) {\n        return null;\n    }\n\n    const handleActionClick = async () => {\n        await executePaymentMethodCheckout({ methodId });\n    };\n\n    return (\n        <div className=\"checkoutSuggestion\" onClick={stopPropagation()}>\n            <p className=\"checkoutSuggestion-message\">\n                <TranslatedString\n                    data={{\n                        provider: 'Bolt',\n                        providerFlow: 'Bolt Checkout',\n                    }}\n                    id=\"customer.suggestion_text\"\n                />\n            </p>\n            <Button\n                className=\"checkoutSuggestion-button checkoutSuggestion-button--bolt\"\n                data-test=\"suggestion-action-button\"\n                isLoading={isExecutingPaymentMethodCheckout}\n                onClick={handleActionClick}\n            >\n                <IconBolt additionalClassName=\"checkoutSuggestion-button-icon--bolt\" />\n                <TranslatedString\n                    data={{ providerFlow: 'Bolt Checkout' }}\n                    id=\"customer.suggestion_action\"\n                />\n            </Button>\n        </div>\n    );\n};\n\nexport default memo(BoltCheckoutSuggestion);\n","import { SyntheticEvent } from 'react';\n\nexport default function stopPropagation<\n    TFunc extends (event: TEvent, ...args: any[]) => any,\n    TEvent extends SyntheticEvent,\n>(fn?: TFunc): (event: TEvent) => void {\n    return (event) => {\n        event.stopPropagation();\n\n        if (fn) {\n            fn(event);\n        }\n    };\n}\n","import {\n    CheckoutSelectors,\n    CustomerInitializeOptions,\n    CustomerRequestOptions,\n    ExecutePaymentMethodCheckoutOptions,\n} from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { useAnalytics } from '@bigcommerce/checkout/analytics';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { withCheckout } from '../../checkout';\nimport { PaymentMethodId } from '../../payment/paymentMethod';\n\n\nimport BoltCheckoutSuggestion from './BoltCheckoutSuggestion';\n\nexport interface CheckoutSuggestionProps {\n    onUnhandledError?(error: Error): void;\n}\n\nexport interface WithCheckoutSuggestionsProps {\n    isExecutingPaymentMethodCheckout: boolean;\n    providerWithCustomCheckout?: string;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n}\n\nconst CheckoutSuggestion: FunctionComponent<\n    WithCheckoutSuggestionsProps & CheckoutSuggestionProps\n> = ({\n    providerWithCustomCheckout,\n    executePaymentMethodCheckout,\n    ...rest\n}) => {\n    const { analyticsTracker } = useAnalytics();\n\n    const handleExecutePaymentMethodCheckout = (options: ExecutePaymentMethodCheckoutOptions) => {\n        analyticsTracker.customerSuggestionExecute();\n\n        return executePaymentMethodCheckout(options);\n    }\n\n    if (providerWithCustomCheckout === PaymentMethodId.Bolt) {\n        return <BoltCheckoutSuggestion\n                    executePaymentMethodCheckout={handleExecutePaymentMethodCheckout}\n                    methodId={providerWithCustomCheckout}\n                    {...rest}\n                />;\n    }\n\n    return null;\n};\n\nconst mapToCheckoutSuggestionProps = ({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutSuggestionsProps | null => {\n    const {\n        data: { getCheckout, getConfig },\n        statuses: { isExecutingPaymentMethodCheckout },\n    } = checkoutState;\n\n    const checkout = getCheckout();\n    const config = getConfig();\n\n    if (!checkout || !config) {\n        return null;\n    }\n\n    return {\n        deinitializeCustomer: checkoutService.deinitializeCustomer,\n        executePaymentMethodCheckout: checkoutService.executePaymentMethodCheckout,\n        initializeCustomer: checkoutService.initializeCustomer,\n        isExecutingPaymentMethodCheckout: isExecutingPaymentMethodCheckout(),\n        providerWithCustomCheckout: config.checkoutSettings.providerWithCustomCheckout || undefined,\n    };\n};\n\nexport default withCheckout(mapToCheckoutSuggestionProps)(memo(CheckoutSuggestion));\n","import { CustomerInitializeOptions, CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { isApplePayWindow } from '../common/utility';\n\nimport CheckoutButton from './CheckoutButton';\nimport { AmazonPayV2Button, ApplePayButton, PayPalCommerceButton } from './customWalletButton';\n\nconst APPLE_PAY = 'applepay';\n\n// TODO: The API should tell UI which payment method offers its own checkout button\nexport const SUPPORTED_METHODS: string[] = [\n    'amazonpay',\n    APPLE_PAY,\n    'braintreevisacheckout',\n    'braintreepaypal',\n    'braintreepaypalcredit',\n    'chasepay',\n    'masterpass',\n    'paypalcommerce',\n    'paypalcommercevenmo',\n    'paypalcommercecredit',\n    'googlepayadyenv2',\n    'googlepayadyenv3',\n    'googlepayauthorizenet',\n    'googlepaybnz',\n    'googlepaybraintree',\n    'googlepaypaypalcommerce',\n    'googlepaycheckoutcom',\n    'googlepaycybersourcev2',\n    'googlepayorbital',\n    'googlepaystripe',\n    'googlepaystripeupe',\n    'googlepayworldpayaccess',\n];\n\nexport interface CheckoutButtonListProps {\n    methodIds?: string[];\n    isInitializing?: boolean;\n    isShowingWalletButtonsOnTop?: boolean;\n    hideText?: boolean;\n    checkEmbeddedSupport?(methodIds: string[]): void;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onError?(error: Error): void;\n    onClick?(methodId: string): void;\n}\n\nexport const filterUnsupportedMethodIds = (methodIds:string[]): string[] => {\n    return (methodIds).filter((methodId) => {\n        if (methodId === APPLE_PAY && !isApplePayWindow(window)) {\n            return false;\n        }\n\n        return SUPPORTED_METHODS.indexOf(methodId) !== -1;\n    });\n}\n\nconst CheckoutButtonList: FunctionComponent<CheckoutButtonListProps> = ({\n    checkEmbeddedSupport,\n    onError,\n    isInitializing = false,\n    isShowingWalletButtonsOnTop= false,\n    methodIds,\n    hideText = false,\n    ...rest\n}) => {\n    const supportedMethodIds = filterUnsupportedMethodIds(methodIds ?? []);\n\n    if (supportedMethodIds.length === 0) {\n        return null;\n    }\n\n    if (checkEmbeddedSupport) {\n        try {\n            checkEmbeddedSupport(supportedMethodIds);\n        } catch (error) {\n            if (error instanceof Error && onError) {\n                onError(error);\n            } else {\n                throw error;\n            }\n\n            return null;\n        }\n    }\n\n    return (\n        <>\n            {!isInitializing && !hideText && (\n                <p>\n                    <TranslatedString id=\"remote.continue_with_text\" />\n                </p>\n            )}\n\n            <div className=\"checkoutRemote\">\n                {supportedMethodIds.map((methodId) => {\n                    if (methodId === 'applepay') {\n                        return (\n                            <ApplePayButton\n                                containerId={`${methodId}CheckoutButton`}\n                                key={methodId}\n                                methodId={methodId}\n                                onError={onError}\n                                {...rest}\n                            />\n                        );\n                    }\n\n                    if (methodId === 'amazonpay') {\n                        return (\n                            <AmazonPayV2Button\n                                containerId={`${methodId}CheckoutButton`}\n                                key={methodId}\n                                methodId={methodId}\n                                onError={onError}\n                                {...rest}\n                            />\n                        );\n                    }\n\n                    if (methodId === 'paypalcommerce' || methodId === 'paypalcommercecredit') {\n                        return (\n                            <PayPalCommerceButton\n                                containerId={`${methodId}CheckoutButton`}\n                                key={methodId}\n                                methodId={methodId}\n                                onError={onError}\n                                {...rest}\n                            />\n                        );\n                    }\n\n                    return (\n                        <CheckoutButton\n                            containerId={`${methodId}CheckoutButton`}\n                            isShowingWalletButtonsOnTop={isShowingWalletButtonsOnTop}\n                            key={methodId}\n                            methodId={methodId}\n                            onError={onError}\n                            {...rest}\n                        />\n                    );\n                })}\n            </div>\n        </>\n    );\n};\n\nexport default memo(CheckoutButtonList);\n","import { Checkout, Customer } from '@bigcommerce/checkout-sdk';\nimport { every } from 'lodash';\n\nimport { SUPPORTED_METHODS } from './CheckoutButtonList';\n\nconst SUPPORTED_SIGNOUT_METHODS = ['amazonpay'];\n\nexport const isSupportedSignoutMethod = (methodId: string): boolean => {\n    return SUPPORTED_SIGNOUT_METHODS.indexOf(methodId) > -1;\n};\n\nexport default function canSignOut(\n    customer: Customer,\n    checkout: Checkout,\n    methodId: string,\n): boolean {\n    if (isSupportedSignoutMethod(methodId)) {\n        return true;\n    }\n\n    if (customer.isGuest) {\n        return false;\n    }\n\n    // Return false if payment method offers its own checkout button\n    return every(\n        checkout.payments,\n        (payment) => SUPPORTED_METHODS.indexOf(payment.providerId) === -1,\n    );\n}\n","import { CheckoutSelectors, CustomerRequestOptions, CustomError } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { withCheckout } from '../checkout';\nimport { isErrorWithType } from '../common/error';\nimport { Button, ButtonSize, ButtonVariant } from '../ui/button';\n\nimport canSignOut, { isSupportedSignoutMethod } from './canSignOut';\n\nexport interface CustomerInfoProps {\n    onSignOut?(event: CustomerSignOutEvent): void;\n    onSignOutError?(error: CustomError): void;\n}\n\nexport interface CustomerSignOutEvent {\n    isCartEmpty: boolean;\n}\n\ninterface WithCheckoutCustomerInfoProps {\n    email: string;\n    methodId: string;\n    isSignedIn: boolean;\n    isSigningOut: boolean;\n    signOut(options?: CustomerRequestOptions): Promise<CheckoutSelectors>;\n}\n\nconst CustomerInfo: FunctionComponent<CustomerInfoProps & WithCheckoutCustomerInfoProps> = ({\n    email,\n    methodId,\n    isSignedIn,\n    isSigningOut,\n    onSignOut = noop,\n    onSignOutError = noop,\n    signOut,\n}) => {\n    const handleSignOut: () => Promise<void> = async () => {\n        try {\n            if (isSupportedSignoutMethod(methodId)) {\n                await signOut({ methodId });\n                onSignOut({ isCartEmpty: false });\n                window.location.reload();\n            } else {\n                await signOut();\n                onSignOut({ isCartEmpty: false });\n            }\n        } catch (error) {\n            if (isErrorWithType(error) && error.type === 'checkout_not_available') {\n                onSignOut({ isCartEmpty: true });\n            } else {\n                onSignOutError(error);\n            }\n        }\n    };\n\n    return (\n        <div className=\"customerView\" data-test=\"checkout-customer-info\">\n            <div\n                className=\"customerView-body optimizedCheckout-contentPrimary\"\n                data-test=\"customer-info\"\n            >\n                {email}\n            </div>\n\n            <div className=\"customerView-actions\">\n                {isSignedIn && (\n                    <Button\n                        isLoading={isSigningOut}\n                        onClick={handleSignOut}\n                        size={ButtonSize.Tiny}\n                        testId=\"sign-out-link\"\n                        variant={ButtonVariant.Secondary}\n                    >\n                        <TranslatedString id=\"customer.sign_out_action\" />\n                    </Button>\n                )}\n            </div>\n        </div>\n    );\n};\n\nfunction mapToWithCheckoutCustomerInfoProps({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutCustomerInfoProps | null {\n    const {\n        data: { getBillingAddress, getCheckout, getCustomer },\n        statuses: { isSigningOut },\n    } = checkoutState;\n\n    const billingAddress = getBillingAddress();\n    const checkout = getCheckout();\n    const customer = getCustomer();\n\n    if (!billingAddress || !checkout || !customer) {\n        return null;\n    }\n\n    const methodId =\n        checkout.payments && checkout.payments.length === 1 ? checkout.payments[0].providerId : '';\n\n    return {\n        email: billingAddress.email || customer.email,\n        methodId,\n        isSignedIn: canSignOut(customer, checkout, methodId),\n        isSigningOut: isSigningOut(),\n        signOut: checkoutService.signOutCustomer,\n    };\n}\n\nexport default withCheckout(mapToWithCheckoutCustomerInfoProps)(CustomerInfo);\n","import React, { FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\n\nconst CustomerSkeleton: FunctionComponent<LoadingSkeletonProps> = ({ children, isLoading }) => {\n    const skeleton = (\n        <div className=\"checkout-form customer-skeleton\">\n            <div className=\"customerEmail-container\">\n                <div className=\"customerEmail-body\">\n                    <div className=\"skeleton-container\">\n                        <div className=\"input-skeleton\" />\n                    </div>\n                    <div className=\"button-skeleton skeleton-container subscription-skeleton\" />\n                </div>\n                <div className=\"customerEmail-action customerEmail-floating--enabled\">\n                    <div className=\"button-skeleton skeleton-container\" />\n                </div>\n            </div>\n        </div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, skeleton }} />;\n};\n\nexport default CustomerSkeleton;\n","// NOTE: This is a legacy regex used to create accounts, more flexible than the current used one\n// we need to keep this regex for login validation as accounts might have been created using this regex\nexport const EMAIL_REGEXP =\n    /^[a-z0-9!#$%&'*+/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\nimport { object, ObjectSchema, string } from 'yup';\n\nimport { EMAIL_REGEXP } from './validationPatterns';\n\nexport interface EmailValidationSchemaOptions {\n    language: LanguageService;\n}\n\nexport default function getEmailValidationSchema({\n    language,\n}: EmailValidationSchemaOptions): ObjectSchema<{ email: string }> {\n    return object({\n        email: string()\n            .max(256)\n            .matches(EMAIL_REGEXP, language.translate('customer.email_invalid_error'))\n            .required(language.translate('customer.email_required_error')),\n    });\n}\n","import { FormField, LanguageService } from '@bigcommerce/checkout-sdk';\nimport { memoize } from '@bigcommerce/memoize';\nimport { object, ObjectSchema, string } from 'yup';\n\nimport {\n    CustomFormFieldValues,\n    getCustomFormFieldsValidationSchema,\n    TranslateValidationErrorFunction,\n} from '../formFields';\n\nimport getEmailValidationSchema from './getEmailValidationSchema';\nimport { PasswordRequirements } from './getPasswordRequirements';\n\nexport type CreateAccountFormValues = {\n    firstName: string;\n    lastName: string;\n    email: string;\n    password: string;\n    acceptsMarketingEmails?: string[];\n    token?: string;\n} & CustomFormFieldValues;\n\nexport interface CreateCustomerValidationSchema {\n    formFields: FormField[];\n    language: LanguageService;\n    passwordRequirements: PasswordRequirements;\n}\n\nfunction getTranslateCreateCustomerError(\n    language?: LanguageService,\n): TranslateValidationErrorFunction {\n    return (type, { label, min, max }) => {\n        if (!language) {\n            return;\n        }\n\n        if (type === 'required') {\n            return language.translate('customer.required_error', { label });\n        }\n\n        if (type === 'max' && max) {\n            return language.translate('customer.max_error', { label, max });\n        }\n\n        if (type === 'min' && min) {\n            return language.translate('customer.min_error', { label, min });\n        }\n\n        if (type === 'invalid') {\n            return language.translate('customer.invalid_characters_error', { label });\n        }\n    };\n}\n\nexport default memoize(function getCreateCustomerValidationSchema({\n    formFields,\n    language,\n    passwordRequirements: { description, numeric, alpha, minLength },\n}: CreateCustomerValidationSchema): ObjectSchema<CreateAccountFormValues> {\n    return object({\n        firstName: string().required(language.translate('address.first_name_required_error')),\n        lastName: string().required(language.translate('address.last_name_required_error')),\n        password: string()\n            .required(language.translate('customer.password_required_error') || description)\n            .matches(\n                numeric,\n                language.translate('customer.password_number_required_error') || description,\n            )\n            .matches(\n                alpha,\n                language.translate('customer.password_letter_required_error') || description,\n            )\n            .min(\n                minLength,\n                language.translate('customer.password_under_minimum_length_error' || description),\n            )\n            .max(100, language.translate('customer.password_over_maximum_length_error')),\n    })\n        .concat(getEmailValidationSchema({ language }))\n        .concat(\n            getCustomFormFieldsValidationSchema({\n                formFields,\n                translate: getTranslateCreateCustomerError(language),\n            }),\n        );\n});\n","import { FormField } from '@bigcommerce/checkout-sdk';\nimport { FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, useMemo } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\n\nimport { isRequestError } from '../common/error';\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { DynamicFormField, Fieldset, Form } from '../ui/form';\n\nimport getCreateCustomerValidationSchema, {\n    CreateAccountFormValues,\n} from './getCreateCustomerValidationSchema';\nimport getPasswordRequirements from './getPasswordRequirements';\nimport './CreateAccountForm.scss';\n\nexport interface CreateAccountFormProps {\n    formFields: FormField[];\n    createAccountError?: Error;\n    fixNewsletterCheckboxExperimentEnabled: boolean;\n    isCreatingAccount?: boolean;\n    isExecutingPaymentMethodCheckout?: boolean;\n    requiresMarketingConsent: boolean;\n    defaultShouldSubscribe: boolean;\n    isFloatingLabelEnabled?: boolean;\n    onCancel?(): void;\n    onSubmit(values: CreateAccountFormValues): void;\n}\n\nfunction getAcceptsMarketingEmailsDefault(defaultShouldSubscribe: boolean, requiresMarketingConsent: boolean): string[] {\n    if (defaultShouldSubscribe) {\n        return ['1'];\n    }\n\n    return requiresMarketingConsent ? [] : ['0'];\n}\n\nfunction transformFormFieldsData(formFields: FormField[], defaultShouldSubscribe: boolean): FormField[] {\n    return formFields.map(field => {\n        if (field.name === 'acceptsMarketingEmails') {\n            const { options } = field;\n            const items = options?.items || [];\n            \n            const updatedItems = items.map(item => {\n                return {\n                    value: defaultShouldSubscribe ? '1' : item.value,\n                    label: item.label,\n                }\n            });\n\n            return {\n                ...field,\n                options: {\n                    items: updatedItems,\n                }\n            }\n        }\n\n        return field;\n    });\n}\n\nconst CreateAccountForm: FunctionComponent<\n    CreateAccountFormProps & WithLanguageProps & FormikProps<CreateAccountFormValues>\n> = ({ fixNewsletterCheckboxExperimentEnabled, formFields, createAccountError, isCreatingAccount, isExecutingPaymentMethodCheckout, onCancel, isFloatingLabelEnabled, defaultShouldSubscribe }) => {\n    const createAccountErrorMessage = useMemo(() => {\n        if (!createAccountError) {\n            return;\n        }\n\n        if (isRequestError(createAccountError) && createAccountError.status === 409) {\n            const splitMessage = createAccountError.message.split(':');\n\n            if (splitMessage.length > 1) {\n                return (\n                    <TranslatedString\n                        data={{ email: splitMessage[1].trim() }}\n                        id=\"customer.email_in_use_text\"\n                    />\n                );\n            }\n\n            return <TranslatedString id=\"customer.unknown_email_in_use_text\" />;\n        }\n\n        return createAccountError.message;\n    }, [createAccountError]);\n\n    const fields = fixNewsletterCheckboxExperimentEnabled ?\n        transformFormFieldsData(formFields, defaultShouldSubscribe): formFields;\n\n    return (\n        <Form\n            className=\"checkout-form\"\n            id=\"checkout-customer-returning\"\n            testId=\"checkout-customer-returning\"\n        >\n            <Fieldset>\n                {createAccountErrorMessage && (\n                    <Alert type={AlertType.Error}>{createAccountErrorMessage}</Alert>\n                )}\n                <div className=\"create-account-form\">\n                    {fields.map((field) => (\n                        <DynamicFormField\n                            autocomplete={field.name}\n                            extraClass={`dynamic-form-field--${field.name}`}\n                            field={field}\n                            isFloatingLabelEnabled={isFloatingLabelEnabled}\n                            key={field.id}\n                            parentFieldName={field.custom ? 'customFields' : undefined}\n                        />\n                    ))}\n                </div>\n            </Fieldset>\n\n            <div className=\"form-actions\">\n                <Button\n                    disabled={isCreatingAccount || isExecutingPaymentMethodCheckout}\n                    id=\"checkout-customer-create\"\n                    isLoading={isCreatingAccount || isExecutingPaymentMethodCheckout}\n                    testId=\"customer-continue-create\"\n                    type=\"submit\"\n                    variant={ButtonVariant.Primary}\n                >\n                    <TranslatedString id=\"customer.create_account_action\" />\n                </Button>\n\n                <a\n                    className=\"button optimizedCheckout-buttonSecondary\"\n                    data-test=\"customer-cancel-button\"\n                    href=\"#\"\n                    id=\"checkout-customer-cancel\"\n                    onClick={preventDefault(onCancel)}\n                >\n                    <TranslatedString id=\"common.cancel_action\" />\n                </a>\n            </div>\n        </Form>\n    );\n};\n\nexport default withLanguage(\n    withFormik<CreateAccountFormProps & WithLanguageProps, CreateAccountFormValues>({\n        handleSubmit: (values, { props: { onSubmit = noop } }) => {\n            onSubmit(values);\n        },\n        mapPropsToValues: ({ defaultShouldSubscribe, requiresMarketingConsent }) => ({\n            firstName: '',\n            lastName: '',\n            email: '',\n            password: '',\n            customFields: {},\n            acceptsMarketingEmails: getAcceptsMarketingEmailsDefault(defaultShouldSubscribe, requiresMarketingConsent),\n        }),\n        validationSchema: ({\n            language,\n            formFields,\n        }: CreateAccountFormProps & WithLanguageProps) => {\n            const passwordRequirements = formFields.find(\n                ({ requirements }) => requirements,\n            )?.requirements;\n\n            if (!passwordRequirements) {\n                throw new Error('Password requirements missing');\n            }\n\n            const schema = getCreateCustomerValidationSchema({\n                language,\n                formFields,\n                passwordRequirements: getPasswordRequirements(passwordRequirements),\n            });\n\n            return schema;\n        },\n    })(CreateAccountForm),\n);\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { FormField, TextInput } from '../ui/form';\n\nexport interface EmailFieldProps {\n    isFloatingLabelEnabled?: boolean;\n    onChange?(value: string): void;\n}\n\nconst EmailField: FunctionComponent<EmailFieldProps> = ({ onChange, isFloatingLabelEnabled }) => {\n    const renderInput = useCallback(\n        (props: FieldProps) => (\n            <TextInput\n                {...props.field}\n                autoComplete={props.field.name}\n                id={props.field.name}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                type=\"email\"\n            />\n        ),\n        [isFloatingLabelEnabled],\n    );\n\n    const labelContent = useMemo(() => <TranslatedString id=\"customer.email_label\" />, []);\n\n    return (\n        <FormField\n            input={renderInput}\n            isFloatingLabelEnabled={isFloatingLabelEnabled}\n            labelContent={labelContent}\n            name=\"email\"\n            onChange={onChange}\n        />\n    );\n};\n\nexport default memo(EmailField);\n","import { SignInEmail } from '@bigcommerce/checkout-sdk';\nimport { FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, useMemo } from 'react';\n\nimport {\n    TranslatedHtml,\n    TranslatedLink,\n    TranslatedString,\n    withLanguage,\n    WithLanguageProps,\n} from '@bigcommerce/checkout/locale';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Form } from '../ui/form';\nimport { LoadingSpinner } from '../ui/loading';\nimport { Modal, ModalHeader } from '../ui/modal';\n\nimport EmailField from './EmailField';\nimport getEmailValidationSchema from './getEmailValidationSchema';\n\nexport interface EmailLoginFormProps {\n    email?: string;\n    isOpen: boolean;\n    isSendingEmail?: boolean;\n    emailHasBeenRequested?: boolean;\n    sentEmail?: SignInEmail;\n    sentEmailError?: any;\n    isFloatingLabelEnabled?: boolean;\n    onRequestClose?(): void;\n    onSendLoginEmail?(values: EmailLoginFormValues): void;\n}\n\nexport interface EmailLoginFormValues {\n    email: string;\n}\n\nconst EmailLoginForm: FunctionComponent<\n    EmailLoginFormProps & WithLanguageProps & FormikProps<EmailLoginFormValues>\n> = ({\n    email,\n    isOpen,\n    isSendingEmail = false,\n    emailHasBeenRequested,\n    onRequestClose = noop,\n    sentEmailError,\n    sentEmail,\n    submitForm,\n    isFloatingLabelEnabled,\n    values: { email: formEmail },\n}) => {\n    const modalHeaderStringId = useMemo(() => {\n        if (emailHasBeenRequested) {\n            if (sentEmailError) {\n                return 'common.error_heading';\n            }\n\n            return 'login_email.sent_header';\n        }\n\n        if (email) {\n            return 'login_email.header_with_email';\n        }\n\n        return 'login_email.header';\n    }, [emailHasBeenRequested, sentEmailError, email]);\n\n    const okButton = useMemo(\n        () => (\n            <div className=\"modal-footer\">\n                <Button onClick={onRequestClose}>\n                    <TranslatedString id=\"common.ok_action\" />\n                </Button>\n            </div>\n        ),\n        [onRequestClose],\n    );\n\n    const footer = useMemo(() => {\n        if (sentEmailError && sentEmailError.status === 429) {\n            return okButton;\n        }\n\n        if (emailHasBeenRequested && !sentEmailError) {\n            if (isSendingEmail) {\n                return <LoadingSpinner isLoading />;\n            }\n\n            if (sentEmail && sentEmail.sent_email === 'reset_password') {\n                return okButton;\n            }\n\n            return (\n                <p>\n                    <TranslatedLink id=\"login_email.resend_link\" onClick={submitForm} />\n                    <TranslatedLink id=\"login_email.use_password_link\" onClick={onRequestClose} />\n                </p>\n            );\n        }\n\n        return (\n            <div className=\"modal-footer\">\n                <Button\n                    className=\"optimizedCheckout-buttonSecondary\"\n                    onClick={onRequestClose}\n                    type=\"button\"\n                >\n                    <TranslatedString id=\"common.cancel_action\" />\n                </Button>\n                <Button isLoading={isSendingEmail} type=\"submit\" variant={ButtonVariant.Primary}>\n                    <TranslatedString id=\"login_email.send\" />\n                </Button>\n            </div>\n        );\n    }, [\n        sentEmailError,\n        emailHasBeenRequested,\n        okButton,\n        submitForm,\n        isSendingEmail,\n        onRequestClose,\n        sentEmail,\n    ]);\n\n    const error = useMemo(() => {\n        if (!sentEmailError) {\n            return null;\n        }\n\n        const { status } = sentEmailError;\n\n        return (\n            <Alert type={AlertType.Error}>\n                {status === 429 ? (\n                    <TranslatedString id=\"login_email.error_temporary_disabled\" />\n                ) : (\n                    <TranslatedString\n                        id={\n                            status === 404\n                                ? 'login_email.error_not_found'\n                                : 'login_email.error_server'\n                        }\n                    />\n                )}\n            </Alert>\n        );\n    }, [sentEmailError]);\n\n    const form = useMemo(() => {\n        if (sentEmailError && sentEmailError.status === 429) {\n            return null;\n        }\n\n        if (emailHasBeenRequested && sentEmail && !sentEmailError) {\n            const { expiry, sent_email } = sentEmail;\n\n            return (\n                <p>\n                    <TranslatedHtml\n                        data={{\n                            minutes: Math.round(expiry / 60),\n                        }}\n                        id={\n                            sent_email === 'sign_in'\n                                ? 'login_email.sent_text'\n                                : 'customer.reset_password_before_login_error'\n                        }\n                    />\n                </p>\n            );\n        }\n\n        if (emailHasBeenRequested && !sentEmail) {\n            return <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} />;\n        }\n\n        return (\n            <>\n                <p>\n                    <TranslatedString id=\"login_email.text\" />\n                </p>\n                <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} />\n            </>\n        );\n    }, [sentEmailError, emailHasBeenRequested, sentEmail, formEmail]);\n\n    return (\n        <Modal\n            additionalBodyClassName=\"modal--withText\"\n            additionalModalClassName=\"modal--medium\"\n            header={\n                <ModalHeader>\n                    <TranslatedString id={modalHeaderStringId} />\n                </ModalHeader>\n            }\n            isOpen={isOpen}\n            onRequestClose={onRequestClose}\n            shouldShowCloseButton={true}\n        >\n            <Form>\n                <LoadingSpinner isLoading={isSendingEmail && !email} />\n                {error}\n                {form}\n                {footer}\n            </Form>\n        </Modal>\n    );\n};\n\nexport default withLanguage(\n    withFormik<EmailLoginFormProps & WithLanguageProps, EmailLoginFormValues>({\n        mapPropsToValues: ({ email = '' }) => ({\n            email,\n        }),\n        handleSubmit: (values, { props: { onSendLoginEmail = noop } }) => {\n            onSendLoginEmail(values);\n        },\n        validationSchema: ({ language }: WithLanguageProps) =>\n            getEmailValidationSchema({ language }),\n    })(memo(EmailLoginForm)),\n);\n","import { FastlaneHostWindow } from './types';\n\nexport default function isFastlaneHostWindow(window: Window): window is FastlaneHostWindow {\n    /* eslint-disable no-prototype-builtins */\n    return window.hasOwnProperty('paypalFastlane') || window.hasOwnProperty('braintreeFastlane');\n}\n","import React, { FunctionComponent, useEffect } from 'react';\n\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport isBraintreeFastlaneMethod from './is-braintree-fastlane-method';\nimport isFastlaneHostWindow from './is-fastlane-window';\nimport isPayPalFastlaneMethod from './is-paypal-fastlane-method';\nimport { FastlanePrivacySettings } from './types';\n\nimport './PayPalFastlaneWatermark.scss';\n\nconst PayPalFastlaneWatermark: FunctionComponent = () => {\n    const { checkoutState } = useCheckout();\n    const { getPaymentMethod, getConfig } = checkoutState.data;\n    const providerWithCustomCheckout = getConfig()?.checkoutSettings?.providerWithCustomCheckout;\n\n    const paymentMethod =\n        providerWithCustomCheckout &&\n        isPayPalFastlaneMethod(providerWithCustomCheckout) &&\n        getPaymentMethod(providerWithCustomCheckout);\n\n    const shouldRenderFastlaneWatermark =\n        !!paymentMethod &&\n        isFastlaneHostWindow(window) &&\n        paymentMethod?.initializationData?.isFastlanePrivacySettingEnabled;\n\n    useEffect(() => {\n        if(shouldRenderFastlaneWatermark && isFastlaneHostWindow(window)) {\n            const fastlane = isBraintreeFastlaneMethod(providerWithCustomCheckout)\n                ? window.braintreeFastlane\n                : window.paypalFastlane;\n\n            fastlane.FastlaneWatermarkComponent({\n                includeAdditionalInfo: true,\n            })\n                .then((result: FastlanePrivacySettings) => {\n                    result.render('#paypalFastlaneWatermark');\n                });\n        }\n    }, []);\n\n    if (shouldRenderFastlaneWatermark) {\n        return (\n            <div className='paypalFastlaneWatermark-container'>\n                <div id='paypalFastlaneWatermark' data-test='paypalFastlaneWatermark' />\n            </div>\n        );\n    }\n\n    return <></>;\n}\n\nexport default PayPalFastlaneWatermark;\n","import React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\n\nimport { CheckboxFormField, Fieldset } from '../ui/form';\n\nconst PrivacyPolicyCheckboxFieldLink: FunctionComponent<{ url: string }> = ({ url }) => (\n    <CheckboxFormField\n        labelContent={<TranslatedHtml data={{ url }} id=\"privacy_policy.label\" />}\n        name=\"privacyPolicy\"\n        testId=\"privacy-policy-checkbox\"\n    />\n);\n\nconst PrivacyPolicyFieldset: FunctionComponent<{ url: string }> = ({ url }) => (\n    <Fieldset additionalClassName=\"checkout-privacy-policy\">\n        <PrivacyPolicyCheckboxFieldLink url={url} />\n    </Fieldset>\n);\n\nconst PrivacyPolicyAutoConsent: FunctionComponent<{ url: string }> = ({ url }) => (\n    <p>\n        <TranslatedHtml data={{ url }} id=\"privacy_policy_auto_consent.label\" />\n    </p>\n);\n\nconst PrivacyPolicyField: FunctionComponent<{ url: string; isExpressPrivacyPolicy: boolean }> = ({\n    url,\n    isExpressPrivacyPolicy,\n}) => {\n    if (isExpressPrivacyPolicy) {\n        return <PrivacyPolicyAutoConsent url={url} />;\n    }\n\n    return <PrivacyPolicyFieldset url={url} />;\n};\n\nexport default memo(PrivacyPolicyField);\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\nimport { boolean, BooleanSchema, object, ObjectSchema } from 'yup';\n\nexport interface PrivacyPolicyValidatonSchemaProps {\n    isRequired: boolean;\n    language: LanguageService;\n}\n\nexport default function getPrivacyPolicyValidationSchema({\n    isRequired,\n    language,\n}: PrivacyPolicyValidatonSchemaProps): ObjectSchema<{ privacyPolicy?: boolean }> {\n    const schemaFields: {\n        privacyPolicy?: BooleanSchema;\n    } = {};\n\n    if (isRequired) {\n        schemaFields.privacyPolicy = boolean().oneOf(\n            [true],\n            language.translate('privacy_policy.required_error'),\n        );\n    }\n\n    return object(schemaFields);\n}\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\n\nimport { Input, Label } from '../ui/form';\n\nexport type SubscribeFieldProps = FieldProps<boolean> & {\n    requiresMarketingConsent: boolean;\n};\n\nconst SubscribeField: FunctionComponent<SubscribeFieldProps> = ({\n    field,\n    requiresMarketingConsent,\n}) => (\n    <>\n        <Input\n            {...field}\n            checked={field.value}\n            className=\"form-checkbox\"\n            id={field.name}\n            testId=\"should-subscribe-checkbox\"\n            type=\"checkbox\"\n        />\n\n        <Label htmlFor={field.name}>\n            <TranslatedHtml\n                id={\n                    requiresMarketingConsent\n                        ? 'customer.guest_marketing_consent'\n                        : 'customer.guest_subscribe_to_newsletter_text'\n                }\n            />\n        </Label>\n    </>\n);\n\nexport default memo(SubscribeField);\n","export class SubscribeSessionStorage {\n    static key = 'shouldSubscribe';\n\n    static setSubscribeStatus(shouldSubscribe: boolean) {\n        sessionStorage.setItem(this.key, `${shouldSubscribe}`)\n    }\n\n    static getSubscribeStatus(): boolean {\n        const value = sessionStorage.getItem(this.key);\n\n        return value === 'true';\n    }\n\n    static removeSubscribeStatus() {\n        sessionStorage.removeItem(this.key);\n    }\n}\n","import classNames from 'classnames';\nimport { FieldProps, FormikProps, withFormik } from 'formik';\nimport React, { FunctionComponent, memo, ReactNode, useCallback } from 'react';\nimport { object, string } from 'yup';\n\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport { PayPalFastlaneWatermark } from '@bigcommerce/checkout/paypal-fastlane-integration';\n\nimport { getPrivacyPolicyValidationSchema, PrivacyPolicyField } from '../privacyPolicy';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { BasicFormField, Fieldset, Form, Legend } from '../ui/form';\n\nimport EmailField from './EmailField';\nimport SubscribeField from './SubscribeField';\nimport { SubscribeSessionStorage } from './SubscribeSessionStorage';\n\nfunction getShouldSubscribeValue(requiresMarketingConsent: boolean, defaultShouldSubscribe: boolean) {\n    if (SubscribeSessionStorage.getSubscribeStatus()) {\n        return true;\n    }\n\n    return requiresMarketingConsent ? false : defaultShouldSubscribe\n}\n\nexport interface GuestFormProps {\n    canSubscribe: boolean;\n    checkoutButtons?: ReactNode;\n    continueAsGuestButtonLabelId: string;\n    requiresMarketingConsent: boolean;\n    defaultShouldSubscribe: boolean;\n    email?: string;\n    isLoading: boolean;\n    privacyPolicyUrl?: string;\n    isExpressPrivacyPolicy: boolean;\n    isFloatingLabelEnabled?: boolean;\n    shouldShowEmailWatermark: boolean;\n    onChangeEmail(email: string): void;\n    onContinueAsGuest(data: GuestFormValues): void;\n    onShowLogin(): void;\n}\n\nexport interface GuestFormValues {\n    email: string;\n    shouldSubscribe: boolean;\n}\n\nconst GuestForm: FunctionComponent<\n    GuestFormProps & WithLanguageProps & FormikProps<GuestFormValues>\n> = ({\n    canSubscribe,\n    checkoutButtons,\n    continueAsGuestButtonLabelId,\n    isLoading,\n    onChangeEmail,\n    onShowLogin,\n    privacyPolicyUrl,\n    requiresMarketingConsent,\n    isExpressPrivacyPolicy,\n    isFloatingLabelEnabled,\n    shouldShowEmailWatermark,\n}) => {\n    const renderField = useCallback(\n        (fieldProps: FieldProps<boolean>) => (\n            <SubscribeField {...fieldProps} requiresMarketingConsent={requiresMarketingConsent} />\n        ),\n        [requiresMarketingConsent],\n    );\n\n    return (\n        <Form\n            className=\"checkout-form\"\n            id=\"checkout-customer-guest\"\n            testId=\"checkout-customer-guest\"\n        >\n            <Fieldset\n                legend={\n                    <Legend hidden>\n                        <TranslatedString id=\"customer.guest_customer_text\" />\n                    </Legend>\n                }\n            >\n                <div className=\"customerEmail-container\">\n                    <div className=\"customerEmail-body\">\n                        <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} onChange={onChangeEmail}/>\n\n                        {shouldShowEmailWatermark && <PayPalFastlaneWatermark />}\n\n                        {(canSubscribe || requiresMarketingConsent) && (\n                            <BasicFormField name=\"shouldSubscribe\" render={renderField} />\n                        )}\n                    </div>\n\n                    <div\n                        className={classNames('form-actions customerEmail-action', {\n                            'customerEmail-floating--enabled': isFloatingLabelEnabled,\n                        })}\n                    >\n                        <Button\n                            className=\"customerEmail-button\"\n                            id=\"checkout-customer-continue\"\n                            isLoading={isLoading}\n                            testId=\"customer-continue-as-guest-button\"\n                            type=\"submit\"\n                            variant={ButtonVariant.Primary}\n                        >\n                            <TranslatedString id={continueAsGuestButtonLabelId} />\n                        </Button>\n                    </div>\n                </div>\n\n                {privacyPolicyUrl && (\n                    <PrivacyPolicyField isExpressPrivacyPolicy={isExpressPrivacyPolicy} url={privacyPolicyUrl} />\n                )}\n\n                {!isLoading && (\n                    <p>\n                        <TranslatedString id=\"customer.login_text\" />{' '}\n                        <a\n                            data-test=\"customer-continue-button\"\n                            id=\"checkout-customer-login\"\n                            onClick={onShowLogin}\n                            role=\"button\"\n                            tabIndex={0}\n                        >\n                            <TranslatedString id=\"customer.login_action\" />\n                        </a>\n                    </p>\n                )}\n\n                {checkoutButtons}\n            </Fieldset>\n        </Form>\n    );\n};\n\nexport default withLanguage(\n    withFormik<GuestFormProps & WithLanguageProps, GuestFormValues>({\n        mapPropsToValues: ({\n            email = '',\n            defaultShouldSubscribe = false,\n            requiresMarketingConsent,\n        }) => ({\n            email,\n            shouldSubscribe: getShouldSubscribeValue(requiresMarketingConsent, defaultShouldSubscribe),\n            privacyPolicy: false,\n        }),\n        handleSubmit: (values, { props: { onContinueAsGuest } }) => {\n            onContinueAsGuest(values);\n        },\n        validationSchema: ({ language, privacyPolicyUrl, isExpressPrivacyPolicy }: GuestFormProps & WithLanguageProps) => {\n            const email = string()\n                .email(language.translate('customer.email_invalid_error'))\n                .max(256)\n                .required(language.translate('customer.email_required_error'));\n\n            const baseSchema = object({ email });\n\n            if (privacyPolicyUrl && !isExpressPrivacyPolicy) {\n                return baseSchema.concat(\n                    getPrivacyPolicyValidationSchema({\n                        isRequired: !!privacyPolicyUrl,\n                        language,\n                    }),\n                );\n            }\n\n            return baseSchema;\n        },\n    })(memo(GuestForm)),\n);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconEye: FunctionComponent = () => (\n    <svg viewBox=\"0 0 576 512\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M288 144a110.94 110.94 0 0 0-31.24 5 55.4 55.4 0 0 1 7.24 27 56 56 0 0 1-56 56 55.4 55.4 0 0 1-27-7.24A111.71 111.71 0 1 0 288 144zm284.52 97.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400c-98.65 0-189.09-55-237.93-144C98.91 167 189.34 112 288 112s189.09 55 237.93 144C477.1 345 386.66 400 288 400z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconEye);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconEyeSlash: FunctionComponent = () => (\n    <svg viewBox=\"0 0 640 512\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M634 471L36 3.51A16 16 0 0 0 13.51 6l-10 12.49A16 16 0 0 0 6 41l598 467.49a16 16 0 0 0 22.49-2.49l10-12.49A16 16 0 0 0 634 471zM296.79 146.47l134.79 105.38C429.36 191.91 380.48 144 320 144a112.26 112.26 0 0 0-23.21 2.47zm46.42 219.07L208.42 260.16C210.65 320.09 259.53 368 320 368a113 113 0 0 0 23.21-2.46zM320 112c98.65 0 189.09 55 237.93 144a285.53 285.53 0 0 1-44 60.2l37.74 29.5a333.7 333.7 0 0 0 52.9-75.11 32.35 32.35 0 0 0 0-29.19C550.29 135.59 442.93 64 320 64c-36.7 0-71.71 7-104.63 18.81l46.41 36.29c18.94-4.3 38.34-7.1 58.22-7.1zm0 288c-98.65 0-189.08-55-237.93-144a285.47 285.47 0 0 1 44.05-60.19l-37.74-29.5a333.6 333.6 0 0 0-52.89 75.1 32.35 32.35 0 0 0 0 29.19C89.72 376.41 197.08 448 320 448c36.7 0 71.71-7.05 104.63-18.81l-46.41-36.28C359.28 397.2 339.89 400 320 400z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconEyeSlash);\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { FormField, TextInput } from '../ui/form';\nimport Label from '../ui/form/Label';\nimport { IconEye, IconEyeSlash } from '../ui/icon';\nimport { Toggle } from '../ui/toggle';\n\ninterface WithFloatingLabel {\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst PasswordField: FunctionComponent<WithFloatingLabel> = ({ isFloatingLabelEnabled = false }) => {\n    const renderInput = useCallback(\n        (props: FieldProps) => (\n            <Toggle openByDefault={false}>\n                {({ isOpen, toggle }) => (\n                    <div className=\"form-field-password\">\n                        <TextInput\n                            {...props.field}\n                            additionalClassName=\"form-input--withIcon\"\n                            id={props.field.name}\n                            isFloatingLabelEnabled={isFloatingLabelEnabled}\n                            type={isOpen ? 'text' : 'password'}\n                        />\n                        {isFloatingLabelEnabled && (\n                            <Label\n                                htmlFor={props.field.name}\n                                id={`${props.field.name}-label`}\n                                isFloatingLabelEnabled={true}\n                            >\n                                <TranslatedString id=\"customer.password_label\" />\n                            </Label>\n                        )}\n                        <a\n                            className=\"form-toggle-password form-input-icon\"\n                            href=\"#\"\n                            onClick={toggle}\n                        >\n                            {isOpen ? <IconEye /> : <IconEyeSlash />}\n                        </a>\n                    </div>\n                )}\n            </Toggle>\n        ),\n        [isFloatingLabelEnabled],\n    );\n\n    const labelContent = useMemo(() => <TranslatedString id=\"customer.password_label\" />, []);\n\n    return <FormField input={renderInput} isFloatingLabelEnabled={isFloatingLabelEnabled} labelContent={isFloatingLabelEnabled ? null : labelContent} name=\"password\" />;\n};\n\nexport default memo(PasswordField);\n","import { FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\nimport { object, string } from 'yup';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport {\n    TranslatedHtml,\n    TranslatedLink,\n    TranslatedString,\n    withLanguage,\n    WithLanguageProps,\n} from '@bigcommerce/checkout/locale';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Fieldset, Form, Legend } from '../ui/form';\n\nimport CustomerViewType from './CustomerViewType';\nimport EmailField from './EmailField';\nimport getEmailValidationSchema from './getEmailValidationSchema';\nimport mapErrorMessage from './mapErrorMessage';\nimport PasswordField from './PasswordField';\n\nexport interface LoginFormProps {\n    canCancel?: boolean;\n    continueAsGuestButtonLabelId: string;\n    email?: string;\n    forgotPasswordUrl: string;\n    isSignInEmailEnabled?: boolean;\n    isSendingSignInEmail?: boolean;\n    isSigningIn?: boolean;\n    isExecutingPaymentMethodCheckout?: boolean;\n    signInError?: Error;\n    signInEmailError?: Error;\n    viewType?: Omit<CustomerViewType, 'guest'>;\n    passwordlessLogin?: boolean;\n    shouldShowCreateAccountLink?: boolean;\n    isFloatingLabelEnabled?: boolean;\n    onCancel?(): void;\n    onCreateAccount?(): void;\n    onChangeEmail?(email: string): void;\n    onSignIn(data: LoginFormValues): void;\n    onSendLoginEmail?(): void;\n    onContinueAsGuest?(): void;\n}\n\nexport interface LoginFormValues {\n    email: string;\n    password: string;\n}\n\nconst LoginForm: FunctionComponent<\n    LoginFormProps & WithLanguageProps & FormikProps<LoginFormValues>\n> = ({\n    canCancel,\n    continueAsGuestButtonLabelId,\n    forgotPasswordUrl,\n    email,\n    isSignInEmailEnabled,\n    isSigningIn,\n    isExecutingPaymentMethodCheckout,\n    language,\n    onCancel = noop,\n    onChangeEmail,\n    onContinueAsGuest,\n    onCreateAccount = noop,\n    onSendLoginEmail = noop,\n    signInError,\n    shouldShowCreateAccountLink,\n    isFloatingLabelEnabled,\n    viewType = CustomerViewType.Login,\n}) => {\n    const changeEmailLink = useCallback(() => {\n        if (!email) {\n            return null;\n        }\n\n        return (\n            <p className=\"optimizedCheckout-contentSecondary\">\n                <TranslatedLink\n                    data={{ email }}\n                    id=\"customer.guest_could_login_change_email\"\n                    onClick={onCancel}\n                    testId=\"change-email\"\n                />\n            </p>\n        );\n    }, [email, onCancel]);\n\n    return (\n        <Form\n            className=\"checkout-form\"\n            id=\"checkout-customer-returning\"\n            testId=\"checkout-customer-returning\"\n        >\n            <Fieldset\n                legend={\n                    <Legend hidden>\n                        <TranslatedString id=\"customer.returning_customer_text\" />\n                    </Legend>\n                }\n            >\n                {signInError && (\n                    <Alert testId=\"customer-login-error-message\" type={AlertType.Error}>\n                        {mapErrorMessage(signInError, (key) => language.translate(key))}\n                    </Alert>\n                )}\n\n                {viewType === CustomerViewType.SuggestedLogin && (\n                    <Alert type={AlertType.Info}>\n                        <TranslatedHtml data={{ email }} id=\"customer.guest_could_login\" />\n                    </Alert>\n                )}\n\n                {viewType === CustomerViewType.CancellableEnforcedLogin && (\n                    <Alert type={AlertType.Info}>\n                        <TranslatedHtml data={{ email }} id=\"customer.guest_must_login\" />\n                    </Alert>\n                )}\n\n                {viewType === CustomerViewType.EnforcedLogin && (\n                    <Alert type={AlertType.Error}>\n                        <TranslatedLink\n                            id=\"customer.guest_temporary_disabled\"\n                            onClick={onCreateAccount}\n                        />\n                    </Alert>\n                )}\n\n                {(viewType === CustomerViewType.Login ||\n                    viewType === CustomerViewType.EnforcedLogin) && (\n                    <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} onChange={onChangeEmail} />\n                )}\n\n                <PasswordField isFloatingLabelEnabled={isFloatingLabelEnabled} />\n\n                <p className=\"form-legend-container\">\n                    <span>\n                        { isSignInEmailEnabled &&\n                            <TranslatedLink\n                                id=\"login_email.link\"\n                                onClick={ onSendLoginEmail }\n                                testId=\"customer-signin-link\"\n                            />\n                        }\n                        { !isSignInEmailEnabled &&\n                            <a\n                                data-test=\"forgot-password-link\"\n                                href={ forgotPasswordUrl }\n                                rel=\"noopener noreferrer\"\n                                target=\"_blank\"\n                            >\n                                <TranslatedString id=\"customer.forgot_password_action\" />\n                            </a>\n                        }\n                    </span>\n                    { viewType === CustomerViewType.Login && shouldShowCreateAccountLink &&\n                        <span>\n                            <TranslatedLink\n                                id=\"customer.create_account_to_continue_text\"\n                                onClick={onCreateAccount}\n                            />\n                        </span>\n                    }\n                </p>\n\n                <div className=\"form-actions\">\n                    <Button\n                        disabled={isSigningIn || isExecutingPaymentMethodCheckout}\n                        id=\"checkout-customer-continue\"\n                        isLoading={isSigningIn || isExecutingPaymentMethodCheckout}\n                        testId=\"customer-continue-button\"\n                        type=\"submit\"\n                        variant={ButtonVariant.Primary}\n                    >\n                        <TranslatedString id=\"customer.sign_in_action\" />\n                    </Button>\n\n                    {viewType === CustomerViewType.SuggestedLogin && (\n                        <a\n                            className=\"button optimizedCheckout-buttonSecondary\"\n                            data-test=\"customer-guest-continue\"\n                            href=\"#\"\n                            id=\"checkout-guest-continue\"\n                            onClick={preventDefault(onContinueAsGuest)}\n                        >\n                            <TranslatedString id={continueAsGuestButtonLabelId} />\n                        </a>\n                    )}\n\n                    {canCancel &&\n                        viewType !== CustomerViewType.EnforcedLogin &&\n                        viewType !== CustomerViewType.SuggestedLogin && (\n                            <a\n                                className=\"button optimizedCheckout-buttonSecondary\"\n                                data-test=\"customer-cancel-button\"\n                                href=\"#\"\n                                id=\"checkout-customer-cancel\"\n                                onClick={preventDefault(onCancel)}\n                            >\n                                <TranslatedString\n                                    id={\n                                        viewType === CustomerViewType.CancellableEnforcedLogin\n                                            ? 'login_email.use_another_email'\n                                            : 'common.cancel_action'\n                                    }\n                                />\n                            </a>\n                        )}\n                </div>\n\n                {viewType === CustomerViewType.SuggestedLogin && changeEmailLink()}\n            </Fieldset>\n        </Form>\n    );\n};\n\nexport default withLanguage(\n    withFormik<LoginFormProps & WithLanguageProps, LoginFormValues>({\n        mapPropsToValues: ({ email = '' }) => ({\n            email,\n            password: '',\n        }),\n        handleSubmit: (values, { props: { onSignIn } }) => {\n            onSignIn(values);\n        },\n        validationSchema: ({ language }: LoginFormProps & WithLanguageProps) =>\n            getEmailValidationSchema({ language }).concat(\n                object({\n                    password: string().required(\n                        language.translate('customer.password_required_error'),\n                    ),\n                }),\n            ),\n    })(memo(LoginForm)),\n);\n","export default function mapErrorMessage(\n    error: any, // TODO: Export `RequestError`\n    translate: (key: string) => string,\n): string {\n    const type = error.body && error.body.type;\n\n    switch (type) {\n        case 'throttled_login':\n            return translate('customer.sign_in_throttled_error');\n\n        case 'reset_password_before_login':\n            return translate('customer.reset_password_before_login_error');\n\n        default:\n            return translate('customer.sign_in_error');\n    }\n}\n","import { CustomerAccountRequestBody } from '@bigcommerce/checkout-sdk';\n\nimport { mapCustomFormFieldsFromFormValues } from '../formFields';\n\nimport { CreateAccountFormValues } from './getCreateCustomerValidationSchema';\n\nexport default function mapCreateAccountFromFormValues({\n    acceptsMarketingEmails,\n    customFields,\n    ...values\n}: CreateAccountFormValues): CustomerAccountRequestBody {\n    return {\n        ...values,\n        acceptsMarketingEmails: acceptsMarketingEmails && acceptsMarketingEmails.length > 0,\n        customFields: mapCustomFormFieldsFromFormValues(customFields),\n    };\n}\n","import { CustomerInitializeOptions, CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\nimport { FieldProps, FormikProps, withFormik } from 'formik';\nimport React, { FunctionComponent, memo, ReactNode, useCallback, useEffect, useState } from 'react';\n\nimport { getAppliedStyles } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport { CustomerSkeleton } from '@bigcommerce/checkout/ui';\n\nimport CheckoutStepStatus from '../checkout/CheckoutStepStatus';\nimport { getPrivacyPolicyValidationSchema, PrivacyPolicyField } from '../privacyPolicy';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { BasicFormField, Fieldset, Form, Legend } from '../ui/form';\n\nimport { GuestFormValues } from './GuestForm';\nimport SubscribeField from './SubscribeField';\n\nexport interface StripeGuestFormProps {\n    canSubscribe: boolean;\n    checkoutButtons?: ReactNode;\n    step: CheckoutStepStatus;\n    continueAsGuestButtonLabelId: string;\n    email?: string;\n    isLoading: boolean;\n    isExpressPrivacyPolicy: boolean;\n    requiresMarketingConsent: boolean;\n    defaultShouldSubscribe: boolean;\n    privacyPolicyUrl?: string;\n    onChangeEmail(email: string): void;\n    onContinueAsGuest(data: GuestFormValues): void;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onShowLogin(): void;\n}\n\nconst StripeGuestForm: FunctionComponent<StripeGuestFormProps & FormikProps<GuestFormValues>> = ({\n    continueAsGuestButtonLabelId,\n    isLoading,\n    initialize,\n    isExpressPrivacyPolicy,\n    deinitialize,\n    onChangeEmail,\n    onShowLogin,\n    onContinueAsGuest,\n    canSubscribe,\n    checkoutButtons,\n    requiresMarketingConsent,\n    privacyPolicyUrl,\n    step,\n    status\n}) => {\n\n    const [continueAsAGuestButton, setContinueAsAGuestButton] = useState(true);\n    const [emailValue, setEmailValue] = useState('');\n    const [authentication, setAuthentication] = useState(false);\n    const [isStripeLoading, setIsStripeLoading] = useState(true);\n    const [isNewAuth, setIsNewAuth] = useState(false);\n    const handleOnClickSubmitButton = () => {\n        onContinueAsGuest({\n            email: emailValue,\n            shouldSubscribe: !!status?.shouldSubscribe,\n        });\n    };\n    const setEmailCallback = useCallback((authenticated: boolean, email: string) => {\n        onChangeEmail(email);\n        setEmailValue(email);\n        setContinueAsAGuestButton(!email);\n        setAuthentication(authenticated);\n\n        if(!authenticated){\n            setIsNewAuth(true);\n        }\n    }, [setContinueAsAGuestButton, onChangeEmail]);\n\n    useEffect(() => {\n        if ((!step.isComplete || isNewAuth) && emailValue && authentication) {\n            handleOnClickSubmitButton();\n        }\n    }, [emailValue, authentication, isNewAuth]);\n\n    useEffect(() => {\n        if (status?.valSuccess) {\n            handleOnClickSubmitButton();\n        }\n    }, [status?.valSuccess]);\n\n    const handleLoading = useCallback((mounted: boolean) => {\n        setIsStripeLoading(mounted);\n    }, []);\n\n    const stripeDeinitialize = () => {\n        deinitialize({\n            methodId: 'stripeupe',\n        });\n    };\n\n    const stripeInitialize = () => {\n        initialize( {\n            methodId: 'stripeupe',\n            stripeupe: {\n                container: 'stripeupeLink',\n                onEmailChange: setEmailCallback,\n                isLoading: handleLoading,\n                getStyles: getStripeStyles,\n                gatewayId: 'stripeupe',\n                methodId: 'card',\n            },\n        })};\n\n    useEffect(() => {\n        stripeInitialize();\n\n        return () => stripeDeinitialize();\n    }, []);\n\n    const getStylesFromElement = (\n        id: string,\n        properties: string[]) => {\n        const parentContainer = document.getElementById(id);\n\n        if (parentContainer) {\n            return getAppliedStyles(parentContainer, properties);\n        }\n\n            return undefined;\n\n    };\n\n    const containerId = 'stripe-card-component-field';\n\n    const getStripeStyles: () => (Record<string, string> | undefined) = useCallback( () => {\n        const formInput = getStylesFromElement(`${containerId}--input`, ['color', 'background-color', 'border-color', 'box-shadow']);\n        const formLabel = getStylesFromElement(`${containerId}--label`, ['color']);\n        const formError = getStylesFromElement(`${containerId}--error`, ['color']);\n\n        return formLabel && formInput && formError ? {\n            labelText: formLabel.color,\n            fieldText: formInput.color,\n            fieldPlaceholderText: formInput.color,\n            fieldErrorText: formError.color,\n            fieldBackground: formInput['background-color'],\n            fieldInnerShadow: formInput['box-shadow'],\n            fieldBorder: formInput['border-color'],\n        } : undefined;\n    }, [])\n\n    const renderCheckoutThemeStylesForStripeUPE = () => {\n        return (\n            <div\n                className=\"optimizedCheckout-form-input\"\n                id={ `${containerId}--input` }\n                placeholder=\"1111\"\n            >\n                <div\n                    className=\"form-field--error\"\n                >\n                    <div\n                        className=\"optimizedCheckout-form-label\"\n                        id={ `${containerId}--error` }\n                    />\n                </div>\n                <div\n                    className=\"optimizedCheckout-form-label\"\n                    id={ `${containerId}--label` }\n                />\n            </div>\n        );\n    };\n\n    const renderField = useCallback((fieldProps: FieldProps<boolean>) => (\n        <SubscribeField\n            { ...fieldProps }\n            requiresMarketingConsent={ requiresMarketingConsent }\n        />\n    ), [\n        requiresMarketingConsent,\n    ]);\n\n    const buttonText = authentication && !isNewAuth? 'customer.continue_as_stripe_customer_action' : continueAsGuestButtonLabelId;\n\n    return (\n        <>\n            <CustomerSkeleton isLoading={isStripeLoading}/>\n            <Form\n                className=\"checkout-form\"\n                id=\"checkout-customer-guest\"\n                testId=\"checkout-customer-guest\"\n            >\n                <div className=\"checkout-form\" style={ {display: isStripeLoading ? 'none' : undefined} }>\n                    <Fieldset\n                        legend={ !authentication &&\n                            <Legend hidden>\n                                <TranslatedString id=\"customer.guest_customer_text\"/>\n                            </Legend>\n                        }\n                    >\n                        <div className=\"customerEmail-container\">\n                            <div className=\"customerEmail-body\">\n                                <div id=\"stripeupeLink\"/>\n                                <br/>\n                                { (canSubscribe || requiresMarketingConsent) && <BasicFormField\n                                    name=\"shouldSubscribe\"\n                                    render={ renderField }\n                                /> }\n                            </div>\n\n                            <div className=\"form-actions customerEmail-action\">\n                                { (!authentication || (authentication && !isNewAuth )) && <Button\n                                    className=\"stripeCustomerEmail-button\"\n                                    disabled={ continueAsAGuestButton }\n                                    id=\"stripe-checkout-customer-continue\"\n                                    isLoading={ isLoading }\n                                    testId=\"stripe-customer-continue-as-guest-button\"\n                                    type=\"submit\"\n                                    variant={ ButtonVariant.Primary }\n                                >\n                                    <TranslatedString id={ buttonText }/>\n                                </Button> }\n                            </div>\n                        </div>\n\n                        {privacyPolicyUrl && (\n                            <PrivacyPolicyField isExpressPrivacyPolicy={isExpressPrivacyPolicy} url={privacyPolicyUrl} />\n                        )}\n\n                        {\n                            !isLoading && <p>\n                                <TranslatedString id=\"customer.login_text\"/>\n                                { ' ' }\n                                <a\n                                    data-test=\"customer-continue-button\"\n                                    id=\"checkout-customer-login\"\n                                    onClick={ onShowLogin }\n                                    role=\"button\"\n                                    tabIndex={0}\n                                >\n                                    <TranslatedString id=\"customer.login_action\"/>\n                                </a>\n                            </p>\n                        }\n                        { !authentication && checkoutButtons }\n                    </Fieldset>\n                </div>\n                { renderCheckoutThemeStylesForStripeUPE() }\n            </Form>\n        </>\n    );\n};\n\nexport default withLanguage(\n    withFormik<StripeGuestFormProps, GuestFormValues>({\n            mapPropsToValues: ({\n                email = '',\n                defaultShouldSubscribe = false,\n                requiresMarketingConsent,\n            }) => ({\n                email,\n                shouldSubscribe: requiresMarketingConsent ? false : defaultShouldSubscribe,\n                privacyPolicy: false,\n            }),\n            handleSubmit: ( values, { setStatus }) => {\n                setStatus({\n                    valSuccess: true,\n                    shouldSubscribe: values.shouldSubscribe,\n                  });\n            },\n            validationSchema: ({ language, privacyPolicyUrl, isExpressPrivacyPolicy }: StripeGuestFormProps & WithLanguageProps) => {\n                if (privacyPolicyUrl && !isExpressPrivacyPolicy) {\n                    return getPrivacyPolicyValidationSchema({\n                            isRequired: !!privacyPolicyUrl,\n                            language,\n                        })\n                }\n            },\n        })(memo(StripeGuestForm))\n)\n\n","import {\n    CheckoutPaymentMethodExecutedOptions,\n    CheckoutSelectors,\n    CustomerAccountRequestBody,\n    CustomerCredentials,\n    CustomerInitializeOptions,\n    CustomerRequestOptions,\n    ExecutePaymentMethodCheckoutOptions,\n    FormField,\n    GuestCredentials,\n    SignInEmail,\n    StoreConfig,\n} from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { Component, ReactNode } from 'react';\n\nimport { AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\nimport { shouldUseStripeLinkByMinimumAmount } from '@bigcommerce/checkout/instrument-utils';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { isPayPalFastlaneMethod } from '@bigcommerce/checkout/paypal-fastlane-integration';\nimport { CustomerSkeleton } from '@bigcommerce/checkout/ui';\n\nimport { withAnalytics } from '../analytics';\nimport { withCheckout } from '../checkout';\nimport CheckoutStepStatus from '../checkout/CheckoutStepStatus';\nimport { isErrorWithType } from '../common/error';\nimport { isFloatingLabelEnabled } from '../common/utility';\nimport getProviderWithCustomCheckout from '../payment/getProviderWithCustomCheckout';\nimport { PaymentMethodId } from '../payment/paymentMethod';\n\nimport CheckoutButtonList from './CheckoutButtonList';\nimport CreateAccountForm from './CreateAccountForm';\nimport CustomerViewType from './CustomerViewType';\nimport EmailLoginForm, { EmailLoginFormValues } from './EmailLoginForm';\nimport { CreateAccountFormValues } from './getCreateCustomerValidationSchema';\nimport GuestForm, { GuestFormValues } from './GuestForm';\nimport LoginForm from './LoginForm';\nimport mapCreateAccountFromFormValues from './mapCreateAccountFromFormValues';\nimport StripeGuestForm from './StripeGuestForm';\nimport { SubscribeSessionStorage } from './SubscribeSessionStorage';\n\nexport interface CustomerProps {\n    viewType: CustomerViewType;\n    step: CheckoutStepStatus;\n    isEmbedded?: boolean;\n    isSubscribed: boolean;\n    isWalletButtonsOnTop: boolean;\n    checkEmbeddedSupport?(methodIds: string[]): void;\n    onChangeViewType?(viewType: CustomerViewType): void;\n    onAccountCreated?(): void;\n    onContinueAsGuest?(): void;\n    onContinueAsGuestError?(error: Error): void;\n    onReady?(): void;\n    onSubscribeToNewsletter(subscribe: boolean): void;\n    onSignIn?(): void;\n    onSignInError?(error: Error): void;\n    onUnhandledError?(error: Error): void;\n    onWalletButtonClick?(methodName: string): void;\n}\n\nexport interface WithCheckoutCustomerProps {\n    canSubscribe: boolean;\n    customerAccountFields: FormField[];\n    checkoutButtonIds: string[];\n    defaultShouldSubscribe: boolean;\n    email?: string;\n    firstName?: string;\n    fixNewsletterCheckboxExperimentEnabled: boolean;\n    forgotPasswordUrl: string;\n    isContinuingAsGuest: boolean;\n    isCreatingAccount: boolean;\n    isExecutingPaymentMethodCheckout: boolean;\n    isGuestEnabled: boolean;\n    hasBillingId: boolean;\n    isInitializing: boolean;\n    isSendingSignInEmail: boolean;\n    isSignInEmailEnabled: boolean;\n    isSigningIn: boolean;\n    privacyPolicyUrl?: string;\n    providerWithCustomCheckout?: string;\n    requiresMarketingConsent: boolean;\n    signInEmail?: SignInEmail;\n    signInEmailError?: Error;\n    isAccountCreationEnabled: boolean;\n    isPaymentDataRequired: boolean;\n    createAccountError?: Error;\n    signInError?: Error;\n    isFloatingLabelEnabled?: boolean;\n    isExpressPrivacyPolicy: boolean;\n    clearError(error: Error): Promise<CheckoutSelectors>;\n    continueAsGuest(credentials: GuestCredentials): Promise<CheckoutSelectors>;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n    sendLoginEmail(params: { email: string }): Promise<CheckoutSelectors>;\n    signIn(credentials: CustomerCredentials): Promise<CheckoutSelectors>;\n    createAccount(values: CustomerAccountRequestBody): Promise<CheckoutSelectors>;\n    shouldRenderStripeForm: boolean;\n}\n\nexport interface CustomerState {\n    isEmailLoginFormOpen: boolean;\n    isReady: boolean;\n    hasRequestedLoginEmail: boolean;\n}\n\nclass Customer extends Component<CustomerProps & WithCheckoutCustomerProps & AnalyticsContextProps, CustomerState> {\n    state: CustomerState = {\n        isEmailLoginFormOpen: false,\n        isReady: false,\n        hasRequestedLoginEmail: false,\n    };\n\n    private draftEmail?: string;\n\n    async componentDidMount(): Promise<void> {\n        const {\n            initializeCustomer,\n            email,\n            onReady = noop,\n            onUnhandledError = noop,\n            providerWithCustomCheckout,\n        } = this.props;\n\n        this.draftEmail = email;\n\n        try {\n            if (providerWithCustomCheckout && providerWithCustomCheckout !== PaymentMethodId.StripeUPE) {\n                await initializeCustomer({methodId: providerWithCustomCheckout});\n            }\n        } catch (error) {\n            onUnhandledError(error);\n        }\n\n        this.setState({ isReady: true });\n\n        onReady();\n    }\n\n    async componentWillUnmount(): Promise<void> {\n        const {\n            deinitializeCustomer = noop,\n            providerWithCustomCheckout,\n            onUnhandledError = noop,\n        } = this.props;\n\n        try {\n            await deinitializeCustomer({ methodId: providerWithCustomCheckout });\n        } catch (error) {\n            onUnhandledError(error);\n        }\n    }\n\n    render(): ReactNode {\n        const { viewType } = this.props;\n        const { isEmailLoginFormOpen, isReady } = this.state;\n        const shouldRenderGuestForm = viewType === CustomerViewType.Guest;\n        const shouldRenderCreateAccountForm = viewType === CustomerViewType.CreateAccount;\n        const shouldRenderLoginForm = !shouldRenderGuestForm && !shouldRenderCreateAccountForm;\n\n        return (\n            <CustomerSkeleton isLoading={!isReady}>\n                {isEmailLoginFormOpen && this.renderEmailLoginLinkForm()}\n                {shouldRenderLoginForm && this.renderLoginForm()}\n                {shouldRenderGuestForm && this.renderGuestForm()}\n                {shouldRenderCreateAccountForm && this.renderCreateAccountForm()}\n            </CustomerSkeleton>\n        );\n    }\n\n    private renderGuestForm(): ReactNode {\n        const {\n            canSubscribe,\n            checkEmbeddedSupport,\n            checkoutButtonIds,\n            deinitializeCustomer,\n            email,\n            initializeCustomer,\n            isContinuingAsGuest = false,\n            isExecutingPaymentMethodCheckout = false,\n            isInitializing = false,\n            isSubscribed,\n            isWalletButtonsOnTop,\n            privacyPolicyUrl,\n            requiresMarketingConsent,\n            onUnhandledError = noop,\n            onWalletButtonClick = noop,\n            step,\n            isFloatingLabelEnabled,\n            isExpressPrivacyPolicy,\n            isPaymentDataRequired,\n            shouldRenderStripeForm,\n            providerWithCustomCheckout,\n        } = this.props;\n\n        const checkoutButtons = isWalletButtonsOnTop || !isPaymentDataRequired\n          ? null\n          : <CheckoutButtonList\n            checkEmbeddedSupport={checkEmbeddedSupport}\n            deinitialize={deinitializeCustomer}\n            initialize={initializeCustomer}\n            isInitializing={isInitializing}\n            methodIds={checkoutButtonIds}\n            onClick={onWalletButtonClick}\n            onError={onUnhandledError}\n          />;\n\n        const isLoadingGuestForm = isContinuingAsGuest || isExecutingPaymentMethodCheckout;\n\n        return (\n            shouldRenderStripeForm ?\n                <StripeGuestForm\n                    canSubscribe={canSubscribe}\n                    checkoutButtons={checkoutButtons}\n                    continueAsGuestButtonLabelId=\"customer.continue\"\n                    defaultShouldSubscribe={isSubscribed}\n                    deinitialize={deinitializeCustomer}\n                    email={this.draftEmail || email}\n                    initialize={initializeCustomer}\n                    isExpressPrivacyPolicy={isExpressPrivacyPolicy}\n                    isLoading={isContinuingAsGuest || isInitializing || isExecutingPaymentMethodCheckout}\n                    onChangeEmail={this.handleChangeEmail}\n                    onContinueAsGuest={this.handleContinueAsGuest}\n                    onShowLogin={this.handleShowLogin}\n                    privacyPolicyUrl={privacyPolicyUrl}\n                    requiresMarketingConsent={requiresMarketingConsent}\n                    step={step}\n                />\n                :\n            <GuestForm\n                canSubscribe={canSubscribe}\n                checkoutButtons={checkoutButtons}\n                continueAsGuestButtonLabelId=\"customer.continue\"\n                defaultShouldSubscribe={isSubscribed}\n                email={this.draftEmail || email}\n                isExpressPrivacyPolicy={isExpressPrivacyPolicy}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                isLoading={isLoadingGuestForm}\n                onChangeEmail={this.handleChangeEmail}\n                onContinueAsGuest={this.handleContinueAsGuest}\n                onShowLogin={this.handleShowLogin}\n                privacyPolicyUrl={privacyPolicyUrl}\n                shouldShowEmailWatermark={isPayPalFastlaneMethod(providerWithCustomCheckout)}\n                requiresMarketingConsent={requiresMarketingConsent}\n            />\n        );\n    }\n\n    private renderEmailLoginLinkForm(): ReactNode {\n        const { isEmailLoginFormOpen, hasRequestedLoginEmail } = this.state;\n\n        const { isSendingSignInEmail, signInEmailError, signInEmail, isFloatingLabelEnabled } =\n            this.props;\n\n        return (\n            <EmailLoginForm\n                email={this.draftEmail}\n                emailHasBeenRequested={hasRequestedLoginEmail}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                isOpen={isEmailLoginFormOpen}\n                isSendingEmail={isSendingSignInEmail}\n                onRequestClose={this.closeEmailLoginFormForm}\n                onSendLoginEmail={this.handleSendLoginEmail}\n                sentEmail={signInEmail}\n                sentEmailError={signInEmailError}\n            />\n        );\n    }\n\n    private closeEmailLoginFormForm: () => void = () => {\n        this.setState({\n            isEmailLoginFormOpen: false,\n            hasRequestedLoginEmail: false,\n        });\n    };\n\n    private renderCreateAccountForm(): ReactNode {\n        const {\n            customerAccountFields,\n            isExecutingPaymentMethodCheckout,\n            isCreatingAccount,\n            createAccountError,\n            requiresMarketingConsent,\n            isFloatingLabelEnabled,\n            defaultShouldSubscribe,\n            fixNewsletterCheckboxExperimentEnabled,\n        } = this.props;\n\n        return (\n            <CreateAccountForm\n                createAccountError={createAccountError}\n                defaultShouldSubscribe={defaultShouldSubscribe}\n                fixNewsletterCheckboxExperimentEnabled={fixNewsletterCheckboxExperimentEnabled}\n                formFields={customerAccountFields}\n                isCreatingAccount={isCreatingAccount}\n                isExecutingPaymentMethodCheckout={isExecutingPaymentMethodCheckout}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                onCancel={this.handleCancelCreateAccount}\n                onSubmit={this.handleCreateAccount}\n                requiresMarketingConsent={requiresMarketingConsent}\n            />\n        );\n    }\n\n    private renderLoginForm(): ReactNode {\n        const {\n            isEmbedded,\n            email,\n            forgotPasswordUrl,\n            isSignInEmailEnabled,\n            isGuestEnabled,\n            isSendingSignInEmail,\n            isSigningIn,\n            isExecutingPaymentMethodCheckout,\n            isAccountCreationEnabled,\n            providerWithCustomCheckout,\n            signInError,\n            isFloatingLabelEnabled,\n            viewType,\n        } = this.props;\n\n        return (\n            <LoginForm\n                canCancel={isGuestEnabled}\n                continueAsGuestButtonLabelId={\n                    providerWithCustomCheckout\n                        ? 'customer.continue'\n                        : 'customer.continue_as_guest_action'\n                }\n                email={this.draftEmail || email}\n                forgotPasswordUrl={forgotPasswordUrl}\n                isExecutingPaymentMethodCheckout={isExecutingPaymentMethodCheckout}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                isSendingSignInEmail={isSendingSignInEmail}\n                isSignInEmailEnabled={isSignInEmailEnabled && !isEmbedded}\n                isSigningIn={isSigningIn}\n                onCancel={this.handleCancelSignIn}\n                onChangeEmail={this.handleChangeEmail}\n                onContinueAsGuest={this.executePaymentMethodCheckoutOrContinue}\n                onCreateAccount={this.showCreateAccount}\n                onSendLoginEmail={this.handleEmailLoginClicked}\n                onSignIn={this.handleSignIn}\n                shouldShowCreateAccountLink={isAccountCreationEnabled}\n                signInError={signInError}\n                viewType={viewType}\n            />\n        );\n    }\n\n    private handleEmailLoginClicked: () => void = async () => {\n        const { viewType } = this.props;\n\n        try {\n            if (viewType !== CustomerViewType.Login && this.draftEmail) {\n                await this.handleSendLoginEmail({ email: this.draftEmail });\n            }\n        } finally {\n            this.setState({\n                isEmailLoginFormOpen: true,\n            });\n        }\n    };\n\n    private handleSendLoginEmail: (values: EmailLoginFormValues) => Promise<void> = async (\n        values,\n    ) => {\n        const { sendLoginEmail } = this.props;\n\n        try {\n            await sendLoginEmail(values);\n        } finally {\n            this.setState({\n                hasRequestedLoginEmail: true,\n            });\n        }\n    };\n\n    private handleContinueAsGuest: (formValues: GuestFormValues) => Promise<void> = async (\n        formValues,\n    ) => {\n        const {\n            canSubscribe,\n            continueAsGuest,\n            hasBillingId,\n            defaultShouldSubscribe,\n            onChangeViewType = noop,\n            onContinueAsGuest = noop,\n            onContinueAsGuestError = noop,\n            onSubscribeToNewsletter,\n        } = this.props;\n\n        const email = formValues.email.trim();\n        const updateSubscriptionWhenUnchecked =\n            hasBillingId || defaultShouldSubscribe ? false : undefined;\n\n        try {\n            const { data } = await continueAsGuest({\n                email,\n                acceptsMarketingNewsletter:\n                    canSubscribe && formValues.shouldSubscribe\n                        ? true\n                        : updateSubscriptionWhenUnchecked,\n                acceptsAbandonedCartEmails: formValues.shouldSubscribe\n                    ? true\n                    : updateSubscriptionWhenUnchecked,\n            });\n\n            onSubscribeToNewsletter(formValues.shouldSubscribe);\n\n            SubscribeSessionStorage.setSubscribeStatus(formValues.shouldSubscribe);\n\n            const customer = data.getCustomer();\n\n            const paymentProviderCustomer = data.getPaymentProviderCustomer();\n\n            if (customer && customer.shouldEncourageSignIn && customer.isGuest && !paymentProviderCustomer?.stripeLinkAuthenticationState) {\n                return onChangeViewType(CustomerViewType.SuggestedLogin);\n            }\n\n            await this.executePaymentMethodCheckoutOrContinue();\n\n            this.draftEmail = undefined;\n        } catch (error) {\n            if (\n                isErrorWithType(error) &&\n                (error.type === 'update_subscriptions' ||\n                    error.type === 'payment_method_client_invalid')\n            ) {\n                this.draftEmail = undefined;\n\n                onContinueAsGuest();\n            }\n\n            if (isErrorWithType(error) && error.status === 429) {\n                return onChangeViewType(CustomerViewType.EnforcedLogin);\n            }\n\n            if (isErrorWithType(error) && error.status === 403) {\n                return onChangeViewType(CustomerViewType.CancellableEnforcedLogin);\n            }\n\n            onContinueAsGuestError(error);\n        }\n    };\n\n    private handleSignIn: (credentials: CustomerCredentials) => Promise<void> = async (\n        credentials,\n    ) => {\n        const {\n            signIn,\n            onSignIn = noop,\n            onSignInError = noop,\n        } = this.props;\n\n        try {\n            await signIn(credentials);\n\n            onSignIn();\n\n            this.draftEmail = undefined;\n        } catch (error) {\n            onSignInError(error);\n        }\n    };\n\n    private handleCreateAccount: (values: CreateAccountFormValues) => void = async (values) => {\n        const {\n            createAccount = noop,\n            onAccountCreated = noop,\n        } = this.props;\n\n        await createAccount(mapCreateAccountFromFormValues(values));\n\n        onAccountCreated();\n    };\n\n    private showCreateAccount: () => void = () => {\n        const { onChangeViewType = noop } = this.props;\n\n        onChangeViewType(CustomerViewType.CreateAccount);\n    };\n\n    private handleCancelCreateAccount: () => void = () => {\n        const { clearError, onChangeViewType = noop, createAccountError } = this.props;\n\n        if (createAccountError) {\n            clearError(createAccountError);\n        }\n\n        onChangeViewType(CustomerViewType.Login);\n    };\n\n    private handleCancelSignIn: () => void = () => {\n        const { clearError, onChangeViewType = noop, signInError } = this.props;\n\n        if (signInError) {\n            clearError(signInError);\n        }\n\n        onChangeViewType(CustomerViewType.Guest);\n    };\n\n    private handleChangeEmail: (email: string) => void = (email) => {\n        const { analyticsTracker } = this.props;\n\n        this.draftEmail = email;\n        analyticsTracker.customerEmailEntry(email);\n    };\n\n    private handleShowLogin: () => void = () => {\n        const { onChangeViewType = noop } = this.props;\n\n        onChangeViewType(CustomerViewType.Login);\n    };\n\n    private executePaymentMethodCheckoutOrContinue: () => void = async () => {\n        const {\n            executePaymentMethodCheckout,\n            onContinueAsGuest = noop,\n            providerWithCustomCheckout\n        } = this.props;\n\n        if (providerWithCustomCheckout && providerWithCustomCheckout !== PaymentMethodId.StripeUPE) {\n            await executePaymentMethodCheckout({\n                methodId: providerWithCustomCheckout,\n                continueWithCheckoutCallback: onContinueAsGuest,\n                checkoutPaymentMethodExecuted: (payload) => this.checkoutPaymentMethodExecuted(payload)\n            });\n        } else {\n            onContinueAsGuest();\n        }\n    };\n\n    private checkoutPaymentMethodExecuted(payload?: CheckoutPaymentMethodExecutedOptions) {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.customerPaymentMethodExecuted(payload);\n    }\n}\n\nexport function mapToWithCheckoutCustomerProps({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutCustomerProps | null {\n    const {\n        data: {\n            getBillingAddress,\n            getCustomerAccountFields,\n            getCheckout,\n            getCustomer,\n            getCart,\n            getSignInEmail,\n            getConfig,\n            isPaymentDataRequired,\n        },\n        errors: { getSignInError, getSignInEmailError, getCreateCustomerAccountError },\n        statuses: {\n            isContinuingAsGuest,\n            isExecutingPaymentMethodCheckout,\n            isInitializingCustomer,\n            isSigningIn,\n            isSendingSignInEmail,\n            isCreatingCustomerAccount,\n        },\n    } = checkoutState;\n\n    const billingAddress = getBillingAddress();\n    const checkout = getCheckout();\n    const customer = getCustomer();\n    const cart = getCart();\n    const signInEmail = getSignInEmail();\n    const config = getConfig();\n\n    if (!checkout || !config || !cart) {\n        return null;\n    }\n\n    const {\n        checkoutSettings: {\n            privacyPolicyUrl,\n            requiresMarketingConsent,\n            isSignInEmailEnabled,\n            isAccountCreationEnabled,\n            isExpressPrivacyPolicy,\n            features,\n        },\n    } = config as StoreConfig & { checkoutSettings: { isAccountCreationEnabled: boolean } };\n\n    const providerWithCustomCheckout = getProviderWithCustomCheckout(\n        config.checkoutSettings.providerWithCustomCheckout,\n    );\n\n    const fixNewsletterCheckboxExperimentEnabled = features['CHECKOUT-8033.fix_newletter_checkbox'];\n\n    return {\n        customerAccountFields: getCustomerAccountFields(),\n        canSubscribe: config.shopperConfig.showNewsletterSignup,\n        checkoutButtonIds: config.checkoutSettings.remoteCheckoutProviders,\n        clearError: checkoutService.clearError,\n        createAccount: checkoutService.createCustomerAccount,\n        continueAsGuest: checkoutService.continueAsGuest,\n        sendLoginEmail: checkoutService.sendSignInEmail,\n        defaultShouldSubscribe: config.shopperConfig.defaultNewsletterSignup,\n        deinitializeCustomer: checkoutService.deinitializeCustomer,\n        executePaymentMethodCheckout: checkoutService.executePaymentMethodCheckout,\n        email: billingAddress?.email || customer?.email,\n        firstName: customer?.firstName,\n        fixNewsletterCheckboxExperimentEnabled,\n        forgotPasswordUrl: config.links.forgotPasswordLink,\n        initializeCustomer: checkoutService.initializeCustomer,\n        isCreatingAccount: isCreatingCustomerAccount(),\n        createAccountError: getCreateCustomerAccountError(),\n        hasBillingId: !!billingAddress?.id,\n        isContinuingAsGuest: isContinuingAsGuest(),\n        isExecutingPaymentMethodCheckout: isExecutingPaymentMethodCheckout(),\n        isInitializing: isInitializingCustomer(),\n        isSignInEmailEnabled,\n        isAccountCreationEnabled,\n        isGuestEnabled: config.checkoutSettings.guestCheckoutEnabled,\n        isSigningIn: isSigningIn(),\n        isSendingSignInEmail: isSendingSignInEmail(),\n        signInEmail,\n        signInEmailError: getSignInEmailError(),\n        privacyPolicyUrl,\n        providerWithCustomCheckout,\n        requiresMarketingConsent,\n        signIn: checkoutService.signInCustomer,\n        signInError: getSignInError(),\n        isFloatingLabelEnabled: isFloatingLabelEnabled(config.checkoutSettings),\n        isExpressPrivacyPolicy,\n        isPaymentDataRequired: isPaymentDataRequired(),\n        shouldRenderStripeForm: providerWithCustomCheckout === PaymentMethodId.StripeUPE && shouldUseStripeLinkByMinimumAmount(cart),\n    };\n}\n\nexport default withAnalytics(withCheckout(mapToWithCheckoutCustomerProps)(Customer));\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconTag: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M21.41 11.58l-9-9C12.05 2.22 11.55 2 11 2H4c-1.1 0-2 .9-2 2v7c0 .55.22 1.05.59 1.42l9 9c.36.36.86.58 1.41.58.55 0 1.05-.22 1.41-.59l7-7c.37-.36.59-.86.59-1.41 0-.55-.23-1.06-.59-1.42zM5.5 7C4.67 7 4 6.33 4 5.5S4.67 4 5.5 4 7 4.67 7 5.5 6.33 7 5.5 7z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconTag);\n","import DOMPurify from 'dompurify';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { IconTag } from '../ui/icon';\n\nexport interface PromotionBannerProps {\n    message: string;\n}\n\nconst PromotionBanner: FunctionComponent<PromotionBannerProps> = ({ message }) => (\n    <Alert\n        additionalClassName=\"optimizedCheckout-discountBanner\"\n        icon={<IconTag />}\n        type={AlertType.Info}\n    >\n        <span\n            dangerouslySetInnerHTML={{\n                __html: DOMPurify.sanitize(message),\n            }}\n            data-test=\"promotion-banner-message\"\n        />\n    </Alert>\n);\n\nexport default memo(PromotionBanner);\n","import { Banner, Promotion } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport PromotionBanner from './PromotionBanner';\nimport './PromotionBannerList.scss';\n\nexport interface PromotionBannerListProps {\n    promotions?: Promotion[];\n}\n\nconst PromotionBannerList: FunctionComponent<PromotionBannerListProps> = ({ promotions }) => {\n    const banners = (promotions || []).reduce(\n        (result, promotion) => [...result, ...promotion.banners],\n        [] as Banner[],\n    );\n\n    if (!banners.length) {\n        return null;\n    }\n\n    return (\n        <div className=\"discountBanner\">\n            <ul className=\"discountBannerList\">\n                {banners.map((banner, index) => (\n                    <PromotionBanner key={index} message={banner.text} />\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default memo(PromotionBannerList);\n","import { Consignment, LineItemMap } from '@bigcommerce/checkout-sdk';\nimport { some } from 'lodash';\n\nimport hasUnassignedLineItems from './hasUnassignedLineItems';\n\nexport default function isUsingMultiShipping(\n    consignments: Consignment[],\n    lineItems: LineItemMap,\n): boolean {\n    if (consignments.length > 1) {\n        return true;\n    }\n\n    if (\n        some(consignments, (consignment) => consignment.lineItemIds.length) &&\n        hasUnassignedLineItems(consignments, lineItems)\n    ) {\n        return true;\n    }\n\n    return false;\n}\n","import { Cart, Consignment } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { isPayPalFastlaneAddress, PoweredByPayPalFastlaneLabel, usePayPalFastlaneAddress } from '@bigcommerce/checkout/paypal-fastlane-integration';\n\nimport { AddressType, StaticAddress } from '../address';\n\nimport { StaticShippingOption } from './shippingOption';\nimport './StaticConsignment.scss';\nimport StaticConsignmentItemList from './StaticConsignmentItemList';\n\ninterface StaticConsignmentProps {\n    consignment: Consignment;\n    cart: Cart;\n    compactView?: boolean;\n}\n\nconst StaticConsignment: FunctionComponent<StaticConsignmentProps> = ({\n    consignment,\n    cart,\n    compactView,\n}) => {\n    const { paypalFastlaneAddresses } = usePayPalFastlaneAddress();\n    const { shippingAddress: address, selectedShippingOption } = consignment;\n    const showPayPalFastlaneAddressLabel = isPayPalFastlaneAddress(address, paypalFastlaneAddresses);\n\n    return (\n        <div className=\"staticConsignment\">\n            <StaticAddress address={address} type={AddressType.Shipping} />\n\n            {showPayPalFastlaneAddressLabel && <PoweredByPayPalFastlaneLabel />}\n\n            {!compactView && <StaticConsignmentItemList cart={cart} consignment={consignment} />}\n\n            {selectedShippingOption && (\n                <div>\n                    <div className=\"shippingOption shippingOption--alt shippingOption--selected\">\n                        <StaticShippingOption\n                            displayAdditionalInformation={false}\n                            method={selectedShippingOption}\n                        />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default memo(StaticConsignment);\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class ShippingOptionExpiredError extends CustomError {\n    constructor() {\n        super({\n            name: 'SHIPPING_OPTION_EXPIRED',\n            message: getLanguageService().translate('shipping.shipping_option_expired_error'),\n            title: getLanguageService().translate('shipping.shipping_option_expired_heading'),\n        });\n\n        setPrototypeOf(this, ShippingOptionExpiredError.prototype);\n    }\n}\n","import React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nexport interface LoadingNotificationProps {\n    isLoading: boolean;\n}\n\nconst LoadingNotification: FunctionComponent<LoadingNotificationProps> = ({ isLoading }) => {\n    if (!isLoading) {\n        return null;\n    }\n\n    return (\n        <div className=\"loadingNotification\">\n            <div className=\"loadingNotification-label optimizedCheckout-loadingToaster\">\n                <div className=\"spinner\" />\n\n                <span aria-live=\"assertive\" className=\"label\" role=\"alert\">\n                    <TranslatedString id=\"common.loading_text\" />\n                </span>\n            </div>\n        </div>\n    );\n};\n\nexport default memo(LoadingNotification);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconCheck: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconCheck);\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button, ButtonSize, ButtonVariant } from '../ui/button';\nimport { IconCheck } from '../ui/icon';\n\nimport CheckoutStepType from './CheckoutStepType';\n\nexport interface CheckoutStepHeaderProps {\n    heading: ReactNode;\n    isActive?: boolean;\n    isComplete?: boolean;\n    isEditable?: boolean;\n    summary?: ReactNode;\n    type: CheckoutStepType;\n    onEdit?(type: CheckoutStepType): void;\n}\n\nconst CheckoutStepHeader: FunctionComponent<CheckoutStepHeaderProps> = ({\n    heading,\n    isActive,\n    isComplete,\n    isEditable,\n    onEdit,\n    summary,\n    type,\n}) => {\n    return (\n        <div\n            className={classNames('stepHeader', {\n                'is-readonly': !isEditable,\n                'is-clickable': isEditable && !isActive,\n            })}\n            onClick={preventDefault(isEditable && onEdit ? () => onEdit(type) : noop)}\n        >\n            <div className=\"stepHeader-figure stepHeader-column\">\n                <IconCheck\n                    additionalClassName={classNames(\n                        'stepHeader-counter',\n                        'optimizedCheckout-step',\n                        { 'stepHeader-counter--complete': isComplete },\n                    )}\n                />\n\n                <h2 className=\"stepHeader-title optimizedCheckout-headingPrimary\">{heading}</h2>\n            </div>\n\n            <div\n                className=\"stepHeader-body stepHeader-column optimizedCheckout-contentPrimary\"\n                data-test=\"step-info\"\n            >\n                {!isActive && isComplete && summary}\n            </div>\n\n            {isEditable && !isActive && (\n                <div className=\"stepHeader-actions stepHeader-column\">\n                    <Button\n                        aria-expanded={isActive}\n                        size={ButtonSize.Tiny}\n                        testId=\"step-edit-button\"\n                        variant={ButtonVariant.Secondary}\n                    >\n                        <TranslatedString id=\"common.edit_action\" />\n                    </Button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default memo(CheckoutStepHeader);\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { Component, createRef, ReactNode } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { isMobileView, MobileView } from '../ui/responsive';\n\nimport CheckoutStepHeader from './CheckoutStepHeader';\nimport CheckoutStepType from './CheckoutStepType';\n\nexport interface CheckoutStepProps {\n    heading?: ReactNode;\n    isActive?: boolean;\n    isBusy: boolean;\n    isComplete?: boolean;\n    isEditable?: boolean;\n    suggestion?: ReactNode;\n    summary?: ReactNode;\n    type: CheckoutStepType;\n    onExpanded?(step: CheckoutStepType): void;\n    onEdit?(step: CheckoutStepType): void;\n}\n\nexport interface CheckoutStepState {\n    isClosed: boolean;\n}\n\nexport default class CheckoutStep extends Component<CheckoutStepProps, CheckoutStepState> {\n    state = {\n        isClosed: true,\n    };\n\n    private containerRef = createRef<HTMLLIElement>();\n    private contentRef = createRef<HTMLDivElement>();\n    private timeoutRef?: number;\n    private timeoutDelay?: number;\n\n    componentDidMount(): void {\n        const { isActive } = this.props;\n\n        if (isActive) {\n            this.focusStep();\n        }\n    }\n\n    componentDidUpdate(prevProps: Readonly<CheckoutStepProps>): void {\n        const { isActive } = this.props;\n\n        if (isActive && isActive !== prevProps.isActive) {\n            this.focusStep();\n        }\n    }\n\n    componentWillUnmount(): void {\n        if (this.timeoutRef) {\n            window.clearTimeout(this.timeoutRef);\n\n            this.timeoutRef = undefined;\n        }\n    }\n\n    render(): ReactNode {\n        const { heading, isActive, isComplete, isEditable, onEdit, suggestion, summary, type } =\n            this.props;\n\n        const { isClosed } = this.state;\n\n        return (\n            <li\n                className={classNames('checkout-step', 'optimizedCheckout-checkoutStep', {\n                    [`checkout-step--${type}`]: !!type,\n                })}\n                ref={this.containerRef}\n            >\n                <div className=\"checkout-view-header\">\n                    <CheckoutStepHeader\n                        heading={heading}\n                        isActive={isActive}\n                        isComplete={isComplete}\n                        isEditable={isEditable}\n                        onEdit={onEdit}\n                        summary={summary}\n                        type={type}\n                    />\n                </div>\n\n                {suggestion && isClosed && !isActive && (\n                    <div className=\"checkout-suggestion\" data-test=\"step-suggestion\">\n                        {suggestion}\n                    </div>\n                )}\n\n                {this.renderContent()}\n            </li>\n        );\n    }\n\n    private renderContent(): ReactNode {\n        const { children, isActive, isBusy } = this.props;\n\n        return (\n            <MobileView>\n                {(matched) => (\n                    <CSSTransition\n                        addEndListener={this.handleTransitionEnd}\n                        classNames=\"checkout-view-content\"\n                        enter={!matched}\n                        exit={!matched}\n                        in={isActive}\n                        mountOnEnter\n                        onExited={ this.onAnimationEnd }\n                        timeout={ {} }\n                        unmountOnExit\n                    >\n                        <div\n                            aria-busy={isBusy}\n                            className=\"checkout-view-content\"\n                            ref={this.contentRef}\n                        >\n                            {isActive ? children : null}\n                        </div>\n                    </CSSTransition>\n                )}\n            </MobileView>\n        );\n    }\n\n    private focusStep(): void {\n        const delay = isMobileView() ? 0 : this.getTransitionDelay();\n\n        this.setState({ isClosed: false });\n\n        this.timeoutRef = window.setTimeout(() => {\n            const input = this.getChildInput();\n            const position = this.getScrollPosition();\n            const { type, onExpanded = noop } = this.props;\n\n            if (input) {\n                input.focus();\n            }\n\n            if (position !== undefined && !isNaN(position)) {\n                window.scrollTo(0, position);\n            }\n\n            onExpanded(type);\n\n            this.timeoutRef = undefined;\n        }, delay);\n    }\n\n    private getChildInput(): HTMLElement | undefined {\n        const container = this.containerRef.current;\n\n        if (!container) {\n            return;\n        }\n\n        const input = container.querySelector<HTMLElement>('input, select, textarea');\n\n        return input || undefined;\n    }\n\n    private getScrollPosition(): number | undefined {\n        const container = this.getParentContainer();\n        const { isComplete } = this.props;\n\n        if (!container || window !== window.top) {\n            return;\n        }\n\n        const topOffset = isComplete ? 0 : window.innerHeight / 5;\n        const containerOffset =\n            container.getBoundingClientRect().top + (window.scrollY || window.pageYOffset);\n\n        return containerOffset - topOffset;\n    }\n\n    // For now, we need to find the parent container because `CheckoutStep`\n    // isn't the outer container yet. Once both the header and body are\n    // moved inside this component, we can remove the lookup.\n    private getParentContainer(): HTMLElement | undefined {\n        let container: HTMLElement | null = this.containerRef.current;\n\n        while (container && container.parentElement) {\n            if (container.parentElement.classList.contains('checkout-step')) {\n                return container.parentElement;\n            }\n\n            container = container.parentElement;\n        }\n\n        return this.containerRef.current ? this.containerRef.current : undefined;\n    }\n\n    private getTransitionDelay(): number {\n        if (this.timeoutDelay !== undefined) {\n            return this.timeoutDelay;\n        }\n\n        // Cache the result to avoid unnecessary reflow\n        this.timeoutDelay =\n            parseFloat(\n                this.contentRef.current\n                    ? getComputedStyle(this.contentRef.current).transitionDuration\n                    : '0s',\n            ) * 1000;\n\n        return this.timeoutDelay;\n    }\n\n    private handleTransitionEnd: (node: HTMLElement, done: () => void) => void = (node, done) => {\n        node.addEventListener('transitionend', ({ target }) => {\n            if (target === node) {\n                done();\n            }\n        });\n    };\n\n    private onAnimationEnd = (): void => {\n        const { isActive } = this.props;\n\n        if (!isActive) {\n            this.setState({ isClosed: true });\n        }\n    }\n}\n","import { MOBILE_MAX_WIDTH } from './breakpoints';\n\nlet query: MediaQueryList;\n\nexport default function isMobileView() {\n    query = window.matchMedia(`(max-width: ${MOBILE_MAX_WIDTH}px)`);\n\n    return query.matches;\n}\n","enum CheckoutStepType {\n    Billing = 'billing',\n    Customer = 'customer',\n    Payment = 'payment',\n    Shipping = 'shipping',\n}\n\nexport default CheckoutStepType;\n","import { Cart, StoreConfig } from '@bigcommerce/checkout-sdk';\n\nconst itemsRequireShipping = (cart?: Cart, config?: StoreConfig) => {\n    if (!cart) {\n        return false;\n    }\n\n    if (cart.lineItems.physicalItems.some((lineItem) => lineItem.isShippingRequired)) {\n        return true;\n    }\n\n    if (config && cart.lineItems.customItems\n    ) {\n        return cart.lineItems.customItems.length > 0;\n    }\n\n    return false;\n};\n\nexport default itemsRequireShipping;\n","import { CheckoutSelectors } from '@bigcommerce/checkout-sdk';\nimport { compact } from 'lodash';\nimport { createSelector } from 'reselect';\n\nimport { shouldUseStripeLinkByMinimumAmount } from '@bigcommerce/checkout/instrument-utils';\n\nimport { isValidAddress } from '../address';\nimport { EMPTY_ARRAY, isExperimentEnabled } from '../common/utility';\nimport { SUPPORTED_METHODS } from '../customer';\nimport { PaymentMethodId } from '../payment/paymentMethod';\nimport {\n    hasSelectedShippingOptions,\n    hasUnassignedLineItems,\n    itemsRequireShipping,\n} from '../shipping';\n\nimport CheckoutStepType from './CheckoutStepType';\n\n// StripeLink is a UX that is only available with StripeUpe and will only be displayed for BC guest users,\n// it uses its own components in the customer and shipping steps, unfortunately in order to preserve the UX\n// when reloading the checkout page it's necessary to refill the stripe components with the information saved.\n// In this step, we require that the customer strategy be reloaded the first time.\nconst getStripeLinkAndCheckoutPageIsReloaded = (\n    isUsingWallet: boolean,\n    hasEmail: boolean,\n    isGuest: boolean,\n    shouldUseStripeLinkByMinimumAmount: boolean,\n    providerWithCustomCheckout?: string | null,\n) => {\n    return !isUsingWallet && providerWithCustomCheckout === PaymentMethodId.StripeUPE && hasEmail && isGuest && shouldUseStripeLinkByMinimumAmount;\n}\n\nconst getCustomerStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getCheckout(),\n    ({ data }: CheckoutSelectors) => data.getCustomer(),\n    ({ data }: CheckoutSelectors) => data.getBillingAddress(),\n    ({ data }: CheckoutSelectors) => data.getConfig(),\n    ({ data }: CheckoutSelectors) => data.getCart(),\n    ({ data }: CheckoutSelectors) => data.getPaymentProviderCustomer(),\n    (checkout, customer, billingAddress, config, cart, paymentProviderCustomer) => {\n        const hasEmail = !!(\n            (customer && customer.email) ||\n            (billingAddress && billingAddress.email)\n        );\n        const isUsingWallet =\n            checkout && checkout.payments\n                ? checkout.payments.some(\n                      (payment) => SUPPORTED_METHODS.indexOf(payment.providerId) >= 0,\n                  )\n                : false;\n        const isGuest = !!(customer && customer.isGuest);\n        const isComplete = hasEmail || isUsingWallet;\n        const isEditable = isComplete && !isUsingWallet && isGuest;\n        const isUsingStripeLinkAndCheckoutPageIsReloaded = getStripeLinkAndCheckoutPageIsReloaded(\n            isUsingWallet,\n            hasEmail,\n            isGuest,\n            cart ? shouldUseStripeLinkByMinimumAmount(cart) : false,\n            config?.checkoutSettings.providerWithCustomCheckout,\n        );\n\n        if (isUsingStripeLinkAndCheckoutPageIsReloaded) {\n            return {\n                type: CheckoutStepType.Customer,\n                isActive: false,\n                isComplete: paymentProviderCustomer?.stripeLinkAuthenticationState !== undefined,\n                isEditable,\n                isRequired: true,\n            };\n        }\n\n        return {\n            type: CheckoutStepType.Customer,\n            isActive: false,\n            isComplete,\n            isEditable,\n            isRequired: true,\n        };\n    },\n);\n\nconst getBillingStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getCheckout(),\n    ({ data }: CheckoutSelectors) => data.getBillingAddress(),\n    ({ data }: CheckoutSelectors) => {\n        const billingAddress = data.getBillingAddress();\n\n        return billingAddress\n            ? data.getBillingAddressFields(billingAddress.countryCode)\n            : EMPTY_ARRAY;\n    },\n    (checkout, billingAddress, billingAddressFields) => {\n        const hasAddress = billingAddress\n            ? isValidAddress(billingAddress, billingAddressFields)\n            : false;\n        const isUsingWallet =\n            checkout && checkout.payments\n                ? checkout.payments.some(\n                      (payment) => SUPPORTED_METHODS.indexOf(payment.providerId) >= 0,\n                  )\n                : false;\n        const isComplete = hasAddress || isUsingWallet;\n        const isUsingAmazonPay =\n            checkout && checkout.payments\n                ? checkout.payments.some((payment) => payment.providerId === 'amazonpay')\n                : false;\n\n        if (isUsingAmazonPay) {\n            const billingAddressCustomFields = billingAddressFields.filter(\n                ({ custom }: { custom: boolean }) => custom,\n            );\n            const hasCustomFields = billingAddressCustomFields.length > 0;\n            const isAmazonPayBillingStepComplete =\n                billingAddress && hasCustomFields\n                    ? isValidAddress(billingAddress, billingAddressCustomFields)\n                    : true;\n\n            return {\n                type: CheckoutStepType.Billing,\n                isActive: false,\n                isComplete: isAmazonPayBillingStepComplete,\n                isEditable: isAmazonPayBillingStepComplete && hasCustomFields,\n                isRequired: true,\n            };\n        }\n\n        const isUsingPaypal =\n            checkout && checkout.payments\n                ? checkout.payments.some(\n                    (payment) =>\n                        [\n                            'braintreepaypal',\n                            'braintreepaypalcredit',\n                            'braintreevenmo',\n                            'paypalcommerce',\n                            'paypalcommercecredit',\n                            'paypalcommercevenmo'\n                        ]\n                            .includes(payment.providerId))\n                : false;\n\n        if (isUsingPaypal) {\n            return {\n                type: CheckoutStepType.Billing,\n                isActive: false,\n                isComplete: hasAddress,\n                isEditable: hasAddress,\n                isRequired: true,\n            };\n        }\n\n        return {\n            type: CheckoutStepType.Billing,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete && !isUsingWallet,\n            isRequired: true,\n        };\n    },\n);\n\nconst getShippingStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getShippingAddress(),\n    ({ data }: CheckoutSelectors) => data.getConsignments(),\n    ({ data }: CheckoutSelectors) => data.getCart(),\n    ({ data }: CheckoutSelectors) => {\n        const shippingAddress = data.getShippingAddress();\n\n        return shippingAddress\n            ? data.getShippingAddressFields(shippingAddress.countryCode)\n            : EMPTY_ARRAY;\n    },\n    ({ data }: CheckoutSelectors) => data.getConfig(),\n    (shippingAddress, consignments, cart, shippingAddressFields, config) => {\n        const hasAddress = shippingAddress\n            ? isValidAddress(shippingAddress, shippingAddressFields)\n            : false;\n        const hasOptions = consignments ? hasSelectedShippingOptions(consignments) : false;\n        const hasUnassignedItems =\n            cart && consignments ? hasUnassignedLineItems(consignments, cart.lineItems) : true;\n        const isComplete = hasAddress && hasOptions && !hasUnassignedItems;\n        const isRequired = itemsRequireShipping(cart, config);\n        const isCustomShippingSelected =\n            isExperimentEnabled(\n                config?.checkoutSettings,\n                'PROJECT-5015.manual_order.display_custom_shipping',\n            ) &&\n            hasOptions &&\n            consignments?.some(\n                ({ selectedShippingOption }) => selectedShippingOption?.type === 'custom',\n            );\n\n        return {\n            type: CheckoutStepType.Shipping,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete && isRequired && !isCustomShippingSelected,\n            isRequired,\n        };\n    },\n);\n\nconst getPaymentStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getOrder(),\n    (order) => {\n        const isComplete = order ? order.isComplete : false;\n\n        return {\n            type: CheckoutStepType.Payment,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete,\n            isRequired: true,\n        };\n    },\n);\n\nconst getOrderSubmitStatus = createSelector(\n    ({ statuses }: CheckoutSelectors) => statuses.isSubmittingOrder(),\n    (status) => status,\n);\n\nconst getCheckoutStepStatuses = createSelector(\n    getCustomerStepStatus,\n    getShippingStepStatus,\n    getBillingStepStatus,\n    getPaymentStepStatus,\n    getOrderSubmitStatus,\n    (customerStep, shippingStep, billingStep, paymentStep, orderStatus) => {\n        const isSubmittingOrder = orderStatus;\n\n        const steps = compact([customerStep, shippingStep, billingStep, paymentStep]);\n\n        const defaultActiveStep =\n            steps.find((step) => !step.isComplete && step.isRequired) || steps[steps.length - 1];\n\n        return steps.map((step, index) => {\n            const isPrevStepComplete = steps\n                .slice(0, index)\n                .every((prevStep) => prevStep.isComplete || !prevStep.isRequired);\n\n            return {\n                ...step,\n                isActive: defaultActiveStep.type === step.type,\n                isBusy: false,\n                // A step is only editable if its previous step is complete or not required\n                isEditable: isPrevStepComplete && step.isEditable && !isSubmittingOrder,\n            };\n        });\n    },\n);\n\nexport default getCheckoutStepStatuses;\n","import { CheckoutSettings } from '@bigcommerce/checkout-sdk';\n\nexport default function isExperimentEnabled(\n    checkoutSettings: CheckoutSettings | undefined,\n    experimentName: string,\n): boolean {\n    return Boolean(checkoutSettings?.features[experimentName] ?? true);\n}\n","import {\n    Address,\n    Cart,\n    CartChangedError,\n    CheckoutParams,\n    CheckoutSelectors,\n    Consignment,\n    EmbeddedCheckoutMessenger,\n    EmbeddedCheckoutMessengerOptions,\n    ExtensionRegion,\n    FlashMessage,\n    PaymentMethod,\n    Promotion,\n RequestOptions } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { find, findIndex } from 'lodash';\nimport React, { Component, lazy, ReactNode } from 'react';\n\nimport { AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\nimport { Extension, ExtensionContextProps, withExtension } from '@bigcommerce/checkout/checkout-extension';\nimport { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport { AddressFormSkeleton, ChecklistSkeleton } from '@bigcommerce/checkout/ui';\n\nimport { withAnalytics } from '../analytics';\nimport { StaticBillingAddress } from '../billing';\nimport { EmptyCartMessage } from '../cart';\nimport { withCheckout } from '../checkout';\nimport { CustomError, ErrorModal, isCustomError } from '../common/error';\nimport { retry } from '../common/utility';\nimport {\n    CheckoutButtonContainer,\n    CheckoutSuggestion,\n    Customer,\n    CustomerInfo,\n    CustomerSignOutEvent,\n    CustomerViewType,\n} from '../customer';\nimport { getSupportedMethodIds } from '../customer/getSupportedMethods';\nimport { SubscribeSessionStorage } from '../customer/SubscribeSessionStorage';\nimport { EmbeddedCheckoutStylesheet, isEmbedded } from '../embeddedCheckout';\nimport { PromotionBannerList } from '../promotion';\nimport { hasSelectedShippingOptions, isUsingMultiShipping, StaticConsignment } from '../shipping';\nimport { ShippingOptionExpiredError } from '../shipping/shippingOption';\nimport { LazyContainer, LoadingNotification, LoadingOverlay } from '../ui/loading';\nimport { MobileView } from '../ui/responsive';\n\nimport CheckoutStep from './CheckoutStep';\nimport CheckoutStepStatus from './CheckoutStepStatus';\nimport CheckoutStepType from './CheckoutStepType';\nimport CheckoutSupport from './CheckoutSupport';\nimport mapToCheckoutProps from './mapToCheckoutProps';\nimport navigateToOrderConfirmation from './navigateToOrderConfirmation';\n\nconst Billing = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"billing\" */\n                '../billing/Billing'\n            ),\n    ),\n);\n\nconst CartSummary = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"cart-summary\" */\n                '../cart/CartSummary'\n            ),\n    ),\n);\n\nconst CartSummaryDrawer = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"cart-summary-drawer\" */\n                '../cart/CartSummaryDrawer'\n            ),\n    ),\n);\n\nconst Payment = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"payment\" */\n                '../payment/Payment'\n            ),\n    ),\n);\n\nconst Shipping = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"shipping\" */\n                '../shipping/Shipping'\n            ),\n    ),\n);\n\nexport interface CheckoutProps {\n    checkoutId: string;\n    containerId: string;\n    embeddedStylesheet: EmbeddedCheckoutStylesheet;\n    embeddedSupport: CheckoutSupport;\n    errorLogger: ErrorLogger;\n    createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\n}\n\nexport interface CheckoutState {\n    activeStepType?: CheckoutStepType;\n    isBillingSameAsShipping: boolean;\n    customerViewType?: CustomerViewType;\n    defaultStepType?: CheckoutStepType;\n    error?: Error;\n    flashMessages?: FlashMessage[];\n    isMultiShippingMode: boolean;\n    isCartEmpty: boolean;\n    isRedirecting: boolean;\n    hasSelectedShippingOptions: boolean;\n    isSubscribed: boolean;\n    buttonConfigs: PaymentMethod[];\n}\n\nexport interface WithCheckoutProps {\n    billingAddress?: Address;\n    cart?: Cart;\n    consignments?: Consignment[];\n    error?: Error;\n    hasCartChanged: boolean;\n    flashMessages?: FlashMessage[];\n    isGuestEnabled: boolean;\n    isLoadingCheckout: boolean;\n    isPending: boolean;\n    isPriceHiddenFromGuests: boolean;\n    isShowingWalletButtonsOnTop: boolean;\n    loginUrl: string;\n    cartUrl: string;\n    createAccountUrl: string;\n    promotions?: Promotion[];\n    steps: CheckoutStepStatus[];\n    clearError(error?: Error): void;\n    loadCheckout(id: string, options?: RequestOptions<CheckoutParams>): Promise<CheckoutSelectors>;\n    loadPaymentMethodByIds(methodIds: string[]): Promise<CheckoutSelectors>;\n    subscribeToConsignments(subscriber: (state: CheckoutSelectors) => void): () => void;\n}\n\nclass Checkout extends Component<\n    CheckoutProps &\n        WithCheckoutProps &\n        WithLanguageProps &\n        AnalyticsContextProps &\n        ExtensionContextProps,\n    CheckoutState\n> {\n    state: CheckoutState = {\n        isBillingSameAsShipping: true,\n        isCartEmpty: false,\n        isRedirecting: false,\n        isMultiShippingMode: false,\n        hasSelectedShippingOptions: false,\n        isSubscribed: false,\n        buttonConfigs: [],\n    };\n\n    private embeddedMessenger?: EmbeddedCheckoutMessenger;\n    private unsubscribeFromConsignments?: () => void;\n\n    componentWillUnmount(): void {\n        if (this.unsubscribeFromConsignments) {\n            this.unsubscribeFromConsignments();\n            this.unsubscribeFromConsignments = undefined;\n        }\n\n        window.removeEventListener('beforeunload', this.handleBeforeExit);\n        this.handleBeforeExit();\n    }\n\n    async componentDidMount(): Promise<void> {\n        const {\n            analyticsTracker,\n            checkoutId,\n            containerId,\n            createEmbeddedMessenger,\n            embeddedStylesheet,\n            extensionService,\n            loadCheckout,\n            loadPaymentMethodByIds,\n            subscribeToConsignments,\n        } = this.props;\n\n        try {\n            const [{ data }] = await Promise.all([loadCheckout(checkoutId, {\n                params: {\n                    include: [\n                        'cart.lineItems.physicalItems.categoryNames',\n                        'cart.lineItems.digitalItems.categoryNames',\n                    ] as any, // FIXME: Currently the enum is not exported so it can't be used here.\n                },\n            }), extensionService.loadExtensions()]);\n\n            const providers = data.getConfig()?.checkoutSettings?.remoteCheckoutProviders || [];\n            const supportedProviders = getSupportedMethodIds(providers);\n\n            if (providers.length > 0) {\n                const configs = await loadPaymentMethodByIds(supportedProviders);\n\n                this.setState({\n                    buttonConfigs: configs.data.getPaymentMethods() || [],\n                });\n            }\n\n            extensionService.preloadExtensions();\n\n            const { links: { siteLink = '' } = {} } = data.getConfig() || {};\n            const errorFlashMessages = data.getFlashMessages('error') || [];\n\n            if (errorFlashMessages.length) {\n                const { language } = this.props;\n\n                this.setState({\n                    error: new CustomError({\n                        title:\n                            errorFlashMessages[0].title ||\n                            language.translate('common.error_heading'),\n                        message: errorFlashMessages[0].message,\n                        data: {},\n                        name: 'default',\n                    }),\n                });\n            }\n\n            const messenger = createEmbeddedMessenger({ parentOrigin: siteLink });\n\n            this.unsubscribeFromConsignments = subscribeToConsignments(\n                this.handleConsignmentsUpdated,\n            );\n            this.embeddedMessenger = messenger;\n            messenger.receiveStyles((styles) => embeddedStylesheet.append(styles));\n            messenger.postFrameLoaded({ contentId: containerId });\n            messenger.postLoaded();\n\n            analyticsTracker.checkoutBegin();\n\n            const consignments = data.getConsignments();\n            const cart = data.getCart();\n\n            const hasMultiShippingEnabled =\n                data.getConfig()?.checkoutSettings.hasMultiShippingEnabled;\n            const checkoutBillingSameAsShippingEnabled =\n                data.getConfig()?.checkoutSettings.checkoutBillingSameAsShippingEnabled ?? true;\n            const defaultNewsletterSignupOption =\n                data.getConfig()?.shopperConfig.defaultNewsletterSignup ??\n                false;\n            const isMultiShippingMode =\n                !!cart &&\n                !!consignments &&\n                hasMultiShippingEnabled &&\n                isUsingMultiShipping(consignments, cart.lineItems);\n\n            this.setState({\n                isBillingSameAsShipping: checkoutBillingSameAsShippingEnabled,\n                isSubscribed: defaultNewsletterSignupOption,\n            });\n\n            if (isMultiShippingMode) {\n                this.setState({ isMultiShippingMode }, this.handleReady);\n            } else {\n                this.handleReady();\n            }\n\n            window.addEventListener('beforeunload', this.handleBeforeExit);\n\n        } catch (error) {\n            if (error instanceof Error) {\n                this.handleUnhandledError(error);\n            }\n        }\n    }\n\n    render(): ReactNode {\n        const { error } = this.state;\n        let errorModal = null;\n\n        if (error) {\n            if (isCustomError(error)) {\n                errorModal = (\n                    <ErrorModal\n                        error={error}\n                        onClose={this.handleCloseErrorModal}\n                        title={error.title}\n                    />\n                );\n            } else {\n                errorModal = <ErrorModal error={error} onClose={this.handleCloseErrorModal} />;\n            }\n        }\n\n        return (\n            <div className={classNames('remove-checkout-step-numbers', { 'is-embedded': isEmbedded() })} data-test=\"checkout-page-container\" id=\"checkout-page-container\">\n                <div className=\"layout optimizedCheckout-contentPrimary\">\n                    {this.renderContent()}\n                </div>\n                {errorModal}\n            </div>\n        );\n    }\n\n    private renderContent(): ReactNode {\n        const { isPending, loginUrl, promotions = [], steps, isShowingWalletButtonsOnTop, extensionState } = this.props;\n\n        const { activeStepType, defaultStepType, isCartEmpty, isRedirecting } = this.state;\n\n        if (isCartEmpty) {\n            return <EmptyCartMessage loginUrl={loginUrl} waitInterval={3000} />;\n        }\n\n        const isPaymentStepActive = activeStepType\n            ? activeStepType === CheckoutStepType.Payment\n            : defaultStepType === CheckoutStepType.Payment;\n\n        return (\n            <LoadingOverlay hideContentWhenLoading isLoading={isRedirecting}>\n                <div className=\"layout-main\">\n                    <LoadingNotification isLoading={(!isShowingWalletButtonsOnTop && isPending) || extensionState.isShowingLoadingIndicator} />\n\n                    <PromotionBannerList promotions={promotions} />\n\n                    {isShowingWalletButtonsOnTop && this.state.buttonConfigs?.length > 0 && (\n                        <CheckoutButtonContainer\n                            checkEmbeddedSupport={this.checkEmbeddedSupport}\n                            isPaymentStepActive={isPaymentStepActive}\n                            onUnhandledError={this.handleUnhandledError}\n                            onWalletButtonClick={this.handleWalletButtonClick}\n                        />\n                    )}\n\n                    <ol className=\"checkout-steps\">\n                        {steps\n                            .filter((step) => step.isRequired)\n                            .map((step) =>\n                                this.renderStep({\n                                    ...step,\n                                    isActive: activeStepType\n                                        ? activeStepType === step.type\n                                        : defaultStepType === step.type,\n                                    isBusy: isPending,\n                                }),\n                            )}\n                    </ol>\n                </div>\n\n                {this.renderCartSummary()}\n            </LoadingOverlay>\n        );\n    }\n\n    private renderStep(step: CheckoutStepStatus): ReactNode {\n        switch (step.type) {\n            case CheckoutStepType.Customer:\n                return this.renderCustomerStep(step);\n\n            case CheckoutStepType.Shipping:\n                return this.renderShippingStep(step);\n\n            case CheckoutStepType.Billing:\n                return this.renderBillingStep(step);\n\n            case CheckoutStepType.Payment:\n                return this.renderPaymentStep(step);\n\n            default:\n                return null;\n        }\n    }\n\n    private renderCustomerStep(step: CheckoutStepStatus): ReactNode {\n        const { isGuestEnabled, isShowingWalletButtonsOnTop } = this.props;\n        const {\n            customerViewType = isGuestEnabled ? CustomerViewType.Guest : CustomerViewType.Login,\n            isSubscribed,\n        } = this.state;\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"customer.customer_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n                suggestion={<CheckoutSuggestion />}\n                summary={\n                    <CustomerInfo\n                        onSignOut={this.handleSignOut}\n                        onSignOutError={this.handleError}\n                    />\n                }\n            >\n                <Customer\n                    checkEmbeddedSupport={this.checkEmbeddedSupport}\n                    isEmbedded={isEmbedded()}\n                    isSubscribed={isSubscribed}\n                    isWalletButtonsOnTop = {isShowingWalletButtonsOnTop }\n                    onAccountCreated={this.navigateToNextIncompleteStep}\n                    onChangeViewType={this.setCustomerViewType}\n                    onContinueAsGuest={this.navigateToNextIncompleteStep}\n                    onContinueAsGuestError={this.handleError}\n                    onReady={this.handleReady}\n                    onSignIn={this.navigateToNextIncompleteStep}\n                    onSignInError={this.handleError}\n                    onSubscribeToNewsletter={this.handleNewsletterSubscription}\n                    onUnhandledError={this.handleUnhandledError}\n                    onWalletButtonClick={this.handleWalletButtonClick}\n                    step={step}\n                    viewType={customerViewType}\n                />\n            </CheckoutStep>\n        );\n    }\n\n    private renderShippingStep(step: CheckoutStepStatus): ReactNode {\n        const { hasCartChanged, cart, consignments = [] } = this.props;\n\n        const { isBillingSameAsShipping, isMultiShippingMode } = this.state;\n\n        if (!cart) {\n            return;\n        }\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"shipping.shipping_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n                summary={consignments.map((consignment) => (\n                    <div className=\"staticConsignmentContainer\" key={consignment.id}>\n                        <StaticConsignment\n                            cart={cart}\n                            compactView={consignments.length < 2}\n                            consignment={consignment}\n                        />\n                    </div>\n                ))}\n            >\n                <LazyContainer loadingSkeleton={<AddressFormSkeleton />}>\n                    <Shipping\n                        cartHasChanged={hasCartChanged}\n                        isBillingSameAsShipping={isBillingSameAsShipping}\n                        isMultiShippingMode={isMultiShippingMode}\n                        navigateNextStep={this.handleShippingNextStep}\n                        onCreateAccount={this.handleShippingCreateAccount}\n                        onReady={this.handleReady}\n                        onSignIn={this.handleShippingSignIn}\n                        onToggleMultiShipping={this.handleToggleMultiShipping}\n                        onUnhandledError={this.handleUnhandledError}\n                        step={step}\n                    />\n                </LazyContainer>\n            </CheckoutStep>\n        );\n    }\n\n    private renderBillingStep(step: CheckoutStepStatus): ReactNode {\n        const { billingAddress } = this.props;\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"billing.billing_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n                summary={billingAddress && <StaticBillingAddress address={billingAddress} />}\n            >\n                <LazyContainer loadingSkeleton={<AddressFormSkeleton />}>\n                    <Billing\n                        navigateNextStep={this.navigateToNextIncompleteStep}\n                        onReady={this.handleReady}\n                        onUnhandledError={this.handleUnhandledError}\n                    />\n                </LazyContainer>\n            </CheckoutStep>\n        );\n    }\n\n    private renderPaymentStep(step: CheckoutStepStatus): ReactNode {\n        const { consignments, cart, errorLogger } = this.props;\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"payment.payment_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n            >\n                <LazyContainer loadingSkeleton={<ChecklistSkeleton />}>\n                    <Payment\n                        checkEmbeddedSupport={this.checkEmbeddedSupport}\n                        errorLogger={errorLogger}\n                        isEmbedded={isEmbedded()}\n                        isUsingMultiShipping={\n                            cart && consignments\n                                ? isUsingMultiShipping(consignments, cart.lineItems)\n                                : false\n                        }\n                        onCartChangedError={this.handleCartChangedError}\n                        onFinalize={this.navigateToOrderConfirmation}\n                        onReady={this.handleReady}\n                        onSubmit={this.navigateToOrderConfirmation}\n                        onSubmitError={this.handleError}\n                        onUnhandledError={this.handleUnhandledError}\n                    />\n                </LazyContainer>\n            </CheckoutStep>\n        );\n    }\n\n    private renderCartSummary(): ReactNode {\n        return (\n            <MobileView>\n                {(matched) => {\n                    if (matched) {\n                        return (\n                            <LazyContainer>\n                                <Extension region={ExtensionRegion.SummaryAfter} />\n                                <CartSummaryDrawer />\n                            </LazyContainer>\n                        );\n                    }\n\n                    return (\n                        <aside className=\"layout-cart\">\n                            <LazyContainer>\n                                <CartSummary />\n                                <Extension region={ExtensionRegion.SummaryAfter} />\n                            </LazyContainer>\n                        </aside>\n                    );\n                }}\n            </MobileView>\n        );\n    }\n\n    private navigateToStep(type: CheckoutStepType, options?: { isDefault?: boolean }): void {\n        const { clearError, error, steps } = this.props;\n        const { activeStepType } = this.state;\n        const step = find(steps, { type });\n\n        if (!step) {\n            return;\n        }\n\n        if (activeStepType === step.type) {\n            return;\n        }\n\n        if (options && options.isDefault) {\n            this.setState({ defaultStepType: step.type });\n        } else {\n            this.setState({ activeStepType: step.type });\n        }\n\n        if (error) {\n            clearError(error);\n        }\n    }\n\n    private handleToggleMultiShipping: () => void = () => {\n        const { isMultiShippingMode } = this.state;\n\n        this.setState({ isMultiShippingMode: !isMultiShippingMode });\n    };\n\n    private navigateToNextIncompleteStep: (options?: { isDefault?: boolean }) => void = (\n        options,\n    ) => {\n        const { steps, analyticsTracker } = this.props;\n        const activeStepIndex = findIndex(steps, { isActive: true });\n        const activeStep = activeStepIndex >= 0 && steps[activeStepIndex];\n\n        if (!activeStep) {\n            return;\n        }\n\n        const previousStep = steps[Math.max(activeStepIndex - 1, 0)];\n\n        if (previousStep) {\n            analyticsTracker.trackStepCompleted(previousStep.type);\n        }\n\n        this.navigateToStep(activeStep.type, options);\n    };\n\n    private navigateToOrderConfirmation: (orderId?: number) => void = (orderId) => {\n        const { steps, analyticsTracker } = this.props;\n\n        analyticsTracker.trackStepCompleted(steps[steps.length - 1].type);\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postComplete();\n        }\n\n        SubscribeSessionStorage.removeSubscribeStatus();\n\n        this.setState({ isRedirecting: true }, () => {\n            navigateToOrderConfirmation(orderId);\n        });\n    };\n\n    private checkEmbeddedSupport: (methodIds: string[]) => boolean = (methodIds) => {\n        const { embeddedSupport } = this.props;\n\n        return embeddedSupport.isSupported(...methodIds);\n    };\n\n    private handleCartChangedError: (error: CartChangedError) => void = () => {\n        this.navigateToStep(CheckoutStepType.Shipping);\n    };\n\n    private handleConsignmentsUpdated: (state: CheckoutSelectors) => void = ({ data }) => {\n        const { hasSelectedShippingOptions: prevHasSelectedShippingOptions, activeStepType, defaultStepType } =\n            this.state;\n\n        const { steps } = this.props;\n\n        const newHasSelectedShippingOptions = hasSelectedShippingOptions(\n            data.getConsignments() || [],\n        );\n\n        const isDefaultStepPaymentOrBilling =\n            !activeStepType &&\n            (defaultStepType === CheckoutStepType.Payment ||\n                defaultStepType === CheckoutStepType.Billing);\n\n        const isShippingStepFinished =\n            findIndex(steps, { type: CheckoutStepType.Shipping }) <\n                findIndex(steps, { type: activeStepType }) || isDefaultStepPaymentOrBilling;\n\n        if (\n            prevHasSelectedShippingOptions &&\n            !newHasSelectedShippingOptions &&\n            isShippingStepFinished\n        ) {\n            this.navigateToStep(CheckoutStepType.Shipping);\n            this.setState({ error: new ShippingOptionExpiredError() });\n        }\n\n        this.setState({ hasSelectedShippingOptions: newHasSelectedShippingOptions });\n    };\n\n    private handleCloseErrorModal: () => void = () => {\n        this.setState({ error: undefined });\n    };\n\n    private handleExpanded: (type: CheckoutStepType) => void = (type) => {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.trackStepViewed(type);\n    };\n\n    private handleUnhandledError: (error: Error) => void = (error) => {\n        this.handleError(error);\n\n        // For errors that are not caught and handled by child components, we\n        // handle them here by displaying a generic error modal to the shopper.\n        this.setState({ error });\n    };\n\n    private handleError: (error: Error) => void = (error) => {\n        const { errorLogger } = this.props;\n\n        errorLogger.log(error);\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postError(error);\n        }\n    };\n\n    private handleEditStep: (type: CheckoutStepType) => void = (type) => {\n        this.navigateToStep(type);\n    };\n\n    private handleReady: () => void = () => {\n        this.navigateToNextIncompleteStep({ isDefault: true });\n    };\n\n    private handleNewsletterSubscription: (subscribed: boolean) => void = (subscribed) => {\n        this.setState({ isSubscribed: subscribed });\n    }\n\n    private handleSignOut: (event: CustomerSignOutEvent) => void = ({ isCartEmpty }) => {\n        const { loginUrl, cartUrl, isPriceHiddenFromGuests, isGuestEnabled } = this.props;\n\n        if (isPriceHiddenFromGuests) {\n            if (window.top) {\n                return (window.top.location.href = cartUrl);\n            }\n        }\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postSignedOut();\n        }\n\n        if (isGuestEnabled) {\n            this.setCustomerViewType(CustomerViewType.Guest);\n        }\n\n        if (isCartEmpty) {\n            this.setState({ isCartEmpty: true });\n\n            if (!isEmbedded()) {\n                if (window.top) {\n                    return window.top.location.assign(loginUrl);\n                }\n            }\n        }\n\n        this.navigateToStep(CheckoutStepType.Customer);\n    };\n\n    private handleShippingNextStep: (isBillingSameAsShipping: boolean) => void = (\n        isBillingSameAsShipping,\n    ) => {\n        this.setState({ isBillingSameAsShipping });\n\n        if (isBillingSameAsShipping) {\n            this.navigateToNextIncompleteStep();\n        } else {\n            this.navigateToStep(CheckoutStepType.Billing);\n        }\n    };\n\n    private handleShippingSignIn: () => void = () => {\n        this.setCustomerViewType(CustomerViewType.Login);\n    };\n\n    private handleShippingCreateAccount: () => void = () => {\n        this.setCustomerViewType(CustomerViewType.CreateAccount);\n    };\n\n    private setCustomerViewType: (viewType: CustomerViewType) => void = (customerViewType) => {\n        const { createAccountUrl } = this.props;\n\n        if (customerViewType === CustomerViewType.CreateAccount && isEmbedded()) {\n            if (window.top) {\n                window.top.location.replace(createAccountUrl);\n            }\n\n            return;\n        }\n\n        this.navigateToStep(CheckoutStepType.Customer);\n        this.setState({ customerViewType });\n    };\n\n    private handleBeforeExit: () => void = () => {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.exitCheckout();\n    }\n\n    private handleWalletButtonClick: (methodName: string) => void = (methodName) => {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.walletButtonClick(methodName);\n    }\n}\n\nexport default withExtension(\n    withAnalytics(withLanguage(withCheckout(mapToCheckoutProps)(Checkout))),\n);\n","import { CheckoutSelectors, CustomError } from '@bigcommerce/checkout-sdk';\nimport { createSelector } from 'reselect';\n\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { EMPTY_ARRAY } from '../common/utility';\n\nimport { WithCheckoutProps } from './Checkout';\nimport getCheckoutStepStatuses from './getCheckoutStepStatuses';\n\nexport default function mapToCheckoutProps({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutProps {\n    const { data, errors, statuses } = checkoutState;\n    const { promotions = EMPTY_ARRAY } = data.getCheckout() || {};\n    const submitOrderError = errors.getSubmitOrderError() as CustomError;\n    const {\n        checkoutSettings: {\n            guestCheckoutEnabled: isGuestEnabled = false,\n            checkoutUserExperienceSettings = {\n                walletButtonsOnTop: false,\n                floatingLabelEnabled: false,\n            } ,\n        } = {},\n        links: {\n            loginLink: loginUrl = '',\n            createAccountLink: createAccountUrl = '',\n            cartLink: cartUrl = '',\n        } = {},\n        displaySettings: { hidePriceFromGuests: isPriceHiddenFromGuests = false } = {},\n    } = data.getConfig() || {};\n\n    const subscribeToConsignmentsSelector = createSelector(\n        ({ checkoutService: { subscribe } }: CheckoutContextProps) => subscribe,\n        (subscribe) => (subscriber: (state: CheckoutSelectors) => void) => {\n            return subscribe(subscriber, ({ data: { getConsignments } }) => getConsignments());\n        },\n    );\n\n    const walletButtonsOnTopFlag = Boolean(checkoutUserExperienceSettings.walletButtonsOnTop);\n\n    return {\n        billingAddress: data.getBillingAddress(),\n        cart: data.getCart(),\n        clearError: checkoutService.clearError,\n        consignments: data.getConsignments(),\n        hasCartChanged: submitOrderError && submitOrderError.type === 'cart_changed', // TODO: Need to clear the error once it's displayed\n        isGuestEnabled,\n        isLoadingCheckout: statuses.isLoadingCheckout(),\n        isPending: statuses.isPending(),\n        isPriceHiddenFromGuests,\n        isShowingWalletButtonsOnTop: walletButtonsOnTopFlag,\n        loadCheckout: checkoutService.loadCheckout,\n        loadPaymentMethodByIds: checkoutService.loadPaymentMethodByIds,\n        loginUrl,\n        cartUrl,\n        createAccountUrl,\n        promotions,\n        subscribeToConsignments: subscribeToConsignmentsSelector({\n            checkoutService,\n            checkoutState,\n        }),\n        steps: data.getCheckout() ? getCheckoutStepStatuses(checkoutState) : EMPTY_ARRAY,\n    };\n}\n","import { createCheckoutService, createEmbeddedCheckoutMessenger } from '@bigcommerce/checkout-sdk';\nimport { BrowserOptions } from '@sentry/browser';\nimport React, { Component } from 'react';\nimport ReactModal from 'react-modal';\n\nimport { AnalyticsProvider } from '@bigcommerce/checkout/analytics';\nimport { ExtensionProvider } from '@bigcommerce/checkout/checkout-extension';\nimport { ErrorBoundary, ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { getLanguageService, LocaleProvider } from '@bigcommerce/checkout/locale';\nimport { CheckoutProvider } from '@bigcommerce/checkout/payment-integration-api';\n\nimport '../../scss/App.scss';\n\nimport { createErrorLogger } from '../common/error';\nimport {\n    createEmbeddedCheckoutStylesheet,\n    createEmbeddedCheckoutSupport,\n} from '../embeddedCheckout';\n\nimport Checkout from './Checkout';\n\nexport interface CheckoutAppProps {\n    checkoutId: string;\n    containerId: string;\n    publicPath?: string;\n    sentryConfig?: BrowserOptions;\n    sentrySampleRate?: number;\n}\n\nexport default class CheckoutApp extends Component<CheckoutAppProps> {\n    private checkoutService = createCheckoutService({\n        locale: getLanguageService().getLocale(),\n        shouldWarnMutation: process.env.NODE_ENV === 'development',\n    });\n    private embeddedStylesheet = createEmbeddedCheckoutStylesheet();\n    private embeddedSupport = createEmbeddedCheckoutSupport(getLanguageService());\n    private errorLogger: ErrorLogger;\n\n    constructor(props: Readonly<CheckoutAppProps>) {\n        super(props);\n\n        this.errorLogger = createErrorLogger(\n            { sentry: props.sentryConfig },\n            {\n                errorTypes: ['UnrecoverableError'],\n                publicPath: props.publicPath,\n                sampleRate: props.sentrySampleRate ? props.sentrySampleRate : 0.1,\n            },\n        );\n    }\n\n    componentDidMount(): void {\n        const { containerId } = this.props;\n\n        ReactModal.setAppElement(`#${containerId}`);\n    }\n\n    render() {\n        return (\n            <ErrorBoundary logger={this.errorLogger}>\n                <LocaleProvider checkoutService={this.checkoutService}>\n                    <CheckoutProvider checkoutService={this.checkoutService}>\n                        <AnalyticsProvider checkoutService={this.checkoutService}>\n                            <ExtensionProvider checkoutService={this.checkoutService}>\n                                <Checkout\n                                    {...this.props}\n                                    createEmbeddedMessenger={createEmbeddedCheckoutMessenger}\n                                    embeddedStylesheet={this.embeddedStylesheet}\n                                    embeddedSupport={this.embeddedSupport}\n                                    errorLogger={this.errorLogger}\n                                />\n                            </ExtensionProvider>\n                        </AnalyticsProvider>\n                    </CheckoutProvider>\n                </LocaleProvider>\n            </ErrorBoundary>\n        );\n    }\n}\n","import React, { ComponentType, Context, FunctionComponent, memo, useContext, useMemo } from 'react';\nimport { Omit } from 'utility-types';\n\nimport { MatchedProps } from './InjectHoc';\nimport MappableInjectHoc, { MapToProps, MapToPropsFactory } from './MappableInjectHoc';\n\nfunction isMapToPropsFactory<TContextProps, TMappedProps, TOwnProps>(\n    mapToProps:\n        | MapToProps<TContextProps, TMappedProps, TOwnProps>\n        | MapToPropsFactory<TContextProps, TMappedProps, TOwnProps>,\n): mapToProps is MapToPropsFactory<TContextProps, TMappedProps, TOwnProps> {\n    return mapToProps.length === 0;\n}\n\nexport default function createMappableInjectHoc<TContextProps>(\n    ContextComponent: Context<TContextProps>,\n    options?: { displayNamePrefix?: string },\n): MappableInjectHoc<NonNullable<TContextProps>> {\n    return <TMappedProps, TOwnProps>(\n        mapToPropsOrFactory:\n            | MapToProps<NonNullable<TContextProps>, TMappedProps, TOwnProps>\n            | MapToPropsFactory<NonNullable<TContextProps>, TMappedProps, TOwnProps>,\n    ) => {\n        return <TProps extends MatchedProps<TMappedProps, TProps>>(\n            OriginalComponent: ComponentType<TProps>,\n        ) => {\n            const InnerDecoratedComponent: FunctionComponent<TProps> = memo((props) => (\n                <OriginalComponent {...props} />\n            ));\n\n            const DecoratedComponent: FunctionComponent<Omit<TProps, keyof TMappedProps>> = (\n                props,\n            ) => {\n                const context = useContext(ContextComponent);\n\n                const mapToProps = useMemo(\n                    () =>\n                        isMapToPropsFactory(mapToPropsOrFactory)\n                            ? mapToPropsOrFactory()\n                            : mapToPropsOrFactory,\n                    [],\n                );\n\n                const mappedProps = context\n                    ? mapToProps(context, props as unknown as TOwnProps)\n                    : context;\n\n                if (!mappedProps) {\n                    return null;\n                }\n\n                const mergedProps = { ...mappedProps, ...props } as unknown as TProps;\n\n                return <InnerDecoratedComponent {...mergedProps} />;\n            };\n\n            if (options && options.displayNamePrefix && OriginalComponent) {\n                DecoratedComponent.displayName = `${options.displayNamePrefix}(${\n                    OriginalComponent.displayName || OriginalComponent.name\n                })`;\n            }\n\n            return DecoratedComponent;\n        };\n    };\n}\n","import { createMappableInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\nimport { CheckoutContext, CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nexport type WithCheckoutProps = CheckoutContextProps;\n\nconst withCheckout = createMappableInjectHoc(CheckoutContext, {\n    displayNamePrefix: 'WithCheckout',\n});\n\nexport default withCheckout;\n","export default class CustomError extends Error {\n    static shouldReport: boolean;\n\n    data: any;\n    title: string;\n    type: string;\n\n    constructor({\n        data = {},\n        message = '',\n        title = '',\n        name = '',\n    }: {\n        data?: any;\n        message?: string;\n        title?: string;\n        name?: string;\n    }) {\n        super();\n\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, CustomError);\n        } else {\n            this.stack = new Error().stack;\n        }\n\n         \n        this.data = data;\n        this.message = message;\n        this.name = name;\n        this.title = title;\n        this.type = 'custom';\n    }\n\n    // todo: remove these methods when all error types has specific subclasses.\n    // they are only provided for compatibility with errors defined in `app.errors.ts` while we transition\n    // to proper error subclasses.\n    protected setDefaultValues({\n        name,\n        defaultError,\n        defaultTitle,\n    }: {\n        name: string;\n        defaultError: string;\n        defaultTitle: string;\n    }): void {\n        this.name = this.name || name;\n        this.message = this.message || defaultError;\n        this.title = this.title || defaultTitle;\n    }\n}\n","import React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './ErrorCode.scss';\n\nexport interface ErrorCodeProps {\n    code: string;\n    label?: ReactNode;\n}\n\nconst ErrorCode: FunctionComponent<ErrorCodeProps> = ({ code, label }) => {\n    return (\n        <div className=\"errorCode\">\n            <span className=\"errorCode-label\">\n                {label ?? <TranslatedString id=\"common.error_code\" />}\n            </span>{' '}\n            <span className=\"errorCode-value\">{code}</span>\n        </div>\n    );\n};\n\nexport default memo(ErrorCode);\n","import { RequestError } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { PureComponent, ReactNode, SyntheticEvent } from 'react';\n\nimport { TranslatedHtml, TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button, ButtonSize } from '../../ui/button';\nimport { IconError, IconSize } from '../../ui/icon';\nimport { Modal, ModalHeader } from '../../ui/modal';\n\nimport computeErrorCode from './computeErrorCode';\nimport ErrorCode from './ErrorCode';\nimport isCustomError from './isCustomError';\nimport isHtmlError from './isHtmlError';\nimport isRequestError from './isRequestError';\n\nimport { CustomError } from './index';\n\nexport interface ErrorModalProps {\n    error?: Error | RequestError | CustomError;\n    message?: ReactNode;\n    title?: ReactNode;\n    shouldShowErrorCode?: boolean;\n    onClose?(event: Event, props: ErrorModalOnCloseProps): void;\n}\n\nexport interface ErrorModalOnCloseProps {\n    error: Error;\n}\n\nexport default class ErrorModal extends PureComponent<ErrorModalProps> {\n    private aria = {\n        labelledby: 'errorModalMessage',\n    };\n\n    render(): ReactNode {\n        const { error } = this.props;\n\n        return (\n            <Modal\n                additionalModalClassName=\"modal--error\"\n                aria={this.aria}\n                footer={this.renderFooter()}\n                header={this.renderHeader()}\n                isOpen={!!error}\n                onRequestClose={this.handleOnRequestClose}\n            >\n                {this.renderBody()}\n            </Modal>\n        );\n    }\n\n    private renderHeader(): ReactNode {\n        const { error, title = error && isCustomError(error) && error.title } = this.props;\n\n        return (\n            <ModalHeader>\n                <IconError\n                    additionalClassName=\"icon--error modal-header-icon\"\n                    size={IconSize.Small}\n                />\n                <span aria-live=\"assertive\" role=\"alert\">\n                    {title || <TranslatedString id=\"common.error_heading\" />}\n                </span>\n            </ModalHeader>\n        );\n    }\n\n    private renderBody(): ReactNode {\n        const { error, message = error && error.message } = this.props;\n\n        return (\n            <>\n                {error && isHtmlError(error) &&\n                    <TranslatedHtml id={error.data.translationKey} />\n                }\n                {message && (\n                    <p aria-live=\"assertive\" id=\"errorModalMessage\" role=\"alert\">\n                        {message}\n                    </p>\n                )}\n\n                <div className=\"optimizedCheckout-contentSecondary\">{this.renderErrorCode()}</div>\n            </>\n        );\n    }\n\n    private renderFooter(): ReactNode {\n        return (\n            <Button onClick={this.handleOnRequestClose} size={ButtonSize.Small}>\n                <TranslatedString id=\"common.ok_action\" />\n            </Button>\n        );\n    }\n\n    private renderErrorCode(): ReactNode {\n        const { error, shouldShowErrorCode = true } = this.props;\n\n        if (!error || !shouldShowErrorCode) {\n            return;\n        }\n\n        if (isRequestError(error) && error.headers?.['x-request-id']) {\n            return (\n                <ErrorCode\n                    code={error.headers['x-request-id']}\n                    label={<TranslatedString id=\"common.request_id\" />}\n                />\n            );\n        }\n\n        const errorCode = computeErrorCode(error);\n\n        if (!errorCode) {\n            return;\n        }\n\n        return <ErrorCode code={errorCode} />;\n    }\n\n    private handleOnRequestClose: (event: SyntheticEvent) => void = (event) => {\n        const { error, onClose = noop } = this.props;\n\n        if (error) {\n            onClose(event.nativeEvent, { error });\n        }\n    };\n}\n","import { CustomError } from \"@bigcommerce/checkout/payment-integration-api\";\n\nexport default function isHtmlError(error: Error): error is CustomError {\n\n    return 'type' in error &&\n        error.type === 'custom' &&\n        'data' in error &&\n        typeof error.data === 'object' &&\n        error.data !== null &&\n        'shouldBeTranslatedAsHtml' in error.data &&\n        typeof error.data.shouldBeTranslatedAsHtml === 'boolean';\n}\n","import HashStatic from 'object-hash';\n\nexport default function computeErrorCode(value: any): string | undefined {\n    try {\n        return HashStatic(value).toUpperCase();\n    } catch (error) {}\n}\n","import CustomError from './CustomError';\n\n// todo: remove this method in favour of creating proper subclasses for each error type.\n// it's only provided for compatibility with errors defined in `app.errors.ts` while we transition\n// to proper error subclasses.\nexport default function createCustomErrorType({\n    name,\n    defaultError = '',\n    defaultTitle = '',\n    shouldReport = false,\n}: {\n    name: string;\n    defaultError?: string;\n    defaultTitle?: string;\n    shouldReport?: boolean;\n}) {\n    class CustomErrorType extends CustomError {\n        constructor(data = {}, errorMessage = '', errorTitle = '') {\n            super({\n                data,\n                message: errorMessage,\n                title: errorTitle,\n            });\n\n            // todo: this should use new.taget.prototype in the parent class once we can make it work\n            setPrototypeOf(this, CustomErrorType.prototype);\n\n            this.setDefaultValues({\n                name,\n                defaultError,\n                defaultTitle,\n            });\n        }\n    }\n\n    CustomErrorType.shouldReport = shouldReport;\n\n    return CustomErrorType;\n}\n\nexport function setPrototypeOf(object: any, prototype: any) {\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(object, prototype);\n    } else {\n        object.__proto__ = prototype;\n    }\n\n    return object;\n}\n","import { BrowserOptions } from '@sentry/browser';\n\nexport default interface ErrorLogger {\n    /**\n     * Logs an error in, tagging it with an error code.\n     *\n     * @param error The error object to be logged\n     * @param tags The tags attached to the log entry\n     * @param level The level of the log\n     * @param meta Any extra meta data\n     */\n    log(error: Error, tags?: ErrorTags, level?: ErrorLevelType, meta?: ErrorMeta): void;\n}\n\nexport interface ErrorLoggerOptions {\n    errorTypes?: string[];\n    publicPath?: string;\n    sampleRate?: number;\n}\n\nexport interface ErrorLoggerServiceConfig {\n    sentry?: BrowserOptions;\n}\n\nexport interface ErrorTags {\n    /**\n     * A code that identifies uniquely each error type\n     */\n    errorCode: string;\n}\n\nexport interface ErrorMeta {\n    [key: string]: unknown;\n}\n\nexport enum ErrorLevelType {\n    Info = 'info',\n    Warning = 'warning',\n    Error = 'error',\n    Debug = 'debug',\n}\n","import {\n  ErrorLevelType,\n  ErrorLogger,\n  ErrorMeta,\n  ErrorTags,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nexport interface ConsoleErrorLoggerOptions {\n    console?: Console;\n    errorTypes?: string[];\n}\n\n// tslint:disable:no-console\nexport default class ConsoleErrorLogger implements ErrorLogger {\n    private console: Console;\n\n    constructor(options?: ConsoleErrorLoggerOptions) {\n        const { console: customConsole = console } = options || {};\n\n        this.console = customConsole;\n    }\n\n    log(\n        error: Error,\n        tags?: ErrorTags,\n        level: ErrorLevelType = ErrorLevelType.Error,\n        meta?: ErrorMeta,\n    ): void {\n        switch (level) {\n            case ErrorLevelType.Error:\n                return this.console.error(error, tags, meta);\n\n            case ErrorLevelType.Info:\n                return this.console.info(error, tags, meta);\n\n            case ErrorLevelType.Warning:\n                return this.console.warn(error, tags, meta);\n\n            default:\n                return this.console.log(error, tags, meta);\n        }\n    }\n}\n","import { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\n\nexport default class NoopErrorLogger implements ErrorLogger {\n    log() {}\n}\n","import {\n    BrowserOptions,\n    captureException,\n    Event,\n    init,\n    Integrations,\n    SeverityLevel,\n    StackFrame,\n    withScope,\n} from '@sentry/browser';\nimport { RewriteFrames } from '@sentry/integrations';\nimport { EventHint, Exception } from '@sentry/types';\n\nimport {\n    ErrorLevelType,\n    ErrorLogger,\n    ErrorMeta,\n    ErrorTags,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nimport computeErrorCode from './computeErrorCode';\nimport ConsoleErrorLogger from './ConsoleErrorLogger';\nimport NoopErrorLogger from './NoopErrorLogger';\n\nconst FILENAME_PREFIX = 'app://';\n\nexport interface SentryErrorLoggerOptions {\n    consoleLogger?: ConsoleErrorLogger;\n    errorTypes?: string[];\n    publicPath?: string;\n    sampleRate?: number;\n}\n\nexport enum SeverityLevelEnum {\n    DEBUG = 'debug',\n    ERROR = 'error',\n    INFO = 'info',\n    WARNING = 'warning',\n}\n\nexport default class SentryErrorLogger implements ErrorLogger {\n    private consoleLogger: ErrorLogger;\n    private publicPath: string;\n\n    constructor(config: BrowserOptions, options?: SentryErrorLoggerOptions) {\n        const {\n            consoleLogger = new NoopErrorLogger(),\n            publicPath = '',\n            sampleRate = 0.1,\n        } = options || {};\n\n        this.consoleLogger = consoleLogger;\n        this.publicPath = publicPath;\n\n        init({\n            sampleRate,\n            beforeSend: this.handleBeforeSend,\n            denyUrls: [\n                ...(config.denyUrls || []),\n                'polyfill~checkout',\n                'sentry~checkout',\n            ],\n            integrations: [\n                new Integrations.GlobalHandlers({\n                    onerror: false,\n                    onunhandledrejection: true,\n                }),\n                new RewriteFrames({\n                    iteratee: this.handleRewriteFrame,\n                }),\n            ],\n            ...config,\n        });\n    }\n\n    log(\n        error: Error,\n        tags?: ErrorTags,\n        level: ErrorLevelType = ErrorLevelType.Error,\n        payload?: ErrorMeta,\n    ): void {\n        this.consoleLogger.log(error, tags, level);\n\n        withScope((scope) => {\n            const { errorCode = computeErrorCode(error) } = tags || {};\n\n            if (errorCode) {\n                scope.setTags({ errorCode });\n            }\n\n            scope.setLevel(this.mapToSentryLevel(level));\n\n            if (payload) {\n                scope.setExtras(payload);\n            }\n\n            scope.setFingerprint(['{{ default }}']);\n\n            captureException(error);\n        });\n    }\n\n    private mapToSentryLevel(level: ErrorLevelType): SeverityLevel {\n        switch (level) {\n            case ErrorLevelType.Info:\n                return SeverityLevelEnum.INFO;\n\n            case ErrorLevelType.Warning:\n                return SeverityLevelEnum.WARNING;\n\n            case ErrorLevelType.Debug:\n                return SeverityLevelEnum.DEBUG;\n\n            case ErrorLevelType.Error:\n            default:\n                return SeverityLevelEnum.ERROR;\n        }\n    }\n\n    /**\n     * Ignore exceptions that don't have a stacktrace at all, or have a stacktrace that references files external to\n     * this app. For example, if the exception is caused by a piece of third party code, one of the frames in the\n     * stacktrace will reference a file that is not a part of the app. This behaviour is different to the whitelist\n     * config provided by Sentry, as the latter only examines the topmost frame in the stacktrace. The config is not\n     * sufficient for us because some stores have customisation code built on top of our code, resulting in a stacktrace\n     * whose topmost frame is ours but frames below it are not.\n     */\n    private shouldReportExceptions(exceptions: Exception[], originalException: unknown): boolean {\n        // Ignore exceptions that are not an instance of Error because they are most likely not thrown by our own code,\n        // as we have a lint rule that prevents us from doing so. Although these exceptions don't actually have a\n        // stacktrace, meaning that the condition below should theoretically cover the scenario, but we still need this\n        // condition because Sentry client creates a \"synthentic\" stacktrace for them using the information it has.\n        if (!exceptions.length || !(originalException instanceof Error)) {\n            return false;\n        }\n\n        return exceptions.every((exception) => {\n            if (!exception.stacktrace?.frames?.length) {\n                return false;\n            }\n\n            return exception.stacktrace.frames.every((frame) =>\n                frame.filename?.startsWith(FILENAME_PREFIX),\n            );\n        });\n    }\n\n    private handleBeforeSend: (event: Event, hint?: EventHint) => Event | null = (event, hint) => {\n        if (event.exception) {\n            if (\n                !this.shouldReportExceptions(\n                    event.exception.values ?? [],\n                    hint?.originalException ?? null,\n                )\n            ) {\n                return null;\n            }\n\n            return event;\n        }\n\n        return event;\n    };\n\n    private handleRewriteFrame: (frame: StackFrame) => StackFrame = (frame) => {\n        if (this.publicPath && frame.filename) {\n            // We want to remove the base path of the filename, otherwise we\n            // will need to specify it when we upload the sourcemaps so that the\n            // filenames can match up.\n            const filename = frame.filename.replace(new RegExp(`^${this.publicPath}/?`), '');\n\n            // `frame` needs to be modified in-place (based on the example in\n            // their documentation).\n            if (filename !== frame.filename) {\n                frame.filename = `${FILENAME_PREFIX}/${filename}`;\n            }\n        }\n\n        return frame;\n    };\n}\n","import {\n  ErrorLogger,\n  ErrorLoggerOptions,\n  ErrorLoggerServiceConfig,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nimport ConsoleErrorLogger from './ConsoleErrorLogger';\nimport NoopErrorLogger from './NoopErrorLogger';\nimport SentryErrorLogger from './SentryErrorLogger';\n\nexport default function createErrorLogger(\n    serviceConfig?: ErrorLoggerServiceConfig,\n    options?: ErrorLoggerOptions,\n): ErrorLogger {\n    if (serviceConfig && serviceConfig.sentry) {\n        return new SentryErrorLogger(serviceConfig.sentry, {\n            ...options,\n            consoleLogger: new ConsoleErrorLogger(options),\n        });\n    }\n\n    if (process.env.NODE_ENV === 'test') {\n        return new NoopErrorLogger();\n    }\n\n    return new ConsoleErrorLogger(options);\n}\n","import CustomError from './CustomError';\n\nexport default function isCustomError(error: Error): error is CustomError {\n    const customError = error as CustomError;\n\n    return (\n        typeof customError.title !== 'undefined' &&\n        typeof customError.data !== 'undefined' &&\n        typeof customError.type !== 'undefined'\n    );\n}\n","import { RequestError } from '@bigcommerce/checkout-sdk';\n\ninterface ErrorWithType extends RequestError {\n    type: string;\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction hasOwnProperty<X extends {}, Y extends PropertyKey>(\n    obj: X,\n    key: Y,\n): obj is X & Record<Y, unknown> {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport default function isErrorWithType(error: unknown): error is ErrorWithType {\n    return (\n        typeof error === 'object' &&\n        error !== null &&\n        hasOwnProperty(error, 'type') &&\n        typeof error.type === 'string'\n    );\n}\n","import { RequestError } from '@bigcommerce/checkout-sdk';\n\nexport default function isRequestError(error: unknown): error is RequestError {\n    const requestError = error as RequestError;\n\n    return requestError.type === 'request';\n}\n","import { ComponentType } from 'react';\n\nimport { ResolvableComponent } from '.';\n\nexport default function isResolvableComponent<TProps, TIdentifier>(\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Component: ComponentType<TProps>,\n): Component is ResolvableComponent<TProps, TIdentifier> {\n    return 'resolveIds' in Component;\n}\n","import { ComponentType } from 'react';\n\nimport { isResolvableComponent } from '@bigcommerce/checkout/payment-integration-api';\n\ninterface ResolveResult<TProps> {\n    component: ComponentType<TProps>;\n    matches: number;\n    default: boolean;\n}\n\nexport default function resolveComponent<TResolveId extends Record<string, unknown>, TProps>(\n    query: TResolveId,\n    components: Record<string, ComponentType<TProps>>,\n): ComponentType<TProps> | undefined {\n    const results: Array<ResolveResult<TProps>> = [];\n\n    for (const [_, Component] of Object.entries(components)) {\n        if (!isResolvableComponent<TProps, TResolveId>(Component)) {\n            continue;\n        }\n\n        for (const resolverId of Component.resolveIds) {\n            const result = { component: Component, matches: 0, default: false };\n\n            for (const [key, value] of Object.entries(resolverId)) {\n                if (key in query && query[key] !== value) {\n                    result.matches = 0;\n                    break;\n                }\n\n                if (query[key] === value) {\n                    result.matches++;\n                }\n\n                if (key === 'default' && value === true) {\n                    result.default = true;\n                }\n            }\n\n            results.push(result);\n        }\n    }\n\n    const matched = results\n        .sort((a, b) => b.matches - a.matches)\n        .filter((result) => result.matches > 0)[0];\n\n    return matched?.component ?? results.find((result) => result.default)?.component;\n}\n","// NOTE: For now, need to coerce the type as mutable array / object. Otherwise,\n// we'll need to change the props of all components as readonly.\nexport const EMPTY_ARRAY = Object.freeze([]) as never[];\nexport const EMPTY_OBJECT = Object.freeze({}) as any;\n","export default function isBuyNowCart(): boolean {\n    const lastPathName = window.location.pathname.split('/').pop();\n\n    return !(lastPathName === 'checkout' || lastPathName === 'embedded-checkout');\n}\n","import { CheckoutSettings } from '@bigcommerce/checkout-sdk';\n\nexport default function isFloatingLabelEnabled(checkoutSettings: CheckoutSettings): boolean {\n    return Boolean(checkoutSettings.checkoutUserExperienceSettings.floatingLabelEnabled);\n}\n","const DEFAULT_OPTIONS = {\n    count: 5,\n    interval: 1000,\n};\n\nexport interface RetryOptions {\n    count?: number;\n    interval?: number;\n}\n\nexport default async function retry<T>(fn: () => Promise<T>, options?: RetryOptions): Promise<T> {\n    const { count, interval } = { ...DEFAULT_OPTIONS, ...options };\n\n    try {\n        return await fn();\n    } catch (error) {\n        if (count === 1) {\n            throw error;\n        }\n\n        await new Promise((resolve) => setTimeout(resolve, interval));\n\n        return retry(fn, { interval, count: count - 1 });\n    }\n}\n","import React, { FunctionComponent } from 'react';\n\nimport { withCurrency, WithCurrencyProps } from '@bigcommerce/checkout/locale';\n\nexport interface ShopperCurrencyProps {\n    amount: number;\n}\n\nconst ShopperCurrency: FunctionComponent<ShopperCurrencyProps & WithCurrencyProps> = ({\n    amount,\n    currency,\n}) => <>{currency.toCustomerCurrency(amount)}</>;\n\nexport default withCurrency(ShopperCurrency);\n","import { CustomerPasswordRequirements, ShopperConfig } from '@bigcommerce/checkout-sdk';\n\nexport interface PasswordRequirements {\n    minLength: number;\n    alpha: RegExp;\n    numeric: RegExp;\n    description?: string;\n}\n\nexport function getPasswordRequirementsFromConfig(config: ShopperConfig): PasswordRequirements {\n    const {\n        passwordRequirements: { minlength, error: description, alpha, numeric },\n    } = config;\n\n    return getPasswordRequirements({\n        minlength,\n        description,\n        alpha,\n        numeric,\n    });\n}\n\nexport default function getPasswordRequirements({\n    minlength,\n    description,\n    alpha,\n    numeric,\n}: CustomerPasswordRequirements): PasswordRequirements {\n    const allSlashes = new RegExp('/', 'g');\n\n    return {\n        minLength: minlength,\n        description,\n        alpha: new RegExp(alpha.replace(allSlashes, '')),\n        numeric: new RegExp(numeric.replace(allSlashes, '')),\n    };\n}\n","import { assign, kebabCase, map, pickBy } from 'lodash';\n\nexport default function toCSSRule(\n    selector: string,\n    ...styles: Array<{ [key: string]: any } | undefined>\n): string {\n    const mergedStyles = assign({}, ...styles);\n    const props = map(\n        pickBy(mergedStyles, (value) => typeof value === 'string'),\n        (value, key) => `${kebabCase(key)}: ${value};`,\n    ).join(' ');\n\n    return `${selector} {${props}}`;\n}\n","import { EmbeddedCheckoutStyles } from '@bigcommerce/checkout-sdk';\n\nimport { toCSSRule } from '../common/dom';\n\nexport default class EmbeddedCheckoutStyleParser {\n    parse(styles: EmbeddedCheckoutStyles): string[] {\n        const rules: string[] = [];\n\n        if (styles.body) {\n            rules.push(toCSSRule('body', styles.body));\n            rules.push(toCSSRule('.optimizedCheckout-overlay', styles.body));\n        }\n\n        if (styles.text) {\n            rules.push(toCSSRule('.optimizedCheckout-contentPrimary', styles.text));\n        }\n\n        if (styles.secondaryText) {\n            rules.push(toCSSRule('.optimizedCheckout-contentSecondary', styles.secondaryText));\n        }\n\n        if (styles.heading) {\n            rules.push(toCSSRule('.optimizedCheckout-headingPrimary', styles.heading));\n        }\n\n        if (styles.secondaryHeading) {\n            rules.push(toCSSRule('.optimizedCheckout-headingSecondary', styles.secondaryHeading));\n        }\n\n        if (styles.link) {\n            rules.push(toCSSRule('a', styles.link));\n            rules.push(toCSSRule('a:focus', styles.link, styles.link.focus));\n            rules.push(toCSSRule('a:hover', styles.link, styles.link.hover));\n        }\n\n        if (styles.label) {\n            rules.push(toCSSRule('.optimizedCheckout-form-label', styles.label));\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-label',\n                    styles.label,\n                    styles.label.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .form-inlineMessage',\n                    styles.label,\n                    styles.label.error,\n                ),\n            );\n        }\n\n        if (styles.button) {\n            rules.push(toCSSRule('.optimizedCheckout-buttonPrimary', styles.button));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:active',\n                    styles.button,\n                    styles.button.active,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:focus',\n                    styles.button,\n                    styles.button.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:hover',\n                    styles.button,\n                    styles.button.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:active',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:focus',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:hover',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled].is-active',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled].is-loading',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n        }\n\n        if (styles.secondaryButton) {\n            rules.push(toCSSRule('.optimizedCheckout-buttonSecondary', styles.secondaryButton));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.active,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:focus',\n                    styles.secondaryButton,\n                    styles.secondaryButton.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:hover',\n                    styles.secondaryButton,\n                    styles.secondaryButton.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:focus',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:hover',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled].is-active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled].is-loading',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n        }\n\n        if (styles.input) {\n            rules.push(toCSSRule('.optimizedCheckout-form-input', styles.input));\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-input:focus', styles.input, styles.input.focus),\n            );\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-input:hover', styles.input, styles.input.hover),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-input::placeholder',\n                    styles.input,\n                    styles.input.placeholder,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input:focus',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input:hover',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n        }\n\n        if (styles.select) {\n            rules.push(toCSSRule('.optimizedCheckout-form-select', styles.select));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-select:focus',\n                    styles.select,\n                    styles.select.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-select:hover',\n                    styles.select,\n                    styles.select.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select:focus',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select:hover',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n        }\n\n        if (styles.checkbox) {\n            rules.push(toCSSRule('.optimizedCheckout-form-checkbox', styles.checkbox));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checkbox:focus',\n                    styles.checkbox,\n                    styles.checkbox.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checkbox:hover',\n                    styles.checkbox,\n                    styles.checkbox.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox:focus',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox:hover',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n        }\n\n        if (styles.radio) {\n            rules.push(toCSSRule('.optimizedCheckout-form-radio', styles.radio));\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-radio:focus', styles.radio, styles.radio.focus),\n            );\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-radio:hover', styles.radio, styles.radio.hover),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio:focus',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio:hover',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n        }\n\n        if (styles.step) {\n            rules.push(toCSSRule('.optimizedCheckout-checkoutStep', styles.step));\n            rules.push(toCSSRule('.optimizedCheckout-step', styles.step.icon));\n        }\n\n        if (styles.checklist) {\n            rules.push(toCSSRule('.optimizedCheckout-form-checklist', styles.checklist));\n            rules.push(toCSSRule('.optimizedCheckout-form-checklist-item', styles.checklist));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checklist-item:hover',\n                    styles.checklist,\n                    styles.checklist.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checklist-item--selected',\n                    styles.checklist,\n                    styles.checklist.checked,\n                ),\n            );\n        }\n\n        if (styles.discountBanner) {\n            rules.push(toCSSRule('.optimizedCheckout-discountBanner', styles.discountBanner));\n        }\n\n        if (styles.loadingBanner) {\n            rules.push(toCSSRule('.optimizedCheckout-loadingToaster', styles.loadingBanner));\n        }\n\n        if (styles.orderSummary) {\n            rules.push(toCSSRule('.optimizedCheckout-orderSummary', styles.orderSummary));\n            rules.push(\n                toCSSRule('.optimizedCheckout-orderSummary-cartSection', styles.orderSummary),\n            );\n        }\n\n        return rules;\n    }\n}\n","import { EmbeddedCheckoutStyles } from '@bigcommerce/checkout-sdk';\n\nimport { appendStylesheet } from '../common/dom';\n\nimport EmbeddedCheckoutStyleParser from './EmbeddedCheckoutStyleParser';\n\nexport default class EmbeddedCheckoutStylesheet {\n    private _parser: EmbeddedCheckoutStyleParser;\n\n    constructor(embeddedCheckoutStyleParser: EmbeddedCheckoutStyleParser) {\n        this._parser = embeddedCheckoutStyleParser;\n    }\n\n    append(styles: EmbeddedCheckoutStyles): HTMLStyleElement {\n        return appendStylesheet(this._parser.parse(styles));\n    }\n}\n","export default function appendStylesheet(rules: string[]): HTMLStyleElement {\n    const style = document.createElement('style');\n\n    document.head.appendChild(style);\n\n    if (style.sheet instanceof CSSStyleSheet) {\n        const { sheet } = style;\n\n        rules.forEach((rule, index) => {\n            sheet.insertRule(rule, index);\n        });\n    }\n\n    return style;\n}\n","import EmbeddedCheckoutStyleParser from './EmbeddedCheckoutStyleParser';\nimport EmbeddedCheckoutStylesheet from './EmbeddedCheckoutStylesheet';\n\nexport default function createEmbeddedCheckoutStylesheet() {\n    const embeddedCheckoutStyleParser = new EmbeddedCheckoutStyleParser();\n\n    return new EmbeddedCheckoutStylesheet(embeddedCheckoutStyleParser);\n}\n","export default function isEmbedded(pathname: string = document.location.pathname): boolean {\n    const basePath = `/${pathname.split('/')[1]}`;\n\n    return basePath === '/embedded-checkout';\n}\n","import { FormField } from '@bigcommerce/checkout-sdk';\nimport { memoize } from '@bigcommerce/memoize';\nimport {\n    array,\n    ArraySchema,\n    date,\n    number,\n    NumberSchema,\n    object,\n    ObjectSchema,\n    Schema,\n    string,\n} from 'yup';\n\nimport { DynamicFormFieldType } from '../ui/form';\n\nexport type TranslateValidationErrorFunction = (\n    validationType: 'max' | 'min' | 'required' | 'invalid',\n    field: {\n        name: string;\n        label: string;\n        min?: number;\n        max?: number;\n    },\n) => string | undefined;\n\nexport interface FormFieldsValidationSchemaOptions {\n    formFields: FormField[];\n    translate?: TranslateValidationErrorFunction;\n}\n\nexport interface CustomFormFieldValues {\n    customFields: CustomFormFields;\n}\n\nexport interface CustomFormFields {\n    [id: string]: string | string[] | number;\n}\n\nexport default memoize(function getCustomFormFieldsValidationSchema({\n    formFields,\n    translate = () => undefined,\n}: FormFieldsValidationSchemaOptions): ObjectSchema<CustomFormFieldValues> {\n    return object({\n        customFields: object(\n            formFields\n                .filter(({ custom }) => !!custom)\n                .reduce((schema, { name, label, required, fieldType, type, min, max }) => {\n                    let maxValue: number | undefined;\n                    let minValue: number | undefined;\n\n                    if (type === 'date') {\n                        schema[name] = date()\n                            // Transform NaN values to undefined to avoid empty string (empty input) to fail date\n                            // validation when it's optional\n                            .strict(true)\n                            .nullable(true)\n                            .transform((value, originalValue) =>\n                                originalValue === '' ? null : value,\n                            );\n                    } else if (type === 'integer') {\n                        schema[name] = number()\n                            // Transform NaN values to undefined to avoid empty string (empty input) to fail number\n                            // validation when it's optional\n                            .strict(true)\n                            .transform((value) => (isNaN(value) ? undefined : value));\n\n                        maxValue = typeof max === 'number' ? max : undefined;\n                        minValue = typeof min === 'number' ? min : undefined;\n                    } else if (fieldType === DynamicFormFieldType.checkbox) {\n                        schema[name] = array();\n                    } else {\n                        schema[name] = string();\n                    }\n\n                    if (maxValue !== undefined) {\n                        schema[name] = (schema[name] as NumberSchema).max(\n                            maxValue,\n                            translate('max', { label, name, max: maxValue + 1 }),\n                        );\n                    }\n\n                    if (minValue !== undefined) {\n                        schema[name] = (schema[name] as NumberSchema).min(\n                            minValue,\n                            translate('min', { label, name, min: minValue - 1 }),\n                        );\n                    }\n\n                    if (required) {\n                        const requiredErrorMessage = translate('required', { name, label });\n\n                        schema[name] =\n                            fieldType === DynamicFormFieldType.checkbox\n                                ? (schema[name] as ArraySchema<string>).min(1, requiredErrorMessage)\n                                : (schema[name] as ArraySchema<string>).required(\n                                      requiredErrorMessage,\n                                  );\n                    }\n\n                    return schema;\n                }, {} as { [key: string]: Schema<any> }),\n        ).nullable(true),\n    }) as ObjectSchema<CustomFormFieldValues>;\n});\n","import { forIn, isDate, padStart } from 'lodash';\n\nexport default function mapCustomFormFieldsFromFormValues(customFieldsObject: {\n    [id: string]: any;\n}): Array<{ fieldId: string; fieldValue: string }> {\n    const customFields: Array<{ fieldId: string; fieldValue: string }> = [];\n\n    forIn(customFieldsObject, (value, key) => {\n        let fieldValue: string;\n\n        if (isDate(value)) {\n            const padMonth = padStart((value.getMonth() + 1).toString(), 2, '0');\n            const padDay = padStart(value.getDate().toString(), 2, '0');\n\n            fieldValue = `${value.getFullYear()}-${padMonth}-${padDay}`;\n        } else {\n            fieldValue = value;\n        }\n\n        customFields.push({\n            fieldId: key,\n            fieldValue,\n        });\n    });\n\n    return customFields;\n}\n","import React, { FunctionComponent, useEffect } from 'react';\n\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nconst CheckoutButton: FunctionComponent<CheckoutButtonProps> = ({\n    checkoutService: { deinitializeCustomer, initializeCustomer },\n    containerId,\n    methodId,\n    onUnhandledError,\n    onWalletButtonClick,\n}) => {\n    useEffect(() => {\n        initializeCustomer({\n            methodId,\n            [methodId]: {\n                container: containerId,\n                onUnhandledError,\n                onClick: () => onWalletButtonClick(methodId),\n            },\n        }).catch(onUnhandledError);\n\n        return () => {\n            deinitializeCustomer({ methodId }).catch(onUnhandledError);\n        };\n    }, [\n        containerId,\n        deinitializeCustomer,\n        initializeCustomer,\n        methodId,\n        onUnhandledError,\n        onWalletButtonClick,\n    ]);\n\n    return <div id={containerId} />;\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    CheckoutButton,\n    [],\n);\n","import setPrototypeOf from '../setPrototypeOf';\n\nimport CustomError from './CustomError';\n\nexport default class EmbeddedCheckoutUnsupportedError extends CustomError {\n    constructor(message: string) {\n        super({\n            name: 'EMBEDDED_CHECKOUT_UNSUPPORTED_ERROR',\n            message,\n        });\n\n        setPrototypeOf(this, EmbeddedCheckoutUnsupportedError.prototype);\n    }\n}\n","export default function setPrototypeOf<T extends object>(object: T, prototype: object): T {\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(object, prototype);\n    } else if (hasProto(object)) {\n        // eslint-disable-next-line no-proto\n        object.__proto__ = prototype;\n    }\n\n    return object;\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction hasProto(object: object): object is object & { __proto__: object } {\n    return '__proto__' in object;\n}\n","import React, { FunctionComponent } from 'react';\n\nimport { CheckoutButton } from '@bigcommerce/checkout/checkout-button-integration';\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    EmbeddedCheckoutUnsupportedError,\n    isEmbedded,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nconst GooglePayButton: FunctionComponent<CheckoutButtonProps> = (props) => {\n    const { language, onUnhandledError } = props;\n\n    if (isEmbedded()) {\n        onUnhandledError(\n            new EmbeddedCheckoutUnsupportedError(\n                language.translate('embedded_checkout.unsupported_error', {\n                    methods: 'googlepay',\n                }),\n            ),\n        );\n\n        return null;\n    }\n\n    return <CheckoutButton {...props} />;\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    GooglePayButton,\n    [\n        { id: 'googlepayadyenv2' },\n        { id: 'googlepayadyenv3' },\n        { id: 'googlepayauthorizenet' },\n        { id: 'googlepaybnz' },\n        { id: 'googlepaybraintree' },\n        { id: 'googlepaypaypalcommerce' },\n        { id: 'googlepaycheckoutcom' },\n        { id: 'googlepaycybersourcev2' },\n        { id: 'googlepayorbital' },\n        { id: 'googlepaystripe' },\n        { id: 'googlepaystripeupe' },\n        { id: 'googlepayworldpayaccess' },\n        { id: 'googlepaytdonlinemart' },\n    ],\n);\n","export default function isEmbedded(pathname: string = document.location.pathname): boolean {\n    const basePath = `/${pathname.split('/')[1]}`;\n\n    return basePath === '/embedded-checkout';\n}\n","import {\n    CheckoutPayment,\n    GiftCertificateOrderPayment,\n    OrderPayment,\n} from '@bigcommerce/checkout-sdk';\n\nexport default function isGiftCertificatePayment(\n    payment: OrderPayment | CheckoutPayment,\n): payment is GiftCertificateOrderPayment {\n    return payment.providerId === 'giftcertificate';\n}\n","// `document.currentScript` can only be called at the global level as it only\n// holds a reference to the script when it is initially processed.\nconst path = document.currentScript ? (document.currentScript as HTMLScriptElement).src : undefined;\n\nexport default function getCurrentScriptPath(): string | undefined {\n    return path;\n}\n","import getCurrentScriptPath from './getCurrentScriptPath';\n\nexport default function configurePublicPath(publicPath?: string): string {\n    if (!publicPath) {\n        const scriptPath = getCurrentScriptPath();\n\n        if (!scriptPath) {\n            throw new Error(\n                'Unable to configure the public path of the application because it is not specified and it cannot be inferred using the path of the current script.',\n            );\n        }\n\n        __webpack_public_path__ = `${scriptPath.split('/').slice(0, -1).join('/')}/`;\n\n        return __webpack_public_path__;\n    }\n\n    __webpack_public_path__ = publicPath.substr(-1) === '/' ? publicPath : `${publicPath}/`;\n\n    return __webpack_public_path__;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { configurePublicPath } from '../common/bundler';\n\nimport { CheckoutAppProps } from './CheckoutApp';\n\nexport type RenderCheckoutOptions = CheckoutAppProps;\nexport type RenderCheckout = typeof renderCheckout;\n\nexport default function renderCheckout({\n    containerId,\n    publicPath,\n    ...props\n}: RenderCheckoutOptions): void {\n    const configuredPublicPath = configurePublicPath(publicPath);\n\n    // We want to use `require` here because we want to set up the public path\n    // first before importing the app component and its dependencies.\n    const { default: CheckoutApp } = require('./CheckoutApp');\n\n    // We want to use `require` here because we only want to import the package\n    // in development mode.\n    if (process.env.NODE_ENV === 'development') {\n        const whyDidYouRender = require('@welldone-software/why-did-you-render');\n\n        whyDidYouRender(React, {\n            collapseGroups: true,\n        });\n    }\n\n    ReactDOM.render(\n        <CheckoutApp containerId={containerId} publicPath={configuredPublicPath} {...props} />,\n        document.getElementById(containerId),\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { configurePublicPath } from '../common/bundler';\n\nimport { OrderConfirmationAppProps } from './OrderConfirmationApp';\n\nexport type RenderOrderConfirmationOptions = OrderConfirmationAppProps;\nexport type RenderOrderConfirmation = typeof renderOrderConfirmation;\n\nexport default function renderOrderConfirmation({\n    containerId,\n    publicPath,\n    ...props\n}: RenderOrderConfirmationOptions): void {\n    const configuredPublicPath = configurePublicPath(publicPath);\n\n    // We want to use `require` here because we want to set up the public path\n    // first before importing the app component and its dependencies.\n    const { default: OrderConfirmationApp } = require('./OrderConfirmationApp');\n\n    // We want to use `require` here because we only want to import the package\n    // in development mode.\n    if (process.env.NODE_ENV === 'development') {\n        const whyDidYouRender = require('@welldone-software/why-did-you-render');\n\n        whyDidYouRender(React, {\n            collapseGroups: true,\n        });\n    }\n\n    ReactDOM.render(\n        <OrderConfirmationApp\n            containerId={containerId}\n            publicPath={configuredPublicPath}\n            {...props}\n        />,\n        document.getElementById(containerId),\n    );\n}\n","import { createRequestSender, RequestSender } from '@bigcommerce/request-sender';\n\nimport { CreatedCustomer, CreatedCustomerResponse } from './CreatedCustomer';\n\nexport interface CustomerCreateRequestBody {\n    confirmPassword: string;\n    newsletter: boolean;\n    orderId: number;\n    password: string;\n}\n\nexport default class AccountService {\n    constructor(private requestSender: RequestSender = createRequestSender()) {}\n\n    create(body: CustomerCreateRequestBody): Promise<CreatedCustomer> {\n        return this.requestSender\n            .put<CreatedCustomerResponse>('/internalapi/v1/checkout/customer', { body })\n            .then((response) => response.body.data.customer);\n    }\n}\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { FormField, TextInput } from '../ui/form';\n\nexport interface PasswordField {\n    minLength: number;\n}\n\nconst SignUpPasswordField: FunctionComponent<PasswordField> = ({ minLength }) => {\n    const renderPasswordInput = useCallback(\n        ({ field }: FieldProps<string>) => <TextInput {...field} id={field.name} type=\"password\" />,\n        [],\n    );\n\n    const renderPasswordConfirmationInput = useCallback(\n        ({ field }: FieldProps<string>) => <TextInput {...field} id={field.name} type=\"password\" />,\n        [],\n    );\n\n    const passwordLabelContent = useMemo(\n        () => (\n            <>\n                <TranslatedString id=\"customer.password_label\" />{' '}\n                <small>\n                    {`${minLength}-`}\n                    <TranslatedString id=\"customer.password_minimum_character_label\" />\n                </small>\n            </>\n        ),\n        [minLength],\n    );\n\n    const passwordConfirmationLabelContent = useMemo(\n        () => <TranslatedString id=\"customer.password_confirmation_label\" />,\n        [],\n    );\n\n    return (\n        <>\n            <FormField\n                input={renderPasswordInput}\n                labelContent={passwordLabelContent}\n                name=\"password\"\n            />\n\n            <FormField\n                input={renderPasswordConfirmationInput}\n                labelContent={passwordConfirmationLabelContent}\n                name=\"confirmPassword\"\n            />\n        </>\n    );\n};\n\nexport default memo(SignUpPasswordField);\n","import { FormikProps, withFormik } from 'formik';\nimport React, { FunctionComponent, memo } from 'react';\nimport { object, ref, string } from 'yup';\n\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\n\nimport { PasswordRequirements } from '../customer';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Fieldset, Form, Legend } from '../ui/form';\n\nimport SignUpPasswordField from './SignUpPasswordField';\n\nexport interface SignUpFormProps {\n    isSigningUp?: boolean;\n    customerCanBeCreated: boolean;\n    passwordRequirements: PasswordRequirements;\n    onSignUp(data: SignUpFormValues): void;\n}\n\nexport interface SignUpFormValues {\n    password: string;\n    confirmPassword: string;\n}\n\nconst GuestSignUpForm: FunctionComponent<\n    SignUpFormProps & WithLanguageProps & FormikProps<SignUpFormValues>\n> = ({ isSigningUp, customerCanBeCreated, passwordRequirements: { minLength } }) => (\n    <Fieldset\n        legend={\n            <Legend>\n                <TranslatedString\n                    id={\n                        customerCanBeCreated\n                            ? 'customer.create_account_text'\n                            : 'customer.set_password_text'\n                    }\n                />\n            </Legend>\n        }\n    >\n        {!customerCanBeCreated && (\n            <p>\n                <TranslatedString id=\"customer.account_created_text\" />\n            </p>\n        )}\n\n        <Form className=\"guest-signup form\">\n            <SignUpPasswordField minLength={minLength} />\n\n            <div className=\"form-actions\">\n                <Button\n                    id=\"createAccountButton\"\n                    isLoading={isSigningUp}\n                    type=\"submit\"\n                    variant={ButtonVariant.Primary}\n                >\n                    <TranslatedString\n                        id={\n                            customerCanBeCreated\n                                ? 'customer.create_account_action'\n                                : 'customer.set_password_action'\n                        }\n                    />\n                </Button>\n            </div>\n        </Form>\n    </Fieldset>\n);\n\nexport default withLanguage(\n    withFormik<SignUpFormProps & WithLanguageProps, SignUpFormValues>({\n        mapPropsToValues: () => ({\n            password: '',\n            confirmPassword: '',\n        }),\n        handleSubmit: (values, { props: { onSignUp } }) => {\n            onSignUp(values);\n        },\n        validationSchema: ({\n            language,\n            passwordRequirements: { description, numeric, alpha, minLength },\n        }: SignUpFormProps & WithLanguageProps) =>\n            object({\n                password: string()\n                    .required(description || language.translate('customer.password_required_error'))\n                    .matches(\n                        numeric,\n                        description ||\n                            language.translate('customer.password_number_required_error'),\n                    )\n                    .matches(\n                        alpha,\n                        description ||\n                            language.translate('customer.password_letter_required_error'),\n                    )\n                    .min(\n                        minLength,\n                        description ||\n                            language.translate('customer.password_under_minimum_length_error'),\n                    )\n                    .max(100, language.translate('customer.password_over_maximum_length_error')),\n                confirmPassword: string()\n                    .required(language.translate('customer.password_confirmation_required_error'))\n                    .oneOf(\n                        [ref('password')],\n                        language.translate('customer.password_confirmation_error'),\n                    ),\n            }),\n    })(memo(GuestSignUpForm)),\n);\n","import React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Alert, AlertType } from '../ui/alert';\n\nconst PasswordSavedSuccessAlert: FunctionComponent = () => (\n    <Alert type={AlertType.Success}>\n        <strong>\n            <TranslatedString id=\"customer.set_password_success\" />\n        </strong>\n    </Alert>\n);\n\nexport default PasswordSavedSuccessAlert;\n","import React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Alert, AlertType } from '../ui/alert';\n\nconst SignedUpSuccessAlert: FunctionComponent = () => (\n    <Alert type={AlertType.Success}>\n        <strong>\n            <TranslatedString id=\"customer.create_account_success\" />\n        </strong>\n    </Alert>\n);\n\nexport default SignedUpSuccessAlert;\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class AccountCreationRequirementsError extends CustomError {\n    constructor(data: Error, requirements: string) {\n        super({\n            name: 'ACCOUNT_CREATION_REQUIREMENTS_ERROR',\n            message: requirements,\n            title: getLanguageService().translate(\n                'customer.create_account_requirements_error_heading',\n            ),\n            data,\n        });\n\n        setPrototypeOf(this, AccountCreationRequirementsError.prototype);\n    }\n}\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class AccountCreationFailedError extends CustomError {\n    constructor(data: Error) {\n        super({\n            name: 'ACCOUNT_CREATION_FAILED',\n            message: getLanguageService().translate('customer.create_account_error'),\n            data,\n        });\n\n        setPrototypeOf(this, AccountCreationFailedError.prototype);\n    }\n}\n","import { GatewayOrderPayment, Order, OrderPayment } from '@bigcommerce/checkout-sdk';\n\nimport { isGiftCertificatePayment } from '../giftCertificate';\nimport { isStoreCreditPayment } from '../payment/storeCredit';\n\nexport interface PaymentInstructionsProps {\n    order: Order;\n}\n\nfunction isDefaultOrderPayment(payment: OrderPayment): payment is GatewayOrderPayment {\n    return !isGiftCertificatePayment(payment) && !isStoreCreditPayment(payment);\n}\n\nfunction getPaymentInstructions(order: Order): string {\n    const gatewayPayment = (order.payments || []).find(isDefaultOrderPayment);\n    const instructions = gatewayPayment && gatewayPayment.detail.instructions;\n\n    return instructions || '';\n}\n\nexport default getPaymentInstructions;\n","import { GiftCertificate, OrderPayments } from '@bigcommerce/checkout-sdk';\n\nimport isGiftCertificatePayment from './isGiftCertificatePayment';\n\nexport default function mapFromPayments(payments: OrderPayments): GiftCertificate[] {\n    return payments.filter(isGiftCertificatePayment).map(({ amount, detail }) => ({\n        code: detail.code,\n        remaining: detail.remaining,\n        used: amount,\n        balance: amount + detail.remaining,\n        purchaseDate: '',\n    }));\n}\n","import { OrderPayment } from '@bigcommerce/checkout-sdk';\n\nimport { isStoreCreditPayment } from '../payment/storeCredit';\n\nexport default function getStoreCreditAmount(payments?: OrderPayment[]): number {\n    return (payments || [])\n        .filter(isStoreCreditPayment)\n        .reduce((total, payment) => total + payment.amount, 0);\n}\n","import { Order } from '@bigcommerce/checkout-sdk';\n\nimport { mapFromPayments } from '../giftCertificate';\n\nimport getStoreCreditAmount from './getStoreCreditAmount';\nimport { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\n\nexport default function mapToOrderSummarySubtotalsProps({\n    baseAmount,\n    discountAmount,\n    isTaxIncluded,\n    shippingCostBeforeDiscount,\n    payments,\n    handlingCostTotal,\n    giftWrappingCostTotal,\n    coupons,\n    taxes,\n    fees,\n}: Order): OrderSummarySubtotalsProps {\n    return {\n        subtotalAmount: baseAmount,\n        shippingAmount: shippingCostBeforeDiscount,\n        giftWrappingAmount: giftWrappingCostTotal,\n        discountAmount,\n        storeCreditAmount: getStoreCreditAmount(payments),\n        handlingAmount: handlingCostTotal,\n        coupons,\n        giftCertificates: payments && mapFromPayments(payments),\n        taxes,\n        isTaxIncluded,\n        fees,\n    };\n}\n","import React, { FunctionComponent } from 'react';\n\nconst OrderConfirmationSection: FunctionComponent = ({ children }) => (\n    <section className=\"orderConfirmation-section\">{children}</section>\n);\n\nexport default OrderConfirmationSection;\n","import React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nexport interface MandateTextComponentProps {\n    mandateText: {\n        [key: string]: string;\n    },\n    methodId: string;\n    providerId: string;\n}\n\nexport const MandateTextComponent: FunctionComponent<MandateTextComponentProps> = ({\n    mandateText,\n    providerId,\n    methodId,\n}) => {\n    if (!Object.keys(mandateText).length) {\n        return null;\n    }\n\n    return (\n        <ul data-test='order-confirmation-mandate-text-list'>\n            {Object.entries(mandateText).map((field, index) => {\n                return (\n                    <li data-test={`order-confirmation-mandate-text-list-item-${index}`} key={index}>\n                        <TranslatedString\n                            id={`order_confirmation.mandate.${providerId}.${methodId}.${field[0]}`}\n                        />:\n                        <b>\n                            {` ${field[1]}`}\n                        </b>\n                    </li>\n                )\n            })}\n        </ul>\n    )\n}\n","import { GatewayOrderPayment } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { MandateTextComponent } from './MandateTextComponent';\n\nexport interface PaymentsWithMandatesProps {\n    paymentsWithMandates: GatewayOrderPayment[];\n}\n\nexport const PaymentsWithMandates: FunctionComponent<PaymentsWithMandatesProps> = ({\n    paymentsWithMandates,\n}) => <>\n    {paymentsWithMandates.map((payment) => {\n        if (payment?.mandate?.url) {\n            return (\n                <a\n                    data-test=\"order-confirmation-mandate-link-text\"\n                    href={payment.mandate.url}\n                    key={`${payment.providerId}-${payment.methodId}-mandate`}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                >\n                    <TranslatedString\n                        id={`order_confirmation.mandate.${payment.providerId}.${payment.methodId}`}\n                    />\n                </a>\n            );\n        } else if (payment?.mandate?.id) {\n            return (\n                <p\n                    data-test=\"order-confirmation-mandate-id-text\"\n                    key={`${payment.providerId}-${payment.methodId}-mandate`}\n                >\n                    <TranslatedString\n                        data={{ mandate: payment.mandate.id }}\n                        id={`order_confirmation.mandate.${payment.providerId}.${payment.methodId}`}\n                    />\n                </p>\n            );\n        } else if (payment?.mandate?.mandateText && payment.methodId) {\n            return <MandateTextComponent\n                key='mandateTextList'\n                mandateText={payment.mandate.mandateText}\n                methodId={payment.methodId}\n                providerId={payment.providerId}\n            />\n        }\n    })}\n</>\n","import { GatewayOrderPayment, GiftCertificateOrderPayment, Order, StoreConfig } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\n\nimport OrderConfirmationSection from './OrderConfirmationSection';\nimport { PaymentsWithMandates } from './PaymentsWithMandates';\n\nexport interface OrderStatusProps {\n    config: StoreConfig;\n    supportEmail: string;\n    supportPhoneNumber?: string;\n    order: Order;\n}\n\ntype PaymentWithMandate = GatewayOrderPayment &\n    Required<Pick<GatewayOrderPayment, 'mandate' | 'methodId'>>;\n\nconst isPaymentWithMandate = (\n    payment: GatewayOrderPayment | GiftCertificateOrderPayment,\n): payment is PaymentWithMandate => !!payment.methodId && 'mandate' in payment && !!payment.mandate;\n\nconst OrderStatus: FunctionComponent<OrderStatusProps> = ({\n    config,\n    order,\n    supportEmail,\n    supportPhoneNumber,\n}) => {\n    const paymentsWithMandates = order.payments?.filter(isPaymentWithMandate) || [];\n\n    return (\n        <OrderConfirmationSection>\n            {order.orderId && (\n                <p data-test=\"order-confirmation-order-number-text\">\n                    <TranslatedHtml\n                        data={{ orderNumber: order.orderId }}\n                        id=\"order_confirmation.order_number_text\"\n                    />\n                </p>\n            )}\n\n            <p data-test=\"order-confirmation-order-status-text\">\n                <OrderStatusMessage\n                    config={config}\n                    orderNumber={order.orderId}\n                    orderStatus={order.status}\n                    supportEmail={supportEmail}\n                    supportPhoneNumber={supportPhoneNumber}\n                />\n            </p>\n            <PaymentsWithMandates\n                paymentsWithMandates={paymentsWithMandates}\n            />\n            {order.hasDigitalItems && (\n                <p data-test=\"order-confirmation-digital-items-text\">\n                    <TranslatedHtml\n                        id={\n                            order.isDownloadable\n                                ? 'order_confirmation.order_with_downloadable_digital_items_text'\n                                : 'order_confirmation.order_without_downloadable_digital_items_text'\n                        }\n                    />\n                </p>\n            )}\n        </OrderConfirmationSection>\n    );\n};\n\ninterface OrderStatusMessageProps {\n    config: StoreConfig;\n    orderNumber: number;\n    orderStatus: string;\n    supportEmail?: string;\n    supportPhoneNumber?: string;\n}\n\nconst OrderStatusMessage: FunctionComponent<OrderStatusMessageProps> = ({\n    config,\n    orderNumber,\n    orderStatus,\n    supportEmail,\n    supportPhoneNumber,\n}) => {\n    switch (orderStatus) {\n        case 'MANUAL_VERIFICATION_REQUIRED':\n        case 'AWAITING_PAYMENT':\n            return <TranslatedHtml id=\"order_confirmation.order_pending_review_text\" />;\n\n        case 'PENDING':\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail }}\n                    id=\"order_confirmation.order_pending_status_text\"\n                />\n            );\n\n        case 'INCOMPLETE':\n            if (config.checkoutSettings.features['CHECKOUT-6891.update_incomplete_order_wording_on_order_confirmation_page']) {\n                return (\n                    <TranslatedHtml\n                        data={{ orderNumber, supportEmail }}\n                        id=\"order_confirmation.order_pending_status_text\"\n                    />\n                );\n            }\n\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail }}\n                    id=\"order_confirmation.order_incomplete_status_text\"\n                />\n            );\n\n        default:\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail, supportPhoneNumber }}\n                    id={\n                        supportPhoneNumber\n                            ? 'order_confirmation.order_with_support_number_text'\n                            : 'order_confirmation.order_without_support_number_text'\n                    }\n                />\n            );\n    }\n};\n\nexport default memo(OrderStatus);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconPrint: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconPrint);\n","import { throttle } from 'lodash';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { IconPrint } from '../ui/icon';\n\nexport interface PrintLinkProps {\n    className?: string;\n}\n\nconst PRINT_MODAL_THROTTLE = 500;\n\nconst PrintLink: FunctionComponent<PrintLinkProps> = ({ className }) => {\n    const handleClick = useCallback(\n        throttle(() => {\n            window.print();\n        }, PRINT_MODAL_THROTTLE),\n        [],\n    );\n\n    if (typeof window.print !== 'function') {\n        return null;\n    }\n\n    return (\n        <a\n            className={className || 'cart-header-link'}\n            href=\"#\"\n            id=\"cart-print-link\"\n            onClick={preventDefault(handleClick)}\n        >\n            <IconPrint /> <TranslatedString id=\"cart.print_action\" />\n        </a>\n    );\n};\n\nexport default memo(PrintLink);\n","import React, { FunctionComponent } from 'react';\n\nexport interface HeaderProps {\n    testId?: string;\n}\n\nconst PrimaryHeader: FunctionComponent<HeaderProps> = ({ children, testId }) => (\n    <h1 className=\"optimizedCheckout-headingPrimary\" data-test={testId}>\n        {children}\n    </h1>\n);\n\nexport default PrimaryHeader;\n","import React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { PrimaryHeader } from '../ui/header';\n\nexport interface HeaderProps {\n    name?: string;\n}\n\nconst ThankYouHeader: FunctionComponent<HeaderProps> = ({ name }) => (\n    <PrimaryHeader testId=\"order-confirmation-heading\">\n        {name && (\n            <TranslatedString data={{ name }} id=\"order_confirmation.thank_you_customer_heading\" />\n        )}\n\n        {!name && <TranslatedString id=\"order_confirmation.thank_you_heading\" />}\n    </PrimaryHeader>\n);\n\nexport default memo(ThankYouHeader);\n","import {\n    CheckoutSelectors,\n    EmbeddedCheckoutMessenger,\n    EmbeddedCheckoutMessengerOptions,\n    Order,\n    ShopperConfig,\n    StoreConfig,\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport DOMPurify from 'dompurify';\nimport React, { Component, lazy, ReactNode } from 'react';\n\nimport { AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\nimport { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { withAnalytics } from '../analytics';\nimport { withCheckout } from '../checkout';\nimport { ErrorModal } from '../common/error';\nimport { retry } from '../common/utility';\nimport { getPasswordRequirementsFromConfig } from '../customer';\nimport { EmbeddedCheckoutStylesheet, isEmbedded } from '../embeddedCheckout';\nimport {\n    CreatedCustomer,\n    GuestSignUpForm,\n    PasswordSavedSuccessAlert,\n    SignedUpSuccessAlert,\n    SignUpFormValues,\n} from '../guestSignup';\nimport {\n    AccountCreationFailedError,\n    AccountCreationRequirementsError,\n} from '../guestSignup/errors';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { LazyContainer, LoadingSpinner } from '../ui/loading';\nimport { MobileView } from '../ui/responsive';\n\nimport getPaymentInstructions from './getPaymentInstructions';\nimport mapToOrderSummarySubtotalsProps from './mapToOrderSummarySubtotalsProps';\nimport OrderConfirmationSection from './OrderConfirmationSection';\nimport OrderStatus from './OrderStatus';\nimport PrintLink from './PrintLink';\nimport ThankYouHeader from './ThankYouHeader';\n\nconst OrderSummary = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"order-summary\" */\n                './OrderSummary'\n            ),\n    ),\n);\n\nconst OrderSummaryDrawer = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"order-summary-drawer\" */\n                './OrderSummaryDrawer'\n            ),\n    ),\n);\n\nexport interface OrderConfirmationState {\n    error?: Error;\n    hasSignedUp?: boolean;\n    isSigningUp?: boolean;\n}\n\nexport interface OrderConfirmationProps {\n    containerId: string;\n    embeddedStylesheet: EmbeddedCheckoutStylesheet;\n    errorLogger: ErrorLogger;\n    orderId: number;\n    createAccount(values: SignUpFormValues): Promise<CreatedCustomer>;\n    createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\n}\n\ninterface WithCheckoutOrderConfirmationProps {\n    order?: Order;\n    config?: StoreConfig;\n    loadOrder(orderId: number): Promise<CheckoutSelectors>;\n    isLoadingOrder(): boolean;\n}\n\nclass OrderConfirmation extends Component<\n    OrderConfirmationProps & WithCheckoutOrderConfirmationProps & AnalyticsContextProps,\n    OrderConfirmationState\n> {\n    state: OrderConfirmationState = {};\n\n    private embeddedMessenger?: EmbeddedCheckoutMessenger;\n\n    componentDidMount(): void {\n        const {\n            containerId,\n            createEmbeddedMessenger,\n            embeddedStylesheet,\n            loadOrder,\n            orderId,\n            analyticsTracker\n        } = this.props;\n\n        loadOrder(orderId)\n            .then(({ data }) => {\n                const { links: { siteLink = '' } = {} } = data.getConfig() || {};\n                const messenger = createEmbeddedMessenger({ parentOrigin: siteLink });\n\n                this.embeddedMessenger = messenger;\n\n                messenger.receiveStyles((styles) => embeddedStylesheet.append(styles));\n                messenger.postFrameLoaded({ contentId: containerId });\n\n                analyticsTracker.orderPurchased();\n            })\n            .catch(this.handleUnhandledError);\n    }\n\n    render(): ReactNode {\n        const { order, config, isLoadingOrder } = this.props;\n\n        if (!order || !config || isLoadingOrder()) {\n            return <LoadingSpinner isLoading={true} />;\n        }\n\n        const paymentInstructions = getPaymentInstructions(order);\n        const {\n            storeProfile: { orderEmail, storePhoneNumber },\n            shopperConfig,\n            links: { siteLink },\n        } = config;\n\n        return (\n            <div\n                className={classNames('layout optimizedCheckout-contentPrimary', {\n                    'is-embedded': isEmbedded(),\n                })}\n            >\n                <div className=\"layout-main\">\n                    <div className=\"orderConfirmation\">\n                        <ThankYouHeader name={order.billingAddress.firstName} />\n\n                        <OrderStatus\n                            config={config}\n                            order={order}\n                            supportEmail={orderEmail}\n                            supportPhoneNumber={storePhoneNumber}\n                        />\n\n                        {paymentInstructions && (\n                            <OrderConfirmationSection>\n                                <div\n                                    dangerouslySetInnerHTML={{\n                                        __html: DOMPurify.sanitize(paymentInstructions),\n                                    }}\n                                    data-test=\"payment-instructions\"\n                                />\n                            </OrderConfirmationSection>\n                        )}\n\n                        {this.renderGuestSignUp({\n                            shouldShowPasswordForm: order.customerCanBeCreated,\n                            customerCanBeCreated: !order.customerId,\n                            shopperConfig,\n                        })}\n\n                        <div className=\"continueButtonContainer\">\n                            <form action={siteLink} method=\"get\" target=\"_top\">\n                                <Button type=\"submit\" variant={ButtonVariant.Secondary}>\n                                    <TranslatedString id=\"order_confirmation.continue_shopping\" />\n                                </Button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n\n                {this.renderOrderSummary()}\n                {this.renderErrorModal()}\n            </div>\n        );\n    }\n\n    private renderGuestSignUp({\n        customerCanBeCreated,\n        shouldShowPasswordForm,\n        shopperConfig,\n    }: {\n        customerCanBeCreated: boolean;\n        shouldShowPasswordForm: boolean;\n        shopperConfig: ShopperConfig;\n    }): ReactNode {\n        const { isSigningUp, hasSignedUp } = this.state;\n\n        const { order } = this.props;\n\n        return (\n            <>\n                {shouldShowPasswordForm && !hasSignedUp && (\n                    <GuestSignUpForm\n                        customerCanBeCreated={customerCanBeCreated}\n                        isSigningUp={isSigningUp}\n                        onSignUp={this.handleSignUp}\n                        passwordRequirements={getPasswordRequirementsFromConfig(shopperConfig)}\n                    />\n                )}\n\n                {hasSignedUp &&\n                    (order?.customerId ? <PasswordSavedSuccessAlert /> : <SignedUpSuccessAlert />)}\n            </>\n        );\n    }\n\n    private renderOrderSummary(): ReactNode {\n        const { order, config } = this.props;\n\n        if (!order || !config) {\n            return null;\n        }\n\n        const { currency, shopperCurrency } = config;\n\n        return (\n            <MobileView>\n                {(matched) => {\n                    if (matched) {\n                        return (\n                            <LazyContainer>\n                                <OrderSummaryDrawer\n                                    {...mapToOrderSummarySubtotalsProps(order)}\n                                    headerLink={\n                                        <PrintLink className=\"modal-header-link cart-modal-link\" />\n                                    }\n                                    lineItems={order.lineItems}\n                                    shopperCurrency={shopperCurrency}\n                                    storeCurrency={currency}\n                                    total={order.orderAmount}\n                                />\n                            </LazyContainer>\n                        );\n                    }\n\n                    return (\n                        <aside className=\"layout-cart\">\n                            <LazyContainer>\n                                <OrderSummary\n                                    headerLink={<PrintLink />}\n                                    {...mapToOrderSummarySubtotalsProps(order)}\n                                    lineItems={order.lineItems}\n                                    shopperCurrency={shopperCurrency}\n                                    storeCurrency={currency}\n                                    total={order.orderAmount}\n                                />\n                            </LazyContainer>\n                        </aside>\n                    );\n                }}\n            </MobileView>\n        );\n    }\n\n    private renderErrorModal(): ReactNode {\n        const { error } = this.state;\n\n        return (\n            <ErrorModal\n                error={error}\n                onClose={this.handleErrorModalClose}\n                shouldShowErrorCode={false}\n            />\n        );\n    }\n\n    private handleErrorModalClose: () => void = () => {\n        this.setState({ error: undefined });\n    };\n\n    private handleSignUp: (values: SignUpFormValues) => void = ({ password, confirmPassword }) => {\n        const { createAccount, config } = this.props;\n\n        const shopperConfig = config && config.shopperConfig;\n        const passwordRequirements =\n            (shopperConfig &&\n                shopperConfig.passwordRequirements &&\n                shopperConfig.passwordRequirements.error) ||\n            '';\n\n        this.setState({\n            isSigningUp: true,\n        });\n\n        createAccount({\n            password,\n            confirmPassword,\n        })\n            .then(() => {\n                this.setState({\n                    hasSignedUp: true,\n                    isSigningUp: false,\n                });\n            })\n            .catch((error) => {\n                this.setState({\n                    error:\n                        error.status < 500\n                            ? new AccountCreationRequirementsError(error, passwordRequirements)\n                            : new AccountCreationFailedError(error),\n                    hasSignedUp: false,\n                    isSigningUp: false,\n                });\n            });\n    };\n\n    private handleUnhandledError: (error: Error) => void = (error) => {\n        const { errorLogger } = this.props;\n\n        this.setState({ error });\n        errorLogger.log(error);\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postError(error);\n        }\n    };\n}\n\nexport function mapToOrderConfirmationProps(\n    context: CheckoutContextProps,\n): WithCheckoutOrderConfirmationProps | null {\n    const {\n        checkoutState: {\n            data: { getOrder, getConfig },\n            statuses: { isLoadingOrder },\n        },\n        checkoutService,\n    } = context;\n\n    const config = getConfig();\n    const order = getOrder();\n\n    return {\n        config,\n        isLoadingOrder,\n        loadOrder: checkoutService.loadOrder,\n        order,\n    };\n}\n\nexport default withAnalytics(withCheckout(mapToOrderConfirmationProps)(OrderConfirmation));\n","import { createCheckoutService, createEmbeddedCheckoutMessenger } from '@bigcommerce/checkout-sdk';\nimport { BrowserOptions } from '@sentry/browser';\nimport React, { Component, ReactNode } from 'react';\nimport ReactModal from 'react-modal';\n\nimport { AnalyticsProvider } from '@bigcommerce/checkout/analytics';\nimport { ExtensionProvider } from '@bigcommerce/checkout/checkout-extension';\nimport { ErrorBoundary, ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { getLanguageService, LocaleProvider } from '@bigcommerce/checkout/locale';\nimport { CheckoutProvider } from '@bigcommerce/checkout/payment-integration-api';\n\nimport '../../scss/App.scss';\n\nimport { createErrorLogger } from '../common/error';\nimport { createEmbeddedCheckoutStylesheet } from '../embeddedCheckout';\nimport { AccountService, CreatedCustomer, SignUpFormValues } from '../guestSignup';\n\nimport OrderConfirmation from './OrderConfirmation';\n\nexport interface OrderConfirmationAppProps {\n    containerId: string;\n    orderId: number;\n    publicPath?: string;\n    sentryConfig?: BrowserOptions;\n    sentrySampleRate?: number;\n}\n\nclass OrderConfirmationApp extends Component<OrderConfirmationAppProps> {\n    private accountService = new AccountService();\n    private checkoutService = createCheckoutService({\n        locale: getLanguageService().getLocale(),\n        shouldWarnMutation: process.env.NODE_ENV === 'development',\n    });\n    private embeddedStylesheet = createEmbeddedCheckoutStylesheet();\n    private errorLogger: ErrorLogger;\n\n    constructor(props: Readonly<OrderConfirmationAppProps>) {\n        super(props);\n\n        this.errorLogger = createErrorLogger(\n            { sentry: props.sentryConfig },\n            {\n                errorTypes: ['UnrecoverableError'],\n                publicPath: props.publicPath,\n                sampleRate: props.sentrySampleRate ? props.sentrySampleRate : 0.1,\n            },\n        );\n    }\n\n    componentDidMount(): void {\n        const { containerId } = this.props;\n\n        ReactModal.setAppElement(`#${containerId}`);\n    }\n\n    render(): ReactNode {\n        return (\n            <ErrorBoundary logger={this.errorLogger}>\n                <LocaleProvider checkoutService={this.checkoutService}>\n                    <CheckoutProvider checkoutService={this.checkoutService}>\n                        <AnalyticsProvider checkoutService={this.checkoutService}>\n                            <ExtensionProvider checkoutService={this.checkoutService}>\n                                <OrderConfirmation\n                                    {...this.props}\n                                    createAccount={this.createAccount}\n                                    createEmbeddedMessenger={createEmbeddedCheckoutMessenger}\n                                    embeddedStylesheet={this.embeddedStylesheet}\n                                    errorLogger={this.errorLogger}\n                                />\n                            </ExtensionProvider>\n                        </AnalyticsProvider>\n                    </CheckoutProvider>\n                </LocaleProvider>\n            </ErrorBoundary>\n        );\n    }\n\n    private createAccount: (values: SignUpFormValues) => Promise<CreatedCustomer> = ({\n        password,\n        confirmPassword,\n    }) => {\n        const { orderId } = this.props;\n\n        return this.accountService.create({\n            orderId,\n            newsletter: false,\n            password,\n            confirmPassword,\n        });\n    };\n}\n\nexport default OrderConfirmationApp;\n","import { PaymentMethodId } from './paymentMethod';\n\nexport default function getProviderWithCustomCheckout(methodId?: string | null): string | undefined {\n    if (!methodId) {\n        return undefined;\n    }\n\n    if (methodId === PaymentMethodId.PaypalCommerce || methodId === PaymentMethodId.PaypalCommerceCreditCards) {\n        return PaymentMethodId.PayPalCommerceAcceleratedCheckout;\n    }\n\n    if (methodId === PaymentMethodId.Braintree) {\n        return PaymentMethodId.BraintreeAcceleratedCheckout;\n    }\n\n    return methodId;\n}\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nexport default PaymentMethodId;\n","import { CheckoutPayment, OrderPayment } from '@bigcommerce/checkout-sdk';\n\nexport default function isStoreCreditPayment(payment: OrderPayment | CheckoutPayment): boolean {\n    return payment.providerId === 'storecredit';\n}\n","import { Cart, Consignment } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport findLineItems from './findLineItems';\nimport getLineItemsCount from './getLineItemsCount';\n\nexport interface StaticConsignmentItemListProps {\n    consignment: Consignment;\n    cart: Cart;\n}\n\nconst StaticConsignmentItemList: FunctionComponent<StaticConsignmentItemListProps> = ({\n    cart,\n    consignment,\n}) => {\n    const lineItems = findLineItems(cart, consignment);\n\n    return (\n        <div className=\"staticConsignment-items\">\n            <strong>\n                <TranslatedString\n                    data={{ count: getLineItemsCount(lineItems) }}\n                    id=\"cart.item_count_text\"\n                />\n            </strong>\n\n            <ul>\n                {lineItems.map((item) => (\n                    <li key={item.id}>{`${item.quantity} x ${item.name}`}</li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default memo(StaticConsignmentItemList);\n","import { Cart, Consignment, PhysicalItem } from '@bigcommerce/checkout-sdk';\nimport { compact, find, isNil, map } from 'lodash';\n\nexport default function findLineItems(cart: Cart, consignment: Consignment): PhysicalItem[] {\n    return compact(\n        map(consignment.lineItemIds, (itemId) =>\n            find(\n                cart.lineItems.physicalItems,\n                (item) => item.id === itemId && isNil(item.parentId),\n            ),\n        ),\n    );\n}\n","import { LineItem } from '@bigcommerce/checkout-sdk';\nimport { reduce } from 'lodash';\n\nexport default function getLineItemsCount(lineItems: LineItem[]): number {\n    return reduce(lineItems, (total, item) => total + item.quantity, 0);\n}\n","import { Consignment } from '@bigcommerce/checkout-sdk';\nimport { every } from 'lodash';\n\nexport default function hasSelectedShippingOptions(consignments: Consignment[]): boolean {\n    if (!consignments.length) {\n        return false;\n    }\n\n    return every(\n        consignments,\n        (consignment) =>\n            (consignment.selectedShippingOption &&\n                consignment.selectedShippingOption.id &&\n                // Selected option is available\n                consignment.availableShippingOptions &&\n                consignment.availableShippingOptions.filter(\n                    ({ id }) => id === consignment.selectedShippingOption?.id,\n                ).length) ||\n            consignment.selectedShippingOption?.type === 'custom',\n    );\n}\n","import { Consignment, LineItemMap } from '@bigcommerce/checkout-sdk';\nimport { reduce } from 'lodash';\n\nexport default function hasUnassignedLineItems(\n    consignments: Consignment[],\n    lineItems: LineItemMap,\n): boolean {\n    const totalAssigned = reduce(\n        consignments,\n        (total, consignment) => total + consignment.lineItemIds.length,\n        0,\n    );\n\n    return totalAssigned < lineItems.physicalItems.filter((item) => !item.addedByPromotion).length;\n}\n","import React, { memo } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Toggle } from '../../ui/toggle';\n\ninterface ShippingOptionAdditionalDescriptionProps {\n    description: string;\n}\n\nconst ShippingOptionAdditionalDescription: React.FunctionComponent<\n    ShippingOptionAdditionalDescriptionProps\n> = ({ description }) => {\n    const CHRACTER_LIMIT = 45;\n\n    return (\n        <div className=\"shippingOption-additionalDescription--container\">\n            <Toggle openByDefault={description.length < CHRACTER_LIMIT}>\n                {({ isOpen, toggle }) => (\n                    <>\n                        <span\n                            className={`shippingOption-additionalDescription ${\n                                isOpen\n                                    ? 'shippingOption-additionalDescription--expanded'\n                                    : 'shippingOption-additionalDescription--collapsed'\n                            }`}\n                        >\n                            {description}\n                        </span>\n                        {!isOpen && (\n                            <a className=\"shippingOption-readMore\" onClick={preventDefault(toggle)}>\n                                <TranslatedString id=\"common.show_more\" />\n                            </a>\n                        )}\n                    </>\n                )}\n            </Toggle>\n        </div>\n    );\n};\n\nexport default memo(ShippingOptionAdditionalDescription);\n","import { ShippingOption } from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { ShopperCurrency } from '../../currency';\n\nimport ShippingOptionAdditionalDescription from './ShippingOptionAdditionalDescription';\nimport './StaticShippingOption.scss';\n\ninterface StaticShippingOptionProps {\n    displayAdditionalInformation?: boolean;\n    method: ShippingOption;\n}\n\nconst StaticShippingOption: React.FunctionComponent<StaticShippingOptionProps> = ({\n    displayAdditionalInformation = true,\n    method,\n}) => {\n    return (\n        <div className=\"shippingOption shippingOption--alt\">\n            {method.imageUrl && (\n                <span className=\"shippingOption-figure\">\n                    <img\n                        alt={method.description}\n                        className=\"shippingOption-img\"\n                        src={method.imageUrl}\n                    />\n                </span>\n            )}\n            <span className=\"shippingOption-desc\">\n                {method.description}\n                {method.transitTime && (\n                    <span className=\"shippingOption-transitTime\">{method.transitTime}</span>\n                )}\n                {method.additionalDescription && displayAdditionalInformation && (\n                    <ShippingOptionAdditionalDescription\n                        description={method.additionalDescription}\n                    />\n                )}\n            </span>\n            <span className=\"shippingOption-price\">\n                <ShopperCurrency amount={method.cost} />\n            </span>\n        </div>\n    );\n};\n\nexport default StaticShippingOption;\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconSuccess: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconSuccess);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconInfo: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconInfo);\n","import classNames from 'classnames';\nimport React, { FunctionComponent, ReactNode } from 'react';\n\nimport { IconError, IconInfo, IconSuccess } from '../icon';\n\nexport interface AlertProps {\n    additionalClassName?: string;\n    icon?: ReactNode;\n    testId?: string;\n    type?: AlertType;\n}\n\nexport enum AlertType {\n    Error = 'error',\n    Info = 'info',\n    Success = 'success',\n    Warning = 'warning',\n}\n\nfunction renderDefaultIcon(type?: AlertType): ReactNode {\n    switch (type) {\n        case AlertType.Error:\n        case AlertType.Warning:\n            return <IconError />;\n\n        case AlertType.Success:\n            return <IconSuccess />;\n\n        case AlertType.Info:\n        default:\n            return <IconInfo />;\n    }\n}\n\nconst Alert: FunctionComponent<AlertProps> = ({\n    additionalClassName,\n    children,\n    icon,\n    testId,\n    type,\n}) => (\n    <div\n        className={classNames(\n            'alertBox',\n            additionalClassName,\n            { 'alertBox--info': type === AlertType.Info || !type },\n            { 'alertBox--error': type === AlertType.Error },\n            { 'alertBox--success': type === AlertType.Success },\n            { 'alertBox--warning': type === AlertType.Warning },\n        )}\n        data-test={testId}\n    >\n        <div className=\"alertBox-column alertBox-icon\">{icon || renderDefaultIcon(type)}</div>\n\n        <div aria-live=\"assertive\" className=\"alertBox-column alertBox-message\" role=\"alert\">\n            {children}\n        </div>\n    </div>\n);\n\nexport default Alert;\n","import classNames from 'classnames';\nimport React, { ButtonHTMLAttributes, FunctionComponent } from 'react';\n\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n    isFullWidth?: boolean;\n    isLoading?: boolean;\n    size?: ButtonSize;\n    testId?: string;\n    variant?: ButtonVariant;\n}\n\nexport enum ButtonVariant {\n    Primary = 'primary',\n    Secondary = 'secondary',\n    Action = 'action',\n}\n\nexport enum ButtonSize {\n    Small = 'small',\n    Tiny = 'tiny',\n    Large = 'large',\n}\n\nfunction getClassName(\n    props: Pick<ButtonProps, 'className' | 'isFullWidth' | 'isLoading' | 'size' | 'variant'>,\n) {\n    const { className, isFullWidth, isLoading, size, variant } = props;\n\n    return classNames(\n        'button',\n        className,\n        { 'button--primary': variant === ButtonVariant.Primary },\n        { 'button--tertiary': variant === ButtonVariant.Secondary },\n        { 'button--action': variant === ButtonVariant.Action },\n        { 'button--small': size === ButtonSize.Small },\n        { 'button--tiny': size === ButtonSize.Tiny },\n        { 'button--large': size === ButtonSize.Large },\n        { 'button--slab': isFullWidth },\n        {\n            'optimizedCheckout-buttonPrimary':\n                variant === ButtonVariant.Primary || variant === ButtonVariant.Action,\n        },\n        { 'optimizedCheckout-buttonSecondary': variant === ButtonVariant.Secondary },\n        { 'is-loading': isLoading },\n    );\n}\n\nconst Button: FunctionComponent<ButtonProps> = ({\n    children,\n    className,\n    disabled,\n    isFullWidth,\n    isLoading,\n    size,\n    testId,\n    type,\n    variant,\n    ...rest\n}) => (\n    <button\n        {...rest}\n        className={getClassName({ className, isFullWidth, isLoading, size, variant })}\n        data-test={testId}\n        disabled={disabled || isLoading}\n        type={type || 'button'}\n    >\n        {children}\n    </button>\n);\n\nexport default Button;\n","import { Field, FieldConfig, FieldProps, getIn } from 'formik';\nimport { isDate, noop } from 'lodash';\nimport React, {\n    Component,\n    createElement,\n    FunctionComponent,\n    memo,\n    useCallback,\n    useMemo,\n} from 'react';\nimport shallowEqual from 'shallowequal';\n\nimport FormFieldContainer from './FormFieldContainer';\n\nexport interface BasicFormFieldProps extends FieldConfig {\n    additionalClassName?: string;\n    className?: string;\n    testId?: string;\n    onChange?(value: any): void;\n}\n\nconst BasicFormField: FunctionComponent<BasicFormFieldProps> = ({\n    additionalClassName,\n    className,\n    component,\n    render,\n    testId,\n    onChange,\n    ...rest\n}) => {\n    const renderInnerField = useCallback(\n        (props: FieldProps) => (\n            <InnerField\n                {...props}\n                additionalClassName={additionalClassName}\n                className={className}\n                component={component}\n                onChange={onChange}\n                render={render}\n                testId={testId}\n            />\n        ),\n        [additionalClassName, className, component, render, testId, onChange],\n    );\n\n    return <Field {...rest} render={renderInnerField} />;\n};\n\ntype InnerFieldProps = Omit<BasicFormFieldProps, keyof FieldConfig> & InnerFieldInputProps;\n\nconst InnerField: FunctionComponent<InnerFieldProps> = memo(\n    ({ additionalClassName, component, field, form, onChange, render, testId }) => {\n        const input = useMemo(\n            () => (\n                <InnerFieldInput\n                    component={component}\n                    field={field}\n                    form={form}\n                    onChange={onChange}\n                    render={render}\n                />\n            ),\n            [field, form, onChange, component, render],\n        );\n\n        return (\n            <FormFieldContainer\n                additionalClassName={additionalClassName}\n                hasError={getIn(form.errors, field.name)}\n                testId={testId}\n            >\n                {input}\n            </FormFieldContainer>\n        );\n    },\n    (\n        { form: prevForm, field: prevField, ...prevProps },\n        { form: nextForm, field: nextField, ...nextProps },\n    ) =>\n        shallowEqual(prevProps, nextProps) &&\n        shallowEqual(prevForm, nextForm) &&\n        shallowEqual(prevField, nextField),\n);\n\ntype InnerFieldInputProps = FieldProps &\n    Pick<FieldConfig, 'component' | 'render'> & {\n        onChange?(value: string): void;\n    };\n\nclass InnerFieldInput extends Component<InnerFieldInputProps> {\n    componentDidUpdate({ field: prevField }: InnerFieldInputProps) {\n        const {\n            field: { value },\n            onChange = noop,\n        } = this.props;\n        const comparableValue = isDate(value) ? value.getTime() : value;\n        const comparablePrevValue = isDate(prevField.value)\n            ? prevField.value.getTime()\n            : prevField.value;\n\n        if (comparableValue !== comparablePrevValue) {\n            onChange(value);\n        }\n    }\n\n    render() {\n        const { component = 'input', field, render } = this.props;\n\n        if (render) {\n            return (render as any)(this.props);\n        }\n\n        if (typeof component === 'string') {\n            return createElement(component as any, field);\n        }\n\n        return createElement(component as any, this.props);\n    }\n}\n\nexport default memo(BasicFormField);\n","import { FieldProps } from 'formik';\nimport { kebabCase } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode, useCallback } from 'react';\n\nimport BasicFormField from './BasicFormField';\nimport CheckboxInput from './CheckboxInput';\nimport FormFieldError from './FormFieldError';\n\nexport interface CheckboxFormFieldProps {\n    additionalClassName?: string;\n    disabled?: boolean;\n    name: string;\n    id?: string;\n    labelContent: ReactNode;\n    onChange?(isChecked: boolean): void;\n    testId?: string;\n}\n\nconst CheckboxFormField: FunctionComponent<CheckboxFormFieldProps> = ({\n    additionalClassName,\n    disabled = false,\n    labelContent,\n    onChange,\n    name,\n    id,\n    testId,\n}) => {\n    const renderField = useCallback(\n        ({ field }: FieldProps) => (\n            <>\n                <CheckboxInput\n                    {...field}\n                    checked={!!field.value}\n                    disabled={disabled}\n                    id={id || field.name}\n                    label={labelContent}\n                    testId={testId}\n                />\n\n                <FormFieldError\n                    errorId={`${id ?? name}-field-error-message`}\n                    name={name}\n                    testId={`${kebabCase(name)}-field-error-message`}\n                />\n            </>\n        ),\n        [disabled, id, labelContent, name],\n    );\n\n    return (\n        <BasicFormField\n            additionalClassName={additionalClassName}\n            name={name}\n            onChange={onChange}\n            render={renderField}\n        />\n    );\n};\n\nexport default memo(CheckboxFormField);\n","import classNames from 'classnames';\nimport React, { forwardRef, ReactNode, Ref } from 'react';\n\nimport Input, { InputProps } from './Input';\nimport Label from './Label';\n\nexport interface CheckboxInputProps extends InputProps {\n    additionalClassName?: string;\n    label: ReactNode;\n    value: string;\n    checked: boolean;\n}\n\nconst CheckboxInput = forwardRef(\n    (\n        { additionalClassName, label, id, testId, ...rest }: CheckboxInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <>\n            <Input\n                {...rest}\n                className={classNames(\n                    'form-checkbox',\n                    'optimizedCheckout-form-checkbox',\n                    additionalClassName,\n                )}\n                id={id}\n                ref={ref}\n                testId={testId}\n                type=\"checkbox\"\n            />\n            <Label htmlFor={id}>{label}</Label>\n        </>\n    ),\n);\n\nexport default CheckboxInput;\n","import classNames from 'classnames';\nimport React, { forwardRef, ReactNode, Ref } from 'react';\n\nimport Input, { InputProps } from './Input';\nimport Label from './Label';\n\nexport interface RadioInputProps extends InputProps {\n    additionalClassName?: string;\n    label: ReactNode;\n    value: string;\n    checked: boolean;\n}\n\nconst RadioInput = forwardRef(\n    (\n        { additionalClassName, label, value, checked, id, ...rest }: RadioInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <>\n            <Input\n                {...rest}\n                checked={checked}\n                className={classNames(\n                    'form-radio',\n                    'optimizedCheckout-form-radio',\n                    additionalClassName,\n                )}\n                id={id}\n                ref={ref}\n                type=\"radio\"\n                value={value}\n            />\n            <Label htmlFor={id}>{label}</Label>\n        </>\n    ),\n);\n\nexport default RadioInput;\n","import { FormFieldItem } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { isDate, noop } from 'lodash';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\nimport ReactDatePicker from 'react-datepicker';\n\nimport { withDate, WithDateProps } from '@bigcommerce/checkout/locale';\n\nimport { IconChevronDown } from '../icon';\n\nimport CheckboxInput from './CheckboxInput';\nimport DynamicFormFieldType from './DynamicFormFieldType';\nimport { InputProps } from './Input';\nimport RadioInput from './RadioInput';\nimport TextArea from './TextArea';\nimport TextInput from './TextInput';\n\nexport interface DynamicInputProps extends InputProps {\n    id: string;\n    additionalClassName?: string;\n    value?: string | string[];\n    rows?: number;\n    fieldType?: DynamicFormFieldType;\n    options?: FormFieldItem[];\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst DynamicInput: FunctionComponent<DynamicInputProps & WithDateProps> = ({\n    additionalClassName,\n    date,\n    fieldType,\n    id,\n    name,\n    onChange = noop,\n    options,\n    placeholder,\n    isFloatingLabelEnabled,\n    value,\n    ...rest\n}) => {\n    const { inputFormat } = date;\n    const handleDateChange = useCallback(\n        (dateValue, event) =>\n            onChange({\n                ...event,\n                target: {\n                    name,\n                    value: dateValue,\n                },\n            }),\n        [onChange, name],\n    );\n\n    switch (fieldType) {\n        case DynamicFormFieldType.dropdown:\n            return (\n                <>\n                    <div\n                        className={classNames(\n                            { 'dropdown-chevron': !isFloatingLabelEnabled },\n                            { 'floating-select-chevron': isFloatingLabelEnabled },\n                        )}>\n                        <IconChevronDown />\n                    </div>\n                    <select\n                        {...(rest as any)}\n                        className={classNames(\n                            { 'floating-select': isFloatingLabelEnabled },\n                            'form-select optimizedCheckout-form-select',\n                        )}\n                        data-test={`${id}-select`}\n                        id={id}\n                        name={name}\n                        onChange={onChange}\n                        value={value === null ? '' : value}\n                    >\n                        {placeholder && <option value=\"\">{placeholder}</option>}\n                        {options &&\n                            options.map(({ label, value: optionValue }) => (\n                                <option key={optionValue} value={optionValue}>\n                                    {label}\n                                </option>\n                            ))}\n                    </select>\n                </>\n            );\n\n        case DynamicFormFieldType.radio:\n            if (!options || !options.length) {\n                return null;\n            }\n\n            return (\n                <>\n                    {options.map(({ label, value: optionValue }) => (\n                        <RadioInput\n                            {...rest}\n                            checked={optionValue === value}\n                            id={`${id}-${optionValue}`}\n                            key={optionValue}\n                            label={label}\n                            name={name}\n                            onChange={onChange}\n                            testId={`${id}-${optionValue}-radio`}\n                            value={optionValue}\n                        />\n                    ))}\n                </>\n            );\n\n        case DynamicFormFieldType.checkbox:\n            if (!options || !options.length) {\n                return null;\n            }\n\n            return (\n                <>\n                    {options.map(({ label, value: optionValue }) => (\n                        <CheckboxInput\n                            {...rest}\n                            checked={Array.isArray(value) ? value.includes(optionValue) : false}\n                            id={`${id}-${optionValue}`}\n                            key={optionValue}\n                            label={label}\n                            name={name}\n                            onChange={onChange}\n                            testId={`${id}-${optionValue}-checkbox`}\n                            value={optionValue}\n                        />\n                    ))}\n                </>\n            );\n\n        case DynamicFormFieldType.date:\n            return (\n                <ReactDatePicker\n                    {...(rest as any)}\n                    autoComplete=\"off\"\n                    // FIXME: we can avoid this by simply using onChangeRaw, but it's not being triggered properly\n                    // https://github.com/Hacker0x01/react-datepicker/issues/1357\n                    // onChangeRaw={ rest.onChange }\n                    calendarClassName=\"optimizedCheckout-contentPrimary\"\n                    className={classNames('form-input optimizedCheckout-form-input', {\n                        'floating-input': isFloatingLabelEnabled,\n                    })}\n                    dateFormat={inputFormat}\n                    maxDate={rest.max ? new Date(`${rest.max}T00:00:00Z`) : undefined}\n                    minDate={rest.min ? new Date(`${rest.min}T00:00:00Z`) : undefined}\n                    name={name}\n                    onChange={handleDateChange}\n                    placeholderText={inputFormat.toUpperCase()}\n                    popperClassName=\"optimizedCheckout-contentPrimary\"\n                    selected={isDate(value) ? value : undefined}\n                />\n            );\n\n        case DynamicFormFieldType.multiline:\n            return (\n                <TextArea\n                    {...(rest as any)}\n                    id={id}\n                    isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    name={name}\n                    onChange={onChange}\n                    testId={`${id}-text`}\n                    type={fieldType}\n                    value={value}\n                />\n            );\n\n        default:\n            return (\n                <TextInput\n                    {...rest}\n                    id={id}\n                    isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    name={name}\n                    onChange={onChange}\n                    placeholder={placeholder}\n                    testId={`${id}-${\n                        fieldType === DynamicFormFieldType.password ? 'password' : 'text'\n                    }`}\n                    type={fieldType}\n                    value={value}\n                />\n            );\n    }\n};\n\nexport default memo(withDate(DynamicInput));\n","import React, { FunctionComponent, memo, MouseEvent, useCallback } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './MultiCheckboxControl.scss';\n\nexport interface MultiCheckboxControlProps {\n    testId?: string;\n    onSelectedAll(): void;\n    onSelectedNone(): void;\n}\n\nconst MultiCheckboxControl: FunctionComponent<MultiCheckboxControlProps> = ({\n    testId,\n    onSelectedAll,\n    onSelectedNone,\n}) => {\n    const handleSelectAllClick = useCallback(\n        (event: MouseEvent) => {\n            event.preventDefault();\n            onSelectedAll();\n        },\n        [onSelectedAll],\n    );\n\n    const handleSelectNoneClick = useCallback(\n        (event: MouseEvent) => {\n            event.preventDefault();\n            onSelectedNone();\n        },\n        [onSelectedNone],\n    );\n\n    return (\n        <ul className=\"multiCheckbox--controls\">\n            <li className=\"multiCheckbox--control\">\n                <TranslatedString id=\"address.select\" />\n            </li>\n\n            <li className=\"multiCheckbox--control\">\n                <a\n                    data-test={`${testId}Checkbox-all-button`}\n                    href=\"#\"\n                    onClick={handleSelectAllClick}\n                >\n                    <TranslatedString id=\"address.select_all\" />\n                </a>\n            </li>\n\n            <li className=\"multiCheckbox--control\">\n                <a\n                    data-test={`${testId}Checkbox-none-button`}\n                    href=\"#\"\n                    onClick={handleSelectNoneClick}\n                >\n                    <TranslatedString id=\"address.select_none\" />\n                </a>\n            </li>\n        </ul>\n    );\n};\n\nexport default memo(MultiCheckboxControl);\n","import { FormFieldItem } from '@bigcommerce/checkout-sdk';\nimport { FieldArray, FieldArrayRenderProps, getIn } from 'formik';\nimport { difference, kebabCase, noop, pick } from 'lodash';\nimport React, { ChangeEvent, FunctionComponent, memo, ReactNode, useCallback } from 'react';\n\nimport DynamicFormFieldType from './DynamicFormFieldType';\nimport DynamicInput from './DynamicInput';\nimport FormFieldContainer from './FormFieldContainer';\nimport FormFieldError from './FormFieldError';\nimport MultiCheckboxControl from './MultiCheckboxControl';\n\nexport interface CheckboxGroupFormFieldProps {\n    id: string;\n    label: ReactNode;\n    name: string;\n    options: FormFieldItem[];\n    onChange?(values: string[]): void;\n}\n\ntype MultiCheckboxFormFieldProps = CheckboxGroupFormFieldProps &\n    Pick<FieldArrayRenderProps, 'push' | 'remove' | 'pop' | 'form'>;\n\nconst MultiCheckboxFormField: FunctionComponent<MultiCheckboxFormFieldProps> = ({\n    form: { values, errors },\n    id,\n    label,\n    name,\n    onChange = noop,\n    options,\n    push,\n    remove,\n}) => {\n    const handleSelectAll = useCallback(() => {\n        const checkedValues: string[] = getIn(values, name) || [];\n\n        difference(\n            options.map(({ value }) => value),\n            checkedValues,\n        ).forEach((val) => push(val));\n\n        onChange(getIn(values, name));\n    }, [name, onChange, options, push, values]);\n\n    const handleSelectNone = useCallback(() => {\n        const checkedValues: string[] = getIn(values, name) || [];\n\n        checkedValues.forEach(() => remove(0));\n\n        onChange(getIn(values, name));\n    }, [name, onChange, remove, values]);\n\n    const handleInputChange = useCallback(\n        (event: ChangeEvent<HTMLInputElement>) => {\n            const checkedValues: string[] = getIn(values, name) || [];\n            const { value, checked } = event.target;\n\n            if (checked) {\n                push(value);\n            } else {\n                remove(checkedValues.indexOf(value));\n            }\n\n            onChange(getIn(values, name));\n        },\n        [name, onChange, push, remove, values],\n    );\n\n    return (\n        <FormFieldContainer hasError={getIn(errors, name) && getIn(errors, name).length}>\n            {label}\n\n            {options.length > 1 && (\n                <MultiCheckboxControl\n                    onSelectedAll={handleSelectAll}\n                    onSelectedNone={handleSelectNone}\n                    testId={id}\n                />\n            )}\n\n            <DynamicInput\n                fieldType={DynamicFormFieldType.checkbox}\n                id={id}\n                name={name}\n                onChange={handleInputChange}\n                options={options}\n                value={getIn(values, name) || []}\n            />\n\n            <FormFieldError\n                errorId={`${id ?? name}-field-error-message`}\n                name={name}\n                testId={`${kebabCase(name)}-field-error-message`}\n            />\n        </FormFieldContainer>\n    );\n};\n\nconst CheckboxGroupFormField: FunctionComponent<CheckboxGroupFormFieldProps> = ({\n    id,\n    label,\n    name,\n    onChange,\n    options,\n}) => {\n    const renderField = useCallback(\n        (renderProps: FieldArrayRenderProps) => (\n            <MultiCheckboxFormField\n                id={id}\n                label={label}\n                name={name}\n                onChange={onChange}\n                options={options}\n                {...pick(renderProps, ['form', 'pop', 'push', 'remove'])}\n            />\n        ),\n        [id, label, name, onChange, options],\n    );\n\n    return <FieldArray name={name} render={renderField} />;\n};\n\nexport default memo(CheckboxGroupFormField);\n","import { FormField as FormFieldType } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { FieldProps } from 'formik';\nimport { includes } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport CheckboxGroupFormField from './CheckboxGroupFormField';\nimport DynamicFormFieldType from './DynamicFormFieldType';\nimport DynamicInput from './DynamicInput';\nimport FormField from './FormField';\nimport Label from './Label';\n\nexport interface DynamicFormFieldOption {\n    code: string;\n    name: string;\n}\n\nexport interface DynamicFormFieldProps {\n    field: FormFieldType;\n    inputId?: string;\n    extraClass?: string;\n    autocomplete?: string;\n    parentFieldName?: string;\n    placeholder?: string;\n    label?: ReactNode;\n    isFloatingLabelEnabled?: boolean;\n    onChange?(value: string | string[]): void;\n}\n\nconst DynamicFormField: FunctionComponent<DynamicFormFieldProps> = ({\n    field: {\n        fieldType,\n        type,\n        secret,\n        name,\n        label: fieldLabel,\n        required,\n        options,\n        max,\n        min,\n        maxLength,\n    },\n    parentFieldName,\n    onChange,\n    placeholder,\n    inputId,\n    autocomplete,\n    label,\n    extraClass,\n    isFloatingLabelEnabled,\n}) => {\n    const fieldInputId = inputId || name;\n    const fieldName = parentFieldName ? `${parentFieldName}.${name}` : name;\n    const isFloatingLabelSupportedFieldType = Boolean(\n        isFloatingLabelEnabled &&\n            (includes(['text', 'password', 'dropdown', 'date', 'multiline'], fieldType) ||\n                !fieldType),\n    );\n    const labelComponent = useMemo(\n        () => (\n            <Label\n                htmlFor={fieldInputId}\n                id={`${fieldInputId}-label`}\n                isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n            >\n                {label || fieldLabel}\n                {!required && (\n                    <>\n                        {' '}\n                        <small className=\"optimizedCheckout-contentSecondary\">\n                            <TranslatedString id=\"common.optional_text\" />\n                        </small>\n                    </>\n                )}\n            </Label>\n        ),\n        [fieldInputId, fieldLabel, required, isFloatingLabelSupportedFieldType, label],\n    );\n\n    const dynamicFormFieldType = useMemo((): DynamicFormFieldType => {\n        if (fieldType === 'text') {\n            if (type === 'integer') {\n                return DynamicFormFieldType.number;\n            }\n\n            if (includes(name, 'phone') || includes(name, 'tel')) {\n                return DynamicFormFieldType.telephone;\n            }\n\n            return secret ? DynamicFormFieldType.password : DynamicFormFieldType.text;\n        }\n\n        return fieldType as DynamicFormFieldType;\n    }, [fieldType, type, secret, name]);\n\n    const renderInput = useCallback(\n        ({ field }: FieldProps<string>) => (\n            <DynamicInput\n                {...field}\n                aria-labelledby={`${fieldInputId}-label ${fieldInputId}-field-error-message`}\n                autoComplete={autocomplete}\n                fieldType={dynamicFormFieldType}\n                id={fieldInputId}\n                isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n                max={max}\n                maxLength={maxLength || undefined}\n                min={min}\n                options={options && options.items}\n                placeholder={placeholder || (options && options.helperLabel)}\n                rows={options && (options as any).rows}\n            />\n        ),\n        [\n            fieldInputId,\n            max,\n            maxLength,\n            min,\n            options,\n            placeholder,\n            dynamicFormFieldType,\n            autocomplete,\n        ],\n    );\n\n    return (\n        <div\n            className={classNames(\n                'dynamic-form-field',\n                { 'floating-form-field': isFloatingLabelSupportedFieldType },\n                extraClass,\n            )}\n        >\n            {fieldType === DynamicFormFieldType.checkbox ? (\n                <CheckboxGroupFormField\n                    id={fieldInputId}\n                    label={labelComponent}\n                    name={fieldName}\n                    onChange={onChange}\n                    options={(options && options.items) || []}\n                />\n            ) : (\n                <FormField\n                    id={fieldInputId}\n                    input={renderInput}\n                    isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n                    label={labelComponent}\n                    name={fieldName}\n                    onChange={onChange}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default memo(DynamicFormField);\n","enum DynamicFormFieldType {\n    telephone = 'tel',\n    dropdown = 'dropdown',\n    number = 'number',\n    password = 'password',\n    checkbox = 'checkbox',\n    multiline = 'multiline',\n    date = 'date',\n    radio = 'radio',\n    text = 'text',\n}\n\nexport default DynamicFormFieldType;\n","import classNames from 'classnames';\nimport React, { FieldsetHTMLAttributes, forwardRef, ReactNode, Ref } from 'react';\n\nexport interface FieldsetProps extends FieldsetHTMLAttributes<HTMLFieldSetElement> {\n    additionalClassName?: string;\n    testId?: string;\n    legend?: ReactNode;\n}\n\nconst Fieldset = forwardRef(\n    (\n        { additionalClassName, children, className, legend, testId, ...rest }: FieldsetProps,\n        ref: Ref<HTMLFieldSetElement>,\n    ) => (\n        <fieldset\n            {...rest}\n            className={className || classNames('form-fieldset', additionalClassName)}\n            data-test={testId}\n            ref={ref}\n        >\n            {legend}\n\n            <div className=\"form-body\">{children}</div>\n        </fieldset>\n    ),\n);\n\nexport default Fieldset;\n","import { memoizeOne } from '@bigcommerce/memoize';\nimport { Form as FormikForm, FormikFormProps } from 'formik';\nimport { values } from 'lodash';\nimport React, { createRef, FunctionComponent, memo, useCallback, useRef } from 'react';\n\nimport { FormContextType, FormProvider } from '@bigcommerce/checkout/ui';\n\nexport interface FormProps extends FormikFormProps {\n    testId?: string;\n}\n\nconst Form: FunctionComponent<FormProps> = ({ className, testId, ...rest }) => {\n    const ref = useRef({ containerRef: createRef<HTMLDivElement>() });\n\n    const focusOnError = () => {\n        const { current } = ref.current.containerRef;\n\n        if (!current) {\n            return;\n        }\n\n        const errorInputSelectors = [\n            '.form-field--error input',\n            '.form-field--error textarea',\n            '.form-field--error select',\n        ];\n\n        const erroredFormField = current.querySelector<HTMLElement>(errorInputSelectors.join(', '));\n\n        if (erroredFormField) {\n            erroredFormField.focus({ preventScroll: true });\n\n            try {\n                erroredFormField.offsetParent?.scrollIntoView({\n                    behavior: 'smooth',\n                    block: 'center',\n                    inline: 'center',\n                });\n            } catch {\n                erroredFormField.offsetParent?.scrollIntoView();\n            }\n        }\n    };\n\n    const handleSubmitCapture = useCallback(\n        memoizeOne((setSubmitted: FormContextType['setSubmitted']) => {\n            return () => {\n                setSubmitted(true);\n\n                // use timeout to allow Formik validation to happen\n                setTimeout(() => focusOnError());\n            };\n        }),\n        [focusOnError],\n    );\n\n    const renderContent = useCallback(\n        memoizeOne(({ setSubmitted }: FormContextType) => {\n            return (\n                <div ref={ref.current.containerRef}>\n                    <FormikForm\n                        {...rest}\n                        className={className}\n                        data-test={testId}\n                        noValidate\n                        onSubmitCapture={handleSubmitCapture(setSubmitted)}\n                    />\n                </div>\n            );\n        }),\n        [className, handleSubmitCapture, testId, ...values(rest)],\n    );\n\n    return <FormProvider>{renderContent}</FormProvider>;\n};\n\nexport default memo(Form);\n","import { FieldProps } from 'formik';\nimport { kebabCase } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode, useCallback } from 'react';\n\nimport BasicFormField from './BasicFormField';\nimport FormFieldError from './FormFieldError';\nimport Label from './Label';\n\nexport interface FormFieldProps {\n    additionalClassName?: string;\n    name: string;\n    label?: ReactNode | ((fieldName: string) => ReactNode);\n    labelContent?: ReactNode;\n    footer?: ReactNode;\n    id?: string;\n    isFloatingLabelEnabled?: boolean;\n    input(field: FieldProps<string>): ReactNode;\n    onChange?(value: string): void;\n}\n\nconst FormField: FunctionComponent<FormFieldProps> = ({\n    additionalClassName,\n    labelContent,\n    label,\n    onChange,\n    footer,\n    input,\n    name,\n    id,\n    isFloatingLabelEnabled,\n}) => {\n    const renderField = useCallback(\n        (props) => (\n            <>\n                {isFloatingLabelEnabled && input(props)}\n\n                {label && (typeof label === 'function' ? label(name) : label)}\n                {labelContent && !label && (\n                    <Label\n                        htmlFor={name}\n                        id={`${id ?? name}-label`}\n                        isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    >\n                        {labelContent}\n                    </Label>\n                )}\n\n                {!isFloatingLabelEnabled && input(props)}\n\n                <FormFieldError\n                    errorId={`${id ?? name}-field-error-message`}\n                    name={name}\n                    testId={`${kebabCase(name)}-field-error-message`}\n                />\n\n                {footer}\n            </>\n        ),\n        [label, labelContent, id, input, name, footer, isFloatingLabelEnabled],\n    );\n\n    return (\n        <BasicFormField\n            additionalClassName={additionalClassName}\n            name={name}\n            onChange={onChange}\n            render={renderField}\n        />\n    );\n};\n\nexport default memo(FormField);\n","import classNames from 'classnames';\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { FormContext } from '@bigcommerce/checkout/ui';\n\nexport interface FormFieldContainerProps {\n    additionalClassName?: string;\n    children: ReactNode;\n    className?: string;\n    hasError?: boolean;\n    testId?: string;\n}\n\nconst FormFieldContainer: FunctionComponent<FormFieldContainerProps> = ({\n    additionalClassName,\n    children,\n    className,\n    hasError,\n    testId,\n}) => (\n    <FormContext.Consumer>\n        {({ isSubmitted }) => (\n            <div\n                className={\n                    className ||\n                    classNames('form-field', additionalClassName, {\n                        'form-field--error': hasError && isSubmitted,\n                    })\n                }\n                data-test={testId}\n            >\n                {children}\n            </div>\n        )}\n    </FormContext.Consumer>\n);\n\nexport default memo(FormFieldContainer);\n","import { ErrorMessage } from 'formik';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\n\nimport { FormContext } from '@bigcommerce/checkout/ui';\n\nexport interface FormFieldErrorProps {\n    name: string;\n    testId?: string;\n    errorId: string;\n}\n\nconst FormFieldError: FunctionComponent<FormFieldErrorProps> = ({ name, testId, errorId }) => {\n    const renderMessage = useCallback(\n        (message: string) => (\n            <ul className=\"form-field-errors\" data-test={testId}>\n                <li className=\"form-field-error\">\n                    <label\n                        aria-live=\"polite\"\n                        className=\"form-inlineMessage\"\n                        htmlFor={name}\n                        id={errorId}\n                        role=\"alert\"\n                    >\n                        {message}\n                    </label>\n                </li>\n            </ul>\n        ),\n        [errorId, name, testId],\n    );\n\n    return (\n        <FormContext.Consumer>\n            {({ isSubmitted }) =>\n                isSubmitted && <ErrorMessage name={name} render={renderMessage} />\n            }\n        </FormContext.Consumer>\n    );\n};\n\nexport default memo(FormFieldError);\n","import classNames from 'classnames';\nimport { includes } from 'lodash';\nimport React, { forwardRef, InputHTMLAttributes, Ref } from 'react';\n\nexport interface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n    testId?: string;\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst Input = forwardRef(\n    (\n        { className, testId, placeholder, name, isFloatingLabelEnabled, ...rest }: InputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => {\n        const floatingLabelDisabledFieldNames = ['orderComment', 'redeemableCode'];\n\n        return (\n            <input\n                {...{\n                    ...rest,\n                    className: classNames(className, {\n                        'floating-input':\n                            isFloatingLabelEnabled && !includes(floatingLabelDisabledFieldNames, name),\n                    }),\n                    name,\n                }}\n                data-test={testId}\n                placeholder={isFloatingLabelEnabled ? ' ' : placeholder}\n                ref={ref}\n            />\n        );\n    },\n);\n\nexport default Input;\n","import classNames from 'classnames';\nimport React, { FunctionComponent, LabelHTMLAttributes } from 'react';\n\nexport interface LabelProps extends LabelHTMLAttributes<HTMLLabelElement> {\n    testId?: string;\n    hidden?: boolean;\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst Label: FunctionComponent<LabelProps> = ({\n    children,\n    className,\n    hidden,\n    testId,\n    isFloatingLabelEnabled,\n    ...rest\n}) => (\n    <label\n        { ...rest }\n        className={ classNames(\n            { 'floating-label': isFloatingLabelEnabled },\n            className || 'form-label',\n            { 'is-srOnly': hidden },\n            'optimizedCheckout-form-label'\n        ) }\n        data-test={ testId }\n    >\n        { children }\n    </label>\n);\n\nexport default Label;\n","import classNames from 'classnames';\nimport React, { FunctionComponent } from 'react';\n\nexport interface LegendProps extends React.HTMLAttributes<HTMLLegendElement> {\n    hidden?: boolean;\n    testId?: string;\n}\n\nconst Legend: FunctionComponent<LegendProps> = ({\n    children,\n    className,\n    hidden,\n    testId,\n    ...rest\n}) => (\n    <legend\n        {...rest}\n        className={classNames(\n            className || 'form-legend',\n            { 'is-srOnly': hidden },\n            { 'optimizedCheckout-headingSecondary': !hidden },\n        )}\n        data-test={testId}\n    >\n        {children}\n    </legend>\n);\n\nexport default Legend;\n","import classNames from 'classnames';\nimport React, { forwardRef, Ref, TextareaHTMLAttributes } from 'react';\n\nexport interface TextAreaProps extends TextareaHTMLAttributes<HTMLTextAreaElement> {\n    additionalClassName?: string;\n    testId?: string;\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst TextArea = forwardRef(\n    (\n        { additionalClassName, testId, className, isFloatingLabelEnabled, ...rest }: TextAreaProps,\n        ref: Ref<HTMLTextAreaElement>,\n    ) => {\n        return (\n            <textarea\n                {...rest}\n                className={\n                    className ||\n                    classNames(\n                        { 'floating-textarea': isFloatingLabelEnabled },\n                        'form-input',\n                        'optimizedCheckout-form-input',\n                        additionalClassName,\n                    )\n                }\n                data-test={testId}\n                ref={ref}\n            />\n        );\n    },\n);\n\nexport default TextArea;\n","import classNames from 'classnames';\nimport React, { forwardRef, Ref } from 'react';\n\nimport Input, { InputProps } from './Input';\n\nexport interface TextInputProps extends InputProps {\n    additionalClassName?: string;\n    appearFocused?: boolean;\n    type?: 'text' | 'password' | 'tel' | 'email' | 'number';\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst TextInput = forwardRef(\n    (\n        {\n            additionalClassName,\n            isFloatingLabelEnabled,\n            appearFocused,\n            type = 'text',\n            ...rest\n        }: TextInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <Input\n            {...rest}\n            className={classNames(\n                'form-input',\n                'optimizedCheckout-form-input',\n                { 'form-input--focus': appearFocused },\n                { 'optimizedCheckout-form-input--focus': appearFocused },\n                additionalClassName,\n            )}\n            isFloatingLabelEnabled={isFloatingLabelEnabled}\n            ref={ref}\n            type={type}\n        />\n    ),\n);\n\nexport default TextInput;\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconBolt: FunctionComponent = () => (\n    <svg\n        aria-labelledby=\"iconCardBoltTitle\"\n        data-test=\"bolt-icon\"\n        height=\"12\"\n        role=\"img\"\n        viewBox=\"0 0 12 12\"\n        width=\"12\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <title id=\"iconCardBoltTitle\">Bolt</title>\n        <path d=\"M0 7.502h7.5v4.5L12 4.502H4.5V0z\" fill=\"#FFFFFF\" id=\"mark\" />\n    </svg>\n);\n\nexport default withIconContainer(IconBolt);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconChevronDown: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconChevronDown);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconError: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconError);\n","import classNames from 'classnames';\nimport React, { ComponentType, memo } from 'react';\n\nexport enum IconSize {\n    Regular = 'regular',\n    Small = 'small',\n    Medium = 'medium',\n    Large = 'large',\n}\n\nexport interface IconProps {\n    additionalClassName?: string;\n    size?: IconSize;\n    testId?: string;\n}\n\nexport default function withIconContainer<TProps extends Record<string, any>>(\n    OriginalComponent: ComponentType<TProps>,\n): ComponentType<TProps & IconProps> {\n    return memo(({ additionalClassName, size, testId, ...rest }) => (\n        <div\n            className={classNames(\n                'icon',\n                additionalClassName,\n                size === IconSize.Small ? 'icon--small' : null,\n                size === IconSize.Large ? 'icon--large' : null,\n                size === IconSize.Medium ? 'icon--medium' : null,\n            )}\n            data-test={testId}\n        >\n            <OriginalComponent {...(rest as TProps)} />\n        </div>\n    ));\n}\n","import React, { FunctionComponent, ReactNode, Suspense } from 'react';\n\nimport { ErrorBoundary } from '@bigcommerce/checkout/error-handling-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './LazyContainer.scss';\nimport LoadingSpinner from './LoadingSpinner';\n\nexport interface LazyContainerProps {\n    children: ReactNode;\n    loadingSkeleton?: ReactNode;\n}\n\nconst filterError = (error: Error) => error.name === 'ChunkLoadError';\n\nconst LazyContainer: FunctionComponent<LazyContainerProps> = ({ loadingSkeleton, children }) => (\n    <ErrorBoundary\n        fallback={\n            <div className=\"lazyContainer-error\">\n                <TranslatedString id=\"common.unstable_network_error\" />\n            </div>\n        }\n        filter={filterError}\n    >\n        <Suspense fallback={loadingSkeleton || <LoadingSpinner isLoading />}>{children}</Suspense>\n    </ErrorBoundary>\n);\n\nexport default LazyContainer;\n","import React, { FunctionComponent } from 'react';\n\nimport LoadingSpinner from './LoadingSpinner';\n\nexport interface LoadingOverlayProps {\n    isLoading: boolean;\n    hideContentWhenLoading?: boolean;\n    unmountContentWhenLoading?: boolean;\n}\n\nconst LoadingOverlay: FunctionComponent<LoadingOverlayProps> = ({\n    children,\n    hideContentWhenLoading,\n    unmountContentWhenLoading,\n    isLoading,\n}) => {\n    if (hideContentWhenLoading || unmountContentWhenLoading) {\n        return (\n            <>\n                <LoadingSpinner isLoading={isLoading} />\n                {unmountContentWhenLoading && isLoading ? null : (\n                    <div\n                        style={{\n                            display: hideContentWhenLoading && isLoading ? 'none' : undefined,\n                        }}\n                    >\n                        {children}\n                    </div>\n                )}\n            </>\n        );\n    }\n\n    return (\n        <div className=\"loadingOverlay-container\">\n            {children}\n            {isLoading && <div className=\"loadingOverlay optimizedCheckout-overlay\" />}\n        </div>\n    );\n};\n\nexport default LoadingOverlay;\n","import React, { FunctionComponent, memo } from 'react';\n\nexport interface LoadingSpinnerProps {\n    isLoading: boolean;\n}\n\nconst LoadingSpinner: FunctionComponent<LoadingSpinnerProps> = ({ isLoading }) => {\n    if (!isLoading) {\n        return null;\n    }\n\n    return (\n        <div className=\"loadingSpinner loadingOverlay-container\" style={{ height: 100 }}>\n            <div className=\"loadingOverlay optimizedCheckout-overlay\" />\n        </div>\n    );\n};\n\nexport default memo(LoadingSpinner);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconClose: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconClose);\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, KeyboardEvent, MouseEvent, ReactNode, useCallback } from 'react';\nimport ReactModal from 'react-modal';\nimport { Omit } from 'utility-types';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\n\nimport { IconClose } from '../icon';\n\nexport type ModalProps = Omit<\n    ReactModal.Props,\n    'bodyOpenClassName' | 'className' | 'closeTimeoutMS' | 'overlayClassName'\n> & {\n    children: ReactNode;\n    closeButtonLabel?: string | ReactNode;\n    footer?: ReactNode;\n    header?: ReactNode;\n    additionalHeaderClassName?: string;\n    additionalBodyClassName?: string;\n    additionalModalClassName?: string;\n    shouldShowCloseButton?: boolean;\n};\n\nconst Modal: FunctionComponent<ModalProps> = ({\n    children,\n    closeButtonLabel = 'Close',\n    footer,\n    header,\n    additionalHeaderClassName,\n    additionalBodyClassName,\n    additionalModalClassName,\n    onRequestClose = noop,\n    shouldShowCloseButton = false,\n    ...rest\n}) => {\n    const handleClose = useCallback(\n        (event: MouseEvent | KeyboardEvent) => {\n            onRequestClose(event);\n        },\n        [onRequestClose],\n    );\n\n    return (\n        <ReactModal\n            {...rest}\n            ariaHideApp={process.env.NODE_ENV !== 'test'}\n            bodyOpenClassName=\"has-activeModal\"\n            className={{\n                base: classNames(\n                    'modal optimizedCheckout-contentPrimary',\n                    additionalModalClassName,\n                ),\n                afterOpen: 'modal--afterOpen',\n                beforeClose: 'modal--beforeClose',\n            }}\n            closeTimeoutMS={200}\n            onRequestClose={onRequestClose}\n            overlayClassName={{\n                base: 'modalOverlay',\n                afterOpen: 'modalOverlay--afterOpen',\n                beforeClose: 'modalOverlay--beforeClose',\n            }}\n            shouldCloseOnEsc={true}\n            shouldCloseOnOverlayClick={false}\n        >\n            <div className={classNames('modal-header', additionalHeaderClassName)}>\n                {header}\n\n                {shouldShowCloseButton && (\n                     \n                    <a\n                        className=\"modal-close\"\n                        data-test=\"modal-close-button\"\n                        href=\"#\"\n                        onClick={preventDefault(handleClose)}\n                    >\n                        {closeButtonLabel && <span className=\"is-srOnly\">{closeButtonLabel}</span>}\n\n                        <IconClose />\n                    </a>\n                )}\n            </div>\n\n            <div\n                className={classNames('modal-body', additionalBodyClassName)}\n                data-test=\"modal-body\"\n            >\n                {children}\n            </div>\n\n            {Boolean(footer) && (\n                <div className=\"modal-footer\" data-test=\"modal-footer\">\n                    {footer}\n                </div>\n            )}\n        </ReactModal>\n    );\n};\n\nexport default Modal;\n","import classNames from 'classnames';\nimport React, { FunctionComponent } from 'react';\n\ninterface ModalHeaderProps {\n    children: React.ReactNode;\n    additionalClassName?: string;\n}\n\nconst ModalHeader: FunctionComponent<ModalHeaderProps> = ({ children, additionalClassName }) => (\n    <h2\n        className={classNames(\n            'modal-header-title optimizedCheckout-headingSecondary',\n            additionalClassName,\n        )}\n        data-test=\"modal-heading\"\n    >\n        {children}\n    </h2>\n);\n\nexport default ModalHeader;\n","import React, { FunctionComponent, memo } from 'react';\nimport Media, { MediaQueryObject, MultiQueryProps } from 'react-media';\n\nimport { MOBILE_MAX_WIDTH } from './breakpoints';\n\nconst queries = {\n    print: 'print',\n    mobile: `screen and (max-width: ${MOBILE_MAX_WIDTH}px)`,\n};\n\nconst ViewPicker: FunctionComponent<Pick<MultiQueryProps<MediaQueryObject>, 'children'>> = ({\n    children,\n}) => {\n    return <Media queries={queries}>{children}</Media>;\n};\n\nexport default memo(ViewPicker);\n","import React, { FunctionComponent, memo } from 'react';\n\nimport ViewPicker from './ViewPicker';\n\nconst MobileView: FunctionComponent<{ children(matched: boolean): React.ReactNode }> = ({\n    children,\n}) => {\n    return (\n        <ViewPicker>\n            {(matches: { mobile: boolean }) => {\n                return children(matches.mobile);\n            }}\n        </ViewPicker>\n    );\n};\n\nexport default memo(MobileView);\n","// These values have to match with screensizes.scss\nexport const MOBILE_MAX_WIDTH = 968;\nexport const SMALL_SCREEN_MAX_WIDTH = 551;\n","import { Component, ReactNode } from 'react';\n\nexport interface ToggleProps {\n    openByDefault?: boolean;\n    children(props: any): ReactNode;\n}\n\nexport interface ToggleState {\n    isOpen: boolean;\n}\n\nexport default class Toggle extends Component<ToggleProps, ToggleState> {\n    constructor(props: ToggleProps) {\n        super(props);\n\n        this.state = { isOpen: !!props.openByDefault };\n    }\n\n    render(): ReactNode {\n        const { children } = this.props;\n        const { isOpen } = this.state;\n\n        return children({\n            isOpen,\n            toggle: this.toggle,\n        });\n    }\n\n    private toggle: (event: Event) => void = (event) => {\n        const { isOpen } = this.state;\n\n        event.preventDefault();\n\n        this.setState({ isOpen: !isOpen });\n    };\n}\n","import { kebabCase } from 'lodash';\n\nexport default function getAppliedStyles(\n    element: HTMLElement,\n    properties: string[],\n): { [key: string]: string } {\n    const declaration = window.getComputedStyle(element);\n\n    return properties.reduce(\n        (result, propertyName) => ({\n            ...result,\n            [propertyName]: declaration.getPropertyValue(kebabCase(propertyName)),\n        }),\n        {},\n    );\n}\n","export default function parseAnchor(text: string): string[] {\n    const div = document.createElement('div');\n\n    div.innerHTML = text;\n\n    const anchor = div.querySelector('a');\n\n    if (!anchor) {\n        return [];\n    }\n\n    const anchorSiblings = div.innerHTML.split(anchor.outerHTML);\n\n    return [anchorSiblings[0], anchor.text, anchorSiblings[1]];\n}\n","import { SyntheticEvent } from 'react';\n\nexport default function preventDefault<\n    TFunc extends (event: TEvent, ...args: any[]) => any,\n    TEvent extends SyntheticEvent,\n>(fn?: TFunc): (event: TEvent) => void {\n    return (event) => {\n        event.preventDefault();\n\n        if (fn) {\n            fn(event);\n        }\n    };\n}\n","import { Component, ReactNode } from 'react';\n\nimport ErrorLogger from './ErrorLogger';\n\nexport interface ErrorBoundaryProps {\n    children: ReactNode;\n    fallback?: ReactNode;\n    logger?: ErrorLogger;\n    filter?(error: Error): boolean;\n}\n\ninterface ErrorBoundaryState {\n    error?: Error;\n}\n\nclass ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n    static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n        return { error };\n    }\n\n    // eslint-disable-next-line @typescript-eslint/member-ordering\n    state: ErrorBoundaryState = {};\n\n    componentDidCatch(error: Error): void {\n        const { filter = () => true, logger } = this.props;\n\n        if (!filter(error)) {\n            throw error;\n        }\n\n        if (logger) {\n            logger.log(error);\n        }\n    }\n\n    render(): ReactNode {\n        const { children, fallback, filter = () => true } = this.props;\n\n        const { error } = this.state;\n\n        if (error && filter(error)) {\n            return fallback || null;\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorBoundary;\n","import { Cart } from '@bigcommerce/checkout-sdk';\n\n/**\n * Minimum charge amounts due to the Stripe documentation\n * https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts\n */\nenum stripeLinkMinAmount {\n    'USD' = 0.5,\n    'AED' = 2,\n    'AUD' = 0.5,\n    'BGN' = 1,\n    'BRL' = 0.5,\n    'CAD' = 0.5,\n    'CHF' = 0.5,\n    'CZK' = 15,\n    'DKK' = 2.5,\n    'EUR' = 0.5,\n    'GBP' = 0.3,\n    'HKD' = 4,\n    'HUF' = 175,\n    'INR' = 0.5,\n    'JPY' = 50,\n    'MXN' = 10,\n    'MYR' = 2,\n    'NOK' = 3,\n    'NZD' = 0.5,\n    'PLN' = 2,\n    'RON' = 2,\n    'SEK' = 3,\n    'SGD' = 0.5,\n    'THB' = 10,\n}\n\nconst isStripeLinkMinAmount = (code: string): code is keyof typeof stripeLinkMinAmount => {\n    return code in stripeLinkMinAmount;\n};\n\nconst shouldUseStripeLinkByMinimumAmount = (cart: Cart) => {\n    const {\n        currency: { code },\n        cartAmount,\n    } = cart;\n\n    if (isStripeLinkMinAmount(code) && cartAmount >= stripeLinkMinAmount[code]) {\n        return true;\n    }\n\n    return false;\n};\n\nexport default shouldUseStripeLinkByMinimumAmount;\n","import { isEmpty, pickBy } from 'lodash';\nimport React, { ComponentType, Context, FunctionComponent, memo, useContext } from 'react';\n\nimport InjectHoc from './InjectHoc';\n\nexport interface InjectHocOptions<TInjectedProps> {\n    displayNamePrefix?: string;\n    pickProps?(value: TInjectedProps[keyof TInjectedProps], key: keyof TInjectedProps): boolean;\n}\n\nexport default function createInjectHoc<\n    TInjectedProps extends object | undefined,\n    TPickedProps extends Partial<TInjectedProps> = TInjectedProps,\n>(\n    ContextComponent: Context<TInjectedProps>,\n    options?: InjectHocOptions<TInjectedProps>,\n): InjectHoc<NonNullable<TPickedProps>> {\n    return <TProps extends TPickedProps>(OriginalComponent: ComponentType<TProps>) => {\n        const { displayNamePrefix = '', pickProps = () => true } = options || {};\n\n        const InnerDecoratedComponent: FunctionComponent<TProps> = memo((props) => (\n            <OriginalComponent {...props} />\n        ));\n\n        const DecoratedComponent = (props: Omit<TProps, keyof NonNullable<TPickedProps>>) => {\n            const context = useContext(ContextComponent);\n            const injectedProps = pickBy(context, (value, key) =>\n                pickProps(value, key as keyof TInjectedProps),\n            );\n\n            if (isEmpty(injectedProps)) {\n                return null;\n            }\n\n            const mergedProps = { ...injectedProps, ...props } as unknown as TProps;\n\n            return <InnerDecoratedComponent {...mergedProps} />;\n        };\n\n        if (displayNamePrefix) {\n            DecoratedComponent.displayName = `${displayNamePrefix}(${\n                OriginalComponent.displayName || OriginalComponent.name\n            })`;\n        }\n\n        return DecoratedComponent;\n    };\n}\n","import { CurrencyService, LanguageService } from '@bigcommerce/checkout-sdk';\nimport { createContext, useContext } from 'react';\n\nexport interface LocaleContextType {\n    language: LanguageService;\n    date?: {\n        inputFormat: string;\n    };\n    currency?: CurrencyService;\n}\n\nconst LocaleContext = createContext<LocaleContextType | undefined>(undefined);\n\nexport default LocaleContext;\n\nexport function useLocale() {\n    const context = useContext(LocaleContext);\n\n    if (!context) {\n        throw new Error('useLocale must be used within a LocaleContextProvider');\n    }\n\n    return context;\n}\n","import { CheckoutService, createCurrencyService, StoreConfig } from '@bigcommerce/checkout-sdk';\nimport { memoizeOne } from '@bigcommerce/memoize';\nimport React, { Component, ReactNode } from 'react';\n\nimport getLanguageService from './getLanguageService';\nimport LocaleContext from './LocaleContext';\n\nexport interface LocaleProviderProps {\n    checkoutService: CheckoutService;\n}\n\nexport interface LocaleProviderState {\n    config?: StoreConfig;\n}\n\nclass LocaleProvider extends Component<LocaleProviderProps> {\n    state: Readonly<LocaleProviderState> = {};\n\n    private languageService = getLanguageService();\n    private unsubscribe?: () => void;\n\n    private getContextValue = memoizeOne((config?: StoreConfig) => {\n        return {\n            currency: config ? createCurrencyService(config) : undefined,\n            date: config\n                ? {\n                      inputFormat: config.inputDateFormat,\n                  }\n                : undefined,\n            language: this.languageService,\n        };\n    });\n\n    componentDidMount(): void {\n        const { checkoutService } = this.props;\n\n        this.unsubscribe = checkoutService.subscribe(\n            ({ data }) => {\n                this.setState({ config: data.getConfig() });\n            },\n            ({ data }) => data.getConfig(),\n        );\n    }\n\n    componentWillUnmount(): void {\n        if (this.unsubscribe) {\n            this.unsubscribe();\n            this.unsubscribe = undefined;\n        }\n    }\n\n    render(): ReactNode {\n        const { children } = this.props;\n        const { config } = this.state;\n\n        return (\n            <LocaleContext.Provider value={this.getContextValue(config)}>\n                {children}\n            </LocaleContext.Provider>\n        );\n    }\n}\n\nexport default LocaleProvider;\n","import DOMPurify from 'dompurify';\nimport React, { FunctionComponent } from 'react';\n\nimport { useLocale } from './LocaleContext';\n\nexport interface TranslatedHtmlProps {\n    id: string;\n    data?: any;\n}\n\nexport const TranslatedHtml: FunctionComponent<TranslatedHtmlProps> = ({ data, id }) => {\n    const { language } = useLocale();\n\n    return (\n        <span\n            dangerouslySetInnerHTML={{\n                __html: DOMPurify.sanitize(language.translate(id, data), { ADD_ATTR: ['target'] }),\n            }}\n        />\n    );\n};\n\nexport default TranslatedHtml;\n","import React, { FunctionComponent, MouseEventHandler } from 'react';\n\nimport { parseAnchor, preventDefault } from '@bigcommerce/checkout/dom-utils';\n\nimport { useLocale } from './LocaleContext';\nimport { TranslatedStringProps } from './TranslatedString';\n\nexport type TranslatedLinkProps = TranslatedStringProps & {\n    testId?: string;\n    onClick: MouseEventHandler;\n};\n\nconst TranslatedLink: FunctionComponent<TranslatedLinkProps> = ({ data, id, onClick, testId }) => {\n    const { language } = useLocale();\n    const translatedString = language.translate(id, data);\n    const parsedString = parseAnchor(translatedString);\n\n    return parsedString.length ? (\n        <>\n            {parsedString[0]}\n            <a data-test={testId} href=\"#\" onClick={preventDefault(onClick)}>\n                {parsedString[1]}\n            </a>\n            {parsedString[2]}\n        </>\n    ) : (\n        <>{translatedString}</>\n    );\n};\n\nexport default TranslatedLink;\n","import React, { FunctionComponent } from 'react';\n\nimport { useLocale } from './LocaleContext';\n\nexport interface TranslatedStringProps {\n    id: string;\n    data?: any;\n}\n\nconst TranslatedString: FunctionComponent<TranslatedStringProps> = ({ data, id }) => {\n    const { language } = useLocale();\n\n    return <>{language.translate(id, data)}</>;\n};\n\nexport default TranslatedString;\n","import FALLBACK_TRANSLATIONS from './en.json';\n\nexport const FALLBACK_LOCALE = 'en';\n\nexport { FALLBACK_TRANSLATIONS };\n","import { createLanguageService, LanguageConfig, LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { FALLBACK_LOCALE, FALLBACK_TRANSLATIONS } from './translations';\n\nlet languageService: LanguageService | undefined;\n\nexport default function getLanguageService(): LanguageService {\n    languageService =\n        languageService ??\n        createLanguageService({\n            fallbackLocale: FALLBACK_LOCALE,\n            fallbackTranslations: FALLBACK_TRANSLATIONS,\n        });\n\n    return languageService;\n}\n\nexport type InitializeLanguageService = typeof initializeLanguageService;\n\nexport function initializeLanguageService(config: LanguageConfig): LanguageService {\n    languageService = createLanguageService({\n        ...config,\n        defaultLocale: config.locale,\n        defaultTranslations: config.defaultTranslations,\n        fallbackLocale: FALLBACK_LOCALE,\n        fallbackTranslations: FALLBACK_TRANSLATIONS,\n    });\n\n    return languageService;\n}\n","import { Address, Country } from '@bigcommerce/checkout-sdk';\nimport { find, isEmpty } from 'lodash';\n\ninterface LocalizedGeography {\n    localizedCountry: string;\n    localizedProvince: string;\n}\n\nconst localizeAddress = <T1 extends Address>(\n    address: T1,\n    countries?: Country[],\n): T1 & LocalizedGeography => {\n    const country = find(countries, { code: address.countryCode });\n    const states = !country || isEmpty(country.subdivisions) ? [] : country.subdivisions;\n    const state = find(states, { code: address.stateOrProvinceCode });\n\n    return {\n        ...address,\n        localizedCountry: country ? country.name : address.country,\n        localizedProvince: state ? state.name : address.stateOrProvince,\n    };\n};\n\nexport default localizeAddress;\n","import { CurrencyService } from '@bigcommerce/checkout-sdk';\n\nimport { createInjectHoc, InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithCurrencyProps {\n    currency: CurrencyService;\n}\n\nconst withCurrency: InjectHoc<WithCurrencyProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'WithCurrency',\n    pickProps: (value, key) => key === 'currency' && !!value,\n});\n\nexport default withCurrency;\n","import { createInjectHoc, InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithDateProps {\n    date: {\n        inputFormat: string;\n    };\n}\n\nconst withDate: InjectHoc<WithDateProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'withDate',\n    pickProps: (value, key) => key === 'date' && !!value,\n});\n\nexport default withDate;\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { createInjectHoc, InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithLanguageProps {\n    language: LanguageService;\n}\n\nconst withLanguage: InjectHoc<WithLanguageProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'WithLanguage',\n    pickProps: (value, key) => key === 'language' && !!value,\n});\n\nexport default withLanguage;\n","enum PaymentMethodId {\n    Adyen = 'adyen',\n    AdyenV2 = 'adyenv2',\n    AdyenV2GooglePay = 'googlepayadyenv2',\n    AdyenV3GooglePay = 'googlepayadyenv3',\n    AdyenV3 = 'adyenv3',\n    Affirm = 'affirm',\n    Afterpay = 'afterpay',\n    AmazonPay = 'amazonpay',\n    ApplePay = 'applepay',\n    Barclaycard = 'barclaycard',\n    BlueSnapV2 = 'bluesnapv2',\n    BlueSnapDirect = 'bluesnapdirect',\n    Boleto = 'boleto',\n    Bolt = 'bolt',\n    Braintree = 'braintree',\n    BraintreeAch = 'braintreeach',\n    BraintreeVenmo = 'braintreevenmo',\n    AuthorizeNetGooglePay = 'googlepayauthorizenet',\n    BNZGooglePay = 'googlepaybnz',\n    BraintreeAcceleratedCheckout = 'braintreeacceleratedcheckout',\n    BraintreeGooglePay = 'googlepaybraintree',\n    PayPalCommerceAcceleratedCheckout = 'paypalcommerceacceleratedcheckout',\n    PayPalCommerceGooglePay = 'googlepaypaypalcommerce',\n    BraintreeVisaCheckout = 'braintreevisacheckout',\n    BraintreeLocalPaymentMethod = 'braintreelocalmethods',\n    BraintreePaypalCredit = 'braintreepaypalcredit',\n    CBAMPGS = 'cba_mpgs',\n    CCAvenueMars = 'ccavenuemars',\n    Checkoutcom = 'checkoutcom',\n    CheckoutcomGooglePay = 'googlepaycheckoutcom',\n    Clearpay = 'clearpay',\n    Converge = 'converge',\n    CybersourceV2GooglePay = 'googlepaycybersourcev2',\n    DigitalRiver = 'digitalriver',\n    Fawry = 'fawry',\n    Humm = 'humm',\n    Ideal = 'ideal',\n    Klarna = 'klarna',\n    Laybuy = 'laybuy',\n    Masterpass = 'masterpass',\n    Mollie = 'mollie',\n    Moneris = 'moneris',\n    Opy = 'opy',\n    OrbitalGooglePay = 'googlepayorbital',\n    Oxxo = 'oxxo',\n    PaypalExpress = 'paypalexpress',\n    PaypalPaymentsPro = 'paypal',\n    PaypalCommerce = 'paypalcommerce',\n    PaypalCommerceCredit = 'paypalcommercecredit',\n    PaypalCommerceCreditCards = 'paypalcommercecreditcards',\n    PaypalCommerceAlternativeMethod = 'paypalcommercealternativemethods',\n    PaypalCommerceVenmo = 'paypalcommercevenmo',\n    Qpay = 'qpay',\n    Quadpay = 'quadpay',\n    Ratepay = 'ratepay',\n    SagePay = 'sagepay',\n    Sepa = 'sepa',\n    Sezzle = 'sezzle',\n    SquareV2 = 'squarev2',\n    StripeGooglePay = 'googlepaystripe',\n    StripeUPEGooglePay = 'googlepaystripeupe',\n    StripeV3 = 'stripev3',\n    StripeUPE = 'stripeupe',\n    WorldpayAccess = 'worldpayaccess',\n    WorldpayAccessGooglePay = 'googlepayworldpayaccess',\n    Zip = 'zip',\n    TdOnlineMartGooglePay = 'googlepaytdonlinemart',\n}\n\nexport default PaymentMethodId;\n","import { CheckoutSelectors, CheckoutService } from '@bigcommerce/checkout-sdk';\nimport { createContext, useContext } from 'react';\n\nexport interface CheckoutContextProps {\n    checkoutService: CheckoutService;\n    checkoutState: CheckoutSelectors;\n}\n\nconst CheckoutContext = createContext<CheckoutContextProps | undefined>(undefined);\n\nexport function useCheckout() {\n    const context = useContext(CheckoutContext);\n\n    if (!context) {\n        throw new Error('useCheckout must be used within a CheckoutContextProvider');\n    }\n\n    return context;\n}\n\nexport default CheckoutContext;\n","import { CheckoutSelectors, CheckoutService } from '@bigcommerce/checkout-sdk';\nimport { memoizeOne } from '@bigcommerce/memoize';\nimport React, { Component, ReactNode } from 'react';\n\nimport CheckoutContext from './CheckoutContext';\n\nexport interface CheckoutProviderProps {\n    checkoutService: CheckoutService;\n}\n\nexport interface CheckoutProviderState {\n    checkoutState: CheckoutSelectors;\n}\n\nexport default class CheckoutProvider extends Component<\n    CheckoutProviderProps,\n    CheckoutProviderState\n> {\n    state: Readonly<CheckoutProviderState>;\n\n    private unsubscribe?: () => void;\n\n    private getContextValue = memoizeOne(\n        (checkoutService: CheckoutService, checkoutState: CheckoutSelectors) => {\n            return {\n                checkoutService,\n                checkoutState,\n            };\n        },\n    );\n\n    constructor(props: Readonly<CheckoutProviderProps>) {\n        super(props);\n\n        this.state = {\n            checkoutState: props.checkoutService.getState(),\n        };\n    }\n\n    componentDidMount(): void {\n        const { checkoutService } = this.props;\n\n        this.unsubscribe = checkoutService.subscribe((checkoutState) =>\n            this.setState({ checkoutState }),\n        );\n    }\n\n    componentWillUnmount(): void {\n        if (this.unsubscribe) {\n            this.unsubscribe();\n            this.unsubscribe = undefined;\n        }\n    }\n\n    render(): ReactNode {\n        const { checkoutService, children } = this.props;\n        const { checkoutState } = this.state;\n\n        return (\n            <CheckoutContext.Provider value={this.getContextValue(checkoutService, checkoutState)}>\n                {children}\n            </CheckoutContext.Provider>\n        );\n    }\n}\n","export default class CustomError extends Error {\n    static shouldReport: boolean;\n\n    data: any;\n    title: any;\n    type: string;\n\n    constructor({\n        data = {},\n        message = '',\n        title = '',\n        name = '',\n    }: {\n        data?: any;\n        message?: string;\n        title?: string;\n        name?: string;\n    }) {\n        super();\n\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, CustomError);\n        } else {\n            this.stack = new Error().stack;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        this.data = data;\n        this.message = message;\n        this.name = name;\n        this.title = title;\n        this.type = 'custom';\n    }\n}\n","import React, { ComponentType } from 'react';\n\nimport ResolvableComponent from './ResolvableComponent';\n\nexport default function toResolvableComponent<TProps extends Record<string, any>, TIdentifier>(\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Component: ComponentType<TProps>,\n    resolveIds: TIdentifier[],\n): ResolvableComponent<TProps, TIdentifier> {\n    return Object.assign((props: TProps) => <Component {...props} />, { resolveIds });\n}\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconPayPalFastlane: FunctionComponent = () => (\n    <svg viewBox=\"0 0 101 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M.009 9.791 1.653.298C1.681.1 1.805 0 1.997 0H7.74c.22 0 .332.141.29.354l-.236 1.334c-.028.185-.152.298-.344.298H3.627l-.359 2.058h3.479c.22 0 .332.142.29.354l-.221 1.306C6.788 5.9 6.664 6 6.472 6H2.936l-.662 3.847c-.028.198-.152.298-.344.298H.298c-.22 0-.332-.142-.289-.354m6.78-1.49c0-1.844 1.905-2.468 3.906-2.71.234-.029.415-.041 1.298-.112a3.25 3.25 0 0 0 .04-.498c0-.653-.344-1.022-1.063-1.022-.622 0-1.035.269-1.23.796-.068.185-.18.27-.358.27H7.975c-.18 0-.304-.085-.304-.241 0-.044.014-.086.028-.128.441-1.334 1.67-2.186 3.507-2.186s2.843.71 2.843 2.428c0 .326-.04.739-.11 1.122l-.373 2.07c-.083.484-.207 1.22-.207 1.718 0 .256-.11.341-.318.341h-1.283c-.192 0-.304-.1-.304-.282 0-.17.04-.37.069-.554-.524.539-1.2.978-2.402.978-1.42 0-2.332-.725-2.332-1.986zm5.036-1.205.054-.256-.372.041c-.746.085-2.375.2-2.375 1.205 0 .525.372.78.966.78 1.103 0 1.504-.78 1.725-1.773zm2.446 1.36c-.04-.17-.07-.297-.07-.438 0-.242.124-.313.318-.313h1.588c.192 0 .29.1.332.298.152.554.607.795 1.284.795.773 0 1.186-.326 1.186-.751 0-.369-.415-.54-1.104-.752l-.813-.256c-1.173-.369-2.14-.795-2.14-2.115 0-1.603 1.475-2.483 3.423-2.483 1.519 0 2.762.412 3.12 1.986.015.07.029.141.029.226 0 .142-.124.198-.318.198h-1.504c-.18 0-.276-.085-.36-.27-.165-.37-.538-.596-1.13-.596-.691 0-1.036.27-1.036.653s.332.554 1.284.852l.539.17c1.243.398 2.278.866 2.278 2.059 0 1.732-1.519 2.639-3.59 2.639-1.602 0-2.996-.468-3.313-1.902h-.005zm7.786.455c0-.269.04-.483.083-.725l.676-3.888h-.745c-.22 0-.332-.141-.29-.354l.166-.951c.029-.185.152-.298.344-.298h.8l.29-1.717c.028-.198.152-.298.344-.298h1.519c.22 0 .332.142.29.354l-.29 1.661h.966c.22 0 .332.142.29.356l-.166.951c-.029.186-.152.298-.345.298h-1.02l-.442 2.54c-.083.483-.152.851-.152 1.149 0 .468.152.624.47.624.124 0 .235-.015.318-.015.22 0 .29.17.249.383l-.152.922c-.055.356-.263.412-.76.412-1.297 0-2.443-.071-2.443-1.405m3.995.88 1.63-9.493C27.71.1 27.834 0 28.026 0h1.519c.22 0 .332.141.29.354l-1.643 9.493c-.028.198-.152.298-.344.298h-1.505c-.221 0-.332-.141-.29-.354zm3.147-1.49c0-1.844 1.905-2.468 3.906-2.71.235-.029.415-.041 1.298-.112a3.25 3.25 0 0 0 .04-.498c0-.653-.344-1.022-1.063-1.022-.622 0-1.034.269-1.229.796-.069.185-.18.27-.359.27h-1.407c-.18 0-.304-.085-.304-.241 0-.044.015-.086.028-.128.442-1.334 1.67-2.186 3.508-2.186 1.837 0 2.843.71 2.843 2.428 0 .326-.04.739-.112 1.122l-.372 2.07c-.083.484-.207 1.22-.207 1.718 0 .256-.111.341-.318.341h-1.284c-.192 0-.303-.1-.303-.282 0-.17.04-.37.068-.554-.524.539-1.2.978-2.401.978-1.422 0-2.333-.725-2.333-1.986V8.3m4.914-1.205.055-.256-.373.041c-.745.085-2.375.2-2.375 1.205 0 .525.372.78.966.78 1.103 0 1.505-.78 1.725-1.773zm2.475 2.695 1.16-6.798c.028-.2.152-.298.344-.298h1.421c.22 0 .318.142.275.356l-.11.666c.357-.524 1.13-1.193 2.4-1.193 1.382 0 2.182.88 2.182 2.256 0 .269-.029.54-.083.866l-.731 4.2c-.028.198-.152.298-.344.298h-1.519c-.22 0-.332-.141-.29-.353l.566-3.25c.083-.482.11-.851.11-1.121 0-.766-.274-1.179-.95-1.179-.898 0-1.436.725-1.671 2.086l-.608 3.52c-.028.197-.152.297-.344.297h-1.519c-.22 0-.332-.141-.29-.353m8.063-2.824c0-2.384 1.588-4.456 4.35-4.456 2.14 0 3.45 1.22 3.45 3.42 0 .256-.014.483-.04.71-.028.2-.152.297-.344.297h-5.233c.028 1.051.496 1.689 1.56 1.689.538 0 .91-.198 1.214-.51a.47.47 0 0 1 .387-.186h1.67c.193 0 .305.057.305.2 0 .042-.015.1-.069.198-.705 1.25-1.836 2.071-3.671 2.071-2.098 0-3.576-1.178-3.576-3.434zm5.591-1.405c0-.908-.484-1.476-1.421-1.476-1.009 0-1.616.71-1.78 1.476h3.203zm34.293-.611-1.504 2.6-.764-2.579a.195.195 0 0 0-.185-.141h-1.355a.15.15 0 0 0-.14.195l1.367 4.343-1.236 2.046c-.06.099.009.227.123.227h1.462a.24.24 0 0 0 .206-.12l3.817-6.465a.148.148 0 0 0-.126-.225h-1.46a.23.23 0 0 0-.204.119zM62.935 12c-.135 0-.206-.063-.206-.168 0-.032.01-.074.03-.116l.66-1.613-1.947-5.21c-.03-.084-.052-.126-.052-.189 0-.105.083-.136.216-.136h.7c.135 0 .227.073.268.2l.937 2.816c.176.527.299.886.433 1.329h.02c.176-.517.268-.823.454-1.36l.957-2.785q.078-.202.278-.2h.629c.134 0 .227.041.227.147a.5.5 0 0 1-.052.169l-2.699 6.927c-.051.127-.134.19-.268.19h-.587zm-4.082-1.772c-.927 0-1.524-.422-1.833-.906v.537c0 .158-.083.243-.237.243h-.505c-.154 0-.237-.085-.237-.243V2.803c0-.158.083-.243.237-.243h.577c.154 0 .237.085.237.243v1.381c0 .38 0 .697-.01 1.086.308-.454.906-.875 1.761-.875 1.535 0 2.523 1.244 2.523 2.921s-1.03 2.911-2.513 2.911m-.205-.876c1.009 0 1.596-.801 1.596-2.025s-.597-2.035-1.606-2.035-1.606.855-1.606 2.035.597 2.025 1.617 2.025zm12.82-1.666c1.397 0 2.58-1.043 2.796-2.454.218-1.424-.87-2.666-2.408-2.67h-2.482a.2.2 0 0 0-.192.17l-1.107 7.19a.18.18 0 0 0 .178.212h1.315a.2.2 0 0 0 .191-.169l.326-2.111a.2.2 0 0 1 .19-.17h1.194zm1.1-2.52c-.082.527-.479.915-1.24.915h-.972l.294-1.916h.955c.788 0 1.044.475.962 1zm7.386-.336h-1.246a.2.2 0 0 0-.191.169l-.042.266s-.968-1.082-2.68-.352c-.982.42-1.455 1.287-1.656 1.918 0 0-.638 1.929.803 2.988 0 0 1.336 1.019 2.842-.063l-.026.17a.18.18 0 0 0 .178.211h1.246a.2.2 0 0 0 .191-.169l.76-4.924a.182.182 0 0 0-.178-.214zm-1.831 2.72c-.108.705-.675 1.225-1.4 1.225a1.3 1.3 0 0 1-.393-.058c-.537-.178-.844-.705-.757-1.28.108-.706.676-1.226 1.403-1.226q.216 0 .392.06c.54.178.843.707.755 1.28zm11.3.136c1.396 0 2.58-1.043 2.795-2.454.218-1.424-.87-2.666-2.408-2.67h-2.48a.2.2 0 0 0-.192.17l-1.107 7.19a.18.18 0 0 0 .178.212h1.315a.2.2 0 0 0 .191-.169l.326-2.111a.2.2 0 0 1 .19-.17h1.19v.002zm1.101-2.52c-.082.527-.478.915-1.239.915h-.972l.294-1.916h.955c.786 0 1.043.475.962 1zm7.387-.336h-1.246a.2.2 0 0 0-.191.169l-.042.266s-.968-1.082-2.68-.352c-.982.42-1.455 1.287-1.655 1.918 0 0-.639 1.929.803 2.988 0 0 1.337 1.019 2.842-.063l-.027.17a.18.18 0 0 0 .178.211h1.246a.2.2 0 0 0 .191-.169l.76-4.924a.183.183 0 0 0-.18-.214m-1.831 2.72c-.109.705-.674 1.225-1.4 1.225q-.216 0-.392-.058c-.537-.178-.845-.705-.757-1.28.108-.706.677-1.226 1.402-1.226q.216 0 .392.06c.537.178.843.707.756 1.28zm3.233-4.82L98.206 9.92a.18.18 0 0 0 .178.212h1.314a.2.2 0 0 0 .192-.169l1.107-7.19a.18.18 0 0 0-.178-.213h-1.315a.2.2 0 0 0-.191.17\"\n            fill=\"#333333\"\n        />\n    </svg>\n);\n\nexport default withIconContainer(IconPayPalFastlane);\n","import React from 'react';\n\nimport { IconPayPalFastlane } from '@bigcommerce/checkout/ui';\n\nimport './PoweredByPayPalFastlaneLabel.scss';\n\nconst PoweredByPayPalFastlaneLabel = () => (\n    <div className=\"powered-by-paypal-fastlane\" data-test=\"paypal-fastlane-icon\">\n        <IconPayPalFastlane />\n    </div>\n);\n\nexport default PoweredByPayPalFastlaneLabel;\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nconst isBraintreeFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        methodId === PaymentMethodId.Braintree || // TODO: remove after A/B testing\n        methodId === PaymentMethodId.BraintreeAcceleratedCheckout\n    );\n};\n\nexport default isBraintreeFastlaneMethod;\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nconst isPayPalCommerceFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        methodId === PaymentMethodId.PaypalCommerceCreditCards || // TODO: remove after A/B testing\n        methodId === PaymentMethodId.PayPalCommerceAcceleratedCheckout\n    );\n};\n\nexport default isPayPalCommerceFastlaneMethod;\n","import {\n    Address,\n    AddressRequestBody,\n    BillingAddress,\n    CustomerAddress,\n} from '@bigcommerce/checkout-sdk';\nimport { isEqual, omit } from 'lodash';\n\ntype ComparableAddress = CustomerAddress | Address | BillingAddress | AddressRequestBody;\ntype ComparableAddressFields = keyof CustomerAddress | keyof Address | keyof BillingAddress;\n\nconst normalizeAddress = (address: Partial<ComparableAddress>) => {\n    const ignoredFields: ComparableAddressFields[] = [\n        'id',\n        'shouldSaveAddress',\n        'stateOrProvince',\n        'type',\n        'email',\n        'country',\n        'customFields',\n    ];\n\n    return omit(address, ignoredFields);\n};\n\nconst isEqualToPayPalFastlaneAddress = (\n    bcAddress: Partial<ComparableAddress>,\n    paypalFastlaneAddress: Partial<ComparableAddress>,\n): boolean => isEqual(normalizeAddress(bcAddress), normalizeAddress(paypalFastlaneAddress));\n\nconst isPayPalFastlaneAddress = (address: Address, addresses?: Address[]): boolean => {\n    if (!addresses || addresses.length === 0) {\n        return false;\n    }\n\n    return addresses.some((paypalFastlaneAddress) =>\n        isEqualToPayPalFastlaneAddress(address, paypalFastlaneAddress),\n    );\n};\n\nexport default isPayPalFastlaneAddress;\n","import {\n    CardInstrument,\n    CustomerAddress,\n    PaymentProviderCustomer,\n} from '@bigcommerce/checkout-sdk';\n\ninterface PayPalFastlaneCustomer {\n    authenticationState?: string;\n    addresses?: CustomerAddress[];\n    instruments?: CardInstrument[];\n}\n\nexport default function isPayPalFastlaneCustomer(\n    customer?: PaymentProviderCustomer,\n): customer is PayPalFastlaneCustomer {\n    if (!customer) {\n        return false;\n    }\n\n    return (\n        'authenticationState' in customer || 'addresses' in customer || 'instruments' in customer\n    );\n}\n","import isBraintreeFastlaneMethod from './is-braintree-fastlane-method';\nimport isPayPalCommerceFastlaneMethod from './is-paypal-commerce-fastlane-method';\n\nconst isPaypalFastlaneMethod = (methodId?: string): boolean => {\n    return isBraintreeFastlaneMethod(methodId) || isPayPalCommerceFastlaneMethod(methodId);\n};\n\nexport default isPaypalFastlaneMethod;\n","import { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport isPayPalFastlaneCustomer from './is-paypal-fastlane-customer';\nimport isPayPalFastlaneMethod from './is-paypal-fastlane-method';\n\nconst usePayPalFastlaneAddress = () => {\n    const { checkoutState } = useCheckout();\n    const { getConfig, getPaymentProviderCustomer } = checkoutState.data;\n    const paymentWithCustomCheckout =\n        getConfig()?.checkoutSettings.providerWithCustomCheckout || '';\n\n    const isPayPalFastlaneEnabled = isPayPalFastlaneMethod(paymentWithCustomCheckout);\n\n    const paymentProviderCustomer = getPaymentProviderCustomer();\n    const paypalFastlaneCustomer = isPayPalFastlaneCustomer(paymentProviderCustomer)\n        ? paymentProviderCustomer\n        : {};\n\n    const customerAuthenticationState =\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        paymentProviderCustomer?.authenticationState;\n\n    const paypalFastlaneAddresses = paypalFastlaneCustomer.addresses || [];\n\n    const shouldShowPayPalFastlaneLabel =\n        paypalFastlaneAddresses.length > 0 && isPayPalFastlaneEnabled;\n\n    const shouldShowPayPalFastlaneShippingForm =\n        paypalFastlaneAddresses.length > 0 &&\n        customerAuthenticationState &&\n        customerAuthenticationState !== 'CANCELED' &&\n        customerAuthenticationState !== 'unrecognized' &&\n        getConfig()?.checkoutSettings.features['PAYPAL-3996.paypal_fastlane_shipping_update'];\n\n    return {\n        isPayPalFastlaneEnabled,\n        paypalFastlaneAddresses,\n        shouldShowPayPalFastlaneLabel,\n        shouldShowPayPalFastlaneShippingForm,\n    };\n};\n\nexport default usePayPalFastlaneAddress;\n","import React, { FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\n\nconst AddressFormSkeleton: FunctionComponent<LoadingSkeletonProps> = ({\n    children,\n    isLoading,\n    renderWhileLoading,\n}) => {\n    const skeleton = (\n        <div className=\"checkout-form\">\n            <div className=\"form-legend-container\">\n                <div className=\"address-form-heading-skeleton form-legend optimizedCheckout-headingSecondary\" />\n            </div>\n            <div className=\"address-form-skeleton\">\n                <div className=\"name-fields-skeleton\">\n                    <div className=\"skeleton-container\">\n                        <div className=\"input-skeleton\" />\n                    </div>\n                    <div className=\"skeleton-container\">\n                        <div className=\"input-skeleton\" />\n                    </div>\n                </div>\n                <div className=\"skeleton-container\">\n                    <div className=\"input-skeleton\" />\n                </div>\n            </div>\n        </div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, renderWhileLoading, skeleton }} />;\n};\n\nexport default AddressFormSkeleton;\n","import classNames from 'classnames';\nimport React, { FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\n\ninterface ChecklistSkeletonProps {\n    additionalClassName?: string;\n    rows?: number;\n}\n\nconst ChecklistSkeleton: FunctionComponent<LoadingSkeletonProps & ChecklistSkeletonProps> = ({\n    additionalClassName,\n    children,\n    isLoading = true,\n    rows = 3,\n}) => {\n    const content = [];\n\n    for (let i = 0; i < rows; i += 1) {\n        content.push(\n            <div className=\"skeleton-container\" key={`checklist-skeleton-item${i}`}>\n                <div className=\"checklist-skeleton-circle\" />\n                <div className=\"checklist-skeleton-rectangle\" />\n            </div>,\n        );\n    }\n\n    const skeleton = (\n        <div className={classNames(additionalClassName, 'checklist-skeleton')}>{content}</div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, skeleton }} />;\n};\n\nexport default ChecklistSkeleton;\n","import React, { FunctionComponent, ReactNode } from 'react';\n\nexport interface LoadingSkeletonProps {\n    isLoading?: boolean;\n    renderWhileLoading?: boolean;\n    skeleton?: ReactNode;\n}\n\nexport const LoadingSkeleton: FunctionComponent<LoadingSkeletonProps> = ({\n    children,\n    isLoading = true,\n    renderWhileLoading = false,\n    skeleton,\n}) => {\n    const shouldShowChildren = renderWhileLoading || !isLoading;\n\n    return (\n        <>\n            {isLoading && skeleton}\n            {Boolean(children) && shouldShowChildren && (\n                <div\n                    className=\"loading-skeleton\"\n                    style={\n                        isLoading ? { position: 'absolute', left: '100%', top: '-100%' } : undefined\n                    }\n                >\n                    {children}\n                </div>\n            )}\n        </>\n    );\n};\n","import { isFunction, noop } from 'lodash';\nimport React, { createContext, FunctionComponent, memo, ReactNode, useMemo, useState } from 'react';\n\nexport interface FormContextType {\n    isSubmitted: boolean;\n    setSubmitted(isSubmitted: boolean): void;\n}\n\nexport const FormContext = createContext<FormContextType>({\n    isSubmitted: false,\n    setSubmitted: noop,\n});\n\ntype FormContextFunction = (props: FormContextType) => ReactNode;\n\nexport interface FormProviderProps {\n    initialIsSubmitted?: boolean;\n    children: ReactNode | FormContextFunction;\n}\n\nexport const FormProvider: FunctionComponent<FormProviderProps> = memo(\n    ({ children, initialIsSubmitted = false }) => {\n        const [isSubmitted, setSubmitted] = useState(initialIsSubmitted);\n        const contextValue = useMemo(() => ({ isSubmitted, setSubmitted }), [isSubmitted]);\n\n        return (\n            <FormContext.Provider value={contextValue}>\n                {isFunction(children) ? children({ isSubmitted, setSubmitted }) : children}\n            </FormContext.Provider>\n        );\n    },\n);\n\nexport default FormContext;\n","import classNames from 'classnames';\nimport React, { ComponentType, memo } from 'react';\n\nexport enum IconSize {\n    Regular = 'regular',\n    Small = 'small',\n    Medium = 'medium',\n    Large = 'large',\n}\n\nexport interface IconProps {\n    additionalClassName?: string;\n    size?: IconSize;\n    testId?: string;\n}\n\nexport default function withIconContainer<TProps extends Record<string, any>>(\n    OriginalComponent: ComponentType<TProps>,\n): ComponentType<TProps & IconProps> {\n    return memo(({ additionalClassName, size, testId, ...rest }) => (\n        <div\n            className={classNames(\n                'icon',\n                additionalClassName,\n                size === IconSize.Small ? 'icon--small' : null,\n                size === IconSize.Large ? 'icon--large' : null,\n                size === IconSize.Medium ? 'icon--medium' : null,\n            )}\n            data-test={testId}\n        >\n            <OriginalComponent {...(rest as TProps)} />\n        </div>\n    ));\n}\n"],"names":["createContext","undefined","createAnalyticsService","createFn","createArguments","analyticsTracker","checkoutService","children","getStepTracker","useMemo","createStepTracker","getBodlService","createBodlService","subscribe","getBraintreeAnalyticTracker","createBraintreeAnalyticTracker","getPayPalCommerceAnalyticTracker","createPayPalCommerceAnalyticTracker","checkoutBegin","trackCheckoutStarted","trackStepCompleted","currentStep","stepCompleted","trackStepViewed","step","orderPurchased","trackOrderComplete","customerEmailEntry","email","customerSuggestionInit","payload","customerSuggestionExecute","customerPaymentMethodExecuted","showShippingMethods","selectedPaymentMethod","methodName","methodId","clickPayButton","paymentRejected","paymentComplete","exitCheckout","walletButtonClick","AnalyticsContext","A","Provider","value","ExtensionRegionContainer","extensionRegionToContainerMap","ShippingShippingAddressFormBefore","ShippingShippingAddressFormAfter","ShippingSelectedShippingMethod","SummaryAfter","SummaryLastItemAfter","Extension","region","getExtensions","getConfig","getCheckout","extensions","config","checkout","extensionService","extensionContext","useContext","ExtensionContext","Error","useExtensions","isRegionEnabled","containerId","useEffect","renderExtension","removeListeners","id","extensionReducer","state","action","type","ExtensionActionType","SHOW_LOADING_INDICATOR","isShowingLoadingIndicator","createReloadCheckoutHandler","commandType","ExtensionCommandType","ReloadCheckout","handler","loadCheckout","getState","data","createSetIframeStyleHandler","extension","SetIframeStyle","style","extensionContainer","document","querySelector","iframe","Object","assign","createShowLoadingIndicatorHandler","dispatch","ShowLoadingIndicator","show","handlers","loadExtensions","this","preloadExtensions","cartId","getCart","parentOrigin","links","siteLink","forEach","url","URL","searchParams","set","link","createElement","rel","as","href","toString","head","appendChild","container","getExtensionByRegion","registerHandlers","removers","remover","Boolean","handlerProps","values","createHandlerFactory","handlerFactory","isCommandHandler","push","handleExtensionCommand","ExtensionProvider","useReducer","extensionState","extensionValues","ExtensionService","AddressType","withCheckout","context","address","getBillingCountries","getShippingCountries","getBillingAddressFields","getShippingAddressFields","countries","Billing","fields","countryCode","Shipping","memo","addressWithoutLocalization","localizeAddress","isValidAddress","filter","field","custom","isEmpty","className","firstName","lastName","phone","company","address1","address2","city","localizedProvince","postalCode","localizedCountry","WHITELIST_REGEXP","memoize","formFields","translate","reduce","schema","name","required","label","trim","matches","concat","getCustomFormFieldsValidationSchema","getTranslateAddressError","language","requiredFieldErrorTranslationIds","stateOrProvince","stateOrProvinceCode","min","max","getFormFieldsValidationSchema","isValidSync","mapAddressToFormValues","addressFormValues","fieldName","fieldType","defaultValue","customFields","find","fieldValue","getValue","shouldSaveAddress","date","Date","checkbox","getDefaultValue","split","year","month","day","Number","displayNamePrefix","checkoutState","payments","paypalFastlaneAddresses","showPayPalFastlaneLabel","payment","providerId","isSupported","message","EmbeddedCheckoutUnsupportedError","prototype","CustomError","unsupportedMethods","langService","ids","indexOf","length","methods","join","UNSUPPORTED_METHODS","withExtension","createInjectHoc","isWaiting","componentDidMount","waitInterval","props","waitToken","setTimeout","setState","componentWillUnmount","clearInterval","render","loginUrl","LoadingOverlay","hideContentWhenLoading","isLoading","TranslatedHtml","PureComponent","CustomerViewType","buttonsCount","skeleton","Array","fill","map","_v","i","key","LoadingSkeleton","renderWhileLoading","isApplePayWindow","window","APPLE_PAY","SUPPORTED_METHODS","getSupportedMethodIds","methodIds","initialize","isShowingWalletButtonsOnTop","onError","onClick","noop","heightOption","buttonHeight","deinitialize","navigateToOrderConfirmation","orderId","isBuyNowCart","location","pathname","replace","Promise","rest","localeContext","LocaleContext","initializeOptions","useCallback","options","applepay","shippingLabel","subtotalLabel","onPaymentAuthorize","beautifyAmazonButton","amazonButton","shadowRoot","height","onComplete","paypalCommerceIds","getCustomer","isPaymentDataRequired","isInitializedCustomer","getInitializeCustomerError","availableMethodIds","checkoutSettings","remoteCheckoutProviders","customer","isGuest","checkEmbeddedSupport","isPaymentStepActive","onUnhandledError","onWalletButtonClick","error","position","left","top","TranslatedString","includes","isPayPalCommerce","resolveId","ResolvedCheckoutButton","resolveComponent","deinitializeCustomer","initializeCustomer","analyticsContext","isExecutingPaymentMethodCheckout","executePaymentMethodCheckout","useState","showSuggestion","setShowSuggestion","bolt","onInit","hasBoltAccount","fn","event","stopPropagation","provider","providerFlow","Button","IconBolt","additionalClassName","providerWithCustomCheckout","PaymentMethodId","Bolt","isInitializing","hideText","supportedMethodIds","filterUnsupportedMethodIds","SUPPORTED_SIGNOUT_METHODS","isSupportedSignoutMethod","canSignOut","every","getBillingAddress","isSigningOut","billingAddress","isSignedIn","signOut","signOutCustomer","onSignOut","onSignOutError","isCartEmpty","reload","isErrorWithType","size","Tiny","testId","variant","Secondary","EMAIL_REGEXP","getEmailValidationSchema","getTranslateCreateCustomerError","passwordRequirements","description","numeric","alpha","minLength","password","getAcceptsMarketingEmailsDefault","defaultShouldSubscribe","requiresMarketingConsent","withLanguage","withFormik","handleSubmit","onSubmit","mapPropsToValues","acceptsMarketingEmails","validationSchema","requirements","getCreateCustomerValidationSchema","getPasswordRequirements","fixNewsletterCheckboxExperimentEnabled","createAccountError","isCreatingAccount","onCancel","isFloatingLabelEnabled","createAccountErrorMessage","isRequestError","status","splitMessage","updatedItems","items","item","transformFormFieldsData","Form","Fieldset","Alert","DynamicFormField","autocomplete","extraClass","parentFieldName","disabled","Primary","preventDefault","onChange","renderInput","TextInput","autoComplete","labelContent","FormField","input","onSendLoginEmail","isOpen","isSendingEmail","emailHasBeenRequested","onRequestClose","sentEmailError","sentEmail","submitForm","formEmail","modalHeaderStringId","okButton","footer","LoadingSpinner","sent_email","TranslatedLink","form","expiry","minutes","Math","round","Modal","additionalBodyClassName","additionalModalClassName","header","ModalHeader","shouldShowCloseButton","isFastlaneHostWindow","hasOwnProperty","getPaymentMethod","paymentMethod","shouldRenderFastlaneWatermark","initializationData","isFastlanePrivacySettingEnabled","braintreeFastlane","paypalFastlane","FastlaneWatermarkComponent","includeAdditionalInfo","then","result","PrivacyPolicyCheckboxFieldLink","CheckboxFormField","PrivacyPolicyFieldset","PrivacyPolicyAutoConsent","getPrivacyPolicyValidationSchema","isRequired","schemaFields","privacyPolicy","oneOf","Input","checked","Label","htmlFor","setSubscribeStatus","shouldSubscribe","sessionStorage","setItem","getSubscribeStatus","getItem","removeSubscribeStatus","removeItem","getShouldSubscribeValue","SubscribeSessionStorage","onContinueAsGuest","privacyPolicyUrl","isExpressPrivacyPolicy","baseSchema","canSubscribe","checkoutButtons","continueAsGuestButtonLabelId","onChangeEmail","onShowLogin","shouldShowEmailWatermark","renderField","fieldProps","legend","Legend","hidden","BasicFormField","role","tabIndex","withIconContainer","viewBox","xmlns","d","Toggle","openByDefault","toggle","onSignIn","canCancel","forgotPasswordUrl","isSignInEmailEnabled","isSigningIn","onCreateAccount","signInError","shouldShowCreateAccountLink","viewType","Login","changeEmailLink","body","mapErrorMessage","SuggestedLogin","Info","CancellableEnforcedLogin","EnforcedLogin","target","mapCreateAccountFromFormValues","mapCustomFormFieldsFromFormValues","setStatus","valSuccess","continueAsAGuestButton","setContinueAsAGuestButton","emailValue","setEmailValue","authentication","setAuthentication","isStripeLoading","setIsStripeLoading","isNewAuth","setIsNewAuth","handleOnClickSubmitButton","setEmailCallback","authenticated","isComplete","handleLoading","mounted","stripeupe","onEmailChange","getStyles","getStripeStyles","gatewayId","getStylesFromElement","properties","parentContainer","getElementById","getAppliedStyles","formInput","formLabel","formError","labelText","color","fieldText","fieldPlaceholderText","fieldErrorText","fieldBackground","fieldInnerShadow","fieldBorder","buttonText","display","placeholder","isEmailLoginFormOpen","isReady","hasRequestedLoginEmail","closeEmailLoginFormForm","handleEmailLoginClicked","draftEmail","handleSendLoginEmail","sendLoginEmail","handleContinueAsGuest","formValues","continueAsGuest","hasBillingId","onChangeViewType","onContinueAsGuestError","onSubscribeToNewsletter","updateSubscriptionWhenUnchecked","acceptsMarketingNewsletter","acceptsAbandonedCartEmails","paymentProviderCustomer","getPaymentProviderCustomer","shouldEncourageSignIn","stripeLinkAuthenticationState","executePaymentMethodCheckoutOrContinue","handleSignIn","credentials","signIn","onSignInError","handleCreateAccount","createAccount","onAccountCreated","showCreateAccount","CreateAccount","handleCancelCreateAccount","clearError","handleCancelSignIn","Guest","handleChangeEmail","handleShowLogin","StripeUPE","continueWithCheckoutCallback","checkoutPaymentMethodExecuted","onReady","shouldRenderGuestForm","shouldRenderCreateAccountForm","shouldRenderLoginForm","renderEmailLoginLinkForm","renderLoginForm","renderGuestForm","renderCreateAccountForm","checkoutButtonIds","isContinuingAsGuest","isSubscribed","isWalletButtonsOnTop","shouldRenderStripeForm","isLoadingGuestForm","isSendingSignInEmail","signInEmailError","signInEmail","customerAccountFields","isEmbedded","isGuestEnabled","isAccountCreationEnabled","Component","withAnalytics","getCustomerAccountFields","getSignInEmail","getSignInError","getSignInEmailError","getCreateCustomerAccountError","isInitializingCustomer","isCreatingCustomerAccount","cart","features","getProviderWithCustomCheckout","shopperConfig","showNewsletterSignup","createCustomerAccount","sendSignInEmail","defaultNewsletterSignup","forgotPasswordLink","guestCheckoutEnabled","signInCustomer","shouldUseStripeLinkByMinimumAmount","Customer","width","icon","dangerouslySetInnerHTML","__html","banners","promotion","banner","index","text","isUsingMultiShipping","consignments","lineItems","some","consignment","lineItemIds","hasUnassignedLineItems","compactView","usePayPalFastlaneAddress","selectedShippingOption","showPayPalFastlaneAddressLabel","StaticAddress","PoweredByPayPalFastlaneLabel","StaticConsignmentItemList","StaticShippingOption","displayAdditionalInformation","method","getLanguageService","title","ShippingOptionExpiredError","heading","isActive","isEditable","onEdit","summary","isClosed","containerRef","createRef","contentRef","handleTransitionEnd","node","done","addEventListener","onAnimationEnd","focusStep","componentDidUpdate","prevProps","timeoutRef","clearTimeout","suggestion","ref","renderContent","isBusy","MobileView","matched","CSSTransition","addEndListener","classNames","enter","exit","in","mountOnEnter","onExited","timeout","unmountOnExit","delay","matchMedia","getTransitionDelay","getChildInput","getScrollPosition","onExpanded","focus","isNaN","scrollTo","current","getParentContainer","topOffset","innerHeight","getBoundingClientRect","scrollY","pageYOffset","parentElement","classList","contains","timeoutDelay","parseFloat","getComputedStyle","transitionDuration","CheckoutStepType","physicalItems","lineItem","isShippingRequired","customItems","getCustomerStepStatus","createSelector","hasEmail","isUsingWallet","isUsingStripeLinkAndCheckoutPageIsReloaded","getStripeLinkAndCheckoutPageIsReloaded","getBillingStepStatus","billingAddressFields","hasAddress","billingAddressCustomFields","hasCustomFields","isAmazonPayBillingStepComplete","getShippingStepStatus","getShippingAddress","getConsignments","shippingAddress","shippingAddressFields","experimentName","hasOptions","hasSelectedShippingOptions","hasUnassignedItems","isCustomShippingSelected","getPaymentStepStatus","getOrder","order","Payment","getOrderSubmitStatus","isSubmittingOrder","customerStep","shippingStep","billingStep","paymentStep","orderStatus","steps","compact","defaultActiveStep","isPrevStepComplete","slice","prevStep","lazy","retry","CartSummary","CartSummaryDrawer","isBillingSameAsShipping","isRedirecting","isMultiShippingMode","buttonConfigs","handleToggleMultiShipping","navigateToNextIncompleteStep","activeStepIndex","findIndex","activeStep","previousStep","navigateToStep","embeddedMessenger","postComplete","embeddedSupport","handleCartChangedError","handleConsignmentsUpdated","prevHasSelectedShippingOptions","activeStepType","defaultStepType","newHasSelectedShippingOptions","isDefaultStepPaymentOrBilling","isShippingStepFinished","handleCloseErrorModal","handleExpanded","handleUnhandledError","handleError","log","postError","handleEditStep","handleReady","isDefault","handleNewsletterSubscription","subscribed","handleSignOut","cartUrl","isPriceHiddenFromGuests","postSignedOut","setCustomerViewType","handleShippingNextStep","handleShippingSignIn","handleShippingCreateAccount","customerViewType","createAccountUrl","handleBeforeExit","handleWalletButtonClick","unsubscribeFromConsignments","removeEventListener","checkoutId","createEmbeddedMessenger","embeddedStylesheet","loadPaymentMethodByIds","subscribeToConsignments","all","params","include","providers","supportedProviders","configs","getPaymentMethods","errorFlashMessages","getFlashMessages","messenger","receiveStyles","styles","append","postFrameLoaded","contentId","postLoaded","hasMultiShippingEnabled","checkoutBillingSameAsShippingEnabled","defaultNewsletterSignupOption","errorModal","isCustomError","ErrorModal","onClose","isPending","promotions","renderStep","renderCartSummary","renderCustomerStep","renderShippingStep","renderBillingStep","renderPaymentStep","hasCartChanged","LazyContainer","loadingSkeleton","AddressFormSkeleton","cartHasChanged","navigateNextStep","onToggleMultiShipping","StaticBillingAddress","errorLogger","ChecklistSkeleton","onCartChangedError","onFinalize","onSubmitError","errors","statuses","submitOrderError","getSubmitOrderError","checkoutUserExperienceSettings","walletButtonsOnTop","floatingLabelEnabled","loginLink","createAccountLink","cartLink","displaySettings","hidePriceFromGuests","subscribeToConsignmentsSelector","subscriber","walletButtonsOnTopFlag","isLoadingCheckout","Checkout","createCheckoutService","locale","getLocale","shouldWarnMutation","createEmbeddedCheckoutStylesheet","createErrorLogger","sentry","sentryConfig","errorTypes","publicPath","sampleRate","sentrySampleRate","ErrorBoundary","logger","LocaleProvider","CheckoutProvider","AnalyticsProvider","createEmbeddedCheckoutMessenger","ContextComponent","CheckoutContext","mapToPropsOrFactory","OriginalComponent","InnerDecoratedComponent","DecoratedComponent","mapToProps","isMapToPropsFactory","mappedProps","mergedProps","displayName","captureStackTrace","stack","setDefaultValues","defaultError","defaultTitle","code","aria","labelledby","handleOnRequestClose","nativeEvent","renderFooter","renderHeader","renderBody","IconError","Small","shouldBeTranslatedAsHtml","isHtmlError","translationKey","renderErrorCode","shouldShowErrorCode","headers","errorCode","computeErrorCode","toUpperCase","setPrototypeOf","object","__proto__","ErrorLevelType","customConsole","console","tags","level","meta","info","Warning","warn","SeverityLevelEnum","FILENAME_PREFIX","handleBeforeSend","hint","exception","shouldReportExceptions","originalException","handleRewriteFrame","frame","filename","RegExp","consoleLogger","beforeSend","denyUrls","integrations","GlobalHandlers","onerror","onunhandledrejection","iteratee","scope","setTags","setLevel","mapToSentryLevel","setExtras","setFingerprint","INFO","WARNING","Debug","DEBUG","ERROR","exceptions","stacktrace","frames","startsWith","serviceConfig","customError","obj","call","isResolvableComponent","query","components","results","entries","resolveIds","resolverId","component","default","sort","a","b","EMPTY_ARRAY","freeze","lastPathName","pop","DEFAULT_OPTIONS","count","interval","resolve","amount","currency","toCustomerCurrency","getPasswordRequirementsFromConfig","minlength","allSlashes","toCSSRule","selector","mergedStyles","pickBy","kebabCase","parse","rules","secondaryText","secondaryHeading","hover","button","active","secondaryButton","select","radio","checklist","discountBanner","loadingBanner","orderSummary","embeddedCheckoutStyleParser","_parser","sheet","CSSStyleSheet","rule","insertRule","appendStylesheet","maxValue","minValue","strict","nullable","transform","originalValue","requiredErrorMessage","customFieldsObject","forIn","isDate","padMonth","padStart","getMonth","padDay","getDate","getFullYear","fieldId","toResolvableComponent","catch","hasProto","isGiftCertificatePayment","path","currentScript","src","configurePublicPath","scriptPath","substr","renderCheckout","configuredPublicPath","CheckoutApp","renderOrderConfirmation","OrderConfirmationApp","requestSender","create","put","response","renderPasswordInput","renderPasswordConfirmationInput","passwordLabelContent","passwordConfirmationLabelContent","confirmPassword","onSignUp","isSigningUp","customerCanBeCreated","Success","AccountCreationRequirementsError","AccountCreationFailedError","isDefaultOrderPayment","isStoreCreditPayment","gatewayPayment","detail","instructions","mapFromPayments","remaining","used","balance","purchaseDate","getStoreCreditAmount","total","mapToOrderSummarySubtotalsProps","baseAmount","discountAmount","isTaxIncluded","shippingCostBeforeDiscount","handlingCostTotal","giftWrappingCostTotal","coupons","taxes","fees","subtotalAmount","shippingAmount","giftWrappingAmount","storeCreditAmount","handlingAmount","giftCertificates","MandateTextComponent","mandateText","keys","PaymentsWithMandates","paymentsWithMandates","mandate","isPaymentWithMandate","OrderStatusMessage","orderNumber","supportEmail","supportPhoneNumber","hasDigitalItems","isDownloadable","handleClick","throttle","print","OrderSummary","OrderSummaryDrawer","handleErrorModalClose","handleSignUp","hasSignedUp","loadOrder","isLoadingOrder","paymentInstructions","orderEmail","storePhoneNumber","renderGuestSignUp","shouldShowPasswordForm","customerId","renderOrderSummary","renderErrorModal","shopperCurrency","headerLink","storeCurrency","orderAmount","OrderConfirmation","accountService","newsletter","PaypalCommerce","PaypalCommerceCreditCards","PayPalCommerceAcceleratedCheckout","Braintree","BraintreeAcceleratedCheckout","itemId","isNil","parentId","findLineItems","getLineItemsCount","quantity","availableShippingOptions","addedByPromotion","imageUrl","alt","transitTime","additionalDescription","ShopperCurrency","cost","AlertType","renderDefaultIcon","ButtonVariant","ButtonSize","getClassName","isFullWidth","Action","Large","InnerField","InnerFieldInput","hasError","getIn","prevForm","prevField","nextForm","nextField","nextProps","getTime","renderInnerField","Field","errorId","forwardRef","withDate","inputFormat","handleDateChange","dateValue","DynamicFormFieldType","dropdown","IconChevronDown","optionValue","CheckboxInput","isArray","calendarClassName","dateFormat","maxDate","minDate","placeholderText","popperClassName","selected","multiline","TextArea","onSelectedAll","onSelectedNone","handleSelectAllClick","handleSelectNoneClick","MultiCheckboxFormField","remove","handleSelectAll","checkedValues","difference","val","handleSelectNone","handleInputChange","FormFieldContainer","FormFieldError","renderProps","pick","FieldArray","secret","fieldLabel","maxLength","inputId","fieldInputId","isFloatingLabelSupportedFieldType","labelComponent","dynamicFormFieldType","number","telephone","helperLabel","rows","useRef","focusOnError","erroredFormField","preventScroll","offsetParent","scrollIntoView","behavior","block","inline","handleSubmitCapture","memoizeOne","setSubmitted","noValidate","onSubmitCapture","Consumer","isSubmitted","renderMessage","ErrorMessage","appearFocused","IconSize","Medium","filterError","fallback","Suspense","unmountContentWhenLoading","closeButtonLabel","additionalHeaderClassName","handleClose","ariaHideApp","bodyOpenClassName","base","afterOpen","beforeClose","closeTimeoutMS","overlayClassName","shouldCloseOnEsc","shouldCloseOnOverlayClick","queries","mobile","MOBILE_MAX_WIDTH","SMALL_SCREEN_MAX_WIDTH","element","declaration","propertyName","getPropertyValue","parseAnchor","div","innerHTML","anchor","anchorSiblings","outerHTML","getDerivedStateFromError","componentDidCatch","stripeLinkMinAmount","cartAmount","isStripeLinkMinAmount","pickProps","injectedProps","useLocale","languageService","getContextValue","createCurrencyService","inputDateFormat","unsubscribe","ADD_ATTR","translatedString","parsedString","FALLBACK_LOCALE","createLanguageService","fallbackLocale","fallbackTranslations","initializeLanguageService","defaultLocale","defaultTranslations","country","states","subdivisions","useCheckout","normalizeAddress","omit","addresses","paypalFastlaneAddress","bcAddress","isEqual","isEqualToPayPalFastlaneAddress","isPayPalFastlaneCustomer","paymentWithCustomCheckout","isPayPalFastlaneEnabled","paypalFastlaneCustomer","customerAuthenticationState","authenticationState","shouldShowPayPalFastlaneLabel","shouldShowPayPalFastlaneShippingForm","content","shouldShowChildren","FormContext","FormProvider","initialIsSubmitted","contextValue","isFunction"],"sourceRoot":""}