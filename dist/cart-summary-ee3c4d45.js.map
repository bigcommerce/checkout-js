{"version":3,"file":"cart-summary-ee3c4d45.js","mappings":"yNAqBA,MAoBA,GAAe,OAAa,IAA5B,CAhBS,I,IAAA,QAAEA,EAAO,oBAAEC,EAAmB,aAAEC,GAAY,EAAKC,GAAK,cAAtD,kDACL,MAAMC,EAAaF,EAAe,KAC9B,gBAAC,IAAQ,CACLD,oBAAqBA,EACrBI,IAAKL,IAIb,OAAO,OAAe,UAAf,CAA6B,OAAD,wBAC5BG,GAAK,CACRH,UACAE,eACAE,iB,8HC/BR,MAcA,EAd8E,EAAGE,eAC7E,MAAM,QAAEC,IAAY,SAEpB,OACI,0BAAQC,UAAU,eACd,sBAAIA,UAAW,IAAW,aAAc,qCACpC,CAAE,aAAcD,KAChB,gBAACE,EAAA,EAAgB,CAACC,GAAG,uBAExBJ,I,oECeb,MA8DA,EA9DyF,I,IAAA,cACrFK,EAAa,MACbC,EAAK,cACLC,EAAa,gBACbC,EAAe,WACfV,EAAU,oBACVW,EAAmB,UACnBC,EAAS,MACTC,GAAK,EACFC,GAA0B,cATwD,oHAWrF,MAAMC,GAAsB,IAAAC,SAAQ,KAAM,EAAAC,EAAA,GAAmBL,GAAY,CAACA,IACpEM,EAAsBX,GAAiBC,GAASA,EAAMW,OAAS,GAE/D,QAAEhB,IAAY,SAEpB,OACI,2BAASC,UAAU,sCAAqC,YAAW,QAC/D,gBAAC,EAAkB,KAAEJ,GAErB,gBAACoB,EAAA,EAAmB,KAChB,gBAACC,EAAA,EAAiB,CAACC,uBAAqB,EAACC,MAAOR,EAAqBZ,QAASA,KAGlF,gBAACqB,EAAA,EAAS,CAACC,OAAM,2BAEjB,gBAACL,EAAA,EAAmB,KAChB,gBAACM,EAAA,EAAqB,eAACnB,cAAeA,EAAeC,MAAOA,GAAWM,IACtEH,GAGL,gBAACS,EAAA,EAAmB,KAChB,gBAACO,EAAA,EAAiB,CACdC,YAAaf,EACbgB,oBAAqBnB,EAAgBoB,KACrCC,kBAAmBtB,EAAcqB,QAIxCZ,GAAuB,gBAACE,EAAA,EAAmB,KACxC,sBACIhB,UAAW,IAAW,uEAClB,CAAE,eAAgBD,IAAU,YACtB,YAEV,gBAACE,EAAA,EAAgB,CACbC,GAAG,0BAGTE,GAAS,IAAIwB,IAAI,CAACC,EAAKC,IACrB,gBAACC,EAAA,EAAiB,CACdC,OAAQH,EAAIG,OACZC,IAAKH,EACLI,MAAOL,EAAIM,KACXC,OAAO,kB","sources":["webpack://checkout/./packages/core/src/app/cart/CartSummary.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryHeader.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummary.tsx"],"sourcesContent":["import { Checkout, ShopperCurrency, StoreCurrency } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent } from 'react';\n\nimport { withCheckout } from '../checkout';\nimport OrderSummary from '../order/OrderSummary';\n\nimport EditLink from './EditLink';\nimport mapToCartSummaryProps from './mapToCartSummaryProps';\nimport { RedeemableProps } from './Redeemable';\nimport withRedeemable from './withRedeemable';\n\nexport type WithCheckoutCartSummaryProps = {\n    checkout: Checkout;\n    cartUrl: string;\n    storeCurrency: StoreCurrency;\n    shopperCurrency: ShopperCurrency;\n    storeCreditAmount?: number;\n    isBuyNowCart: boolean;\n    isShippingDiscountDisplayEnabled: boolean;\n} & RedeemableProps;\n\nconst CartSummary: FunctionComponent<\n    WithCheckoutCartSummaryProps & {\n        isMultiShippingMode: boolean;\n    }\n    > = ({ cartUrl, isMultiShippingMode, isBuyNowCart, ...props }) => {\n    const headerLink = isBuyNowCart ? null : (\n        <EditLink\n            isMultiShippingMode={isMultiShippingMode}\n            url={cartUrl}\n        />\n    );\n\n    return withRedeemable(OrderSummary)({\n        ...props,\n        cartUrl,\n        isBuyNowCart,\n        headerLink,\n    });\n};\n\nexport default withCheckout(mapToCartSummaryProps)(CartSummary);\n","import classNames from 'classnames';\nimport React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nconst OrderSummaryHeader: FunctionComponent<{ children?: React.ReactNode }> = ({ children }) => {\n    const { themeV2 } = useThemeContext();\n\n    return (\n        <header className=\"cart-header\">\n            <h3 className={classNames('cart-title', 'optimizedCheckout-headingSecondary',\n                { 'sub-header': themeV2 })}>\n                <TranslatedString id=\"cart.cart_heading\" />\n            </h3>\n            {children}\n        </header>\n    );\n}\n\nexport default OrderSummaryHeader;\n","import {\n    ExtensionRegion,\n    LineItemMap,\n    ShopperCurrency,\n    StoreCurrency,\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { FunctionComponent, ReactNode, useMemo } from 'react';\n\nimport { Extension } from '@bigcommerce/checkout/checkout-extension';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport OrderSummaryHeader from './OrderSummaryHeader';\nimport OrderSummaryItems from './OrderSummaryItems';\nimport OrderSummaryPrice from './OrderSummaryPrice';\nimport OrderSummarySection from './OrderSummarySection';\nimport OrderSummarySubtotals, { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\nimport OrderSummaryTotal from './OrderSummaryTotal';\nimport removeBundledItems from './removeBundledItems';\n\nexport interface OrderSummaryProps {\n    lineItems: LineItemMap;\n    total: number;\n    headerLink: ReactNode;\n    storeCurrency: StoreCurrency;\n    shopperCurrency: ShopperCurrency;\n    additionalLineItems?: ReactNode;\n}\n\nconst OrderSummary: FunctionComponent<OrderSummaryProps & OrderSummarySubtotalsProps> = ({\n    isTaxIncluded,\n    taxes,\n    storeCurrency,\n    shopperCurrency,\n    headerLink,\n    additionalLineItems,\n    lineItems,\n    total,\n    ...orderSummarySubtotalsProps\n}) => {\n    const nonBundledLineItems = useMemo(() => removeBundledItems(lineItems), [lineItems]);\n    const displayInclusiveTax = isTaxIncluded && taxes && taxes.length > 0;\n\n    const { themeV2 } = useThemeContext();\n\n    return (\n        <article className=\"cart optimizedCheckout-orderSummary\" data-test=\"cart\">\n            <OrderSummaryHeader>{headerLink}</OrderSummaryHeader>\n\n            <OrderSummarySection>\n                <OrderSummaryItems displayLineItemsCount items={nonBundledLineItems} themeV2={themeV2} />\n            </OrderSummarySection>\n\n            <Extension region={ExtensionRegion.SummaryLastItemAfter} />\n\n            <OrderSummarySection>\n                <OrderSummarySubtotals isTaxIncluded={isTaxIncluded} taxes={taxes} {...orderSummarySubtotalsProps} />\n                {additionalLineItems}\n            </OrderSummarySection>\n\n            <OrderSummarySection>\n                <OrderSummaryTotal\n                    orderAmount={total}\n                    shopperCurrencyCode={shopperCurrency.code}\n                    storeCurrencyCode={storeCurrency.code}\n                />\n            </OrderSummarySection>\n\n            {displayInclusiveTax && <OrderSummarySection>\n                <h5\n                    className={classNames('cart-taxItem cart-taxItem--subtotal optimizedCheckout-contentPrimary',\n                        { 'body-regular': themeV2 })}\n                    data-test=\"tax-text\"\n                >\n                    <TranslatedString\n                        id=\"tax.inclusive_label\"\n                    />\n                </h5>\n                {(taxes || []).map((tax, index) => (\n                    <OrderSummaryPrice\n                        amount={tax.amount}\n                        key={index}\n                        label={tax.name}\n                        testId=\"cart-taxes\"\n                    />\n                ))}\n            </OrderSummarySection>}\n        </article>\n    );\n};\n\nexport default OrderSummary;\n"],"names":["cartUrl","isMultiShippingMode","isBuyNowCart","props","headerLink","url","children","themeV2","className","TranslatedString","id","isTaxIncluded","taxes","storeCurrency","shopperCurrency","additionalLineItems","lineItems","total","orderSummarySubtotalsProps","nonBundledLineItems","useMemo","removeBundledItems","displayInclusiveTax","length","OrderSummarySection","OrderSummaryItems","displayLineItemsCount","items","Extension","region","OrderSummarySubtotals","OrderSummaryTotal","orderAmount","shopperCurrencyCode","code","storeCurrencyCode","map","tax","index","OrderSummaryPrice","amount","key","label","name","testId"],"sourceRoot":""}