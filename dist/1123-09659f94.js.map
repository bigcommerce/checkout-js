{"version":3,"file":"1123-09659f94.js","mappings":"8MAaA,QATA,SAAuBA,GACnB,MAAO,CACHC,GAAID,EAAKC,GACTC,SAAUF,EAAKE,SACfC,OAAQH,EAAKI,kBACbC,KAAML,EAAKK,KAEnB,ECRe,SAASC,EAAyBN,GAC7C,GAAKA,EAAKO,SAIV,OAAO,uBAAKC,IAAI,GAAE,YAAW,kBAAkBC,IAAKT,EAAKO,UAC7D,CCiBA,SAASG,EAA0BV,GAC/B,OAAKA,EAAKW,gBAOH,CACHC,OAAQ,qCACRC,QACI,qBAAGC,KAAMd,EAAKW,gBAAiBI,IAAI,sBAAsBC,OAAO,UAC5D,gBAACC,EAAA,EAAgB,CAAChB,GAAG,4BAVtB,CACHW,OAAQ,4BACRC,QAAS,gBAACI,EAAA,EAAgB,CAAChB,GAAG,2BAY1C,CAEA,QApCA,SAAwBD,GACpB,MAAO,CACHC,GAAID,EAAKC,GACTC,SAAUF,EAAKE,SACfC,OAAQH,EAAKkB,wBACbC,oBAAqBnB,EAAKoB,kBAC1Bf,KAAML,EAAKK,KACXgB,MAAOf,EAAyBN,GAChCsB,eAAgB,KACRtB,EAAKuB,SAAW,IAAIC,IAAKC,IAAW,CACpCb,OAAQ,2BACRC,QAAS,GAAGY,EAAOpB,QAAQoB,EAAOC,WAEtChB,EAA0BV,IAGtC,E,eCHA,QAdA,SAAgCA,GAC5B,MAAO,CACHC,GAAID,EAAKC,GACTC,SAAU,EACVC,OAAQH,EAAKG,OACbE,KAAML,EAAKK,KACXgB,MACI,wBAAMM,UAAU,+BAA8B,YAAW,8BACrD,gBAACC,EAAA,EAAmB,OAIpC,ECEA,QAhBA,SAAyB5B,GACrB,MAAO,CACHC,GAAID,EAAKC,GACTC,SAAUF,EAAKE,SACfC,OAAQH,EAAKkB,wBACbC,oBAAqBnB,EAAKoB,kBAC1Bf,KAAML,EAAKK,KACXgB,MAAOf,EAAyBN,GAChC6B,YAAa7B,EAAK8B,aAAe9B,EAAK8B,aAAazB,UAAO0B,EAC1DT,gBAAiBtB,EAAKuB,SAAW,IAAIC,IAAKC,IAAW,CACjDb,OAAQ,2BACRC,QAAS,GAAGY,EAAOpB,QAAQoB,EAAOC,WAG9C,E,qCCKA,MA8EA,GAAe,IAAAM,MA9EoD,EAC/D7B,SACAgB,sBACAE,QACAhB,OACAiB,iBACApB,WACA2B,kBAEA,MAAM,QAAEI,IAAY,SAEpB,OACI,uBAAKN,UAAU,UAAS,YAAW,aAC/B,0BAAQA,UAAU,iCAAiCN,GAEnD,uBAAKM,UAAU,+BACX,sBACIA,UAAW,IAAW,iDAClB,CAAE,cAAeM,IAAU,YACrB,2BAETA,EACM,wBAAMN,UAAU,aACd,GAAGzB,QAEN,GAAIA,OAETG,GAEJiB,GAAkBA,EAAeY,OAAS,GACvC,sBACIP,UAAW,IAAW,qDAAsD,CACxE,kBAAmBM,IACrB,YACQ,6BAETX,EAAeE,IAAI,CAACC,EAAQU,IACzB,sBAAIR,UAAU,iBAAgB,YAAYF,EAAOb,OAAQwB,IAAKD,GACzDV,EAAOZ,WAKvBgB,GACG,uBACIF,UAAU,yDAAwD,YACxD,iCAETE,IAKb,uBAAKF,UAAU,mCACV,IAAAU,UAASlB,IAAwBA,IAAwBhB,GACtD,uBAAKwB,UAAW,IAAW,gBAAiB,CACxC,cAAeM,IACjB,YAAY,0CACV,gBAACK,EAAA,EAAe,CAACnC,OAAQgB,KAIjC,uBACIQ,UAAW,IAAW,gBAAiB,mCAAoC,CACvE,iCACI,IAAAU,UAASlB,IAAwBA,IAAwBhB,EAC7D,cAAe8B,IAAW,IAAAI,UAASlB,IAAwBA,IAAwBhB,EACnF,eAAgB8B,IAAW,IAAAI,UAASlB,IAAwBA,IAAwBhB,IACtF,YACQ,2BAEV,gBAACmC,EAAA,EAAe,CAACnC,OAAQA,SCjE7C,MAAMoC,UAA0B,YAC5B,WAAAC,CAAYC,GACRC,MAAMD,GAiGF,KAAAE,aAA2B,KAC/B,MAAM,WAAEC,GAAeC,KAAKC,MAE5BD,KAAKE,SAAS,CAAEH,YAAaA,KAlG7BC,KAAKC,MAAQ,CACTF,YAAY,EACZI,eAAgBH,KAAKI,oBAE7B,CAEA,MAAAC,GACI,MAAM,sBAAEC,GAAwB,EAAI,MAAEC,EAAK,QAAEnB,GAAU,GAAUY,KAAKJ,OAChE,eAAEO,EAAc,WAAEJ,GAAeC,KAAKC,MAE5C,OACI,gCACKK,GAAyB,sBACtBxB,UAAW,IAAW,wDAClB,CAAE,cAAeM,IAAU,YACrB,oBAEV,gBAAChB,EAAA,EAAgB,CACboC,KAAM,CAAEC,OAAO,EAAAC,EAAA,GAAcH,IAC7BnD,GAAG,0BAIX,kCAAc,SAAS0B,UAAU,eAC5B,IACMyB,EAAMI,cACJC,QACAC,KAAM1D,GAASA,EAAK2D,WACpBnC,IAAI,MACN4B,EAAMQ,iBAAiBH,QAAQjC,IAAI,MACnC4B,EAAMS,aACJJ,QACAC,KAAM1D,GAASA,EAAK2D,WACpBnC,IAAI,OACL4B,EAAMU,aAAe,IAAItC,IAAI,IAEhCiC,MAAM,EAAGb,OAAab,EAAYiB,GAClCxB,IAAKuC,GACF,sBAAIpC,UAAU,8BAA8BS,IAAK2B,EAAiB9D,IAC9D,gBAAC,EAAgB,iBAAK8D,OAKrClB,KAAKmB,gBAGlB,CAEQ,iBAAAf,GACJ,OAAO,EAAAgB,EAAA,KAnE4B,EADb,CAqE1B,CAEQ,aAAAD,GACJ,MAAM,WAAEpB,GAAeC,KAAKC,MAE5B,KAAID,KAAKqB,oBAAsBrB,KAAKI,qBAIpC,OACI,uBAAKtB,UAAU,gBACX,0BACIA,UAAW,IAAW,yEAClB,CAAE,kBAAmBkB,KAAKJ,MAAMR,UACpCkC,QAAStB,KAAKF,aACdyB,KAAK,UAEJxB,EACG,gCACI,gBAAC3B,EAAA,EAAgB,CAAChB,GAAG,yBACrB,gBAACoE,EAAA,EAAa,OAGlB,gCACI,gBAACpD,EAAA,EAAgB,CAAChB,GAAG,wBACrB,gBAACqE,EAAA,EAAe,QAMxC,CAEQ,gBAAAJ,GACJ,MAAM,MAAEd,GAAUP,KAAKJ,MAEvB,OACKW,EAAMU,aAAe,IAAI5B,OAC1BkB,EAAMI,cAActB,OACpBkB,EAAMS,aAAa3B,OACnBkB,EAAMQ,iBAAiB1B,MAE/B,EASJ,S,iBCtIe,SAASqC,EAAmBC,GACvC,OAAO,OAAP,wBACOA,GAAS,CACZhB,cAAegB,EAAUhB,cAAciB,OAAQzE,GAAkC,iBAAlBA,EAAK0E,UACpEb,aAAcW,EAAUX,aAAaY,OAAQzE,GAAkC,iBAAlBA,EAAK0E,WAE1E,C,mGCIA,MA2CA,GAAe,OA3C0E,EACrFC,sBACAC,oBACAC,cACAC,eAEA,MAAMC,EAAuBJ,IAAwBC,EAC/CI,EACF,gCACKD,EACG,gBAAC,IAAgB,CAAC9E,GAAG,8BAErB,gBAAC,IAAgB,CAACA,GAAG,oBAExB,KAAK0E,MAId,OACI,gCACI,gBAAC,IAAiB,CACdxE,OAAQ0E,EACRlD,UAAU,wBACVsD,cAAY,EACZD,MAAOA,EACPE,YAAaH,EAAuB,SAAMhD,EAC1CnB,OAAO,eAEVmE,GAAwBD,GACrB,qBAAGnD,UAAU,4BAA2B,YAAW,8BAC/C,gBAAC,IAAgB,CACb0B,KAAM,CACF8B,MAAOL,EAASM,gBAAgBP,GAChCQ,KAAMT,GAEV3E,GAAG,+B,kDC3C3B,MAMA,GAAe,E,SAAA,GAN4B,IACvC,uBAAKqF,OAAO,KAAKC,QAAQ,YAAYC,MAAM,KAAKC,MAAM,8BAClD,wBAAMC,EAAE,kD,kDCJhB,MAMA,EAN+C,IAC3C,uBAAKJ,OAAO,KAAKC,QAAQ,YAAYC,MAAM,KAAKC,MAAM,8BAClD,wBAAMC,EAAE,0a,kDCFhB,IAAIC,EAEW,SAAS1B,IAGpB,OAFA0B,EAAQC,OAAOC,WAAW,eAAe,UAElCF,EAAMG,OACjB,C,6DCNe,SAASC,EAAWC,GACjC,OAAOC,OAAOC,OAAOF,EAAK,sBAC5B,C,mECYA,MA0CA,GAAe,IAAAhE,MA1C6D,I,IAAA,KACxEqD,EAAI,UACJc,EAAS,OACThG,EAAM,UACNiG,GAAS,EACNC,GAAI,cALiE,2CAOxE,MAAM,QAAEpE,IAAY,SAEpB,OACI,gBAACqE,EAAA,EAAiB,iBACVD,EACCD,GAAa,CACdG,kBAAmB,IAAMlB,GAAQe,EAAUf,GAC3CmB,YAAa,gBAACvF,EAAA,EAAgB,CAAChB,GAAG,8BACpC,CACFE,QAAS,GAAKA,GAAU,OAErBgG,GAAaA,EAAY,GACxB,wBACIxE,UAAU,4DAA2D,YAC3D,wBAEV,gBAACV,EAAA,EAAgB,CAAChB,GAAG,wBACpB,KACD,gBAACqC,EAAA,EAAe,CAACnC,OAAQgG,KAIhCd,GACG,wBACI1D,UAAW,IAAW,4DAClB,CAAE,kBAAmBM,IAAU,YACzB,mBAEToD,MCoFrB,GAAe,IAAArD,MA7G8D,EACzEyE,iBACAC,gBACA9C,mBACA+C,QACAC,OACAC,qBACAC,iBACAC,+BACAC,iBACAC,iBACAC,oBACAC,UACAC,2BACAC,qBAGI,gCACI,gBAACf,EAAA,EAAiB,CACdnG,OAAQ6G,EACRrF,UAAU,2BACVqD,MAAO,gBAAC/D,EAAA,EAAgB,CAAChB,GAAG,uBAC5BW,OAAO,mBAGTuG,GAAW,IAAI3F,IAAI,CAAC8F,EAAQnF,IAC1B,gBAAC,EAAoB,CACjBhC,OAAQmH,EAAOC,iBACflC,KAAMiC,EAAOjC,KACbjD,IAAKD,EACL6C,MAAOsC,EAAOE,YACdpB,UAAWiB,EACXzG,OAAO,mBAIZ6F,GACC,gBAAC,EAAoB,CACjBtG,OAAQsG,EACRzB,MAAO,gBAAC/D,EAAA,EAAgB,CAAChB,GAAG,uBAC5BW,OAAO,mBAIbgD,GAAoB,IAAIpC,IAAI,CAACiG,EAAiBtF,IAC5C,gBAAC,EAAoB,CACjBhC,OAAQsH,EAAgBC,KACxBrC,KAAMoC,EAAgBpC,KACtBjD,IAAKD,EACL6C,MAAO,gBAAC/D,EAAA,EAAgB,CAAChB,GAAG,+BAC5BmG,UAAWgB,EACXjB,UAAWsB,EAAgBtB,UAC3BvF,OAAO,6BAIZiG,GACC,gBAACP,EAAA,EAAiB,CACdnG,OAAQ0G,EACR7B,MAAO,gBAAC/D,EAAA,EAAgB,CAAChB,GAAG,4BAC5BW,OAAO,uBAIf,gBAAC0F,EAAA,EAAiB,CACdnG,OAAQ2G,EACRa,qBAAsBZ,EACtB/B,MAAO,gBAAC/D,EAAA,EAAgB,CAAChB,GAAG,uBAC5BW,OAAO,gBACPgH,UAAW,gBAAC3G,EAAA,EAAgB,CAAChB,GAAG,uBAGjCgH,GACC,gBAACX,EAAA,EAAiB,CACdnG,OAAQ8G,EACRjC,MAAO,gBAAC/D,EAAA,EAAgB,CAAChB,GAAG,uBAC5BW,OAAO,kBAIdgG,aAAI,EAAJA,EAAMpF,IAAI,CAACwE,EAAK7D,IACb,gBAACmE,EAAA,EAAiB,CACdnG,OAAQ6F,EAAI6B,KACZzF,IAAKD,EACL6C,MAAOe,EAAWC,GAAOA,EAAI8B,oBAAsB9B,EAAIwB,YACvD5G,OAAO,gBAIb8F,IAAkBC,GAAS,IAAInF,IAAI,CAACuG,EAAK5F,IACvC,gBAACmE,EAAA,EAAiB,CACdnG,OAAQ4H,EAAI5H,OACZiC,IAAKD,EACL6C,MAAO+C,EAAI1H,KACXO,OAAO,kBAIZsG,GACC,gBAAC,EAAoB,CACjB/G,OAAQ+G,EACRlC,MAAO,gBAAC/D,EAAA,EAAgB,CAAChB,GAAG,2BAC5BW,OAAO,uB,kDC9H3B,MAMA,EAN+E,EAAGoH,cAC9E,2BAASrG,UAAU,2DACdqG,E,4HCwCT,SAASC,EAAcC,GACnB,MAA+B,iBAAjBA,CAClB,CAEA,MAgIA,EAhIsD,EAClD/H,SACAwH,uBACAnB,cACAD,oBACAyB,WACArG,YACAwG,eACAnD,QACAE,cACAtE,SACAgH,YACA3C,gBAAe,MAEf,MAAQmD,EAAWC,IAAiB,IAAAC,WAAkB,IAC9CC,EAAgBC,IAAsB,IAAAF,UAA2CnI,IAErFsI,eACIC,UAAU,kBAAEC,MAEhB,UAEE,QAAE1G,IAAY,SACdiG,EAzCV,SAAyB/H,EAAwByH,GAG7C,OAAI,MAAOzH,EAFa,KAMpByH,GAAwB,IAAXzH,EACNyH,EAGJzH,CACX,CA6ByByI,CAAgBzI,EAAQyH,GACvCiB,EAAmBF,KAEzB,IAAAG,WAAU,KACNT,EAAalI,IAAWoI,GACxBC,EAAkBrI,IACnB,CAAEA,IAEL,MAAM4I,GAAqE,IAAAC,aAAY,CAACC,EAAMC,KAC1FD,EAAKE,iBAAiB,eAAgB,EAAGnI,aACjCA,IAAWiI,IACXZ,GAAa,GACba,QAGT,CAAEb,IAUL,OACI,mCAAgBzH,GACZ,gBAAC,IAAa,CACVwI,eAAgBL,EAChBM,WAAW,kBACXC,GAAIlB,EACJmB,QAAS,CAAC,GAEV,mCACc,SACV5H,UAAW,IACP,iBACA,mCACAA,IAGJ,wBAAMA,UAAW,IAAW,uBACxB,CACI,eAAgBM,IAAYgD,EAC5B,aAAchD,GAAWgD,KAG7B,oCAAgB,oBACXD,EACA,MAEJmD,GACG,wBAAMxG,UAAU,+BACX,IAAIwG,OAGZ5B,GAAqBC,GAClB,wBAAM7E,UAAU,uBACZ,qBACIA,UAAW,IAAW,CAClB,iBAAkBkH,EAClB,WAAY5G,IAAYgD,IAC1B,YACQ,sBACVnE,KAAK,IACLqD,SAAS,OAhDb,MACpB0E,GAAqBtC,GAIzBA,OA6C6BC,KAMjB,wBAAM7E,UAAW,IAAW,uBACxB,CACI,cAAeM,IAAYgD,EAC3B,OAAUhD,GAAWgD,KAGxBgD,EAAcN,IAAyBA,IAAyBxH,GAC7D,wBAAMwB,UAAU,+BACZ,gBAAC,IAAe,CAACxB,OAAQwH,KAIjC,oCAAgB,oBACXM,EAAcC,GACX,gBAAC,IAAe,CAAC/H,OAAQ+H,IACzB,GAKPhD,GACG,mCAAe,gCAAgCA,IAItD8C,K,kBCvKN,SAASzE,GAAc,cAClCC,EAAa,aACbK,EAAY,iBACZD,EAAgB,YAChBE,IAOA,MALwB,IAAIN,KAAkBK,KAAkBC,GAAe,IAAK0F,OAChF,CAACrE,EAAOnF,IAAUmF,EAASnF,EAAKE,SAChC,GAGqB0D,EAAiB1B,MAC9C,C,kECVA,MAMA,GAAe,E,SAAA,GAN0B,IACrC,uBAAKoD,OAAO,KAAKC,QAAQ,YAAYC,MAAM,KAAKC,MAAM,8BAClD,wBAAMC,EAAE,oD","sources":["webpack://checkout/./packages/core/src/app/order/mapFromCustom.tsx","webpack://checkout/./packages/core/src/app/order/getOrderSummaryItemImage.tsx","webpack://checkout/./packages/core/src/app/order/mapFromDigital.tsx","webpack://checkout/./packages/core/src/app/order/mapFromGiftCertificate.tsx","webpack://checkout/./packages/core/src/app/order/mapFromPhysical.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryItem.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryItems.tsx","webpack://checkout/./packages/core/src/app/order/removeBundledItems.ts","webpack://checkout/./packages/core/src/app/order/OrderSummaryTotal.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconChevronDown.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconGiftCertificate.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/isSmallScreen.ts","webpack://checkout/./packages/core/src/app/order/isOrderFee.ts","webpack://checkout/./packages/core/src/app/order/OrderSummaryDiscount.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummarySubtotals.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummarySection.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryPrice.tsx","webpack://checkout/./packages/core/src/app/order/getItemsCount.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconChevronUp.tsx"],"sourcesContent":["import { CustomItem } from '@bigcommerce/checkout-sdk';\n\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\n\nfunction mapFromCustom(item: CustomItem): OrderSummaryItemProps {\n    return {\n        id: item.id,\n        quantity: item.quantity,\n        amount: item.extendedListPrice,\n        name: item.name,\n    };\n}\n\nexport default mapFromCustom;\n","import { DigitalItem, PhysicalItem } from '@bigcommerce/checkout-sdk';\nimport React, { ReactNode } from 'react';\n\nexport default function getOrderSummaryItemImage(item: DigitalItem | PhysicalItem): ReactNode {\n    if (!item.imageUrl) {\n        return;\n    }\n\n    return <img alt=\"\" data-test=\"cart-item-image\" src={item.imageUrl} />;\n}\n","import { DigitalItem } from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport getOrderSummaryItemImage from './getOrderSummaryItemImage';\nimport { OrderSummaryItemOption, OrderSummaryItemProps } from './OrderSummaryItem';\n\nfunction mapFromDigital(item: DigitalItem): OrderSummaryItemProps {\n    return {\n        id: item.id,\n        quantity: item.quantity,\n        amount: item.extendedComparisonPrice,\n        amountAfterDiscount: item.extendedSalePrice,\n        name: item.name,\n        image: getOrderSummaryItemImage(item),\n        productOptions: [\n            ...(item.options || []).map((option) => ({\n                testId: 'cart-item-product-option',\n                content: `${option.name} ${option.value}`,\n            })),\n            getDigitalItemDescription(item),\n        ],\n    };\n}\n\nfunction getDigitalItemDescription(item: DigitalItem): OrderSummaryItemOption {\n    if (!item.downloadPageUrl) {\n        return {\n            testId: 'cart-item-digital-product',\n            content: <TranslatedString id=\"cart.digital_item_text\" />,\n        };\n    }\n\n    return {\n        testId: 'cart-item-digital-product-download',\n        content: (\n            <a href={item.downloadPageUrl} rel=\"noopener noreferrer\" target=\"_blank\">\n                <TranslatedString id=\"cart.downloads_action\" />\n            </a>\n        ),\n    };\n}\n\nexport default mapFromDigital;\n","import { GiftCertificateItem } from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { IconGiftCertificate } from '../ui/icon';\n\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\n\nfunction mapFromGiftCertificate(item: GiftCertificateItem): OrderSummaryItemProps {\n    return {\n        id: item.id,\n        quantity: 1,\n        amount: item.amount,\n        name: item.name,\n        image: (\n            <span className=\"productImage-giftCertificate\" data-test=\"cart-item-gift-certificate\">\n                <IconGiftCertificate />\n            </span>\n        ),\n    };\n}\n\nexport default mapFromGiftCertificate;\n","import { PhysicalItem } from '@bigcommerce/checkout-sdk';\n\nimport getOrderSummaryItemImage from './getOrderSummaryItemImage';\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\n\nfunction mapFromPhysical(item: PhysicalItem): OrderSummaryItemProps {\n    return {\n        id: item.id,\n        quantity: item.quantity,\n        amount: item.extendedComparisonPrice,\n        amountAfterDiscount: item.extendedSalePrice,\n        name: item.name,\n        image: getOrderSummaryItemImage(item),\n        description: item.giftWrapping ? item.giftWrapping.name : undefined,\n        productOptions: (item.options || []).map((option) => ({\n            testId: 'cart-item-product-option',\n            content: `${option.name} ${option.value}`,\n        })),\n    };\n}\n\nexport default mapFromPhysical;\n","import classNames from 'classnames';\nimport { isNumber } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { ShopperCurrency } from '../currency';\n\nexport interface OrderSummaryItemProps {\n    id: string | number;\n    amount: number;\n    quantity: number;\n    name: string;\n    amountAfterDiscount?: number;\n    image?: ReactNode;\n    description?: ReactNode;\n    productOptions?: OrderSummaryItemOption[];\n}\n\nexport interface OrderSummaryItemOption {\n    testId: string;\n    content: ReactNode;\n}\n\nconst OrderSummaryItem: FunctionComponent<OrderSummaryItemProps> = ({\n    amount,\n    amountAfterDiscount,\n    image,\n    name,\n    productOptions,\n    quantity,\n    description,\n}) => {\n    const { themeV2 } = useThemeContext();\n\n    return (\n        <div className=\"product\" data-test=\"cart-item\">\n            <figure className=\"product-column product-figure\">{image}</figure>\n\n            <div className=\"product-column product-body\">\n                <h4\n                    className={classNames('product-title optimizedCheckout-contentPrimary',\n                        { 'body-medium': themeV2 })}\n                    data-test=\"cart-item-product-title\"\n                >\n                    {themeV2\n                        ? (<span className=\"body-bold\">\n                            {`${quantity} x `}\n                        </span>)\n                        : (`${quantity} x `)\n                    }\n                    {name}\n                </h4>\n                {productOptions && productOptions.length > 0 && (\n                    <ul\n                        className={classNames('product-options optimizedCheckout-contentSecondary', {\n                            'sub-text-medium': themeV2,\n                        })}\n                        data-test=\"cart-item-product-options\"\n                    >\n                        {productOptions.map((option, index) => (\n                            <li className=\"product-option\" data-test={option.testId} key={index}>\n                                {option.content}\n                            </li>\n                        ))}\n                    </ul>\n                )}\n                {description && (\n                    <div\n                        className=\"product-description optimizedCheckout-contentSecondary\"\n                        data-test=\"cart-item-product-description\"\n                    >\n                        {description}\n                    </div>\n                )}\n            </div>\n\n            <div className=\"product-column product-actions\">\n                {isNumber(amountAfterDiscount) && amountAfterDiscount !== amount && (\n                    <div className={classNames('product-price', {\n                        'body-medium': themeV2,\n                    })} data-test=\"cart-item-product-price--afterDiscount\">\n                        <ShopperCurrency amount={amountAfterDiscount} />\n                    </div>\n                )}\n\n                <div\n                    className={classNames('product-price', 'optimizedCheckout-contentPrimary', {\n                        'product-price--beforeDiscount':\n                            isNumber(amountAfterDiscount) && amountAfterDiscount !== amount,\n                        'body-medium': themeV2 && isNumber(amountAfterDiscount) && amountAfterDiscount === amount,\n                        'body-regular': themeV2 && isNumber(amountAfterDiscount) && amountAfterDiscount !== amount,\n                    })}\n                    data-test=\"cart-item-product-price\"\n                >\n                    <ShopperCurrency amount={amount} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default memo(OrderSummaryItem);\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { ReactNode } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { IconChevronDown, IconChevronUp } from '../ui/icon';\nimport { isSmallScreen } from '../ui/responsive';\n\nimport getItemsCount from './getItemsCount';\nimport mapFromCustom from './mapFromCustom';\nimport mapFromDigital from './mapFromDigital';\nimport mapFromGiftCertificate from './mapFromGiftCertificate';\nimport mapFromPhysical from './mapFromPhysical';\nimport OrderSummaryItem from './OrderSummaryItem';\n\nconst COLLAPSED_ITEMS_LIMIT = 4;\nconst COLLAPSED_ITEMS_LIMIT_SMALL_SCREEN = 3;\n\nexport interface OrderSummaryItemsProps {\n    displayLineItemsCount: boolean;\n    items: LineItemMap;\n    themeV2?: boolean;\n}\n\ninterface OrderSummaryItemsState {\n    isExpanded: boolean;\n    collapsedLimit: number;\n}\n\nclass OrderSummaryItems extends React.Component<OrderSummaryItemsProps, OrderSummaryItemsState> {\n    constructor(props: OrderSummaryItemsProps) {\n        super(props);\n\n        this.state = {\n            isExpanded: false,\n            collapsedLimit: this.getCollapsedLimit(),\n        };\n    }\n\n    render(): ReactNode {\n        const { displayLineItemsCount = true, items, themeV2 = false } = this.props;\n        const { collapsedLimit, isExpanded } = this.state;\n\n        return (\n            <>\n                {displayLineItemsCount && <h3\n                    className={classNames('cart-section-heading optimizedCheckout-contentPrimary',\n                        { 'body-medium': themeV2 })}\n                    data-test=\"cart-count-total\"\n                >\n                    <TranslatedString\n                        data={{ count: getItemsCount(items) }}\n                        id=\"cart.item_count_text\"\n                    />\n                </h3>}\n\n                <ul aria-live=\"polite\" className=\"productList\">\n                    {[\n                        ...items.physicalItems\n                            .slice()\n                            .sort((item) => item.variantId)\n                            .map(mapFromPhysical),\n                        ...items.giftCertificates.slice().map(mapFromGiftCertificate),\n                        ...items.digitalItems\n                            .slice()\n                            .sort((item) => item.variantId)\n                            .map(mapFromDigital),\n                        ...(items.customItems || []).map(mapFromCustom),\n                    ]\n                        .slice(0, isExpanded ? undefined : collapsedLimit)\n                        .map((summaryItemProps) => (\n                            <li className=\"productList-item is-visible\" key={summaryItemProps.id}>\n                                <OrderSummaryItem {...summaryItemProps} />\n                            </li>\n                        ))}\n                </ul>\n\n                {this.renderActions()}\n            </>\n        );\n    }\n\n    private getCollapsedLimit(): number {\n        return isSmallScreen() ? COLLAPSED_ITEMS_LIMIT_SMALL_SCREEN : COLLAPSED_ITEMS_LIMIT;\n    }\n\n    private renderActions(): ReactNode {\n        const { isExpanded } = this.state;\n\n        if (this.getLineItemCount() <= this.getCollapsedLimit()) {\n            return;\n        }\n\n        return (\n            <div className=\"cart-actions\">\n                <button\n                    className={classNames('button button--tertiary button--tiny optimizedCheckout-buttonSecondary',\n                        { 'sub-text-medium': this.props.themeV2 })}\n                    onClick={this.handleToggle}\n                    type=\"button\"\n                >\n                    {isExpanded ? (\n                        <>\n                            <TranslatedString id=\"cart.see_less_action\" />\n                            <IconChevronUp />\n                        </>\n                    ) : (\n                        <>\n                            <TranslatedString id=\"cart.see_all_action\" />\n                            <IconChevronDown />\n                        </>\n                    )}\n                </button>\n            </div>\n        );\n    }\n\n    private getLineItemCount(): number {\n        const { items } = this.props;\n\n        return (\n            (items.customItems || []).length +\n            items.physicalItems.length +\n            items.digitalItems.length +\n            items.giftCertificates.length\n        );\n    }\n\n    private handleToggle: () => void = () => {\n        const { isExpanded } = this.state;\n\n        this.setState({ isExpanded: !isExpanded });\n    };\n}\n\nexport default OrderSummaryItems;\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\n\nexport default function removeBundledItems(lineItems: LineItemMap): LineItemMap {\n    return {\n        ...lineItems,\n        physicalItems: lineItems.physicalItems.filter((item) => typeof item.parentId !== 'string'),\n        digitalItems: lineItems.digitalItems.filter((item) => typeof item.parentId !== 'string'),\n    };\n}\n","import React, { FunctionComponent } from 'react';\n\nimport { TranslatedString, withCurrency, WithCurrencyProps } from '@bigcommerce/checkout/locale';\n\nimport OrderSummaryPrice from './OrderSummaryPrice';\n\nexport interface OrderSummaryTotalProps {\n    orderAmount: number;\n    shopperCurrencyCode: string;\n    storeCurrencyCode: string;\n}\n\nconst OrderSummaryTotal: FunctionComponent<OrderSummaryTotalProps & WithCurrencyProps> = ({\n    shopperCurrencyCode,\n    storeCurrencyCode,\n    orderAmount,\n    currency,\n}) => {\n    const hasDifferentCurrency = shopperCurrencyCode !== storeCurrencyCode;\n    const label = (\n        <>\n            {hasDifferentCurrency ? (\n                <TranslatedString id=\"cart.estimated_total_text\" />\n            ) : (\n                <TranslatedString id=\"cart.total_text\" />\n            )}\n            {` (${shopperCurrencyCode})`}\n        </>\n    );\n\n    return (\n        <>\n            <OrderSummaryPrice\n                amount={orderAmount}\n                className=\"cart-priceItem--total\"\n                isOrderTotal\n                label={label}\n                superscript={hasDifferentCurrency ? '*' : undefined}\n                testId=\"cart-total\"\n            />\n            {hasDifferentCurrency && currency && (\n                <p className=\"cart-priceItem--totalNote\" data-test=\"cart-price-item-total-note\">\n                    <TranslatedString\n                        data={{\n                            total: currency.toStoreCurrency(orderAmount),\n                            code: storeCurrencyCode,\n                        }}\n                        id=\"cart.billed_amount_text\"\n                    />\n                </p>\n            )}\n        </>\n    );\n};\n\nexport default withCurrency(OrderSummaryTotal);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconChevronDown: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconChevronDown);\n","import React, { FunctionComponent } from 'react';\n\nconst IconGiftCertificate: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M20 6h-2.18c.11-.31.18-.65.18-1a2.996 2.996 0 0 0-5.5-1.65l-.5.67-.5-.68C10.96 2.54 10.05 2 9 2 7.34 2 6 3.34 6 5c0 .35.07.69.18 1H4c-1.11 0-1.99.89-1.99 2L2 19c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-5-2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM9 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm11 15H4v-2h16v2zm0-5H4V8h5.08L7 10.83 8.62 12 11 8.76l1-1.36 1 1.36L15.38 12 17 10.83 14.92 8H20v6z\" />\n    </svg>\n);\n\nexport default IconGiftCertificate;\n","import { SMALL_SCREEN_MAX_WIDTH } from './breakpoints';\n\nlet query: MediaQueryList;\n\nexport default function isSmallScreen() {\n    query = window.matchMedia(`(max-width: ${SMALL_SCREEN_MAX_WIDTH}px)`);\n\n    return query.matches;\n}\n","import { Fee, OrderFee } from \"@bigcommerce/checkout-sdk\";\n\nexport default function isOrderFee(fee: OrderFee | Fee): fee is OrderFee {\n  return Object.hasOwn(fee, 'customerDisplayName');\n}\n","import classNames from 'classnames';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { ShopperCurrency } from '../currency';\n\nimport OrderSummaryPrice, { OrderSummaryPriceProps } from './OrderSummaryPrice';\n\nexport interface OrderSummaryDiscountProps extends OrderSummaryPriceProps {\n    remaining?: number;\n    code?: string;\n    onRemoved?(code: string): void;\n}\n\nconst OrderSummaryDiscount: FunctionComponent<OrderSummaryDiscountProps> = ({\n    code,\n    remaining,\n    amount,\n    onRemoved,\n    ...rest\n}) => {\n    const { themeV2 } = useThemeContext();\n\n    return (\n        <OrderSummaryPrice\n            {...rest}\n            {...(onRemoved && {\n                onActionTriggered: () => code && onRemoved(code),\n                actionLabel: <TranslatedString id=\"redeemable.remove_action\" />,\n            })}\n            amount={-1 * (amount || 0)}\n        >\n            {!!remaining && remaining > 0 && (\n                <span\n                    className=\"cart-priceItem-postFix optimizedCheckout-contentSecondary\"\n                    data-test=\"cart-price-remaining\"\n                >\n                    <TranslatedString id=\"cart.remaining_text\" />\n                    {': '}\n                    <ShopperCurrency amount={remaining} />\n                </span>\n            )}\n\n            {code && (\n                <span\n                    className={classNames('cart-priceItem-postFix optimizedCheckout-contentSecondary',\n                        { 'sub-text-medium': themeV2 })}\n                    data-test=\"cart-price-code\"\n                >\n                    {code}\n                </span>\n            )}\n        </OrderSummaryPrice>\n    );\n}\n\nexport default memo(OrderSummaryDiscount);\n","import { Coupon, Fee, GiftCertificate, OrderFee, Tax } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport isOrderFee from \"./isOrderFee\";\nimport OrderSummaryDiscount from './OrderSummaryDiscount';\nimport OrderSummaryPrice from './OrderSummaryPrice';\n\nexport interface OrderSummarySubtotalsProps {\n    coupons: Coupon[];\n    giftCertificates?: GiftCertificate[];\n    discountAmount?: number;\n    isTaxIncluded?: boolean;\n    taxes?: Tax[];\n    fees?: Fee[] | OrderFee[];\n    giftWrappingAmount?: number;\n    shippingAmount?: number;\n    shippingAmountBeforeDiscount?: number;\n    handlingAmount?: number;\n    storeCreditAmount?: number;\n    subtotalAmount: number;\n    onRemovedGiftCertificate?(code: string): void;\n    onRemovedCoupon?(code: string): void;\n}\n\nconst OrderSummarySubtotals: FunctionComponent<OrderSummarySubtotalsProps> = ({\n    discountAmount,\n    isTaxIncluded,\n    giftCertificates,\n    taxes,\n    fees,\n    giftWrappingAmount,\n    shippingAmount,\n    shippingAmountBeforeDiscount,\n    subtotalAmount,\n    handlingAmount,\n    storeCreditAmount,\n    coupons,\n    onRemovedGiftCertificate,\n    onRemovedCoupon,\n}) => {\n    return (\n        <>\n            <OrderSummaryPrice\n                amount={subtotalAmount}\n                className=\"cart-priceItem--subtotal\"\n                label={<TranslatedString id=\"cart.subtotal_text\" />}\n                testId=\"cart-subtotal\"\n            />\n\n            {(coupons || []).map((coupon, index) => (\n                <OrderSummaryDiscount\n                    amount={coupon.discountedAmount}\n                    code={coupon.code}\n                    key={index}\n                    label={coupon.displayName}\n                    onRemoved={onRemovedCoupon}\n                    testId=\"cart-coupon\"\n                />\n            ))}\n\n            {!!discountAmount && (\n                <OrderSummaryDiscount\n                    amount={discountAmount}\n                    label={<TranslatedString id=\"cart.discount_text\" />}\n                    testId=\"cart-discount\"\n                />\n            )}\n\n            {(giftCertificates || []).map((giftCertificate, index) => (\n                <OrderSummaryDiscount\n                    amount={giftCertificate.used}\n                    code={giftCertificate.code}\n                    key={index}\n                    label={<TranslatedString id=\"cart.gift_certificate_text\" />}\n                    onRemoved={onRemovedGiftCertificate}\n                    remaining={giftCertificate.remaining}\n                    testId=\"cart-gift-certificate\"\n                />\n            ))}\n\n            {!!giftWrappingAmount && (\n                <OrderSummaryPrice\n                    amount={giftWrappingAmount}\n                    label={<TranslatedString id=\"cart.gift_wrapping_text\" />}\n                    testId=\"cart-gift-wrapping\"\n                />\n            )}\n\n            <OrderSummaryPrice\n                amount={shippingAmount}\n                amountBeforeDiscount={shippingAmountBeforeDiscount}\n                label={<TranslatedString id=\"cart.shipping_text\" />}\n                testId=\"cart-shipping\"\n                zeroLabel={<TranslatedString id=\"cart.free_text\" />}\n            />\n\n            {!!handlingAmount && (\n                <OrderSummaryPrice\n                    amount={handlingAmount}\n                    label={<TranslatedString id=\"cart.handling_text\" />}\n                    testId=\"cart-handling\"\n                />\n            )}\n\n            {fees?.map((fee, index) => (\n                <OrderSummaryPrice\n                    amount={fee.cost}\n                    key={index}\n                    label={isOrderFee(fee) ? fee.customerDisplayName : fee.displayName}\n                    testId=\"cart-fees\"\n                />\n            ))}\n\n            {!isTaxIncluded && (taxes || []).map((tax, index) => (\n                <OrderSummaryPrice\n                    amount={tax.amount}\n                    key={index}\n                    label={tax.name}\n                    testId=\"cart-taxes\"\n                />\n            ))}\n\n            {!!storeCreditAmount && (\n                <OrderSummaryDiscount\n                    amount={storeCreditAmount}\n                    label={<TranslatedString id=\"cart.store_credit_text\" />}\n                    testId=\"cart-store-credit\"\n                />\n            )}\n        </>\n    );\n};\n\nexport default memo(OrderSummarySubtotals);\n","import React, { FunctionComponent } from 'react';\n\nconst OrderSummarySection: FunctionComponent<{ children?: React.ReactNode }> = ({ children }) => (\n    <section className=\"cart-section optimizedCheckout-orderSummary-cartSection\">\n        {children}\n    </section>\n);\n\nexport default OrderSummarySection;\n","import classNames from 'classnames';\nimport React, { FC, ReactNode, useCallback, useEffect, useState } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { ShopperCurrency } from '../currency';\n\nexport interface OrderSummaryPriceProps {\n    children?: ReactNode;\n    label: ReactNode;\n    amount?: number | null;\n    amountBeforeDiscount?: number;\n    zeroLabel?: ReactNode;\n    className?: string;\n    testId?: string;\n    currencyCode?: string;\n    superscript?: string;\n    actionLabel?: ReactNode;\n    onActionTriggered?(): void;\n    isOrderTotal?: boolean;\n}\n\nexport interface OrderSummaryPriceState {\n    highlight: boolean;\n    previousAmount?: number;\n}\n\nfunction getDisplayValue(amount?: number | null, zeroLabel?: ReactNode): ReactNode | number {\n    const notYetSetSymbol = '--';\n\n    if (typeof amount === 'undefined' || amount === null) {\n        return notYetSetSymbol;\n    }\n\n    if (zeroLabel && amount === 0) {\n        return zeroLabel;\n    }\n\n    return amount;\n}\n\nfunction isNumberValue(displayValue: number | ReactNode): displayValue is number {\n    return typeof displayValue === 'number';\n}\n\nconst OrderSummaryPrice: FC<OrderSummaryPriceProps> = ({\n    amount,\n    amountBeforeDiscount,\n    actionLabel,\n    onActionTriggered,\n    children,\n    className,\n    currencyCode,\n    label,\n    superscript,\n    testId,\n    zeroLabel,\n    isOrderTotal = false,\n}) => {\n    const [ highlight, setHighlight ] = useState<boolean>(false);\n    const [ previousAmount, setPreviousAmount ] = useState<OrderSummaryPriceProps['amount']>(amount);\n    const {\n        checkoutState: {\n            statuses: { isSubmittingOrder }\n        }\n    } = useCheckout();\n\n    const { themeV2 } = useThemeContext();\n    const displayValue = getDisplayValue(amount, zeroLabel);\n    const isActionDisabled = isSubmittingOrder();\n\n    useEffect(() => {\n        setHighlight(amount !== previousAmount);\n        setPreviousAmount(amount);\n    }, [ amount ]);\n\n    const handleTransitionEnd: (node: HTMLElement, done: () => void) => void = useCallback((node, done) => {\n        node.addEventListener('animationend', ({ target }) => {\n            if (target === node) {\n                setHighlight(false);\n                done();\n            }\n        });\n    }, [ setHighlight ]);\n\n    const handleActionTrigger = () => {\n        if (isActionDisabled || !onActionTriggered) {\n            return;\n        }\n\n        onActionTriggered();\n    }\n\n    return (\n        <div data-test={testId}>\n            <CSSTransition\n                addEndListener={handleTransitionEnd}\n                classNames=\"changeHighlight\"\n                in={highlight}\n                timeout={{}}\n            >\n                <div\n                    aria-live=\"polite\"\n                    className={classNames(\n                        'cart-priceItem',\n                        'optimizedCheckout-contentPrimary',\n                        className,\n                    )}\n                >\n                    <span className={classNames('cart-priceItem-label',\n                        {\n                            'body-regular': themeV2 && !isOrderTotal,\n                            'sub-header': themeV2 && isOrderTotal\n                        })}\n                    >\n                        <span data-test=\"cart-price-label\">\n                            {label}\n                            {'  '}\n                        </span>\n                        {currencyCode && (\n                            <span className=\"cart-priceItem-currencyCode\">\n                                {`(${currencyCode}) `}\n                            </span>\n                        )}\n                        {onActionTriggered && actionLabel && (\n                            <span className=\"cart-priceItem-link\">\n                                <a\n                                    className={classNames({\n                                        'link--disabled': isActionDisabled,\n                                        'body-cta': themeV2 && !isOrderTotal\n                                    })}\n                                    data-test=\"cart-price-callback\"\n                                    href=\"#\"\n                                    onClick={preventDefault(handleActionTrigger)}\n                                >\n                                    {actionLabel}\n                                </a>\n                            </span>\n                        )}\n                    </span>\n\n                    <span className={classNames('cart-priceItem-value',\n                        {\n                            'body-medium': themeV2 && !isOrderTotal,\n                            'header': themeV2 && isOrderTotal\n                        })}\n                    >\n                        {isNumberValue(amountBeforeDiscount) && amountBeforeDiscount !== amount && (\n                            <span className=\"cart-priceItem-before-value\">\n                                <ShopperCurrency amount={amountBeforeDiscount} />\n                            </span>\n                        )}\n\n                        <span data-test=\"cart-price-value\">\n                            {isNumberValue(displayValue) ? (\n                                <ShopperCurrency amount={displayValue} />\n                            ) : (\n                                displayValue\n                            )}\n                        </span>\n\n                        {superscript && (\n                            <sup data-test=\"cart-price-value-superscript\">{superscript}</sup>\n                        )}\n                    </span>\n\n                    {children}\n                </div>\n            </CSSTransition>\n        </div>\n    );\n};\n\nexport default OrderSummaryPrice;\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\n\nexport default function getItemsCount({\n    physicalItems,\n    digitalItems,\n    giftCertificates,\n    customItems,\n}: LineItemMap): number {\n    const totalItemsCount = [...physicalItems, ...digitalItems, ...(customItems || [])].reduce(\n        (total, item) => (total += item.quantity),\n        0,\n    );\n\n    return totalItemsCount + giftCertificates.length;\n}\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconChevronUp: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconChevronUp);\n"],"names":["item","id","quantity","amount","extendedListPrice","name","getOrderSummaryItemImage","imageUrl","alt","src","getDigitalItemDescription","downloadPageUrl","testId","content","href","rel","target","TranslatedString","extendedComparisonPrice","amountAfterDiscount","extendedSalePrice","image","productOptions","options","map","option","value","className","IconGiftCertificate","description","giftWrapping","undefined","memo","themeV2","length","index","key","isNumber","ShopperCurrency","OrderSummaryItems","constructor","props","super","handleToggle","isExpanded","this","state","setState","collapsedLimit","getCollapsedLimit","render","displayLineItemsCount","items","data","count","getItemsCount","physicalItems","slice","sort","variantId","giftCertificates","digitalItems","customItems","summaryItemProps","renderActions","isSmallScreen","getLineItemCount","onClick","type","IconChevronUp","IconChevronDown","removeBundledItems","lineItems","filter","parentId","shopperCurrencyCode","storeCurrencyCode","orderAmount","currency","hasDifferentCurrency","label","isOrderTotal","superscript","total","toStoreCurrency","code","height","viewBox","width","xmlns","d","query","window","matchMedia","matches","isOrderFee","fee","Object","hasOwn","remaining","onRemoved","rest","OrderSummaryPrice","onActionTriggered","actionLabel","discountAmount","isTaxIncluded","taxes","fees","giftWrappingAmount","shippingAmount","shippingAmountBeforeDiscount","subtotalAmount","handlingAmount","storeCreditAmount","coupons","onRemovedGiftCertificate","onRemovedCoupon","coupon","discountedAmount","displayName","giftCertificate","used","amountBeforeDiscount","zeroLabel","cost","customerDisplayName","tax","children","isNumberValue","displayValue","currencyCode","highlight","setHighlight","useState","previousAmount","setPreviousAmount","checkoutState","statuses","isSubmittingOrder","getDisplayValue","isActionDisabled","useEffect","handleTransitionEnd","useCallback","node","done","addEventListener","addEndListener","classNames","in","timeout","reduce"],"sourceRoot":""}