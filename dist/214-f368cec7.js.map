{"version":3,"file":"214-f368cec7.js","mappings":"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","sources":["webpack://checkout/./packages/ui/src/icon/IconClose.tsx","webpack://checkout/./packages/ui/src/modal/Modal.tsx","webpack://checkout/./packages/core/src/app/coupon/AppliedCoupon.tsx","webpack://checkout/./packages/core/src/app/giftCertificate/AppliedGiftCertificate.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconRemove.tsx","webpack://checkout/./packages/core/src/app/cart/AppliedRedeemable.tsx","webpack://checkout/./packages/core/src/app/cart/AppliedRedeemables.tsx","webpack://checkout/./packages/core/src/app/cart/Redeemable.tsx","webpack://checkout/./packages/core/src/app/cart/mapToRedeemableProps.ts","webpack://checkout/./packages/ui/src/button/Button.tsx","webpack://checkout/./packages/ui/src/modal/ModalHeader.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconClose: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconClose);\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, KeyboardEvent, MouseEvent, ReactNode, useCallback } from 'react';\nimport ReactModal from 'react-modal';\nimport { Omit } from 'utility-types';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\n\nimport { IconClose } from '../icon';\n\nexport type ModalProps = Omit<\n    ReactModal.Props,\n    'bodyOpenClassName' | 'className' | 'closeTimeoutMS' | 'overlayClassName'\n> & {\n    children?: ReactNode;\n    closeButtonLabel?: string | ReactNode;\n    footer?: ReactNode;\n    header?: ReactNode;\n    additionalHeaderClassName?: string;\n    additionalBodyClassName?: string;\n    additionalModalClassName?: string;\n    shouldShowCloseButton?: boolean;\n};\n\nconst Modal: FunctionComponent<ModalProps> = ({\n    children,\n    closeButtonLabel = 'Close',\n    footer,\n    header,\n    additionalHeaderClassName,\n    additionalBodyClassName,\n    additionalModalClassName,\n    onRequestClose = noop,\n    shouldShowCloseButton = false,\n    ...rest\n}) => {\n    const handleClose = useCallback(\n        (event: MouseEvent | KeyboardEvent) => {\n            onRequestClose(event);\n        },\n        [onRequestClose],\n    );\n\n    return (\n        <ReactModal\n            {...rest}\n            ariaHideApp={process.env.NODE_ENV !== 'test'}\n            bodyOpenClassName=\"has-activeModal\"\n            className={{\n                base: classNames(\n                    'modal optimizedCheckout-contentPrimary',\n                    additionalModalClassName,\n                ),\n                afterOpen: 'modal--afterOpen',\n                beforeClose: 'modal--beforeClose',\n            }}\n            closeTimeoutMS={200}\n            onRequestClose={onRequestClose}\n            overlayClassName={{\n                base: 'modalOverlay',\n                afterOpen: 'modalOverlay--afterOpen',\n                beforeClose: 'modalOverlay--beforeClose',\n            }}\n            shouldCloseOnEsc={true}\n            shouldCloseOnOverlayClick={false}\n        >\n            <div className={classNames('modal-header', additionalHeaderClassName)}>\n                {header}\n\n                {shouldShowCloseButton && (\n                    <a\n                        className=\"modal-close\"\n                        data-test=\"modal-close-button\"\n                        href=\"#\"\n                        onClick={preventDefault(handleClose)}\n                    >\n                        {Boolean(closeButtonLabel) && (\n                            <span className=\"is-srOnly\">{closeButtonLabel}</span>\n                        )}\n\n                        <IconClose />\n                    </a>\n                )}\n            </div>\n\n            <div\n                className={classNames('modal-body', additionalBodyClassName)}\n                data-test=\"modal-body\"\n            >\n                {children}\n            </div>\n\n            {Boolean(footer) && (\n                <div className=\"modal-footer\" data-test=\"modal-footer\">\n                    {footer}\n                </div>\n            )}\n        </ReactModal>\n    );\n};\n\nexport default Modal;\n","import { Coupon } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nexport interface AppliedCouponProps {\n    coupon: Coupon;\n}\n\nconst AppliedCoupon: FunctionComponent<AppliedCouponProps> = ({ coupon }) => (\n    <div className=\"redeemable-column redeemable-info\" data-test=\"redeemable-item--coupon\">\n        <span className=\"redeemable-info-header\">\n            <span className=\"redeemable-info-header--highlight\" data-test=\"coupon-amount\">\n                {coupon.displayName}\n            </span>{' '}\n            <TranslatedString id=\"redeemable.coupon_text\" />\n        </span>\n\n        <span className=\"redeemable-info-subHeader\" data-test=\"coupon-code\">\n            {coupon.code}\n        </span>\n    </div>\n);\n\nexport default memo(AppliedCoupon);\n","import { GiftCertificate } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { ShopperCurrency } from '../currency';\n\nexport interface AppliedGiftCertificateProps {\n    giftCertificate: GiftCertificate;\n}\n\nconst AppliedGiftCertificate: FunctionComponent<AppliedGiftCertificateProps> = ({\n    giftCertificate,\n}) => (\n    <div className=\"redeemable-column redeemable-info\" data-test=\"redeemable-item--giftCertificate\">\n        <span className=\"redeemable-info-header\">\n            <span className=\"redeemable-info-header--highlight\" data-test=\"giftCertificate-amount\">\n                <ShopperCurrency amount={giftCertificate.used} />\n            </span>{' '}\n            <TranslatedString id=\"redeemable.gift_certificate_text\" />\n        </span>\n\n        <span className=\"redeemable-info-subHeader\">\n            {giftCertificate.remaining > 0 && (\n                <span className=\"redeemable-info-subHeader--remaining\">\n                    <TranslatedString id=\"redeemable.gift_certificate_remaining_text\" />{' '}\n                    <span data-test=\"giftCertificate-remaining\">\n                        <ShopperCurrency amount={giftCertificate.remaining} />\n                    </span>\n                </span>\n            )}\n\n            <span data-test=\"giftCertificate-code\">{giftCertificate.code}</span>\n        </span>\n    </div>\n);\n\nexport default memo(AppliedGiftCertificate);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconRemove: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M14.59 8L12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconRemove);\n","import classNames from 'classnames';\nimport React, {FunctionComponent, ReactNode} from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { IconRemove } from '../ui/icon';\n\nimport './AppliedRedeemable.scss';\n\nexport interface AppliedRedeemableProps {\n    children: ReactNode;\n    isRemoving: boolean;\n    onRemove(): void;\n}\n\nconst AppliedRedeemable: FunctionComponent<AppliedRedeemableProps> = ({\n    children,\n    isRemoving,\n    onRemove,\n}) => (\n    <div className=\"form-checklist-header\">\n        <div className=\"form-checklist-checkbox optimizedCheckout-form-checklist-checkbox\">\n            <span className=\"is-srOnly\">\n                <TranslatedString id=\"redeemable.applied_text\" />\n            </span>\n        </div>\n\n        <div className=\"form-label form-label-redeemable\">\n            <div className=\"redeemable\">\n                {children}\n                <div className=\"redeemable-column redeemable-actions\">\n                    <button\n                        className={classNames('redeemable-remove', { 'is-loading': isRemoving })}\n                        data-test=\"redeemable-remove\"\n                        disabled={isRemoving}\n                        onClick={onRemove}\n                        type=\"button\"\n                    >\n                        <IconRemove />\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n);\n\nexport default AppliedRedeemable;\n","import { Coupon, GiftCertificate } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\n\nimport { AppliedCoupon } from '../coupon';\nimport { AppliedGiftCertificate } from '../giftCertificate';\n\nimport AppliedRedeemable from './AppliedRedeemable';\n\ninterface AppliedCouponProps {\n    coupon: Coupon;\n    isRemoving?: boolean;\n    onRemoved(code: string): void;\n}\n\nconst AppliedCouponChecklistItem: FunctionComponent<AppliedCouponProps> = ({\n    coupon,\n    onRemoved,\n    isRemoving = false,\n}) => {\n    const handleRemove = useCallback(() => {\n        onRemoved(coupon.code);\n    }, [coupon, onRemoved]);\n\n    return (\n        <li className=\"form-checklist-item optimizedCheckout-form-checklist-item\">\n            <AppliedRedeemable isRemoving={isRemoving} onRemove={handleRemove}>\n                <AppliedCoupon coupon={coupon} />\n            </AppliedRedeemable>\n        </li>\n    );\n};\n\ninterface AppliedGiftCertificateProps {\n    giftCertificate: GiftCertificate;\n    isRemoving?: boolean;\n    onRemoved(code: string): void;\n}\n\nconst AppliedGiftCertificateChecklistItem: FunctionComponent<AppliedGiftCertificateProps> = ({\n    giftCertificate,\n    onRemoved,\n    isRemoving = false,\n}) => {\n    const handleRemove = useCallback(() => {\n        onRemoved(giftCertificate.code);\n    }, [giftCertificate, onRemoved]);\n\n    return (\n        <li className=\"form-checklist-item optimizedCheckout-form-checklist-item\">\n            <AppliedRedeemable isRemoving={isRemoving} onRemove={handleRemove}>\n                <AppliedGiftCertificate giftCertificate={giftCertificate} />\n            </AppliedRedeemable>\n        </li>\n    );\n};\n\nexport interface AppliedRedeemablesProps {\n    coupons?: Coupon[];\n    giftCertificates?: GiftCertificate[];\n    isRemovingGiftCertificate?: boolean;\n    isRemovingCoupon?: boolean;\n    onRemovedCoupon(code: string): void;\n    onRemovedGiftCertificate(code: string): void;\n}\n\nconst AppliedRedeemables: FunctionComponent<AppliedRedeemablesProps> = ({\n    coupons = [],\n    giftCertificates = [],\n    isRemovingCoupon = false,\n    isRemovingGiftCertificate = false,\n    onRemovedCoupon,\n    onRemovedGiftCertificate,\n}) => {\n    if (!coupons.length && !giftCertificates.length) {\n        return null;\n    }\n\n    return (\n        <ul\n            className=\"form-checklist optimizedCheckout-form-checklist\"\n            data-test=\"redeemables-list\"\n        >\n            {coupons.map((coupon) => (\n                <AppliedCouponChecklistItem\n                    coupon={coupon}\n                    isRemoving={isRemovingCoupon}\n                    key={coupon.code}\n                    onRemoved={onRemovedCoupon}\n                />\n            ))}\n\n            {giftCertificates.map((giftCertificate) => (\n                <AppliedGiftCertificateChecklistItem\n                    giftCertificate={giftCertificate}\n                    isRemoving={isRemovingGiftCertificate}\n                    key={giftCertificate.code}\n                    onRemoved={onRemovedGiftCertificate}\n                />\n            ))}\n        </ul>\n    );\n};\n\nexport default memo(AppliedRedeemables);\n","import { CheckoutSelectors, RequestError } from '@bigcommerce/checkout-sdk';\nimport { memoizeOne } from '@bigcommerce/memoize';\nimport classNames from 'classnames';\nimport { FieldProps, FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, {FunctionComponent, KeyboardEvent, memo, ReactNode, useCallback} from 'react';\nimport { object, string } from 'yup';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport { useCheckout , useStyleContext } from '@bigcommerce/checkout/payment-integration-api';\nimport { FormContextType, FormProvider } from '@bigcommerce/checkout/ui';\n\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { FormField, Label, TextInput } from '../ui/form';\nimport { Toggle } from '../ui/toggle';\n\nimport AppliedRedeemables, { AppliedRedeemablesProps } from './AppliedRedeemables';\n\nexport interface RedeemableFormValues {\n    redeemableCode: string;\n}\n\nexport type ReedemableChildrenProps = Pick<\n    RedeemableProps,\n    | 'onRemovedCoupon'\n    | 'onRemovedGiftCertificate'\n    | 'isRemovingGiftCertificate'\n    | 'isRemovingCoupon'\n    | 'coupons'\n    | 'giftCertificates'\n>;\n\nexport type RedeemableProps = {\n    appliedRedeemableError?: RequestError;\n    isApplyingRedeemable?: boolean;\n    isRemovingRedeemable?: boolean;\n    removedRedeemableError?: RequestError;\n    showAppliedRedeemables?: boolean;\n    shouldCollapseCouponCode?: boolean;\n    applyCoupon(code: string): Promise<CheckoutSelectors>;\n    applyGiftCertificate(code: string): Promise<CheckoutSelectors>;\n    clearError(error: Error): void;\n} & AppliedRedeemablesProps;\n\nconst Redeemable: FunctionComponent<\n    RedeemableProps & WithLanguageProps & FormikProps<RedeemableFormValues>\n    > = ({ shouldCollapseCouponCode, showAppliedRedeemables, ...formProps }) => {\n        const { newFontStyle } = useStyleContext();\n\n        return (\n            <Toggle openByDefault={!shouldCollapseCouponCode}>\n                {({ toggle, isOpen }): ReactNode => (\n                    <>\n                        {shouldCollapseCouponCode && (\n                            <a\n                                aria-controls=\"redeemable-collapsable\"\n                                aria-expanded={isOpen}\n                                className={classNames('redeemable-label', { 'body-cta': newFontStyle })}\n                                data-test=\"redeemable-label\"\n                                href=\"#\"\n                                onClick={preventDefault(toggle)}\n                            >\n                                <TranslatedString id=\"redeemable.toggle_action\" />\n                            </a>\n                        )}\n                        {!shouldCollapseCouponCode && (\n                            <div className={classNames('redeemable-label', { 'body-cta': newFontStyle })}>\n                                <TranslatedString id=\"redeemable.toggle_action\" />\n                            </div>\n                        )}\n                        {(isOpen || !shouldCollapseCouponCode) && (\n                            <div data-test=\"redeemable-collapsable\" id=\"redeemable-collapsable\">\n                                <RedeemableForm {...formProps} />\n                                {showAppliedRedeemables && <AppliedRedeemables {...formProps} />}\n                            </div>\n                        )}\n                    </>\n                )}\n            </Toggle>\n        );\n    }\n\nconst RedeemableForm: FunctionComponent<\n    Partial<RedeemableProps> & FormikProps<RedeemableFormValues> & WithLanguageProps\n> = ({ appliedRedeemableError, isApplyingRedeemable, clearError = noop, submitForm, language }) => {\n    const {\n        checkoutState: {\n            statuses: { isSubmittingOrder }\n        }\n    } = useCheckout();\n    const { newFontStyle } = useStyleContext();\n\n    const handleSubmitForm = (setSubmitted: FormContextType['setSubmitted']) => {\n        if (isSubmittingOrder()) {\n            return;\n        }\n\n        setSubmitted(true);\n        submitForm();\n    }\n\n    const handleKeyDown = useCallback(\n        memoizeOne((setSubmitted: FormContextType['setSubmitted']) => (event: KeyboardEvent) => {\n            if (appliedRedeemableError) {\n                clearError(appliedRedeemableError);\n            }\n\n            // note: to prevent submitting main form, we manually intercept\n            // the enter key event and submit the \"subform\".\n            if (event.keyCode === 13 || event.key === 'Enter') {\n                handleSubmitForm(setSubmitted);\n                event.preventDefault();\n            }\n        }),\n        [appliedRedeemableError, clearError, submitForm],\n    );\n\n    const handleSubmit = useCallback(\n        memoizeOne((setSubmitted: FormContextType['setSubmitted']) => () => {\n            handleSubmitForm(setSubmitted);\n        }),\n        [],\n    );\n\n    const renderLabel = useCallback(\n        (name: string) => (\n            <Label hidden htmlFor={name}>\n                <TranslatedString id=\"redeemable.code_label\" />\n            </Label>\n        ),\n        [],\n    );\n\n    const renderErrorMessage = useCallback((errorCode: string, errorMessage?: string) => {\n        switch (errorCode) {\n            case 'min_purchase':\n                return <TranslatedString id=\"redeemable.coupon_min_order_total\" />;\n\n            case 'not_applicable':\n                return <TranslatedString id=\"redeemable.coupon_location_error\" />;\n\n            default:\n                return errorMessage || <TranslatedString id=\"redeemable.code_invalid_error\" />;\n        }\n    }, []);\n\n    const renderInput = useCallback(\n        (setSubmitted: FormContextType['setSubmitted']) =>\n            ({ field }: FieldProps) =>\n                (\n                    <>\n                        {appliedRedeemableError &&\n                            appliedRedeemableError.errors &&\n                            appliedRedeemableError.errors[0] && (\n                                <Alert type={AlertType.Error}>\n                                    {renderErrorMessage(appliedRedeemableError.errors[0].code, appliedRedeemableError.errors[0].message)}\n                                </Alert>\n                            )}\n\n                        <div className=\"form-prefixPostfix\">\n                            <TextInput\n                                {...field}\n                                aria-label={language.translate('redeemable.code_label')}\n                                className=\"form-input optimizedCheckout-form-input\"\n                                newFontStyle={newFontStyle}\n                                onKeyDown={handleKeyDown(setSubmitted)}\n                                testId=\"redeemableEntry-input\"\n                            />\n\n                            <Button\n                                className={classNames('form-prefixPostfix-button--postfix', {\n                                    'body-bold': newFontStyle,\n                                })}\n                                disabled={isSubmittingOrder()}\n                                id=\"applyRedeemableButton\"\n                                isLoading={isApplyingRedeemable}\n                                onClick={handleSubmit(setSubmitted)}\n                                testId=\"redeemableEntry-submit\"\n                                variant={ButtonVariant.Secondary}\n                            >\n                                <TranslatedString id=\"redeemable.apply_action\" />\n                            </Button>\n                        </div>\n                    </>\n                ),\n        [\n            appliedRedeemableError,\n            handleKeyDown,\n            handleSubmit,\n            isApplyingRedeemable,\n            language,\n            isSubmittingOrder,\n            renderErrorMessage,\n        ],\n    );\n\n    const renderContent = useCallback(\n        memoizeOne(({ setSubmitted }: FormContextType) => (\n            <FormField\n                input={renderInput(setSubmitted)}\n                label={renderLabel}\n                name=\"redeemableCode\"\n            />\n        )),\n        [renderLabel, renderInput],\n    );\n\n    return (\n        <fieldset className=\"form-fieldset redeemable-entry\">\n            <FormProvider>{renderContent}</FormProvider>\n        </fieldset>\n    );\n};\n\nexport default withLanguage(\n    withFormik<RedeemableProps & WithLanguageProps, RedeemableFormValues>({\n        mapPropsToValues() {\n            return {\n                redeemableCode: '',\n            };\n        },\n\n        async handleSubmit(\n            { redeemableCode },\n            { props: { applyCoupon, applyGiftCertificate, clearError } },\n        ) {\n            const code = redeemableCode.trim();\n\n            try {\n                await applyGiftCertificate(code);\n            } catch (error) {\n                if (error instanceof Error) {\n                    clearError(error);\n                }\n\n                applyCoupon(code);\n            }\n        },\n\n        validationSchema({ language }: RedeemableProps & WithLanguageProps) {\n            return object({\n                redeemableCode: string().required(\n                    language.translate('redeemable.code_required_error'),\n                ),\n            });\n        },\n    })(memo(Redeemable)),\n);\n","import { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { EMPTY_ARRAY } from '../common/utility';\n\nimport { RedeemableProps } from './Redeemable';\n\nexport default function mapToRedeemableProps(\n    context: CheckoutContextProps,\n): RedeemableProps | null {\n    const {\n        checkoutService,\n        checkoutState: {\n            data: { getConfig, getCoupons, getGiftCertificates },\n            statuses: {\n                isApplyingCoupon,\n                isApplyingGiftCertificate,\n                isRemovingCoupon,\n                isRemovingGiftCertificate,\n            },\n            errors: {\n                getApplyCouponError,\n                getApplyGiftCertificateError,\n                getRemoveCouponError,\n                getRemoveGiftCertificateError,\n            },\n        },\n    } = context;\n\n    const config = getConfig();\n\n    if (!config) {\n        return null;\n    }\n\n    return {\n        appliedRedeemableError: getApplyCouponError() || getApplyGiftCertificateError(),\n        applyCoupon: checkoutService.applyCoupon,\n        applyGiftCertificate: checkoutService.applyGiftCertificate,\n        clearError: checkoutService.clearError,\n        coupons: getCoupons() || EMPTY_ARRAY,\n        giftCertificates: getGiftCertificates() || EMPTY_ARRAY,\n        isApplyingRedeemable: isApplyingCoupon() || isApplyingGiftCertificate(),\n        isRemovingCoupon: isRemovingCoupon(),\n        isRemovingGiftCertificate: isRemovingGiftCertificate(),\n        onRemovedCoupon: checkoutService.removeCoupon,\n        onRemovedGiftCertificate: checkoutService.removeGiftCertificate,\n        removedRedeemableError: getRemoveCouponError() || getRemoveGiftCertificateError(),\n        shouldCollapseCouponCode: config.checkoutSettings.isCouponCodeCollapsed,\n    };\n}\n","import classNames from 'classnames';\nimport React, { ButtonHTMLAttributes, FunctionComponent } from 'react';\n\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n    isFullWidth?: boolean;\n    isLoading?: boolean;\n    size?: ButtonSize;\n    testId?: string;\n    variant?: ButtonVariant;\n}\n\nexport enum ButtonVariant {\n    Primary = 'primary',\n    Secondary = 'secondary',\n    Action = 'action',\n}\n\nexport enum ButtonSize {\n    Small = 'small',\n    Tiny = 'tiny',\n    Large = 'large',\n}\n\nfunction getClassName(\n    props: Pick<ButtonProps, 'className' | 'isFullWidth' | 'isLoading' | 'size' | 'variant'>,\n) {\n    const { className, isFullWidth, isLoading, size, variant } = props;\n\n    return classNames(\n        'button',\n        className,\n        { 'button--primary': variant === ButtonVariant.Primary },\n        { 'button--tertiary': variant === ButtonVariant.Secondary },\n        { 'button--action': variant === ButtonVariant.Action },\n        { 'button--small': size === ButtonSize.Small },\n        { 'button--tiny': size === ButtonSize.Tiny },\n        { 'button--large': size === ButtonSize.Large },\n        { 'button--slab': isFullWidth },\n        {\n            'optimizedCheckout-buttonPrimary':\n                variant === ButtonVariant.Primary || variant === ButtonVariant.Action,\n        },\n        { 'optimizedCheckout-buttonSecondary': variant === ButtonVariant.Secondary },\n        { 'is-loading': isLoading },\n    );\n}\n\nconst Button: FunctionComponent<ButtonProps> = ({\n    children,\n    className,\n    disabled,\n    isFullWidth,\n    isLoading,\n    size,\n    testId,\n    type,\n    variant,\n    ...rest\n}) => (\n    <button\n        {...rest}\n        className={getClassName({ className, isFullWidth, isLoading, size, variant })}\n        data-test={testId}\n        disabled={disabled || isLoading}\n        type={type || 'button'}\n    >\n        {children}\n    </button>\n);\n\nexport default Button;\n","import classNames from 'classnames';\nimport React, { FunctionComponent } from 'react';\n\ninterface ModalHeaderProps {\n    children: React.ReactNode;\n    additionalClassName?: string;\n}\n\nconst ModalHeader: FunctionComponent<ModalHeaderProps> = ({ children, additionalClassName }) => (\n    <h2\n        className={classNames(\n            'modal-header-title optimizedCheckout-headingSecondary',\n            additionalClassName,\n        )}\n        data-test=\"modal-heading\"\n    >\n        {children}\n    </h2>\n);\n\nexport default ModalHeader;\n"],"names":["height","viewBox","width","xmlns","d","children","closeButtonLabel","footer","header","additionalHeaderClassName","additionalBodyClassName","additionalModalClassName","onRequestClose","noop","shouldShowCloseButton","rest","handleClose","useCallback","event","ariaHideApp","bodyOpenClassName","className","base","afterOpen","beforeClose","closeTimeoutMS","overlayClassName","shouldCloseOnEsc","shouldCloseOnOverlayClick","href","onClick","preventDefault","Boolean","memo","coupon","displayName","TranslatedString","id","code","giftCertificate","ShopperCurrency","amount","used","remaining","isRemoving","onRemove","disabled","type","AppliedCouponChecklistItem","onRemoved","handleRemove","AppliedGiftCertificateChecklistItem","coupons","giftCertificates","isRemovingCoupon","isRemovingGiftCertificate","onRemovedCoupon","onRemovedGiftCertificate","length","map","key","RedeemableForm","appliedRedeemableError","isApplyingRedeemable","clearError","submitForm","language","isSubmittingOrder","newFontStyle","handleSubmitForm","setSubmitted","handleKeyDown","keyCode","handleSubmit","renderLabel","name","Label","hidden","htmlFor","renderErrorMessage","errorCode","errorMessage","renderInput","field","errors","Alert","A","Error","message","TextInput","translate","onKeyDown","testId","Button","isLoading","variant","Secondary","renderContent","FormField","input","label","withLanguage","mapPropsToValues","redeemableCode","props","applyCoupon","applyGiftCertificate","trim","validationSchema","required","shouldCollapseCouponCode","showAppliedRedeemables","formProps","Toggle","openByDefault","toggle","isOpen","mapToRedeemableProps","context","checkoutService","data","getConfig","getCoupons","getGiftCertificates","statuses","isApplyingCoupon","isApplyingGiftCertificate","getApplyCouponError","getApplyGiftCertificateError","getRemoveCouponError","getRemoveGiftCertificateError","config","removeCoupon","removeGiftCertificate","removedRedeemableError","checkoutSettings","isCouponCodeCollapsed","ButtonVariant","ButtonSize","getClassName","isFullWidth","size","Primary","Action","Small","Tiny","Large","additionalClassName"],"sourceRoot":""}