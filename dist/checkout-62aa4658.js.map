{"version":3,"file":"checkout-62aa4658.js","mappings":"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","sources":["webpack://checkout/./packages/core/src/app/shipping/findLineItems.ts","webpack://checkout/./packages/payment-integration-api/src/PaymentMethodId.ts","webpack://checkout/./packages/core/src/app/shipping/shippingOption/ShippingOptionAdditionalDescription.tsx","webpack://checkout/./packages/core/src/app/shipping/shippingOption/StaticShippingOption.tsx","webpack://checkout/./packages/payment-integration-api/src/contexts/checkout-context/CheckoutContext.tsx","webpack://checkout/./packages/locale/src/TranslatedLink.tsx","webpack://checkout/./packages/locale/src/withLanguage.tsx","webpack://checkout/./packages/analytics/src/createAnalyticsService.ts","webpack://checkout/./packages/analytics/src/AnalyticsProvider.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-customer.ts","webpack://checkout/./packages/core/src/app/common/utility/isBuyNowCart.ts","webpack://checkout/./packages/checkout-extension/src/ExtensionRegionContainer.ts","webpack://checkout/./packages/checkout-extension/src/Extension.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconBolt.tsx","webpack://checkout/./packages/core/src/app/ui/form/FormFieldError.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-address.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconChevronDown.tsx","webpack://checkout/./packages/core/src/app/shipping/hasSelectedShippingOptions.ts","webpack://checkout/./packages/core/src/app/common/error/isCustomError.ts","webpack://checkout/./packages/core/src/app/common/utility/isExperimentEnabled.ts","webpack://checkout/./packages/core/src/app/checkout/NoopCheckoutSupport.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/errors/EmbeddedCheckoutUnsupportedError.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutSupport.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/createEmbeddedCheckoutSupport.ts","webpack://checkout/./packages/checkout-extension/src/withExtension.ts","webpack://checkout/./packages/ui/src/loading/LoadingNotification.tsx","webpack://checkout/./packages/core/src/app/cart/EmptyCartMessage.tsx","webpack://checkout/./packages/core/src/app/customer/CustomerViewType.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/WalletButtonContainerSkeleton.tsx","webpack://checkout/./packages/core/src/app/customer/getSupportedMethods.ts","webpack://checkout/./packages/core/src/app/common/utility/should-filter-apple-pay.ts","webpack://checkout/./packages/core/src/app/common/utility/is-apple-pay-window.ts","webpack://checkout/./packages/core/src/app/customer/CheckoutButton.tsx","webpack://checkout/./packages/core/src/app/checkout/navigateToOrderConfirmation.tsx","webpack://checkout/./packages/core/src/app/customer/customWalletButton/ApplePayButton.tsx","webpack://checkout/./packages/core/src/app/customer/customWalletButton/PayPalCommerceButton.tsx","webpack://checkout/./packages/core/src/app/customer/WalletButtonV1Resolver.tsx","webpack://checkout/./packages/core/src/app/customer/CheckoutButtonContainer.tsx","webpack://checkout/./packages/core/src/app/customer/resolveCheckoutButton.ts","webpack://checkout/./packages/analytics/src/useAnalytics.tsx","webpack://checkout/./packages/core/src/app/customer/checkoutSuggestion/BoltCheckoutSuggestion.tsx","webpack://checkout/./packages/dom-utils/src/stopPropagation.ts","webpack://checkout/./packages/core/src/app/customer/checkoutSuggestion/CheckoutSuggestion.tsx","webpack://checkout/./packages/core/src/app/customer/canSignOut.ts","webpack://checkout/./packages/core/src/app/customer/CustomerInfo.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/CustomerSkeleton.tsx","webpack://checkout/./packages/core/src/app/customer/customWalletButton/AmazonPayV2Button.tsx","webpack://checkout/./packages/core/src/app/customer/CheckoutButtonList.tsx","webpack://checkout/./packages/core/src/app/customer/validationPatterns.ts","webpack://checkout/./packages/core/src/app/customer/getEmailValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/getCreateCustomerValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/CreateAccountForm.tsx","webpack://checkout/./packages/core/src/app/customer/EmailField.tsx","webpack://checkout/./packages/core/src/app/customer/EmailLoginForm.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-fastlane-window.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/PayPalFastlaneWatermark.tsx","webpack://checkout/./packages/core/src/app/privacyPolicy/PrivacyPolicyField.tsx","webpack://checkout/./packages/core/src/app/privacyPolicy/getPrivacyPolicyValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/SubscribeField.tsx","webpack://checkout/./packages/core/src/app/customer/SubscribeSessionStorage.ts","webpack://checkout/./packages/core/src/app/customer/GuestForm.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconEye.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconEyeSlash.tsx","webpack://checkout/./packages/core/src/app/customer/PasswordField.tsx","webpack://checkout/./packages/core/src/app/customer/LoginForm.tsx","webpack://checkout/./packages/core/src/app/customer/mapErrorMessage.ts","webpack://checkout/./packages/core/src/app/customer/mapCreateAccountFromFormValues.ts","webpack://checkout/./packages/core/src/app/customer/StripeGuestForm.tsx","webpack://checkout/./packages/core/src/app/customer/Customer.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconTag.tsx","webpack://checkout/./packages/core/src/app/promotion/PromotionBanner.tsx","webpack://checkout/./packages/core/src/app/promotion/PromotionBannerList.tsx","webpack://checkout/./packages/core/src/app/shipping/hasUnassignedLineItems.ts","webpack://checkout/./packages/core/src/app/shipping/isUsingMultiShipping.ts","webpack://checkout/./packages/core/src/app/shipping/StaticConsignment.tsx","webpack://checkout/./packages/core/src/app/shipping/StaticMultiConsignment.tsx","webpack://checkout/./packages/core/src/app/shipping/ShippingSummary.tsx","webpack://checkout/./packages/core/src/app/shipping/shippingOption/ShippingOptionExpiredError.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconCheck.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStepHeader.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStep.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStepType.ts","webpack://checkout/./packages/core/src/app/shipping/itemsRequireShipping.ts","webpack://checkout/./packages/core/src/app/checkout/getCheckoutStepStatuses.ts","webpack://checkout/./packages/core/src/app/checkout/Checkout.tsx","webpack://checkout/./packages/core/src/app/checkout/mapToCheckoutProps.ts","webpack://checkout/./packages/core/src/app/checkout/CheckoutApp.tsx","webpack://checkout/./packages/core/src/app/shipping/getShippingCostAfterAutomaticDiscount.ts","webpack://checkout/./packages/core/src/app/ui/modal/ModalHeader.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconError.tsx","webpack://checkout/./packages/error-handling-utils/src/ErrorBoundary.tsx","webpack://checkout/./packages/ui/src/loading/LoadingOverlay.tsx","webpack://checkout/./packages/dom-utils/src/preventDefault.ts","webpack://checkout/./packages/core/src/app/ui/form/RadioInput.tsx","webpack://checkout/./packages/core/src/app/ui/form/DynamicInput.tsx","webpack://checkout/./packages/core/src/app/ui/form/MultiCheckboxControl.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxGroupFormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/DynamicFormField.tsx","webpack://checkout/./packages/core/src/app/common/error/isErrorWithType.ts","webpack://checkout/./packages/locale/src/translations/index.ts","webpack://checkout/./packages/locale/src/getLanguageService.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/LoadingSkeleton.tsx","webpack://checkout/./packages/core/src/app/shipping/ConsignmentLineItemDetail.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/breakpoints.ts","webpack://checkout/./packages/ui/src/icon/IconPayPalFastlane.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/PoweredByPayPalFastlaneLabel.tsx","webpack://checkout/./packages/core/src/app/ui/form/TextArea.tsx","webpack://checkout/./packages/payment-integration-api/src/errors/CustomError.ts","webpack://checkout/./packages/core/src/app/payment/getProviderWithCustomCheckout.ts","webpack://checkout/./packages/core/src/app/ui/form/Input.tsx","webpack://checkout/./packages/core/src/app/ui/form/Label.tsx","webpack://checkout/./packages/payment-integration-api/src/contexts/checkout-context/CheckoutProvider.tsx","webpack://checkout/./packages/core/src/app/address/mapAddressToFormValues.ts","webpack://checkout/./packages/core/src/app/ui/form/Legend.tsx","webpack://checkout/./packages/analytics/src/AnalyticsContext.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/usePayPalFastlaneAddress.ts","webpack://checkout/./packages/locale/src/LocaleContext.ts","webpack://checkout/./packages/core/src/app/common/utility/emptyData.ts","webpack://checkout/./packages/core/src/app/analytics/withAnalytics.ts","webpack://checkout/./packages/core/src/app/common/error/CustomError.ts","webpack://checkout/./packages/core/src/app/ui/responsive/ViewPicker.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/MobileView.tsx","webpack://checkout/./packages/core/src/app/ui/form/Fieldset.tsx","webpack://checkout/./packages/core/src/app/common/dom/toCssRule.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutStyleParser.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutStylesheet.ts","webpack://checkout/./packages/core/src/app/common/dom/appendStylesheet.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/createEmbeddedCheckoutStylesheet.ts","webpack://checkout/./packages/core/src/app/ui/form/FormFieldContainer.tsx","webpack://checkout/./packages/core/src/app/ui/form/BasicFormField.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/isMobileView.ts","webpack://checkout/./packages/core/src/app/common/utility/isFloatingLabelEnabled.ts","webpack://checkout/./packages/core/src/app/common/error/isRequestError.ts","webpack://checkout/./packages/core/src/app/guestSignup/AccountService.ts","webpack://checkout/./packages/core/src/app/guestSignup/SignUpPasswordField.tsx","webpack://checkout/./packages/core/src/app/guestSignup/GuestSignUpForm.tsx","webpack://checkout/./packages/core/src/app/guestSignup/PasswordSavedSuccessAlert.tsx","webpack://checkout/./packages/core/src/app/guestSignup/SignedUpSuccessAlert.tsx","webpack://checkout/./packages/core/src/app/guestSignup/errors/AccountCreationRequirementsError.ts","webpack://checkout/./packages/core/src/app/guestSignup/errors/AccountCreationFailedError.ts","webpack://checkout/./packages/core/src/app/order/getPaymentInstructions.ts","webpack://checkout/./packages/core/src/app/giftCertificate/mapFromPayments.ts","webpack://checkout/./packages/core/src/app/order/getStoreCreditAmount.ts","webpack://checkout/./packages/core/src/app/order/mapToOrderSummarySubtotalsProps.ts","webpack://checkout/./packages/core/src/app/order/getOrderShippingCostAfterAutomaticDiscount.ts","webpack://checkout/./packages/core/src/app/order/OrderConfirmationSection.tsx","webpack://checkout/./packages/core/src/app/order/MandateTextComponent.tsx","webpack://checkout/./packages/core/src/app/order/PaymentsWithMandates.tsx","webpack://checkout/./packages/core/src/app/order/OrderStatus.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconPrint.tsx","webpack://checkout/./packages/core/src/app/order/PrintLink.tsx","webpack://checkout/./packages/core/src/app/ui/header/PrimaryHeader.tsx","webpack://checkout/./packages/core/src/app/order/ThankYouHeader.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmation.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmationApp.tsx","webpack://checkout/./packages/instrument-utils/src/guards/shouldUseStripeLinkByMinimumAmount.ts","webpack://checkout/./packages/locale/src/localizeAddress.ts","webpack://checkout/./packages/core/src/app/customer/getPasswordRequirements.ts","webpack://checkout/./packages/payment-integration-api/src/toResolvableComponent.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconSuccess.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconInfo.tsx","webpack://checkout/./packages/core/src/app/ui/alert/Alert.tsx","webpack://checkout/./packages/core/src/app/payment/paymentMethod/PaymentMethodId.ts","webpack://checkout/./packages/dom-utils/src/parseAnchor.ts","webpack://checkout/./packages/locale/src/withCurrency.tsx","webpack://checkout/./packages/core/src/app/formFields/getCustomFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/currency/ShopperCurrency.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-method.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconClose.tsx","webpack://checkout/./packages/core/src/app/common/bundler/getCurrentScriptPath.ts","webpack://checkout/./packages/core/src/app/common/bundler/configurePublicPath.ts","webpack://checkout/./packages/core/src/app/checkout/renderCheckout.tsx","webpack://checkout/./packages/core/src/app/order/renderOrderConfirmation.tsx","webpack://checkout/./packages/locale/src/withDate.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/AddressFormSkeleton.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-commerce-fastlane-method.ts","webpack://checkout/./packages/dom-utils/src/getAppliedStyles.ts","webpack://checkout/./packages/core/src/app/address/isValidAddress.ts","webpack://checkout/./packages/locale/src/TranslatedHtml.tsx","webpack://checkout/./packages/ui/src/loading/LoadingSpinner.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxFormField.tsx","webpack://checkout/./packages/core/src/app/address/AddressType.ts","webpack://checkout/./packages/core/src/app/shipping/getLineItemsCount.ts","webpack://checkout/./packages/ui/src/icon/withIconContainer.tsx","webpack://checkout/./packages/core/src/app/billing/StaticBillingAddress.tsx","webpack://checkout/./packages/core/src/app/giftCertificate/isGiftCertificatePayment.ts","webpack://checkout/./packages/core/src/app/ui/form/TextInput.tsx","webpack://checkout/./packages/payment-integration-api/src/isResolvableComponent.ts","webpack://checkout/./packages/core/src/app/common/resolver/resolveComponent.ts","webpack://checkout/./packages/core/src/app/common/error/createCustomErrorType.ts","webpack://checkout/./packages/core/src/app/ui/button/Button.tsx","webpack://checkout/./packages/checkout-extension/src/useExtensions.tsx","webpack://checkout/./packages/core/src/app/payment/storeCredit/isStoreCreditPayment.ts","webpack://checkout/./packages/core/src/app/common/error/ErrorCode.tsx","webpack://checkout/./packages/core/src/app/common/error/ErrorModal.tsx","webpack://checkout/./packages/core/src/app/common/error/isHtmlError.tsx","webpack://checkout/./packages/checkout-extension/src/ExtensionContext.tsx","webpack://checkout/./packages/core/src/app/shipping/StaticConsignmentItemList.tsx","webpack://checkout/./packages/core/src/app/formFields/mapCustomFormFieldsFromFormValues.ts","webpack://checkout/./packages/core/src/app/formFields/getFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/address/getAddressFormFieldsValidationSchema.ts","webpack://checkout/./packages/locale/src/TranslatedString.tsx","webpack://checkout/./packages/core/src/app/ui/toggle/Toggle.tsx","webpack://checkout/./packages/core/src/app/ui/form/Form.tsx","webpack://checkout/./packages/checkout-extension/src/ExtensionReducer.ts","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createReloadCheckoutHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createSetIframeStyleHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createShowLoadingIndicatorHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createReRenderShippingFormHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/queryHandlers/createGetConsignmentHandler.ts","webpack://checkout/./packages/checkout-extension/src/ExtensionService.ts","webpack://checkout/./packages/checkout-extension/src/ExtensionProvider.tsx","webpack://checkout/./packages/core/src/app/ui/icon/withIconContainer.tsx","webpack://checkout/./packages/locale/src/LocaleProvider.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/ChecklistSkeleton.tsx","webpack://checkout/./packages/ui/src/form/contexts/FormContext.tsx","webpack://checkout/./packages/legacy-hoc/src/createMappableInjectHoc.tsx","webpack://checkout/./packages/core/src/app/checkout/withCheckout.tsx","webpack://checkout/./packages/core/src/app/ui/modal/Modal.tsx","webpack://checkout/./packages/core/src/app/common/error/computeErrorCode.ts","webpack://checkout/./packages/error-handling-utils/src/ErrorLogger.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/isEmbedded.ts","webpack://checkout/./packages/core/src/app/address/StaticAddress.tsx","webpack://checkout/./packages/checkout-button-integration/src/CheckoutButton.tsx","webpack://checkout/./packages/amazon-pay-v2-integration/src/AmazonPayV2Button.tsx","webpack://checkout/./packages/instrument-utils/src/guards/isHTMLElement/isHTMLElement.ts","webpack://checkout/./packages/payment-integration-api/src/errors/EmbeddedCheckoutUnsupportedError.ts","webpack://checkout/./packages/payment-integration-api/src/setPrototypeOf.ts","webpack://checkout/./packages/google-pay-integration/src/GooglePayButton.tsx","webpack://checkout/./packages/payment-integration-api/src/isEmbedded.ts","webpack://checkout/./packages/core/src/app/common/utility/retry.ts","webpack://checkout/./packages/legacy-hoc/src/createInjectHoc.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxInput.tsx","webpack://checkout/./packages/core/src/app/ui/form/FormField.tsx","webpack://checkout/./packages/core/src/app/common/error/ConsoleErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/NoopErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/SentryErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/createErrorLogger.ts","webpack://checkout/./packages/core/src/app/ui/form/DynamicFormFieldType.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/is-braintree-fastlane-method.ts","webpack://checkout/./packages/ui/src/loading/LazyContainer.tsx"],"sourcesContent":["import { Cart, Consignment, PhysicalItem } from '@bigcommerce/checkout-sdk';\nimport { compact, find, isNil, map } from 'lodash';\n\nexport default function findLineItems(cart: Cart, consignment: Consignment): PhysicalItem[] {\n    return compact(\n        map(consignment.lineItemIds, (itemId) =>\n            find(\n                cart.lineItems.physicalItems,\n                (item) => item.id === itemId && isNil(item.parentId),\n            ),\n        ),\n    );\n}\n","enum PaymentMethodId {\n    Adyen = 'adyen',\n    AdyenV2 = 'adyenv2',\n    AdyenV2GooglePay = 'googlepayadyenv2',\n    AdyenV3GooglePay = 'googlepayadyenv3',\n    AdyenV3 = 'adyenv3',\n    Affirm = 'affirm',\n    Afterpay = 'afterpay',\n    AmazonPay = 'amazonpay',\n    ApplePay = 'applepay',\n    Barclaycard = 'barclaycard',\n    BlueSnapV2 = 'bluesnapv2',\n    BlueSnapDirect = 'bluesnapdirect',\n    Boleto = 'boleto',\n    Bolt = 'bolt',\n    Braintree = 'braintree',\n    BraintreeAch = 'braintreeach',\n    BraintreeVenmo = 'braintreevenmo',\n    AuthorizeNetGooglePay = 'googlepayauthorizenet',\n    BNZGooglePay = 'googlepaybnz',\n    BraintreeAcceleratedCheckout = 'braintreeacceleratedcheckout',\n    BraintreeGooglePay = 'googlepaybraintree',\n    PayPalCommerceAcceleratedCheckout = 'paypalcommerceacceleratedcheckout',\n    PayPalCommerceGooglePay = 'googlepaypaypalcommerce',\n    BraintreeVisaCheckout = 'braintreevisacheckout',\n    BraintreeLocalPaymentMethod = 'braintreelocalmethods',\n    BraintreePaypalCredit = 'braintreepaypalcredit',\n    CBAMPGS = 'cba_mpgs',\n    CCAvenueMars = 'ccavenuemars',\n    Checkoutcom = 'checkoutcom',\n    CheckoutcomGooglePay = 'googlepaycheckoutcom',\n    Clearpay = 'clearpay',\n    Converge = 'converge',\n    CybersourceV2GooglePay = 'googlepaycybersourcev2',\n    DigitalRiver = 'digitalriver',\n    Fawry = 'fawry',\n    Humm = 'humm',\n    Ideal = 'ideal',\n    Klarna = 'klarna',\n    Laybuy = 'laybuy',\n    Masterpass = 'masterpass',\n    Mollie = 'mollie',\n    Moneris = 'moneris',\n    OrbitalGooglePay = 'googlepayorbital',\n    Oxxo = 'oxxo',\n    PaypalExpress = 'paypalexpress',\n    PaypalPaymentsPro = 'paypal',\n    PaypalCommerce = 'paypalcommerce',\n    PaypalCommerceCredit = 'paypalcommercecredit',\n    PaypalCommerceCreditCards = 'paypalcommercecreditcards',\n    PaypalCommerceAlternativeMethod = 'paypalcommercealternativemethods',\n    PaypalCommerceVenmo = 'paypalcommercevenmo',\n    Qpay = 'qpay',\n    Quadpay = 'quadpay',\n    Ratepay = 'ratepay',\n    SagePay = 'sagepay',\n    Sepa = 'sepa',\n    Sezzle = 'sezzle',\n    SquareV2 = 'squarev2',\n    StripeGooglePay = 'googlepaystripe',\n    StripeUPEGooglePay = 'googlepaystripeupe',\n    StripeV3 = 'stripev3',\n    StripeUPE = 'stripeupe',\n    WorldpayAccess = 'worldpayaccess',\n    WorldpayAccessGooglePay = 'googlepayworldpayaccess',\n    Zip = 'zip',\n    TdOnlineMartGooglePay = 'googlepaytdonlinemart',\n}\n\nexport default PaymentMethodId;\n","import React, { memo } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Toggle } from '../../ui/toggle';\n\ninterface ShippingOptionAdditionalDescriptionProps {\n    description: string;\n}\n\nconst ShippingOptionAdditionalDescription: React.FunctionComponent<\n    ShippingOptionAdditionalDescriptionProps\n> = ({ description }) => {\n    const CHRACTER_LIMIT = 45;\n\n    return (\n        <div className=\"shippingOption-additionalDescription--container\">\n            <Toggle openByDefault={description.length < CHRACTER_LIMIT}>\n                {({ isOpen, toggle }) => (\n                    <>\n                        <span\n                            className={`shippingOption-additionalDescription ${\n                                isOpen\n                                    ? 'shippingOption-additionalDescription--expanded'\n                                    : 'shippingOption-additionalDescription--collapsed'\n                            }`}\n                        >\n                            {description}\n                        </span>\n                        {!isOpen && (\n                            <a className=\"shippingOption-readMore\" onClick={preventDefault(toggle)}>\n                                <TranslatedString id=\"common.show_more\" />\n                            </a>\n                        )}\n                    </>\n                )}\n            </Toggle>\n        </div>\n    );\n};\n\nexport default memo(ShippingOptionAdditionalDescription);\n","import { ShippingOption } from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { ShopperCurrency } from '../../currency';\n\nimport ShippingOptionAdditionalDescription from './ShippingOptionAdditionalDescription';\nimport './StaticShippingOption.scss';\n\ninterface StaticShippingOptionProps {\n    displayAdditionalInformation?: boolean;\n    method: ShippingOption;\n    shippingCostAfterDiscount?: number;\n}\n\nconst StaticShippingOption: React.FunctionComponent<StaticShippingOptionProps> = ({\n    displayAdditionalInformation = true,\n    method,\n    shippingCostAfterDiscount,\n}) => {\n    const renderShippingPrice = () => {\n        if (shippingCostAfterDiscount !== undefined && shippingCostAfterDiscount !== method.cost) {\n            return (\n                <>\n                    <span className=\"shippingOption-price-before-discount\">\n                        <ShopperCurrency amount={method.cost} />\n                    </span>\n                    <ShopperCurrency amount={shippingCostAfterDiscount} />\n                </>\n            );\n        }\n\n        return (\n            <ShopperCurrency amount={method.cost} />\n        )\n    \n    }\n\n    return (\n        <div className=\"shippingOption shippingOption--alt\" data-test=\"static-shipping-option\">\n            {method.imageUrl && (\n                <span className=\"shippingOption-figure\">\n                    <img\n                        alt={method.description}\n                        className=\"shippingOption-img\"\n                        src={method.imageUrl}\n                    />\n                </span>\n            )}\n            <span className=\"shippingOption-desc\">\n                {method.description}\n                {method.transitTime && (\n                    <span className=\"shippingOption-transitTime\">{method.transitTime}</span>\n                )}\n                {method.additionalDescription && displayAdditionalInformation && (\n                    <ShippingOptionAdditionalDescription\n                        description={method.additionalDescription}\n                    />\n                )}\n            </span>\n            <span className=\"shippingOption-price\">\n                {renderShippingPrice()}\n            </span>\n        </div>\n    );\n};\n\nexport default StaticShippingOption;\n","import { CheckoutSelectors, CheckoutService } from '@bigcommerce/checkout-sdk';\nimport { createContext, useContext } from 'react';\n\nexport interface CheckoutContextProps {\n    checkoutService: CheckoutService;\n    checkoutState: CheckoutSelectors;\n}\n\nconst CheckoutContext = createContext<CheckoutContextProps | undefined>(undefined);\n\nexport function useCheckout() {\n    const context = useContext(CheckoutContext);\n\n    if (!context) {\n        throw new Error('useCheckout must be used within a CheckoutContextProvider');\n    }\n\n    return context;\n}\n\nexport default CheckoutContext;\n","import React, { FunctionComponent, MouseEventHandler } from 'react';\n\nimport { parseAnchor, preventDefault } from '@bigcommerce/checkout/dom-utils';\n\nimport { useLocale } from './LocaleContext';\nimport { TranslatedStringProps } from './TranslatedString';\n\nexport type TranslatedLinkProps = TranslatedStringProps & {\n    testId?: string;\n    onClick: MouseEventHandler;\n};\n\nconst TranslatedLink: FunctionComponent<TranslatedLinkProps> = ({ data, id, onClick, testId }) => {\n    const { language } = useLocale();\n    const translatedString = language.translate(id, data);\n    const parsedString = parseAnchor(translatedString);\n\n    return parsedString.length ? (\n        <>\n            {parsedString[0]}\n            <a data-test={testId} href=\"#\" onClick={preventDefault(onClick)}>\n                {parsedString[1]}\n            </a>\n            {parsedString[2]}\n        </>\n    ) : (\n        <>{translatedString}</>\n    );\n};\n\nexport default TranslatedLink;\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { createInjectHoc, InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithLanguageProps {\n    language: LanguageService;\n}\n\nconst withLanguage: InjectHoc<WithLanguageProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'WithLanguage',\n    pickProps: (value, key) => key === 'language' && !!value,\n});\n\nexport default withLanguage;\n","export default function createAnalyticsService<T>(\n    createFn: (args?: any) => T,\n    createArguments: unknown[] = [],\n) {\n    let analyticsTracker: T;\n\n    return () => {\n        if (analyticsTracker) {\n            return analyticsTracker;\n        }\n\n        analyticsTracker = createFn(...createArguments);\n\n        return analyticsTracker;\n    };\n}\n","import {\n    BodlEventsPayload,\n    BodlService,\n    BraintreeAnalyticTrackerService,\n    CheckoutService,\n    createBodlService,\n    createBraintreeAnalyticTracker,\n    createPayPalCommerceAnalyticTracker,\n    createStepTracker,\n    PayPalCommerceAnalyticTrackerService,\n    StepTracker,\n} from '@bigcommerce/checkout-sdk';\nimport React, { ReactNode, useMemo } from 'react';\n\nimport AnalyticsContext, { AnalyticsEvents } from './AnalyticsContext';\nimport createAnalyticsService from './createAnalyticsService';\n\ninterface AnalyticsProviderProps {\n    checkoutService: CheckoutService;\n    children: ReactNode;\n}\n\nconst AnalyticsProvider = ({ checkoutService, children }: AnalyticsProviderProps) => {\n    const getStepTracker = useMemo(\n        () => createAnalyticsService<StepTracker>(createStepTracker, [checkoutService]),\n        [checkoutService],\n    );\n    const getBodlService = useMemo(\n        () => createAnalyticsService<BodlService>(createBodlService, [checkoutService.subscribe]),\n        [checkoutService],\n    );\n    const getBraintreeAnalyticTracker = useMemo(\n        () =>\n            createAnalyticsService<BraintreeAnalyticTrackerService>(\n                createBraintreeAnalyticTracker,\n                [checkoutService],\n            ),\n        [checkoutService],\n    );\n    const getPayPalCommerceAnalyticTracker = useMemo(\n        () =>\n            createAnalyticsService<PayPalCommerceAnalyticTrackerService>(\n                createPayPalCommerceAnalyticTracker,\n                [checkoutService],\n            ),\n        [checkoutService],\n    );\n\n    const checkoutBegin = () => {\n        getStepTracker().trackCheckoutStarted();\n        getBodlService().checkoutBegin();\n    };\n\n    const trackStepCompleted = (currentStep: string) => {\n        getStepTracker().trackStepCompleted(currentStep);\n        getBodlService().stepCompleted(currentStep);\n    };\n\n    const trackStepViewed = (step: string) => {\n        getStepTracker().trackStepViewed(step);\n    };\n\n    const orderPurchased = () => {\n        getStepTracker().trackOrderComplete();\n        getBodlService().orderPurchased();\n    };\n\n    const customerEmailEntry = (email: string) => {\n        getBodlService().customerEmailEntry(email);\n    };\n\n    const customerSuggestionInit = (payload: BodlEventsPayload) => {\n        getBodlService().customerSuggestionInit(payload);\n    };\n\n    const customerSuggestionExecute = () => {\n        getBodlService().customerSuggestionExecute();\n    };\n\n    const customerPaymentMethodExecuted = (payload: BodlEventsPayload) => {\n        getBodlService().customerPaymentMethodExecuted(payload);\n        getBraintreeAnalyticTracker().customerPaymentMethodExecuted();\n        getPayPalCommerceAnalyticTracker().customerPaymentMethodExecuted();\n    };\n\n    const showShippingMethods = () => {\n        getBodlService().showShippingMethods();\n    };\n\n    const selectedPaymentMethod = (methodName: string, methodId: string) => {\n        getBodlService().selectedPaymentMethod(methodName);\n        getBraintreeAnalyticTracker().selectedPaymentMethod(methodId);\n        getPayPalCommerceAnalyticTracker().selectedPaymentMethod(methodId);\n    };\n\n    const clickPayButton = (payload: BodlEventsPayload) => {\n        getBodlService().clickPayButton(payload);\n    };\n\n    const paymentRejected = () => {\n        getBodlService().paymentRejected();\n    };\n\n    const paymentComplete = () => {\n        getBodlService().paymentComplete();\n        getBraintreeAnalyticTracker().paymentComplete();\n        getPayPalCommerceAnalyticTracker().paymentComplete();\n    };\n\n    const exitCheckout = () => {\n        getBodlService().exitCheckout();\n    };\n\n    const walletButtonClick = (methodId: string) => {\n        getBraintreeAnalyticTracker().walletButtonClick(methodId);\n        getPayPalCommerceAnalyticTracker().walletButtonClick(methodId);\n    };\n\n    const analyticsTracker: AnalyticsEvents = {\n        checkoutBegin,\n        trackStepCompleted,\n        trackStepViewed,\n        orderPurchased,\n        customerEmailEntry,\n        customerSuggestionInit,\n        customerSuggestionExecute,\n        customerPaymentMethodExecuted,\n        showShippingMethods,\n        selectedPaymentMethod,\n        clickPayButton,\n        paymentRejected,\n        paymentComplete,\n        exitCheckout,\n        walletButtonClick,\n    };\n\n    return (\n        <AnalyticsContext.Provider value={{ analyticsTracker }}>\n            {children}\n        </AnalyticsContext.Provider>\n    );\n};\n\nexport default AnalyticsProvider;\n","import {\n    CardInstrument,\n    CustomerAddress,\n    PaymentProviderCustomer,\n} from '@bigcommerce/checkout-sdk';\n\ninterface PayPalFastlaneCustomer {\n    authenticationState?: string;\n    addresses?: CustomerAddress[];\n    instruments?: CardInstrument[];\n}\n\nexport default function isPayPalFastlaneCustomer(\n    customer?: PaymentProviderCustomer,\n): customer is PayPalFastlaneCustomer {\n    if (!customer) {\n        return false;\n    }\n\n    return (\n        'authenticationState' in customer || 'addresses' in customer || 'instruments' in customer\n    );\n}\n","export default function isBuyNowCart(): boolean {\n    const lastPathName = window.location.pathname.split('/').pop();\n\n    return !(lastPathName === 'checkout' || lastPathName === 'embedded-checkout');\n}\n","import { ExtensionRegion } from '@bigcommerce/checkout-sdk';\n\nexport enum ExtensionRegionContainer {\n    ShippingShippingAddressFormBefore = 'extension-region-shipping-shippingaddressform-before',\n    ShippingShippingAddressFormAfter = 'extension-region-shipping-shippingaddressform-after',\n    ShippingSelectedShippingMethod = 'extension-region-shipping-selectedshippingmethod',\n    SummaryAfter = 'extension-region-summary-after',\n    SummaryLastItemAfter = 'extension-region-summary-lastitem-after',\n}\n\nexport const extensionRegionToContainerMap: Record<ExtensionRegion, ExtensionRegionContainer> = {\n    [ExtensionRegion.ShippingShippingAddressFormBefore]:\n        ExtensionRegionContainer.ShippingShippingAddressFormBefore,\n    [ExtensionRegion.ShippingShippingAddressFormAfter]:\n        ExtensionRegionContainer.ShippingShippingAddressFormAfter,\n    [ExtensionRegion.ShippingSelectedShippingMethod]:\n        ExtensionRegionContainer.ShippingSelectedShippingMethod,\n    [ExtensionRegion.SummaryAfter]: ExtensionRegionContainer.SummaryAfter,\n    [ExtensionRegion.SummaryLastItemAfter]: ExtensionRegionContainer.SummaryLastItemAfter,\n};\n","import { ExtensionRegion } from '@bigcommerce/checkout-sdk';\nimport React, { useEffect } from 'react';\n\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { extensionRegionToContainerMap } from './ExtensionRegionContainer';\nimport { useExtensions } from './useExtensions';\n\ninterface ExtensionProps {\n    region: ExtensionRegion;\n}\n\nexport const Extension = ({ region }: ExtensionProps): React.JSX.Element | null => {\n    const {\n        checkoutState: {\n            data: { getExtensions, getConfig, getCheckout },\n        },\n    } = useCheckout();\n    const extensions = getExtensions();\n    const config = getConfig();\n    const checkout = getCheckout();\n    const { extensionService } = useExtensions();\n    const isRegionEnabled =\n        extensions && config && checkout && extensionService.isRegionEnabled(region);\n    const containerId = extensionRegionToContainerMap[region];\n\n    useEffect(() => {\n        if (isRegionEnabled) {\n            void extensionService.renderExtension(containerId, region);\n\n            return () => {\n                extensionService.removeListeners(region);\n            };\n        }\n    }, [containerId, extensionService, isRegionEnabled, region]);\n\n    if (isRegionEnabled) {\n        return <div id={containerId} />;\n    }\n\n    return null;\n};\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconBolt: FunctionComponent = () => (\n    <svg\n        aria-labelledby=\"iconCardBoltTitle\"\n        data-test=\"bolt-icon\"\n        height=\"12\"\n        role=\"img\"\n        viewBox=\"0 0 12 12\"\n        width=\"12\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <title id=\"iconCardBoltTitle\">Bolt</title>\n        <path d=\"M0 7.502h7.5v4.5L12 4.502H4.5V0z\" fill=\"#FFFFFF\" id=\"mark\" />\n    </svg>\n);\n\nexport default withIconContainer(IconBolt);\n","import { ErrorMessage } from 'formik';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\n\nimport { FormContext } from '@bigcommerce/checkout/ui';\n\nexport interface FormFieldErrorProps {\n    name: string;\n    testId?: string;\n    errorId: string;\n}\n\nconst FormFieldError: FunctionComponent<FormFieldErrorProps> = ({ name, testId, errorId }) => {\n    const renderMessage = useCallback(\n        (message: string) => (\n            <ul className=\"form-field-errors\" data-test={testId}>\n                <li className=\"form-field-error\">\n                    <label\n                        aria-live=\"polite\"\n                        className=\"form-inlineMessage\"\n                        htmlFor={name}\n                        id={errorId}\n                        role=\"alert\"\n                    >\n                        {message}\n                    </label>\n                </li>\n            </ul>\n        ),\n        [errorId, name, testId],\n    );\n\n    return (\n        <FormContext.Consumer>\n            {({ isSubmitted }) =>\n                isSubmitted && <ErrorMessage name={name} render={renderMessage} />\n            }\n        </FormContext.Consumer>\n    );\n};\n\nexport default memo(FormFieldError);\n","import {\n    Address,\n    AddressRequestBody,\n    BillingAddress,\n    CustomerAddress,\n} from '@bigcommerce/checkout-sdk';\nimport { isEqual, omit } from 'lodash';\n\ntype ComparableAddress = CustomerAddress | Address | BillingAddress | AddressRequestBody;\ntype ComparableAddressFields = keyof CustomerAddress | keyof Address | keyof BillingAddress;\n\nconst normalizeAddress = (address: Partial<ComparableAddress>) => {\n    const ignoredFields: ComparableAddressFields[] = [\n        'id',\n        'shouldSaveAddress',\n        'stateOrProvince',\n        'type',\n        'email',\n        'country',\n        'customFields',\n    ];\n\n    return omit(address, ignoredFields);\n};\n\nconst isEqualToPayPalFastlaneAddress = (\n    bcAddress: Partial<ComparableAddress>,\n    paypalFastlaneAddress: Partial<ComparableAddress>,\n): boolean => isEqual(normalizeAddress(bcAddress), normalizeAddress(paypalFastlaneAddress));\n\nconst isPayPalFastlaneAddress = (address: Address, addresses?: Address[]): boolean => {\n    if (!addresses || addresses.length === 0) {\n        return false;\n    }\n\n    return addresses.some((paypalFastlaneAddress) =>\n        isEqualToPayPalFastlaneAddress(address, paypalFastlaneAddress),\n    );\n};\n\nexport default isPayPalFastlaneAddress;\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconChevronDown: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconChevronDown);\n","import { Consignment } from '@bigcommerce/checkout-sdk';\nimport { every } from 'lodash';\n\nexport default function hasSelectedShippingOptions(consignments: Consignment[]): boolean {\n    if (!consignments.length) {\n        return false;\n    }\n\n    return every(\n        consignments,\n        (consignment) =>\n            (consignment.selectedShippingOption && consignment.selectedShippingOption.id) ||\n            consignment.selectedShippingOption?.type === 'custom',\n    );\n}\n","import CustomError from './CustomError';\n\nexport default function isCustomError(error: Error): error is CustomError {\n    const customError = error as CustomError;\n\n    return (\n        typeof customError.title !== 'undefined' &&\n        typeof customError.data !== 'undefined' &&\n        typeof customError.type !== 'undefined'\n    );\n}\n","import { CheckoutSettings } from '@bigcommerce/checkout-sdk';\n\nexport default function isExperimentEnabled(\n    checkoutSettings: CheckoutSettings | undefined,\n    experimentName: string,\n): boolean {\n    return Boolean(checkoutSettings?.features[experimentName] ?? true);\n}\n","import CheckoutSupport from './CheckoutSupport';\n\nexport default class NoopCheckoutSupport implements CheckoutSupport {\n    isSupported(): boolean {\n        return true;\n    }\n}\n","import { CustomError, setPrototypeOf } from '../../common/error';\n\nexport class EmbeddedCheckoutUnsupportedError extends CustomError {\n    constructor(message: string) {\n        super({\n            name: 'EMBEDDED_CHECKOUT_UNSUPPORTED_ERROR',\n            message,\n        });\n\n        setPrototypeOf(this, EmbeddedCheckoutUnsupportedError.prototype);\n    }\n}\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { CheckoutSupport } from '../checkout';\n\nimport { EmbeddedCheckoutUnsupportedError } from './errors';\n\nexport default class EmbeddedCheckoutSupport implements CheckoutSupport {\n    constructor(private unsupportedMethods: string[], private langService: LanguageService) {}\n\n    isSupported(...ids: string[]): boolean {\n        const unsupportedMethods = ids.filter((id) => this.unsupportedMethods.indexOf(id) >= 0);\n\n        if (unsupportedMethods.length === 0) {\n            return true;\n        }\n\n        throw new EmbeddedCheckoutUnsupportedError(\n            this.langService.translate('embedded_checkout.unsupported_error', {\n                methods: unsupportedMethods.join(', '),\n            }),\n        );\n    }\n}\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { CheckoutSupport, NoopCheckoutSupport } from '../checkout';\n\nimport EmbeddedCheckoutSupport from './EmbeddedCheckoutSupport';\nimport isEmbedded from './isEmbedded';\n\nconst UNSUPPORTED_METHODS = ['afterpay', 'applepay', 'amazonpay', 'googlepay', 'klarna', 'masterpass'];\n\nexport default function createEmbeddedCheckoutSupport(language: LanguageService): CheckoutSupport {\n    return isEmbedded()\n        ? new EmbeddedCheckoutSupport(UNSUPPORTED_METHODS, language)\n        : new NoopCheckoutSupport();\n}\n","import { createInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport { ExtensionContext } from './ExtensionContext';\n\nexport const withExtension = createInjectHoc(ExtensionContext, {\n    displayNamePrefix: 'WithExtension',\n});\n","import React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nexport interface LoadingNotificationProps {\n    isLoading: boolean;\n}\n\nconst LoadingNotification: FunctionComponent<LoadingNotificationProps> = ({ isLoading }) => {\n    if (!isLoading) {\n        return null;\n    }\n\n    return (\n        <div className=\"loadingNotification\">\n            <div className=\"loadingNotification-label optimizedCheckout-loadingToaster\">\n                <div className=\"spinner\" />\n\n                <span aria-live=\"assertive\" className=\"label\" role=\"alert\">\n                    <TranslatedString id=\"common.loading_text\" />\n                </span>\n            </div>\n        </div>\n    );\n};\n\nexport default memo(LoadingNotification);\n","import React, { PureComponent, ReactNode } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\nimport { LoadingOverlay } from '@bigcommerce/checkout/ui';\n\n\nexport interface EmptyCartMessageProps {\n    waitInterval?: number;\n    loginUrl: string;\n}\n\ninterface EmptyCartMessageState {\n    isWaiting: boolean;\n}\n\nexport default class EmptyCartMessage extends PureComponent<\n    EmptyCartMessageProps,\n    EmptyCartMessageState\n> {\n    state: EmptyCartMessageState = {\n        isWaiting: true,\n    };\n\n    private waitToken?: number;\n\n    componentDidMount(): void {\n        const { waitInterval } = this.props;\n\n        // @ts-ignore\n        this.waitToken = setTimeout(() => {\n            this.setState({ isWaiting: false });\n        }, waitInterval);\n    }\n\n    componentWillUnmount(): void {\n        clearInterval(this.waitToken);\n    }\n\n    render(): ReactNode {\n        const { loginUrl } = this.props;\n        const { isWaiting } = this.state;\n\n        return (\n            <LoadingOverlay hideContentWhenLoading isLoading={isWaiting}>\n                <TranslatedHtml data={{ url: loginUrl }} id=\"cart.empty_cart_message\" />\n            </LoadingOverlay>\n        );\n    }\n}\n","enum CustomerViewType {\n    Guest = 'guest',\n    Login = 'login',\n    SuggestedLogin = 'suggested_login',\n    EnforcedLogin = 'enforced_login',\n    CancellableEnforcedLogin = 'cancellable_enforced_login',\n    CreateAccount = 'create_account',\n}\n\nexport default CustomerViewType;\n","import React, { FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\n\ninterface WalletButtonsProps {\n    buttonsCount: number;\n}\n\nconst WalletButtonContainerSkeleton: FunctionComponent<\n    LoadingSkeletonProps & WalletButtonsProps\n> = ({ buttonsCount, children, isLoading }) => {\n    const renderWhileLoading = true;\n    const skeleton = (\n        <div className=\"checkoutRemote customer-skeleton\">\n            {Array(buttonsCount)\n                .fill(0)\n                .map((_v, i) => (\n                    <div className=\"skeleton-container\" key={`skeleton-container-${i}`}>\n                        <div className=\"input-skeleton\" />\n                    </div>\n                ))}\n        </div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, renderWhileLoading, skeleton }} />;\n};\n\nexport default WalletButtonContainerSkeleton;\n","import { CheckoutSettings } from '@bigcommerce/checkout-sdk';\n\nimport { isExperimentEnabled, shouldFilterApplePay } from '../common/utility';\n\nconst APPLE_PAY = 'applepay';\n\n// TODO: The API should tell UI which payment method offers its own checkout button\nexport const SUPPORTED_METHODS: string[] = [\n    'amazonpay',\n    APPLE_PAY,\n    'chasepay',\n    'braintreevisacheckout',\n    'braintreepaypal',\n    'braintreepaypalcredit',\n    'masterpass',\n    'paypalcommerce',\n    'paypalcommercevenmo',\n    'paypalcommercecredit',\n    'googlepayadyenv2',\n    'googlepayadyenv3',\n    'googlepayauthorizenet',\n    'googlepaybnz',\n    'googlepaybraintree',\n    'googlepaycheckoutcom',\n    'googlepaycybersourcev2',\n    'googlepayorbital',\n    'googlepaystripe',\n    'googlepaystripeupe',\n    'googlepayworldpayaccess',\n    'googlepaypaypalcommerce',\n    'googlepaytdonlinemart',\n];\n\nexport const getSupportedMethodIds = (methodIds: string[], checkoutSettings?: CheckoutSettings): string[] => {\n    return methodIds.filter((methodId) => {\n        // TODO: this check have to be deleted after implementation of Apple Pay for third party browsers will be tested and released\n        if (shouldFilterApplePay(methodId, isExperimentEnabled(checkoutSettings, 'PAYPAL-4324.applepay_web_browser_support'))) {\n            return false;\n        }\n\n        return SUPPORTED_METHODS.indexOf(methodId) !== -1;\n    });\n}\n","import { isApplePayWindow } from './';\n\nexport default function shouldFilterApplePay(methodId: string, isBrowserSupported: boolean): boolean {\n    if (methodId !== 'applepay') {\n        return false;\n    }\n\n    return !isApplePayWindow(window) && !isBrowserSupported;\n}\n","interface ApplePayWindow extends Window {\n    ApplePaySession: void;\n}\n\nexport default function isApplePayWindow(window: Window): window is ApplePayWindow {\n    return 'ApplePaySession' in window;\n}\n","import { CustomerInitializeOptions, CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { PureComponent } from 'react';\n\nconst WALLET_BUTTON_HEIGHT = 36;\n\nexport interface CheckoutButtonProps {\n    containerId: string;\n    methodId: string;\n    isShowingWalletButtonsOnTop?: boolean;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onError?(error: Error): void;\n    onClick?(methodId: string): void;\n}\n\nexport default class CheckoutButton extends PureComponent<CheckoutButtonProps> {\n    componentDidMount() {\n        const {\n            containerId,\n            initialize,\n            isShowingWalletButtonsOnTop,\n            methodId,\n            onError,\n            onClick = noop,\n        } = this.props;\n\n        const heightOption = isShowingWalletButtonsOnTop && (methodId === 'braintreepaypal' || methodId === 'braintreepaypalcredit' )\n            ? { buttonHeight: WALLET_BUTTON_HEIGHT }\n            : {};\n\n        initialize({\n            methodId,\n            [methodId]: {\n                ...heightOption,\n                container: containerId,\n                onError,\n                onClick: () => onClick(methodId),\n            },\n        });\n    }\n\n    componentWillUnmount() {\n        const { deinitialize, methodId } = this.props;\n\n        deinitialize({ methodId });\n    }\n\n    render() {\n        const { containerId } = this.props;\n\n        return <div id={containerId} />;\n    }\n}\n","import { noop } from 'lodash';\n\nimport { isBuyNowCart } from '../common/utility';\n\nexport default function navigateToOrderConfirmation(\n    orderId?: number,\n): Promise<never> {\n    let url: string;\n\n    if (orderId && isBuyNowCart()) {\n        url = `/checkout/order-confirmation/${orderId.toString()}`;\n    } else {\n        url = `${window.location.pathname.replace(/\\/$/, '')}/order-confirmation`;\n    }\n\n    window.location.replace(url);\n\n    return new Promise(noop);\n}\n","import { CustomerInitializeOptions } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, useCallback, useContext } from 'react';\n\nimport { LocaleContext } from '@bigcommerce/checkout/locale';\n\nimport { navigateToOrderConfirmation } from '../../checkout';\nimport CheckoutButton, { CheckoutButtonProps } from '../CheckoutButton';\n\nconst ApplePayButton: FunctionComponent<CheckoutButtonProps> = ({\n    initialize,\n    onError,\n    onClick = noop,\n    ...rest\n}) => {\n    const localeContext = useContext(LocaleContext);\n    const initializeOptions = useCallback(\n        (options: CustomerInitializeOptions) =>\n            initialize({\n                ...options,\n                applepay: {\n                    container: rest.containerId,\n                    shippingLabel: localeContext?.language.translate('cart.shipping_text'),\n                    subtotalLabel: localeContext?.language.translate('cart.subtotal_text'),\n                    onError,\n                    onClick: () => onClick(rest.methodId),\n                    onPaymentAuthorize: navigateToOrderConfirmation,\n                },\n            }),\n        [initialize, localeContext, onError, rest.containerId],\n    );\n\n    return <CheckoutButton initialize={initializeOptions} {...rest} />;\n};\n\nexport default ApplePayButton;\n","import { CustomerInitializeOptions } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, useCallback, useContext } from 'react';\n\nimport { LocaleContext } from '@bigcommerce/checkout/locale';\n\nimport { navigateToOrderConfirmation } from '../../checkout';\nimport CheckoutButton, { CheckoutButtonProps } from '../CheckoutButton';\n\nconst PayPalCommerceButton: FunctionComponent<CheckoutButtonProps> = ({\n    methodId,\n    initialize,\n    onError,\n    onClick = noop,\n    ...rest\n}) => {\n    const localeContext = useContext(LocaleContext);\n    const initializeOptions = useCallback(\n        (options: CustomerInitializeOptions) =>\n            initialize({\n                ...options,\n                [methodId]: {\n                    container: rest.containerId,\n                    onError,\n                    onClick: () => onClick(methodId),\n                    onComplete: navigateToOrderConfirmation,\n                },\n            }),\n        [initialize, localeContext, onError, rest.containerId],\n    );\n\n    return <CheckoutButton initialize={initializeOptions} methodId={methodId} {...rest} />;\n};\n\nexport default PayPalCommerceButton;\n","import { CustomerInitializeOptions, CustomerRequestOptions } from \"@bigcommerce/checkout-sdk\";\nimport React, { FunctionComponent } from \"react\";\n\nimport CheckoutButton from \"./CheckoutButton\";\nimport { ApplePayButton, PayPalCommerceButton } from \"./customWalletButton\";\n\ninterface CheckoutButtonV1ResolverProps {\n    methodId: string;\n    deinitialize(options: CustomerRequestOptions): void;\n    isShowingWalletButtonsOnTop?: boolean;\n    initialize(options: CustomerInitializeOptions): void;\n    onError?(error: Error): void;\n    onClick?(methodName: string): void;\n}\n\nconst CheckoutButtonV1Resolver: FunctionComponent<CheckoutButtonV1ResolverProps> = ({\n    isShowingWalletButtonsOnTop= false,\n    onError,\n    methodId,\n    ...rest\n}) => {\n    switch (methodId) {\n        case 'applepay':\n            return (\n                <ApplePayButton\n                    containerId={`${methodId}CheckoutButton`}\n                    key={methodId}\n                    methodId={methodId}\n                    onError={onError}\n                    {...rest}\n                />\n            );\n\n        case 'paypalcommerce':\n        case 'paypalcommercecredit':\n            return (\n                <PayPalCommerceButton\n                    containerId={`${methodId}CheckoutButton`}\n                    key={methodId}\n                    methodId={methodId}\n                    onError={onError}\n                    {...rest}\n                />\n            );\n    }\n\n    return <CheckoutButton\n            containerId={`${methodId}CheckoutButton`}\n            isShowingWalletButtonsOnTop={isShowingWalletButtonsOnTop}\n            key={methodId}\n            methodId={methodId}\n            onError={onError}\n            {...rest}\n        />;\n};\n\nexport default CheckoutButtonV1Resolver;\n","import { CheckoutSelectors, CheckoutService } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString, useLocale } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { WalletButtonsContainerSkeleton } from '@bigcommerce/checkout/ui';\n\n\nimport { withCheckout } from '../checkout';\n\nimport { getSupportedMethodIds } from './getSupportedMethods';\nimport resolveCheckoutButton from './resolveCheckoutButton';\nimport CheckoutButtonV1Resolver from './WalletButtonV1Resolver';\n\ninterface CheckoutButtonContainerProps {\n    isPaymentStepActive: boolean;\n    checkEmbeddedSupport(methodIds: string[]): void;\n    onUnhandledError(error: Error): void;\n    onWalletButtonClick(methodId: string): void;\n}\n\ninterface WithCheckoutCheckoutButtonContainerProps {\n    availableMethodIds: string[];\n    checkoutState: CheckoutSelectors;\n    checkoutService: CheckoutService;\n    isLoading: boolean;\n}\n\nconst paypalCommerceIds = [\n    'paypalcommerce',\n    'paypalcommercecredit',\n    'paypalcommercevenmo',\n];\n\nconst isPayPalCommerce = (methodId: string): boolean => paypalCommerceIds.includes(methodId);\n\nconst CheckoutButtonContainer: FunctionComponent<CheckoutButtonContainerProps & WithCheckoutCheckoutButtonContainerProps> = (\n    {\n        availableMethodIds,\n        checkoutService,\n        checkoutState,\n        checkEmbeddedSupport,\n        isLoading,\n        isPaymentStepActive,\n        onUnhandledError,\n        onWalletButtonClick,\n    }) => {\n    const { language } = useLocale();\n\n    try {\n        checkEmbeddedSupport(availableMethodIds);\n    } catch (error) {\n        return null;\n    }\n\n    const renderButtons = () => availableMethodIds.map((methodId) => {\n        if (isPaymentStepActive && isPayPalCommerce(methodId)) {\n            return null;\n        }\n\n        const ResolvedCheckoutButton = resolveCheckoutButton({ id: methodId });\n\n        if (!ResolvedCheckoutButton) {\n            return <CheckoutButtonV1Resolver\n                deinitialize={checkoutService.deinitializeCustomer}\n                initialize={checkoutService.initializeCustomer}\n                isShowingWalletButtonsOnTop={true}\n                key={methodId}\n                methodId={methodId}\n                onClick={onWalletButtonClick}\n                onError={onUnhandledError}\n            />\n        }\n\n        return <ResolvedCheckoutButton\n                    checkoutService={checkoutService}\n                    checkoutState={checkoutState}\n                    containerId={`${methodId}CheckoutButton`}\n                    key={methodId}\n                    language={language}\n                    methodId={methodId}\n                    onUnhandledError={onUnhandledError}\n                    onWalletButtonClick={onWalletButtonClick}\n                />;\n    });\n\n    return (\n        <div className='checkout-button-container'\n             style={ isPaymentStepActive ? { position: 'absolute', left: '0', top: '-100%' } : undefined }\n        >\n            <p>\n                <TranslatedString id=\"remote.start_with_text\" />\n            </p>\n            <div className='checkout-buttons-auto-layout'>\n                <WalletButtonsContainerSkeleton buttonsCount={availableMethodIds.length} isLoading={isLoading}>\n                    <div className=\"checkoutRemote\">\n                        {renderButtons()}\n                    </div>\n                </WalletButtonsContainerSkeleton>\n            </div>\n            <div className='checkout-separator'><span><TranslatedString id='remote.or_text' /></span></div>\n        </div>\n    );\n};\n\nfunction mapToCheckoutButtonContainerProps({\n    checkoutState,\n    checkoutService,\n}: CheckoutContextProps): WithCheckoutCheckoutButtonContainerProps | null {\n    const {\n        data: {\n            getConfig,\n            getCustomer,\n            isPaymentDataRequired,\n        },\n        statuses: {\n            isInitializedCustomer,\n        },\n        errors: {\n            getInitializeCustomerError,\n        }\n     } = checkoutState;\n    const config = getConfig();\n    const checkoutSettings = config?.checkoutSettings;\n    const providers = config?.checkoutSettings.remoteCheckoutProviders ?? [];\n\n    const availableMethodIds = getSupportedMethodIds(providers, checkoutSettings);\n    const customer = getCustomer();\n\n    if (!isPaymentDataRequired()) {\n        return null;\n    }\n\n    if (!config || availableMethodIds.length === 0 || !customer?.isGuest) {\n        return null;\n    }\n\n    const isLoading = availableMethodIds.filter(\n        (methodId) => Boolean(getInitializeCustomerError(methodId)) || isInitializedCustomer(methodId)\n    ).length !== availableMethodIds.length;\n\n    return {\n        checkoutService,\n        checkoutState,\n        availableMethodIds,\n        isLoading,\n    }\n}\n\nexport default memo(withCheckout(mapToCheckoutButtonContainerProps)(CheckoutButtonContainer));\n","import { ComponentType } from 'react';\n\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nimport { resolveComponent } from '../common/resolver';\n\nexport default function resolveCheckoutButton(\n    resolveId: CheckoutButtonResolveId,\n): ComponentType<CheckoutButtonProps> | undefined {\n    return resolveComponent<CheckoutButtonResolveId, CheckoutButtonProps>(\n        resolveId,\n        require('../generated/checkoutButtons'),\n    );\n}\n","import { useContext, useMemo } from 'react';\n\nimport AnalyticsContext from './AnalyticsContext';\n\nconst useAnalytics = () => {\n    const analyticsContext = useContext(AnalyticsContext);\n\n    if (!analyticsContext) {\n        throw new Error('useAnalytics must be used within an <AnalyticsProvider>');\n    }\n\n    return useMemo(\n        () => ({\n            analyticsTracker: analyticsContext.analyticsTracker,\n        }),\n        [analyticsContext],\n    );\n};\n\nexport default useAnalytics;\n","import {\n    CheckoutSelectors,\n    CustomerInitializeOptions,\n    CustomerRequestOptions,\n    ExecutePaymentMethodCheckoutOptions,\n} from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, useEffect, useState } from 'react';\n\nimport { useAnalytics } from '@bigcommerce/checkout/analytics';\nimport { stopPropagation } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button } from '../../ui/button';\nimport { IconBolt } from '../../ui/icon';\n\nexport interface BoltCheckoutSuggestionProps {\n    isExecutingPaymentMethodCheckout: boolean;\n    methodId: string;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n    onUnhandledError?(error: Error): void;\n}\n\nconst BoltCheckoutSuggestion: FunctionComponent<BoltCheckoutSuggestionProps> = ({\n    isExecutingPaymentMethodCheckout,\n    methodId,\n    deinitializeCustomer,\n    executePaymentMethodCheckout,\n    initializeCustomer,\n    onUnhandledError = noop,\n}) => {\n    const [showSuggestion, setShowSuggestion] = useState<boolean>(false);\n    const { analyticsTracker } = useAnalytics();\n\n    useEffect(() => {\n        deinitializeCustomer({ methodId });\n\n        try {\n            initializeCustomer({\n                methodId,\n                bolt: {\n                    onInit: (hasBoltAccount, email) => {\n                        setShowSuggestion(hasBoltAccount);\n\n                        if (email) {\n                            analyticsTracker.customerSuggestionInit({hasBoltAccount});\n                        }\n                    },\n                },\n            });\n        } catch (error) {\n            onUnhandledError(error);\n        }\n\n        return () => {\n            deinitializeCustomer({ methodId });\n        };\n    }, [initializeCustomer, deinitializeCustomer, methodId, onUnhandledError]);\n\n    if (!showSuggestion) {\n        return null;\n    }\n\n    const handleActionClick = async () => {\n        await executePaymentMethodCheckout({ methodId });\n    };\n\n    return (\n        <div className=\"checkoutSuggestion\" onClick={stopPropagation()}>\n            <p className=\"checkoutSuggestion-message\">\n                <TranslatedString\n                    data={{\n                        provider: 'Bolt',\n                        providerFlow: 'Bolt Checkout',\n                    }}\n                    id=\"customer.suggestion_text\"\n                />\n            </p>\n            <Button\n                className=\"checkoutSuggestion-button checkoutSuggestion-button--bolt\"\n                data-test=\"suggestion-action-button\"\n                isLoading={isExecutingPaymentMethodCheckout}\n                onClick={handleActionClick}\n            >\n                <IconBolt additionalClassName=\"checkoutSuggestion-button-icon--bolt\" />\n                <TranslatedString\n                    data={{ providerFlow: 'Bolt Checkout' }}\n                    id=\"customer.suggestion_action\"\n                />\n            </Button>\n        </div>\n    );\n};\n\nexport default memo(BoltCheckoutSuggestion);\n","import { SyntheticEvent } from 'react';\n\nexport default function stopPropagation<\n    TFunc extends (event: TEvent, ...args: any[]) => any,\n    TEvent extends SyntheticEvent,\n>(fn?: TFunc): (event: TEvent) => void {\n    return (event) => {\n        event.stopPropagation();\n\n        if (fn) {\n            fn(event);\n        }\n    };\n}\n","import {\n    CheckoutSelectors,\n    CustomerInitializeOptions,\n    CustomerRequestOptions,\n    ExecutePaymentMethodCheckoutOptions,\n} from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { useAnalytics } from '@bigcommerce/checkout/analytics';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { withCheckout } from '../../checkout';\nimport { PaymentMethodId } from '../../payment/paymentMethod';\n\n\nimport BoltCheckoutSuggestion from './BoltCheckoutSuggestion';\n\nexport interface CheckoutSuggestionProps {\n    onUnhandledError?(error: Error): void;\n}\n\nexport interface WithCheckoutSuggestionsProps {\n    isExecutingPaymentMethodCheckout: boolean;\n    providerWithCustomCheckout?: string;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n}\n\nconst CheckoutSuggestion: FunctionComponent<\n    WithCheckoutSuggestionsProps & CheckoutSuggestionProps\n> = ({\n    providerWithCustomCheckout,\n    executePaymentMethodCheckout,\n    ...rest\n}) => {\n    const { analyticsTracker } = useAnalytics();\n\n    const handleExecutePaymentMethodCheckout = (options: ExecutePaymentMethodCheckoutOptions) => {\n        analyticsTracker.customerSuggestionExecute();\n\n        return executePaymentMethodCheckout(options);\n    }\n\n    if (providerWithCustomCheckout === PaymentMethodId.Bolt) {\n        return <BoltCheckoutSuggestion\n                    executePaymentMethodCheckout={handleExecutePaymentMethodCheckout}\n                    methodId={providerWithCustomCheckout}\n                    {...rest}\n                />;\n    }\n\n    return null;\n};\n\nconst mapToCheckoutSuggestionProps = ({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutSuggestionsProps | null => {\n    const {\n        data: { getCheckout, getConfig },\n        statuses: { isExecutingPaymentMethodCheckout },\n    } = checkoutState;\n\n    const checkout = getCheckout();\n    const config = getConfig();\n\n    if (!checkout || !config) {\n        return null;\n    }\n\n    return {\n        deinitializeCustomer: checkoutService.deinitializeCustomer,\n        executePaymentMethodCheckout: checkoutService.executePaymentMethodCheckout,\n        initializeCustomer: checkoutService.initializeCustomer,\n        isExecutingPaymentMethodCheckout: isExecutingPaymentMethodCheckout(),\n        providerWithCustomCheckout: config.checkoutSettings.providerWithCustomCheckout || undefined,\n    };\n};\n\nexport default withCheckout(mapToCheckoutSuggestionProps)(memo(CheckoutSuggestion));\n","import { Checkout, Customer } from '@bigcommerce/checkout-sdk';\nimport { every } from 'lodash';\n\nimport { SUPPORTED_METHODS } from './getSupportedMethods';\n\nconst SUPPORTED_SIGNOUT_METHODS = ['amazonpay'];\n\nexport const isSupportedSignoutMethod = (methodId: string): boolean => {\n    return SUPPORTED_SIGNOUT_METHODS.indexOf(methodId) > -1;\n};\n\nexport default function canSignOut(\n    customer: Customer,\n    checkout: Checkout,\n    methodId: string,\n): boolean {\n    if (isSupportedSignoutMethod(methodId)) {\n        return true;\n    }\n\n    if (customer.isGuest) {\n        return false;\n    }\n\n    // Return false if payment method offers its own checkout button\n    return every(\n        checkout.payments,\n        (payment) => SUPPORTED_METHODS.indexOf(payment.providerId) === -1,\n    );\n}\n","import { CheckoutSelectors, CustomerRequestOptions, CustomError } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { withCheckout } from '../checkout';\nimport { isErrorWithType } from '../common/error';\nimport { isExperimentEnabled } from '../common/utility';\nimport { Button, ButtonSize, ButtonVariant } from '../ui/button';\n\nimport canSignOut, { isSupportedSignoutMethod } from './canSignOut';\n\nexport interface CustomerInfoProps {\n    onSignOut?(event: CustomerSignOutEvent): void;\n    onSignOutError?(error: CustomError): void;\n}\n\nexport interface CustomerSignOutEvent {\n    isCartEmpty: boolean;\n}\n\ninterface WithCheckoutCustomerInfoProps {\n    email: string;\n    methodId: string;\n    isRedirectExperimentEnabled: boolean;\n    isSignedIn: boolean;\n    isSigningOut: boolean;\n    logoutLink: string;\n    shouldRedirectToStorefrontForAuth: boolean;\n    signOut(options?: CustomerRequestOptions): Promise<CheckoutSelectors>;\n}\n\nconst CustomerInfo: FunctionComponent<CustomerInfoProps & WithCheckoutCustomerInfoProps> = ({\n    email,\n    methodId,\n    isSignedIn,\n    isSigningOut,\n    isRedirectExperimentEnabled,\n    logoutLink,\n    shouldRedirectToStorefrontForAuth,\n    onSignOut = noop,\n    onSignOutError = noop,\n    signOut,\n}) => {\n    const handleSignOut: () => Promise<void> = async () => {\n        try {\n            if (isRedirectExperimentEnabled && shouldRedirectToStorefrontForAuth) {\n                window.location.assign(logoutLink);\n\n                return;\n            }\n\n            if (isSupportedSignoutMethod(methodId)) {\n                await signOut({ methodId });\n                onSignOut({ isCartEmpty: false });\n                window.location.reload();\n            } else {\n                await signOut();\n                onSignOut({ isCartEmpty: false });\n            }\n        } catch (error) {\n            if (isErrorWithType(error) && error.type === 'checkout_not_available') {\n                onSignOut({ isCartEmpty: true });\n            } else {\n                onSignOutError(error);\n            }\n        }\n    };\n\n    return (\n        <div className=\"customerView\" data-test=\"checkout-customer-info\">\n            <div\n                className=\"customerView-body optimizedCheckout-contentPrimary\"\n                data-test=\"customer-info\"\n            >\n                {email}\n            </div>\n\n            <div className=\"customerView-actions\">\n                {isSignedIn && (\n                    <Button\n                        isLoading={isSigningOut}\n                        onClick={handleSignOut}\n                        size={ButtonSize.Tiny}\n                        testId=\"sign-out-link\"\n                        variant={ButtonVariant.Secondary}\n                    >\n                        <TranslatedString id=\"customer.sign_out_action\" />\n                    </Button>\n                )}\n            </div>\n        </div>\n    );\n};\n\nfunction mapToWithCheckoutCustomerInfoProps({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutCustomerInfoProps | null {\n    const {\n        data: { getBillingAddress, getCheckout, getCustomer, getConfig },\n        statuses: { isSigningOut },\n    } = checkoutState;\n\n    const billingAddress = getBillingAddress();\n    const checkout = getCheckout();\n    const customer = getCustomer();\n    const config = getConfig();\n\n    if (!billingAddress || !checkout || !customer || !config) {\n        return null;\n    }\n\n    const { checkoutSettings, links: { logoutLink } } = config;\n\n    const isRedirectExperimentEnabled = isExperimentEnabled(checkoutSettings, 'CHECKOUT-9138.redirect_to_storefront_for_auth');\n\n    const methodId =\n        checkout.payments && checkout.payments.length === 1 ? checkout.payments[0].providerId : '';\n\n    return {\n        email: billingAddress.email || customer.email,\n        methodId,\n        isRedirectExperimentEnabled,\n        isSignedIn: canSignOut(customer, checkout, methodId),\n        isSigningOut: isSigningOut(),\n        logoutLink,\n        shouldRedirectToStorefrontForAuth: checkoutSettings.shouldRedirectToStorefrontForAuth,\n        signOut: checkoutService.signOutCustomer,\n    };\n}\n\nexport default withCheckout(mapToWithCheckoutCustomerInfoProps)(CustomerInfo);\n","import React, { FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\n\nconst CustomerSkeleton: FunctionComponent<LoadingSkeletonProps> = ({ children, isLoading }) => {\n    const skeleton = (\n        <div className=\"checkout-form customer-skeleton\">\n            <div className=\"customerEmail-container\">\n                <div className=\"customerEmail-body\">\n                    <div className=\"skeleton-container\">\n                        <div className=\"input-skeleton\" />\n                    </div>\n                    <div className=\"button-skeleton skeleton-container subscription-skeleton\" />\n                </div>\n                <div className=\"customerEmail-action customerEmail-floating--enabled\">\n                    <div className=\"button-skeleton skeleton-container\" />\n                </div>\n            </div>\n        </div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, skeleton }} />;\n};\n\nexport default CustomerSkeleton;\n","import React, { FunctionComponent, useEffect } from 'react';\n\nimport CheckoutButton, { CheckoutButtonProps } from '../CheckoutButton';\n\nconst AmazonPayV2Button: FunctionComponent<CheckoutButtonProps> = (props) => {\n    useEffect(() => {\n        beautifyAmazonButton();\n    }, []);\n\n    return (\n        <div className=\"AmazonPayContainer\">\n            <CheckoutButton {...props} />\n        </div>\n    );\n}\n\nexport default AmazonPayV2Button;\n\nconst beautifyAmazonButton = (): void => {\n    if (!document.querySelector('.checkout-button-container')) {\n        return;\n    }\n\n    const container = document.querySelector('#amazonpayCheckoutButton > div') as unknown as HTMLElement;\n    const amazonButton = container?.shadowRoot?.querySelector('.amazonpay-button-view1') as unknown as HTMLElement;\n\n    if (container && amazonButton) {\n        amazonButton.style.height = '36px';\n\n        return;\n    }\n\n    setTimeout(beautifyAmazonButton, 10);\n}\n","import { CheckoutSettings, CustomerInitializeOptions, CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport CheckoutButton from './CheckoutButton';\nimport { AmazonPayV2Button, ApplePayButton, PayPalCommerceButton } from './customWalletButton';\nimport { getSupportedMethodIds } from './getSupportedMethods';\n\nexport interface CheckoutButtonListProps {\n    methodIds?: string[];\n    isInitializing?: boolean;\n    isShowingWalletButtonsOnTop?: boolean;\n    hideText?: boolean;\n    checkEmbeddedSupport?(methodIds: string[]): void;\n    checkoutSettings: CheckoutSettings;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onError?(error: Error): void;\n    onClick?(methodId: string): void;\n}\n\nconst CheckoutButtonList: FunctionComponent<CheckoutButtonListProps> = ({\n    checkEmbeddedSupport,\n    onError,\n    isInitializing = false,\n    isShowingWalletButtonsOnTop= false,\n    checkoutSettings,\n    methodIds = [],\n    hideText = false,\n    ...rest\n}) => {\n    const supportedMethodIds = getSupportedMethodIds(methodIds, checkoutSettings);\n\n    if (supportedMethodIds.length === 0) {\n        return null;\n    }\n\n    if (checkEmbeddedSupport) {\n        try {\n            checkEmbeddedSupport(supportedMethodIds);\n        } catch (error) {\n            if (error instanceof Error && onError) {\n                onError(error);\n            } else {\n                throw error;\n            }\n\n            return null;\n        }\n    }\n\n    return (\n        <>\n            {!isInitializing && !hideText && (\n                <p>\n                    <TranslatedString id=\"remote.continue_with_text\" />\n                </p>\n            )}\n\n            <div className=\"checkoutRemote\">\n                {methodIds.map((methodId) => {\n                    if (methodId === 'applepay') {\n                        return (\n                            <ApplePayButton\n                                containerId={`${methodId}CheckoutButton`}\n                                key={methodId}\n                                methodId={methodId}\n                                onError={onError}\n                                {...rest}\n                            />\n                        );\n                    }\n\n                    if (methodId === 'amazonpay') {\n                        return (\n                            <AmazonPayV2Button\n                                containerId={`${methodId}CheckoutButton`}\n                                key={methodId}\n                                methodId={methodId}\n                                onError={onError}\n                                {...rest}\n                            />\n                        );\n                    }\n\n                    if (methodId === 'paypalcommerce' || methodId === 'paypalcommercecredit') {\n                        return (\n                            <PayPalCommerceButton\n                                containerId={`${methodId}CheckoutButton`}\n                                key={methodId}\n                                methodId={methodId}\n                                onError={onError}\n                                {...rest}\n                            />\n                        );\n                    }\n\n                    return (\n                        <CheckoutButton\n                            containerId={`${methodId}CheckoutButton`}\n                            isShowingWalletButtonsOnTop={isShowingWalletButtonsOnTop}\n                            key={methodId}\n                            methodId={methodId}\n                            onError={onError}\n                            {...rest}\n                        />\n                    );\n                })}\n            </div>\n        </>\n    );\n};\n\nexport default memo(CheckoutButtonList);\n","// NOTE: This is a legacy regex used to create accounts, more flexible than the current used one\n// we need to keep this regex for login validation as accounts might have been created using this regex\nexport const EMAIL_REGEXP =\n    /^[a-z0-9!#$%&'*+/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\nimport { object, ObjectSchema, string } from 'yup';\n\nimport { EMAIL_REGEXP } from './validationPatterns';\n\nexport interface EmailValidationSchemaOptions {\n    language: LanguageService;\n}\n\nexport default function getEmailValidationSchema({\n    language,\n}: EmailValidationSchemaOptions): ObjectSchema<{ email: string }> {\n    return object({\n        email: string()\n            .max(256)\n            .matches(EMAIL_REGEXP, language.translate('customer.email_invalid_error'))\n            .required(language.translate('customer.email_required_error')),\n    });\n}\n","import { FormField, LanguageService } from '@bigcommerce/checkout-sdk';\nimport { memoize } from '@bigcommerce/memoize';\nimport { object, ObjectSchema, string } from 'yup';\n\nimport {\n    CustomFormFieldValues,\n    getCustomFormFieldsValidationSchema,\n    TranslateValidationErrorFunction,\n} from '../formFields';\n\nimport getEmailValidationSchema from './getEmailValidationSchema';\nimport { PasswordRequirements } from './getPasswordRequirements';\n\nexport type CreateAccountFormValues = {\n    firstName: string;\n    lastName: string;\n    email: string;\n    password: string;\n    acceptsMarketingEmails?: string[];\n    token?: string;\n} & CustomFormFieldValues;\n\nexport interface CreateCustomerValidationSchema {\n    formFields: FormField[];\n    language: LanguageService;\n    passwordRequirements: PasswordRequirements;\n}\n\n/* istanbul ignore next */ // Currently no limitation on new customer's name\nfunction getTranslateCreateCustomerError(\n    language?: LanguageService,\n): TranslateValidationErrorFunction {\n    return (type, { label, min, max }) => {\n        if (!language) {\n            return;\n        }\n\n        if (type === 'required') {\n            return language.translate('customer.required_error', { label });\n        }\n\n        if (type === 'max' && max) {\n            return language.translate('customer.max_error', { label, max });\n        }\n\n        if (type === 'min' && min) {\n            return language.translate('customer.min_error', { label, min });\n        }\n\n        if (type === 'invalid') {\n            return language.translate('customer.invalid_characters_error', { label });\n        }\n    };\n}\n\nexport default memoize(function getCreateCustomerValidationSchema({\n    formFields,\n    language,\n    passwordRequirements: { description, numeric, alpha, minLength },\n}: CreateCustomerValidationSchema): ObjectSchema<CreateAccountFormValues> {\n    return object({\n        firstName: string().required(language.translate('address.first_name_required_error')),\n        lastName: string().required(language.translate('address.last_name_required_error')),\n        password: string()\n            .required(language.translate('customer.password_required_error') || description)\n            .matches(\n                numeric,\n                language.translate('customer.password_number_required_error') || description,\n            )\n            .matches(\n                alpha,\n                language.translate('customer.password_letter_required_error') || description,\n            )\n            .min(\n                minLength,\n                language.translate('customer.password_under_minimum_length_error') || description,\n            )\n            .max(100, language.translate('customer.password_over_maximum_length_error')),\n    })\n        .concat(getEmailValidationSchema({ language }))\n        .concat(\n            getCustomFormFieldsValidationSchema({\n                formFields,\n                translate: getTranslateCreateCustomerError(language),\n            }),\n        );\n});\n","/* istanbul ignore file */\n\n// TODO: CHECKOUT-9010 Cover 'Customer registration failure due to using an existing email' in functional tests repo\nimport { FormField } from '@bigcommerce/checkout-sdk';\nimport { FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, useMemo } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\n\nimport { isRequestError } from '../common/error';\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { DynamicFormField, Fieldset, Form } from '../ui/form';\n\nimport getCreateCustomerValidationSchema, {\n    CreateAccountFormValues,\n} from './getCreateCustomerValidationSchema';\nimport getPasswordRequirements from './getPasswordRequirements';\nimport './CreateAccountForm.scss';\n\nexport interface CreateAccountFormProps {\n    formFields: FormField[];\n    createAccountError?: Error;\n    fixNewsletterCheckboxExperimentEnabled: boolean;\n    isCreatingAccount?: boolean;\n    isExecutingPaymentMethodCheckout?: boolean;\n    requiresMarketingConsent: boolean;\n    defaultShouldSubscribe: boolean;\n    isFloatingLabelEnabled?: boolean;\n    onCancel?(): void;\n    onSubmit(values: CreateAccountFormValues): void;\n}\n\nfunction getAcceptsMarketingEmailsDefault(defaultShouldSubscribe: boolean, requiresMarketingConsent: boolean): string[] {\n    if (defaultShouldSubscribe) {\n        return ['1'];\n    }\n\n    return requiresMarketingConsent ? [] : ['0'];\n}\n\nfunction transformFormFieldsData(formFields: FormField[], defaultShouldSubscribe: boolean): FormField[] {\n    return formFields.map(field => {\n        if (field.name === 'acceptsMarketingEmails') {\n            const { options } = field;\n            const items = options?.items || [];\n\n            const updatedItems = items.map(item => {\n                return {\n                    value: defaultShouldSubscribe ? '1' : item.value,\n                    label: item.label,\n                }\n            });\n\n            return {\n                ...field,\n                options: {\n                    items: updatedItems,\n                }\n            }\n        }\n\n        return field;\n    });\n}\n\nconst CreateAccountForm: FunctionComponent<\n    CreateAccountFormProps & WithLanguageProps & FormikProps<CreateAccountFormValues>\n> = ({ fixNewsletterCheckboxExperimentEnabled, formFields, createAccountError, isCreatingAccount, isExecutingPaymentMethodCheckout, onCancel, isFloatingLabelEnabled, defaultShouldSubscribe }) => {\n    const createAccountErrorMessage = useMemo(() => {\n        if (!createAccountError) {\n            return;\n        }\n\n        if (isRequestError(createAccountError) && createAccountError.status === 409) {\n            const splitMessage = createAccountError.message.split(':');\n\n            if (splitMessage.length > 1) {\n                return (\n                    <TranslatedString\n                        data={{ email: splitMessage[1].trim() }}\n                        id=\"customer.email_in_use_text\"\n                    />\n                );\n            }\n\n            return <TranslatedString id=\"customer.unknown_email_in_use_text\" />;\n        }\n\n        return createAccountError.message;\n    }, [createAccountError]);\n\n    const fields = fixNewsletterCheckboxExperimentEnabled ?\n        transformFormFieldsData(formFields, defaultShouldSubscribe): formFields;\n\n    return (\n        <Form\n            className=\"checkout-form\"\n            id=\"checkout-customer-returning\"\n            testId=\"checkout-customer-returning\"\n        >\n            <Fieldset>\n                {createAccountErrorMessage && (\n                    <Alert type={AlertType.Error}>{createAccountErrorMessage}</Alert>\n                )}\n                <div className=\"create-account-form\">\n                    {fields.map((field) => (\n                        <DynamicFormField\n                            autocomplete={field.name}\n                            extraClass={`dynamic-form-field--${field.name}`}\n                            field={field}\n                            isFloatingLabelEnabled={isFloatingLabelEnabled}\n                            key={field.id}\n                            parentFieldName={field.custom ? 'customFields' : undefined}\n                        />\n                    ))}\n                </div>\n            </Fieldset>\n\n            <div className=\"form-actions\">\n                <Button\n                    disabled={isCreatingAccount || isExecutingPaymentMethodCheckout}\n                    id=\"checkout-customer-create\"\n                    isLoading={isCreatingAccount || isExecutingPaymentMethodCheckout}\n                    testId=\"customer-continue-create\"\n                    type=\"submit\"\n                    variant={ButtonVariant.Primary}\n                >\n                    <TranslatedString id=\"customer.create_account_action\" />\n                </Button>\n\n                <a\n                    className=\"button optimizedCheckout-buttonSecondary\"\n                    data-test=\"customer-cancel-button\"\n                    href=\"#\"\n                    id=\"checkout-customer-cancel\"\n                    onClick={preventDefault(onCancel)}\n                >\n                    <TranslatedString id=\"common.cancel_action\" />\n                </a>\n            </div>\n        </Form>\n    );\n};\n\nexport default withLanguage(\n    withFormik<CreateAccountFormProps & WithLanguageProps, CreateAccountFormValues>({\n        handleSubmit: (values, { props: { onSubmit = noop } }) => {\n            onSubmit(values);\n        },\n        mapPropsToValues: ({ defaultShouldSubscribe, requiresMarketingConsent }) => ({\n            firstName: '',\n            lastName: '',\n            email: '',\n            password: '',\n            customFields: {},\n            acceptsMarketingEmails: getAcceptsMarketingEmailsDefault(defaultShouldSubscribe, requiresMarketingConsent),\n        }),\n        validationSchema: ({\n            language,\n            formFields,\n        }: CreateAccountFormProps & WithLanguageProps) => {\n            const passwordRequirements = formFields.find(\n                ({ requirements }) => requirements,\n            )?.requirements;\n\n            if (!passwordRequirements) {\n                throw new Error('Password requirements missing');\n            }\n\n            const schema = getCreateCustomerValidationSchema({\n                language,\n                formFields,\n                passwordRequirements: getPasswordRequirements(passwordRequirements),\n            });\n\n            return schema;\n        },\n    })(CreateAccountForm),\n);\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { FormField, TextInput } from '../ui/form';\n\nexport interface EmailFieldProps {\n    isFloatingLabelEnabled?: boolean;\n    onChange?(value: string): void;\n}\n\nconst EmailField: FunctionComponent<EmailFieldProps> = ({ onChange, isFloatingLabelEnabled }) => {\n    const renderInput = useCallback(\n        (props: FieldProps) => (\n            <TextInput\n                {...props.field}\n                autoComplete={props.field.name}\n                id={props.field.name}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                type=\"email\"\n            />\n        ),\n        [isFloatingLabelEnabled],\n    );\n\n    const labelContent = useMemo(() => <TranslatedString id=\"customer.email_label\" />, []);\n\n    return (\n        <FormField\n            input={renderInput}\n            isFloatingLabelEnabled={isFloatingLabelEnabled}\n            labelContent={labelContent}\n            name=\"email\"\n            onChange={onChange}\n        />\n    );\n};\n\nexport default memo(EmailField);\n","import { SignInEmail } from '@bigcommerce/checkout-sdk';\nimport { FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, useMemo } from 'react';\n\nimport {\n    TranslatedHtml,\n    TranslatedLink,\n    TranslatedString,\n    withLanguage,\n    WithLanguageProps,\n} from '@bigcommerce/checkout/locale';\nimport { LoadingSpinner } from '@bigcommerce/checkout/ui';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Form } from '../ui/form';\nimport { Modal, ModalHeader } from '../ui/modal';\n\nimport EmailField from './EmailField';\nimport getEmailValidationSchema from './getEmailValidationSchema';\n\nexport interface EmailLoginFormProps {\n    email?: string;\n    isOpen: boolean;\n    isSendingEmail?: boolean;\n    emailHasBeenRequested?: boolean;\n    sentEmail?: SignInEmail;\n    sentEmailError?: any;\n    isFloatingLabelEnabled?: boolean;\n    onRequestClose?(): void;\n    onSendLoginEmail?(values: EmailLoginFormValues): void;\n}\n\nexport interface EmailLoginFormValues {\n    email: string;\n}\n\nconst EmailLoginForm: FunctionComponent<\n    EmailLoginFormProps & WithLanguageProps & FormikProps<EmailLoginFormValues>\n> = ({\n    email,\n    isOpen,\n    isSendingEmail = false,\n    emailHasBeenRequested,\n    onRequestClose = noop,\n    sentEmailError,\n    sentEmail,\n    submitForm,\n    isFloatingLabelEnabled,\n    values: { email: formEmail },\n}) => {\n    const modalHeaderStringId = useMemo(() => {\n        if (emailHasBeenRequested) {\n            if (sentEmailError) {\n                return 'common.error_heading';\n            }\n\n            return 'login_email.sent_header';\n        }\n\n        if (email) {\n            return 'login_email.header_with_email';\n        }\n\n        return 'login_email.header';\n    }, [emailHasBeenRequested, sentEmailError, email]);\n\n    const okButton = useMemo(\n        () => (\n            <div className=\"modal-footer\">\n                <Button onClick={onRequestClose}>\n                    <TranslatedString id=\"common.ok_action\" />\n                </Button>\n            </div>\n        ),\n        [onRequestClose],\n    );\n\n    const footer = useMemo(() => {\n        if (sentEmailError && sentEmailError.status === 429) {\n            return okButton;\n        }\n\n        if (emailHasBeenRequested && !sentEmailError) {\n            if (isSendingEmail) {\n                return <LoadingSpinner isLoading />;\n            }\n\n            if (sentEmail && sentEmail.sent_email === 'reset_password') {\n                return okButton;\n            }\n\n            return (\n                <p>\n                    <TranslatedLink id=\"login_email.resend_link\" onClick={submitForm} />\n                    <TranslatedLink id=\"login_email.use_password_link\" onClick={onRequestClose} />\n                </p>\n            );\n        }\n\n        return (\n            <div className=\"modal-footer\">\n                <Button\n                    className=\"optimizedCheckout-buttonSecondary\"\n                    onClick={onRequestClose}\n                    type=\"button\"\n                >\n                    <TranslatedString id=\"common.cancel_action\" />\n                </Button>\n                <Button isLoading={isSendingEmail} type=\"submit\" variant={ButtonVariant.Primary}>\n                    <TranslatedString id=\"login_email.send\" />\n                </Button>\n            </div>\n        );\n    }, [\n        sentEmailError,\n        emailHasBeenRequested,\n        okButton,\n        submitForm,\n        isSendingEmail,\n        onRequestClose,\n        sentEmail,\n    ]);\n\n    const error = useMemo(() => {\n        if (!sentEmailError) {\n            return null;\n        }\n\n        const { status } = sentEmailError;\n\n        return (\n            <Alert type={AlertType.Error}>\n                {status === 429 ? (\n                    <TranslatedString id=\"login_email.error_temporary_disabled\" />\n                ) : (\n                    <TranslatedString\n                        id={\n                            status === 404\n                                ? 'login_email.error_not_found'\n                                : 'login_email.error_server'\n                        }\n                    />\n                )}\n            </Alert>\n        );\n    }, [sentEmailError]);\n\n    const form = useMemo(() => {\n        if (sentEmailError && sentEmailError.status === 429) {\n            return null;\n        }\n\n        if (emailHasBeenRequested && sentEmail && !sentEmailError) {\n            const { expiry, sent_email } = sentEmail;\n\n            return (\n                <p>\n                    <TranslatedHtml\n                        data={{\n                            minutes: Math.round(expiry / 60),\n                        }}\n                        id={\n                            sent_email === 'sign_in'\n                                ? 'login_email.sent_text'\n                                : 'customer.reset_password_before_login_error'\n                        }\n                    />\n                </p>\n            );\n        }\n\n        if (emailHasBeenRequested && !sentEmail) {\n            return <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} />;\n        }\n\n        return (\n            <>\n                <p>\n                    <TranslatedString id=\"login_email.text\" />\n                </p>\n                <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} />\n            </>\n        );\n    }, [sentEmailError, emailHasBeenRequested, sentEmail, formEmail]);\n\n    return (\n        <Modal\n            additionalBodyClassName=\"modal--withText\"\n            additionalModalClassName=\"modal--medium\"\n            header={\n                <ModalHeader>\n                    <TranslatedString id={modalHeaderStringId} />\n                </ModalHeader>\n            }\n            isOpen={isOpen}\n            onRequestClose={onRequestClose}\n            shouldShowCloseButton={true}\n        >\n            <Form>\n                <LoadingSpinner isLoading={isSendingEmail && !email} />\n                {error}\n                {form}\n                {footer}\n            </Form>\n        </Modal>\n    );\n};\n\nexport default withLanguage(\n    withFormik<EmailLoginFormProps & WithLanguageProps, EmailLoginFormValues>({\n        mapPropsToValues: ({ email = '' }) => ({\n            email,\n        }),\n        handleSubmit: (values, { props: { onSendLoginEmail = noop } }) => {\n            onSendLoginEmail(values);\n        },\n        validationSchema: ({ language }: WithLanguageProps) =>\n            getEmailValidationSchema({ language }),\n    })(memo(EmailLoginForm)),\n);\n","import { FastlaneHostWindow } from './types';\n\nexport default function isFastlaneHostWindow(window: Window): window is FastlaneHostWindow {\n    /* eslint-disable no-prototype-builtins */\n    return window.hasOwnProperty('paypalFastlane') || window.hasOwnProperty('braintreeFastlane');\n}\n","import React, { FunctionComponent, useEffect } from 'react';\n\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport isBraintreeFastlaneMethod from './is-braintree-fastlane-method';\nimport isFastlaneHostWindow from './is-fastlane-window';\nimport isPayPalFastlaneMethod from './is-paypal-fastlane-method';\nimport { FastlanePrivacySettings } from './types';\n\nimport './PayPalFastlaneWatermark.scss';\n\nconst PayPalFastlaneWatermark: FunctionComponent = () => {\n    const { checkoutState } = useCheckout();\n    const { getPaymentMethod, getConfig } = checkoutState.data;\n    const providerWithCustomCheckout = getConfig()?.checkoutSettings?.providerWithCustomCheckout;\n\n    const paymentMethod =\n        providerWithCustomCheckout &&\n        isPayPalFastlaneMethod(providerWithCustomCheckout) &&\n        getPaymentMethod(providerWithCustomCheckout);\n\n    const shouldRenderFastlaneWatermark =\n        !!paymentMethod &&\n        isFastlaneHostWindow(window) &&\n        paymentMethod?.initializationData?.isFastlanePrivacySettingEnabled;\n\n    useEffect(() => {\n        if(shouldRenderFastlaneWatermark && isFastlaneHostWindow(window)) {\n            const fastlane = isBraintreeFastlaneMethod(providerWithCustomCheckout)\n                ? window.braintreeFastlane\n                : window.paypalFastlane;\n\n            fastlane.FastlaneWatermarkComponent({\n                includeAdditionalInfo: true,\n            })\n                .then((result: FastlanePrivacySettings) => {\n                    result.render('#paypalFastlaneWatermark');\n                });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (shouldRenderFastlaneWatermark) {\n        return (\n            <div className='paypalFastlaneWatermark-container'>\n                <div id='paypalFastlaneWatermark' data-test='paypalFastlaneWatermark' />\n            </div>\n        );\n    }\n\n    // eslint-disable-next-line react/jsx-no-useless-fragment\n    return <></>;\n}\n\nexport default PayPalFastlaneWatermark;\n","import React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\n\nimport { CheckboxFormField, Fieldset } from '../ui/form';\n\nconst PrivacyPolicyCheckboxFieldLink: FunctionComponent<{ url: string }> = ({ url }) => (\n    <CheckboxFormField\n        labelContent={<TranslatedHtml data={{ url }} id=\"privacy_policy.label\" />}\n        name=\"privacyPolicy\"\n        testId=\"privacy-policy-checkbox\"\n    />\n);\n\nconst PrivacyPolicyFieldset: FunctionComponent<{ url: string }> = ({ url }) => (\n    <Fieldset additionalClassName=\"checkout-privacy-policy\">\n        <PrivacyPolicyCheckboxFieldLink url={url} />\n    </Fieldset>\n);\n\nconst PrivacyPolicyAutoConsent: FunctionComponent<{ url: string }> = ({ url }) => (\n    <p>\n        <TranslatedHtml data={{ url }} id=\"privacy_policy_auto_consent.label\" />\n    </p>\n);\n\nconst PrivacyPolicyField: FunctionComponent<{ url: string; isExpressPrivacyPolicy: boolean }> = ({\n    url,\n    isExpressPrivacyPolicy,\n}) => {\n    if (isExpressPrivacyPolicy) {\n        return <PrivacyPolicyAutoConsent url={url} />;\n    }\n\n    return <PrivacyPolicyFieldset url={url} />;\n};\n\nexport default memo(PrivacyPolicyField);\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\nimport { boolean, BooleanSchema, object, ObjectSchema } from 'yup';\n\nexport interface PrivacyPolicyValidatonSchemaProps {\n    isRequired: boolean;\n    language: LanguageService;\n}\n\nexport default function getPrivacyPolicyValidationSchema({\n    isRequired,\n    language,\n}: PrivacyPolicyValidatonSchemaProps): ObjectSchema<{ privacyPolicy?: boolean }> {\n    const schemaFields: {\n        privacyPolicy?: BooleanSchema;\n    } = {};\n\n    if (isRequired) {\n        schemaFields.privacyPolicy = boolean().oneOf(\n            [true],\n            language.translate('privacy_policy.required_error'),\n        );\n    }\n\n    return object(schemaFields);\n}\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\n\nimport { Input, Label } from '../ui/form';\n\nexport type SubscribeFieldProps = FieldProps<boolean> & {\n    requiresMarketingConsent: boolean;\n};\n\nconst SubscribeField: FunctionComponent<SubscribeFieldProps> = ({\n    field,\n    requiresMarketingConsent,\n}) => (\n    <>\n        <Input\n            {...field}\n            checked={field.value}\n            className=\"form-checkbox\"\n            id={field.name}\n            testId=\"should-subscribe-checkbox\"\n            type=\"checkbox\"\n            value={String(field.value)}\n        />\n\n        <Label htmlFor={field.name}>\n            <TranslatedHtml\n                id={\n                    requiresMarketingConsent\n                        ? 'customer.guest_marketing_consent'\n                        : 'customer.guest_subscribe_to_newsletter_text'\n                }\n            />\n        </Label>\n    </>\n);\n\nexport default memo(SubscribeField);\n","export class SubscribeSessionStorage {\n    static key = 'shouldSubscribe';\n\n    static setSubscribeStatus(shouldSubscribe: boolean) {\n        sessionStorage.setItem(this.key, `${shouldSubscribe}`)\n    }\n\n    static getSubscribeStatus(): boolean {\n        const value = sessionStorage.getItem(this.key);\n\n        return value === 'true';\n    }\n\n    static removeSubscribeStatus() {\n        sessionStorage.removeItem(this.key);\n    }\n}\n","import classNames from 'classnames';\nimport { FieldProps, FormikProps, withFormik } from 'formik';\nimport React, { FunctionComponent, memo, ReactNode, useCallback } from 'react';\nimport { object, string } from 'yup';\n\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\nimport { PayPalFastlaneWatermark } from '@bigcommerce/checkout/paypal-fastlane-integration';\n\nimport { isExperimentEnabled } from '../common/utility';\nimport { getPrivacyPolicyValidationSchema, PrivacyPolicyField } from '../privacyPolicy';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { BasicFormField, Fieldset, Form, Legend } from '../ui/form';\n\nimport EmailField from './EmailField';\nimport SubscribeField from './SubscribeField';\nimport { SubscribeSessionStorage } from './SubscribeSessionStorage';\n\nfunction getShouldSubscribeValue(requiresMarketingConsent: boolean, defaultShouldSubscribe: boolean) {\n    if (SubscribeSessionStorage.getSubscribeStatus()) {\n        return true;\n    }\n\n    return requiresMarketingConsent ? false : defaultShouldSubscribe\n}\n\nexport interface GuestFormProps {\n    canSubscribe: boolean;\n    checkoutButtons?: ReactNode;\n    continueAsGuestButtonLabelId: string;\n    requiresMarketingConsent: boolean;\n    defaultShouldSubscribe: boolean;\n    email?: string;\n    isLoading: boolean;\n    privacyPolicyUrl?: string;\n    isExpressPrivacyPolicy: boolean;\n    isFloatingLabelEnabled?: boolean;\n    shouldShowEmailWatermark: boolean;\n    onChangeEmail(email: string): void;\n    onContinueAsGuest(data: GuestFormValues): void;\n    onShowLogin(): void;\n}\n\nexport interface GuestFormValues {\n    email: string;\n    shouldSubscribe: boolean;\n}\n\nconst GuestForm: FunctionComponent<\n    GuestFormProps & WithLanguageProps & FormikProps<GuestFormValues>\n> = ({\n    canSubscribe,\n    checkoutButtons,\n    continueAsGuestButtonLabelId,\n    isLoading,\n    onChangeEmail,\n    onShowLogin,\n    privacyPolicyUrl,\n    requiresMarketingConsent,\n    isExpressPrivacyPolicy,\n    isFloatingLabelEnabled,\n    shouldShowEmailWatermark,\n}) => {\n    const {\n        checkoutState: { \n            data: { getConfig } \n        }    \n    } = useCheckout();\n\n    const config = getConfig();\n\n    const renderField = useCallback(\n        (fieldProps: FieldProps<boolean>) => (\n            <SubscribeField {...fieldProps} requiresMarketingConsent={requiresMarketingConsent} />\n        ),\n        [requiresMarketingConsent],\n    );\n\n    if (!config) {\n        return null;\n    }\n\n    const {\n        checkoutSettings: {\n            shouldRedirectToStorefrontForAuth,\n        },\n        links: {\n            checkoutLink,\n            loginLink,\n        }\n    } = config;\n\n    const isRedirectExperimentEnabled = isExperimentEnabled(config.checkoutSettings, 'CHECKOUT-9138.redirect_to_storefront_for_auth');\n\n    const handleLogin: () => void = () => {\n        if (shouldRedirectToStorefrontForAuth && isRedirectExperimentEnabled) {\n            window.location.assign(`${loginLink}?redirectTo=${checkoutLink}`);\n\n            return;\n        }\n\n        return onShowLogin();\n    }\n\n    return (\n        <Form\n            className=\"checkout-form\"\n            id=\"checkout-customer-guest\"\n            testId=\"checkout-customer-guest\"\n        >\n            <Fieldset\n                legend={\n                    <Legend hidden>\n                        <TranslatedString id=\"customer.guest_customer_text\" />\n                    </Legend>\n                }\n            >\n                <div className=\"customerEmail-container\">\n                    <div className=\"customerEmail-body\">\n                        <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} onChange={onChangeEmail}/>\n\n                        {shouldShowEmailWatermark && <PayPalFastlaneWatermark />}\n\n                        {(canSubscribe || requiresMarketingConsent) && (\n                            <BasicFormField name=\"shouldSubscribe\" render={renderField} />\n                        )}\n                    </div>\n\n                    <div\n                        className={classNames('form-actions customerEmail-action', {\n                            'customerEmail-floating--enabled': isFloatingLabelEnabled,\n                        })}\n                    >\n                        <Button\n                            className=\"customerEmail-button\"\n                            id=\"checkout-customer-continue\"\n                            isLoading={isLoading}\n                            testId=\"customer-continue-as-guest-button\"\n                            type=\"submit\"\n                            variant={ButtonVariant.Primary}\n                        >\n                            <TranslatedString id={continueAsGuestButtonLabelId} />\n                        </Button>\n                    </div>\n                </div>\n\n                {privacyPolicyUrl && (\n                    <PrivacyPolicyField isExpressPrivacyPolicy={isExpressPrivacyPolicy} url={privacyPolicyUrl} />\n                )}\n\n                {!isLoading && (\n                    <p className=\"customer-login-link\">\n                        <TranslatedString id=\"customer.login_text\" />{' '}\n                        <a\n                            data-test=\"customer-continue-button\"\n                            id=\"checkout-customer-login\"\n                            onClick={handleLogin}\n                            role=\"button\"\n                            tabIndex={0}\n                        >\n                            <TranslatedString id=\"customer.login_action\" />\n                        </a>\n                    </p>\n                )}\n\n                {checkoutButtons}\n            </Fieldset>\n        </Form>\n    );\n};\n\nexport default withLanguage(\n    withFormik<GuestFormProps & WithLanguageProps, GuestFormValues>({\n        mapPropsToValues: ({\n            email = '',\n            defaultShouldSubscribe = false,\n            requiresMarketingConsent,\n        }) => ({\n            email,\n            shouldSubscribe: getShouldSubscribeValue(requiresMarketingConsent, defaultShouldSubscribe),\n            privacyPolicy: false,\n        }),\n        handleSubmit: (values, { props: { onContinueAsGuest } }) => {\n            onContinueAsGuest(values);\n        },\n        validationSchema: ({ language, privacyPolicyUrl, isExpressPrivacyPolicy }: GuestFormProps & WithLanguageProps) => {\n            const email = string()\n                .email(language.translate('customer.email_invalid_error'))\n                .max(256)\n                .required(language.translate('customer.email_required_error'));\n\n            const baseSchema = object({ email });\n\n            if (privacyPolicyUrl && !isExpressPrivacyPolicy) {\n                return baseSchema.concat(\n                    getPrivacyPolicyValidationSchema({\n                        isRequired: !!privacyPolicyUrl,\n                        language,\n                    }),\n                );\n            }\n\n            return baseSchema;\n        },\n    })(memo(GuestForm)),\n);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconEye: FunctionComponent = () => (\n    <svg viewBox=\"0 0 576 512\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M288 144a110.94 110.94 0 0 0-31.24 5 55.4 55.4 0 0 1 7.24 27 56 56 0 0 1-56 56 55.4 55.4 0 0 1-27-7.24A111.71 111.71 0 1 0 288 144zm284.52 97.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400c-98.65 0-189.09-55-237.93-144C98.91 167 189.34 112 288 112s189.09 55 237.93 144C477.1 345 386.66 400 288 400z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconEye);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconEyeSlash: FunctionComponent = () => (\n    <svg viewBox=\"0 0 640 512\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M634 471L36 3.51A16 16 0 0 0 13.51 6l-10 12.49A16 16 0 0 0 6 41l598 467.49a16 16 0 0 0 22.49-2.49l10-12.49A16 16 0 0 0 634 471zM296.79 146.47l134.79 105.38C429.36 191.91 380.48 144 320 144a112.26 112.26 0 0 0-23.21 2.47zm46.42 219.07L208.42 260.16C210.65 320.09 259.53 368 320 368a113 113 0 0 0 23.21-2.46zM320 112c98.65 0 189.09 55 237.93 144a285.53 285.53 0 0 1-44 60.2l37.74 29.5a333.7 333.7 0 0 0 52.9-75.11 32.35 32.35 0 0 0 0-29.19C550.29 135.59 442.93 64 320 64c-36.7 0-71.71 7-104.63 18.81l46.41 36.29c18.94-4.3 38.34-7.1 58.22-7.1zm0 288c-98.65 0-189.08-55-237.93-144a285.47 285.47 0 0 1 44.05-60.19l-37.74-29.5a333.6 333.6 0 0 0-52.89 75.1 32.35 32.35 0 0 0 0 29.19C89.72 376.41 197.08 448 320 448c36.7 0 71.71-7.05 104.63-18.81l-46.41-36.28C359.28 397.2 339.89 400 320 400z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconEyeSlash);\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { FormField, TextInput } from '../ui/form';\nimport Label from '../ui/form/Label';\nimport { IconEye, IconEyeSlash } from '../ui/icon';\nimport { Toggle } from '../ui/toggle';\n\ninterface WithFloatingLabel {\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst PasswordField: FunctionComponent<WithFloatingLabel> = ({ isFloatingLabelEnabled = false }) => {\n    const renderInput = useCallback(\n        (props: FieldProps) => (\n            <Toggle openByDefault={false}>\n                {({ isOpen, toggle }) => (\n                    <div className=\"form-field-password\">\n                        <TextInput\n                            {...props.field}\n                            additionalClassName=\"form-input--withIcon\"\n                            id={props.field.name}\n                            isFloatingLabelEnabled={isFloatingLabelEnabled}\n                            type={isOpen ? 'text' : 'password'}\n                        />\n                        {isFloatingLabelEnabled && (\n                            <Label\n                                htmlFor={props.field.name}\n                                id={`${props.field.name}-label`}\n                                isFloatingLabelEnabled={true}\n                            >\n                                <TranslatedString id=\"customer.password_label\" />\n                            </Label>\n                        )}\n                        <a\n                            className=\"form-toggle-password form-input-icon\"\n                            href=\"#\"\n                            onClick={toggle}\n                        >\n                            {isOpen ? <IconEye /> : <IconEyeSlash />}\n                        </a>\n                    </div>\n                )}\n            </Toggle>\n        ),\n        [isFloatingLabelEnabled],\n    );\n\n    const labelContent = useMemo(() => <TranslatedString id=\"customer.password_label\" />, []);\n\n    return <FormField input={renderInput} isFloatingLabelEnabled={isFloatingLabelEnabled} labelContent={isFloatingLabelEnabled ? null : labelContent} name=\"password\" />;\n};\n\nexport default memo(PasswordField);\n","import { FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\nimport { object, string } from 'yup';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport {\n    TranslatedHtml,\n    TranslatedLink,\n    TranslatedString,\n    withLanguage,\n    WithLanguageProps,\n} from '@bigcommerce/checkout/locale';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Fieldset, Form, Legend } from '../ui/form';\n\nimport CustomerViewType from './CustomerViewType';\nimport EmailField from './EmailField';\nimport getEmailValidationSchema from './getEmailValidationSchema';\nimport mapErrorMessage from './mapErrorMessage';\nimport PasswordField from './PasswordField';\n\nexport interface LoginFormProps {\n    canCancel?: boolean;\n    continueAsGuestButtonLabelId: string;\n    email?: string;\n    forgotPasswordUrl: string;\n    isSignInEmailEnabled?: boolean;\n    isSendingSignInEmail?: boolean;\n    isSigningIn?: boolean;\n    isExecutingPaymentMethodCheckout?: boolean;\n    signInError?: Error;\n    signInEmailError?: Error;\n    viewType?: Omit<CustomerViewType, 'guest'>;\n    passwordlessLogin?: boolean;\n    shouldShowCreateAccountLink?: boolean;\n    isFloatingLabelEnabled?: boolean;\n    onCancel?(): void;\n    onCreateAccount?(): void;\n    onChangeEmail?(email: string): void;\n    onSignIn(data: LoginFormValues): void;\n    onSendLoginEmail?(): void;\n    onContinueAsGuest?(): void;\n}\n\nexport interface LoginFormValues {\n    email: string;\n    password: string;\n}\n\nconst LoginForm: FunctionComponent<\n    LoginFormProps & WithLanguageProps & FormikProps<LoginFormValues>\n> = ({\n    canCancel,\n    continueAsGuestButtonLabelId,\n    forgotPasswordUrl,\n    email,\n    isSignInEmailEnabled,\n    isSigningIn,\n    isExecutingPaymentMethodCheckout,\n    language,\n    onCancel = noop,\n    onChangeEmail,\n    onContinueAsGuest,\n    onCreateAccount = noop,\n    onSendLoginEmail = noop,\n    signInError,\n    shouldShowCreateAccountLink,\n    isFloatingLabelEnabled,\n    viewType = CustomerViewType.Login,\n}) => {\n    const changeEmailLink = useCallback(() => {\n        if (!email) {\n            return null;\n        }\n\n        return (\n            <p className=\"optimizedCheckout-contentSecondary\">\n                <TranslatedLink\n                    data={{ email }}\n                    id=\"customer.guest_could_login_change_email\"\n                    onClick={onCancel}\n                    testId=\"change-email\"\n                />\n            </p>\n        );\n    }, [email, onCancel]);\n\n    return (\n        <Form\n            className=\"checkout-form\"\n            id=\"checkout-customer-returning\"\n            testId=\"checkout-customer-returning\"\n        >\n            <Fieldset\n                legend={\n                    <Legend hidden>\n                        <TranslatedString id=\"customer.returning_customer_text\" />\n                    </Legend>\n                }\n            >\n                {signInError && (\n                    <Alert testId=\"customer-login-error-message\" type={AlertType.Error}>\n                        {mapErrorMessage(signInError, (key) => language.translate(key))}\n                    </Alert>\n                )}\n\n                {viewType === CustomerViewType.SuggestedLogin && (\n                    <Alert type={AlertType.Info}>\n                        <TranslatedHtml data={{ email }} id=\"customer.guest_could_login\" />\n                    </Alert>\n                )}\n\n                {viewType === CustomerViewType.CancellableEnforcedLogin && (\n                    <Alert type={AlertType.Info}>\n                        <TranslatedHtml data={{ email }} id=\"customer.guest_must_login\" />\n                    </Alert>\n                )}\n\n                {viewType === CustomerViewType.EnforcedLogin && (\n                    <Alert type={AlertType.Error}>\n                        <TranslatedLink\n                            id=\"customer.guest_temporary_disabled\"\n                            onClick={onCreateAccount}\n                        />\n                    </Alert>\n                )}\n\n                {(viewType === CustomerViewType.Login ||\n                    viewType === CustomerViewType.EnforcedLogin) && (\n                    <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} onChange={onChangeEmail} />\n                )}\n\n                <PasswordField isFloatingLabelEnabled={isFloatingLabelEnabled} />\n\n                <p className=\"form-legend-container\">\n                    <span>\n                        { isSignInEmailEnabled &&\n                            <TranslatedLink\n                                id=\"login_email.link\"\n                                onClick={ onSendLoginEmail }\n                                testId=\"customer-signin-link\"\n                            />\n                        }\n                        { !isSignInEmailEnabled &&\n                            <a\n                                data-test=\"forgot-password-link\"\n                                href={ forgotPasswordUrl }\n                                rel=\"noopener noreferrer\"\n                                target=\"_blank\"\n                            >\n                                <TranslatedString id=\"customer.forgot_password_action\" />\n                            </a>\n                        }\n                    </span>\n                    { viewType === CustomerViewType.Login && shouldShowCreateAccountLink &&\n                        <span>\n                            <TranslatedLink\n                                id=\"customer.create_account_to_continue_text\"\n                                onClick={onCreateAccount}\n                            />\n                        </span>\n                    }\n                </p>\n\n                <div className=\"form-actions\">\n                    <Button\n                        disabled={isSigningIn || isExecutingPaymentMethodCheckout}\n                        id=\"checkout-customer-continue\"\n                        isLoading={isSigningIn || isExecutingPaymentMethodCheckout}\n                        testId=\"customer-continue-button\"\n                        type=\"submit\"\n                        variant={ButtonVariant.Primary}\n                    >\n                        <TranslatedString id=\"customer.sign_in_action\" />\n                    </Button>\n\n                    {viewType === CustomerViewType.SuggestedLogin && (\n                        <a\n                            className=\"button optimizedCheckout-buttonSecondary\"\n                            data-test=\"customer-guest-continue\"\n                            href=\"#\"\n                            id=\"checkout-guest-continue\"\n                            onClick={preventDefault(onContinueAsGuest)}\n                        >\n                            <TranslatedString id={continueAsGuestButtonLabelId} />\n                        </a>\n                    )}\n\n                    {canCancel &&\n                        viewType !== CustomerViewType.EnforcedLogin &&\n                        viewType !== CustomerViewType.SuggestedLogin && (\n                            <a\n                                className=\"button optimizedCheckout-buttonSecondary\"\n                                data-test=\"customer-cancel-button\"\n                                href=\"#\"\n                                id=\"checkout-customer-cancel\"\n                                onClick={preventDefault(onCancel)}\n                            >\n                                <TranslatedString\n                                    id={\n                                        viewType === CustomerViewType.CancellableEnforcedLogin\n                                            ? 'login_email.use_another_email'\n                                            : 'common.cancel_action'\n                                    }\n                                />\n                            </a>\n                        )}\n                </div>\n\n                {viewType === CustomerViewType.SuggestedLogin && changeEmailLink()}\n            </Fieldset>\n        </Form>\n    );\n};\n\nexport default withLanguage(\n    withFormik<LoginFormProps & WithLanguageProps, LoginFormValues>({\n        mapPropsToValues: ({ email = '' }) => ({\n            email,\n            password: '',\n        }),\n        handleSubmit: (values, { props: { onSignIn } }) => {\n            onSignIn(values);\n        },\n        validationSchema: ({ language }: LoginFormProps & WithLanguageProps) =>\n            getEmailValidationSchema({ language }).concat(\n                object({\n                    password: string().required(\n                        language.translate('customer.password_required_error'),\n                    ),\n                }),\n            ),\n    })(memo(LoginForm)),\n);\n","export default function mapErrorMessage(\n    error: any, // TODO: Export `RequestError`\n    translate: (key: string) => string,\n): string {\n    const type = error.body && error.body.type;\n\n    switch (type) {\n        case 'throttled_login':\n            return translate('customer.sign_in_throttled_error');\n\n        case 'reset_password_before_login':\n            return translate('customer.reset_password_before_login_error');\n\n        default:\n            return translate('customer.sign_in_error');\n    }\n}\n","import { CustomerAccountRequestBody } from '@bigcommerce/checkout-sdk';\n\nimport { mapCustomFormFieldsFromFormValues } from '../formFields';\n\nimport { CreateAccountFormValues } from './getCreateCustomerValidationSchema';\n\nexport default function mapCreateAccountFromFormValues({\n    acceptsMarketingEmails,\n    customFields,\n    ...values\n}: CreateAccountFormValues): CustomerAccountRequestBody {\n    return {\n        ...values,\n        acceptsMarketingEmails: acceptsMarketingEmails && acceptsMarketingEmails.length > 0,\n        customFields: mapCustomFormFieldsFromFormValues(customFields),\n    };\n}\n","import { CustomerInitializeOptions, CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\nimport { FieldProps, FormikProps, withFormik } from 'formik';\nimport React, { FunctionComponent, memo, ReactNode, useCallback, useEffect, useState } from 'react';\n\nimport { getAppliedStyles } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport { CustomerSkeleton } from '@bigcommerce/checkout/ui';\n\nimport CheckoutStepStatus from '../checkout/CheckoutStepStatus';\nimport { getPrivacyPolicyValidationSchema, PrivacyPolicyField } from '../privacyPolicy';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { BasicFormField, Fieldset, Form, Legend } from '../ui/form';\n\nimport { GuestFormValues } from './GuestForm';\nimport SubscribeField from './SubscribeField';\n\nexport interface StripeGuestFormProps {\n    canSubscribe: boolean;\n    checkoutButtons?: ReactNode;\n    step: CheckoutStepStatus;\n    continueAsGuestButtonLabelId: string;\n    email?: string;\n    isLoading: boolean;\n    isExpressPrivacyPolicy: boolean;\n    requiresMarketingConsent: boolean;\n    defaultShouldSubscribe: boolean;\n    privacyPolicyUrl?: string;\n    onChangeEmail(email: string): void;\n    onContinueAsGuest(data: GuestFormValues): void;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onShowLogin(): void;\n}\n\nconst StripeGuestForm: FunctionComponent<StripeGuestFormProps & FormikProps<GuestFormValues>> = ({\n    continueAsGuestButtonLabelId,\n    isLoading,\n    initialize,\n    isExpressPrivacyPolicy,\n    deinitialize,\n    onChangeEmail,\n    onShowLogin,\n    onContinueAsGuest,\n    canSubscribe,\n    checkoutButtons,\n    requiresMarketingConsent,\n    privacyPolicyUrl,\n    step,\n    status\n}) => {\n\n    const [continueAsAGuestButton, setContinueAsAGuestButton] = useState(true);\n    const [emailValue, setEmailValue] = useState('');\n    const [authentication, setAuthentication] = useState(false);\n    const [isStripeLoading, setIsStripeLoading] = useState(true);\n    const [isNewAuth, setIsNewAuth] = useState(false);\n    const handleOnClickSubmitButton = () => {\n        onContinueAsGuest({\n            email: emailValue,\n            shouldSubscribe: !!status?.shouldSubscribe,\n        });\n    };\n    const setEmailCallback = useCallback((authenticated: boolean, email: string) => {\n        onChangeEmail(email);\n        setEmailValue(email);\n        setContinueAsAGuestButton(!email);\n        setAuthentication(authenticated);\n\n        if(!authenticated){\n            setIsNewAuth(true);\n        }\n    }, [setContinueAsAGuestButton, onChangeEmail]);\n\n    useEffect(() => {\n        if ((!step.isComplete || isNewAuth) && emailValue && authentication) {\n            handleOnClickSubmitButton();\n        }\n    }, [emailValue, authentication, isNewAuth]);\n\n    useEffect(() => {\n        if (status?.valSuccess) {\n            handleOnClickSubmitButton();\n        }\n    }, [status?.valSuccess]);\n\n    const handleLoading = useCallback((mounted: boolean) => {\n        setIsStripeLoading(mounted);\n    }, []);\n\n    const stripeDeinitialize = () => {\n        deinitialize({\n            methodId: 'stripeupe',\n        });\n    };\n\n    const stripeInitialize = () => {\n        initialize( {\n            methodId: 'stripeupe',\n            stripeupe: {\n                container: 'stripeupeLink',\n                onEmailChange: setEmailCallback,\n                isLoading: handleLoading,\n                getStyles: getStripeStyles,\n                gatewayId: 'stripeupe',\n                methodId: 'card',\n            },\n        })};\n\n    useEffect(() => {\n        stripeInitialize();\n\n        return () => stripeDeinitialize();\n    }, []);\n\n    const getStylesFromElement = (\n        id: string,\n        properties: string[]) => {\n        const parentContainer = document.getElementById(id);\n\n        if (parentContainer) {\n            return getAppliedStyles(parentContainer, properties);\n        }\n\n            return undefined;\n\n    };\n\n    const containerId = 'stripe-card-component-field';\n\n    const getStripeStyles: () => (Record<string, string> | undefined) = useCallback( () => {\n        const formInput = getStylesFromElement(`${containerId}--input`, ['color', 'background-color', 'border-color', 'box-shadow']);\n        const formLabel = getStylesFromElement(`${containerId}--label`, ['color']);\n        const formError = getStylesFromElement(`${containerId}--error`, ['color']);\n\n        return formLabel && formInput && formError ? {\n            labelText: formLabel.color,\n            fieldText: formInput.color,\n            fieldPlaceholderText: formInput.color,\n            fieldErrorText: formError.color,\n            fieldBackground: formInput['background-color'],\n            fieldInnerShadow: formInput['box-shadow'],\n            fieldBorder: formInput['border-color'],\n        } : undefined;\n    }, [])\n\n    const renderCheckoutThemeStylesForStripeUPE = () => {\n        return (\n            <div\n                className=\"optimizedCheckout-form-input\"\n                id={ `${containerId}--input` }\n                placeholder=\"1111\"\n            >\n                <div\n                    className=\"form-field--error\"\n                >\n                    <div\n                        className=\"optimizedCheckout-form-label\"\n                        id={ `${containerId}--error` }\n                    />\n                </div>\n                <div\n                    className=\"optimizedCheckout-form-label\"\n                    id={ `${containerId}--label` }\n                />\n            </div>\n        );\n    };\n\n    const renderField = useCallback((fieldProps: FieldProps<boolean>) => (\n        <SubscribeField\n            { ...fieldProps }\n            requiresMarketingConsent={ requiresMarketingConsent }\n        />\n    ), [\n        requiresMarketingConsent,\n    ]);\n\n    const buttonText = authentication && !isNewAuth? 'customer.continue_as_stripe_customer_action' : continueAsGuestButtonLabelId;\n\n    return (\n        <>\n            <CustomerSkeleton isLoading={isStripeLoading}/>\n            <Form\n                className=\"checkout-form\"\n                id=\"checkout-customer-guest\"\n                testId=\"checkout-customer-guest\"\n            >\n                <div className=\"checkout-form\" style={ {display: isStripeLoading ? 'none' : undefined} }>\n                    <Fieldset\n                        legend={ !authentication &&\n                            <Legend hidden>\n                                <TranslatedString id=\"customer.guest_customer_text\"/>\n                            </Legend>\n                        }\n                    >\n                        <div className=\"customerEmail-container\">\n                            <div className=\"customerEmail-body\">\n                                <div id=\"stripeupeLink\"/>\n                                <br/>\n                                { (canSubscribe || requiresMarketingConsent) && <BasicFormField\n                                    name=\"shouldSubscribe\"\n                                    render={ renderField }\n                                /> }\n                            </div>\n\n                            <div className=\"form-actions customerEmail-action\">\n                                { (!authentication || (authentication && !isNewAuth )) && <Button\n                                    className=\"stripeCustomerEmail-button\"\n                                    disabled={ continueAsAGuestButton }\n                                    id=\"stripe-checkout-customer-continue\"\n                                    isLoading={ isLoading }\n                                    testId=\"stripe-customer-continue-as-guest-button\"\n                                    type=\"submit\"\n                                    variant={ ButtonVariant.Primary }\n                                >\n                                    <TranslatedString id={ buttonText }/>\n                                </Button> }\n                            </div>\n                        </div>\n\n                        {privacyPolicyUrl && (\n                            <PrivacyPolicyField isExpressPrivacyPolicy={isExpressPrivacyPolicy} url={privacyPolicyUrl} />\n                        )}\n\n                        {\n                            !isLoading && <p>\n                                <TranslatedString id=\"customer.login_text\"/>\n                                { ' ' }\n                                <a\n                                    data-test=\"customer-continue-button\"\n                                    id=\"checkout-customer-login\"\n                                    onClick={ onShowLogin }\n                                    role=\"button\"\n                                    tabIndex={0}\n                                >\n                                    <TranslatedString id=\"customer.login_action\"/>\n                                </a>\n                            </p>\n                        }\n                        { !authentication && checkoutButtons }\n                    </Fieldset>\n                </div>\n                { renderCheckoutThemeStylesForStripeUPE() }\n            </Form>\n        </>\n    );\n};\n\nexport default withLanguage(\n    withFormik<StripeGuestFormProps, GuestFormValues>({\n            mapPropsToValues: ({\n                email = '',\n                defaultShouldSubscribe = false,\n                requiresMarketingConsent,\n            }) => ({\n                email,\n                shouldSubscribe: requiresMarketingConsent ? false : defaultShouldSubscribe,\n                privacyPolicy: false,\n            }),\n            handleSubmit: ( values, { setStatus }) => {\n                setStatus({\n                    valSuccess: true,\n                    shouldSubscribe: values.shouldSubscribe,\n                  });\n            },\n            validationSchema: ({ language, privacyPolicyUrl, isExpressPrivacyPolicy }: StripeGuestFormProps & WithLanguageProps) => {\n                if (privacyPolicyUrl && !isExpressPrivacyPolicy) {\n                    return getPrivacyPolicyValidationSchema({\n                            isRequired: !!privacyPolicyUrl,\n                            language,\n                        })\n                }\n            },\n        })(memo(StripeGuestForm))\n)\n\n","import {\n    CheckoutPaymentMethodExecutedOptions,\n    CheckoutSelectors, CheckoutSettings,\n    CustomerAccountRequestBody,\n    CustomerCredentials,\n    CustomerInitializeOptions,\n    CustomerRequestOptions,\n    ExecutePaymentMethodCheckoutOptions,\n    FormField,\n    GuestCredentials,\n    SignInEmail,\n    StoreConfig,\n} from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { Component, ReactNode } from 'react';\n\nimport { AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\nimport { shouldUseStripeLinkByMinimumAmount } from '@bigcommerce/checkout/instrument-utils';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { isPayPalFastlaneMethod } from '@bigcommerce/checkout/paypal-fastlane-integration';\nimport { CustomerSkeleton } from '@bigcommerce/checkout/ui';\n\nimport { withAnalytics } from '../analytics';\nimport { withCheckout } from '../checkout';\nimport CheckoutStepStatus from '../checkout/CheckoutStepStatus';\nimport { isErrorWithType } from '../common/error';\nimport { isFloatingLabelEnabled } from '../common/utility';\nimport getProviderWithCustomCheckout from '../payment/getProviderWithCustomCheckout';\nimport { PaymentMethodId } from '../payment/paymentMethod';\n\nimport CheckoutButtonList from './CheckoutButtonList';\nimport CreateAccountForm from './CreateAccountForm';\nimport CustomerViewType from './CustomerViewType';\nimport EmailLoginForm, { EmailLoginFormValues } from './EmailLoginForm';\nimport { CreateAccountFormValues } from './getCreateCustomerValidationSchema';\nimport GuestForm, { GuestFormValues } from './GuestForm';\nimport LoginForm from './LoginForm';\nimport mapCreateAccountFromFormValues from './mapCreateAccountFromFormValues';\nimport StripeGuestForm from './StripeGuestForm';\nimport { SubscribeSessionStorage } from './SubscribeSessionStorage';\n\nexport interface CustomerProps {\n    viewType: CustomerViewType;\n    step: CheckoutStepStatus;\n    isEmbedded?: boolean;\n    isSubscribed: boolean;\n    isWalletButtonsOnTop: boolean;\n    checkEmbeddedSupport?(methodIds: string[]): void;\n    onChangeViewType?(viewType: CustomerViewType): void;\n    onAccountCreated?(): void;\n    onContinueAsGuest?(): void;\n    onContinueAsGuestError?(error: Error): void;\n    onReady?(): void;\n    onSubscribeToNewsletter(subscribe: boolean): void;\n    onSignIn?(): void;\n    onSignInError?(error: Error): void;\n    onUnhandledError?(error: Error): void;\n    onWalletButtonClick?(methodName: string): void;\n}\n\nexport interface WithCheckoutCustomerProps {\n    canSubscribe: boolean;\n    customerAccountFields: FormField[];\n    checkoutButtonIds: string[];\n    defaultShouldSubscribe: boolean;\n    email?: string;\n    firstName?: string;\n    fixNewsletterCheckboxExperimentEnabled: boolean;\n    checkoutSettings: CheckoutSettings;\n    forgotPasswordUrl: string;\n    isContinuingAsGuest: boolean;\n    isCreatingAccount: boolean;\n    isExecutingPaymentMethodCheckout: boolean;\n    isGuestEnabled: boolean;\n    hasBillingId: boolean;\n    isInitializing: boolean;\n    isSendingSignInEmail: boolean;\n    isSignInEmailEnabled: boolean;\n    isSigningIn: boolean;\n    privacyPolicyUrl?: string;\n    providerWithCustomCheckout?: string;\n    requiresMarketingConsent: boolean;\n    signInEmail?: SignInEmail;\n    signInEmailError?: Error;\n    isAccountCreationEnabled: boolean;\n    isPaymentDataRequired: boolean;\n    createAccountError?: Error;\n    signInError?: Error;\n    isFloatingLabelEnabled?: boolean;\n    isExpressPrivacyPolicy: boolean;\n    clearError(error: Error): Promise<CheckoutSelectors>;\n    continueAsGuest(credentials: GuestCredentials): Promise<CheckoutSelectors>;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n    sendLoginEmail(params: { email: string }): Promise<CheckoutSelectors>;\n    signIn(credentials: CustomerCredentials): Promise<CheckoutSelectors>;\n    createAccount(values: CustomerAccountRequestBody): Promise<CheckoutSelectors>;\n    shouldRenderStripeForm: boolean;\n}\n\nexport interface CustomerState {\n    isEmailLoginFormOpen: boolean;\n    isReady: boolean;\n    hasRequestedLoginEmail: boolean;\n}\n\nclass Customer extends Component<CustomerProps & WithCheckoutCustomerProps & AnalyticsContextProps, CustomerState> {\n    state: CustomerState = {\n        isEmailLoginFormOpen: false,\n        isReady: false,\n        hasRequestedLoginEmail: false,\n    };\n\n    private draftEmail?: string;\n\n    async componentDidMount(): Promise<void> {\n        const {\n            initializeCustomer,\n            email,\n            onReady = noop,\n            onUnhandledError = noop,\n            providerWithCustomCheckout,\n        } = this.props;\n\n        this.draftEmail = email;\n\n        try {\n            if (providerWithCustomCheckout && providerWithCustomCheckout !== PaymentMethodId.StripeUPE) {\n                await initializeCustomer({methodId: providerWithCustomCheckout});\n            }\n        } catch (error) {\n            onUnhandledError(error);\n        }\n\n        this.setState({ isReady: true });\n\n        onReady();\n    }\n\n    async componentWillUnmount(): Promise<void> {\n        const {\n            deinitializeCustomer = noop,\n            providerWithCustomCheckout,\n            onUnhandledError = noop,\n        } = this.props;\n\n        try {\n            await deinitializeCustomer({ methodId: providerWithCustomCheckout });\n        } catch (error) {\n            onUnhandledError(error);\n        }\n    }\n\n    render(): ReactNode {\n        const { viewType } = this.props;\n        const { isEmailLoginFormOpen, isReady } = this.state;\n        const shouldRenderGuestForm = viewType === CustomerViewType.Guest;\n        const shouldRenderCreateAccountForm = viewType === CustomerViewType.CreateAccount;\n        const shouldRenderLoginForm = !shouldRenderGuestForm && !shouldRenderCreateAccountForm;\n\n        return (\n            <CustomerSkeleton isLoading={!isReady}>\n                {isEmailLoginFormOpen && this.renderEmailLoginLinkForm()}\n                {shouldRenderLoginForm && this.renderLoginForm()}\n                {shouldRenderGuestForm && this.renderGuestForm()}\n                {shouldRenderCreateAccountForm && this.renderCreateAccountForm()}\n            </CustomerSkeleton>\n        );\n    }\n\n    private renderGuestForm(): ReactNode {\n        const {\n            canSubscribe,\n            checkEmbeddedSupport,\n            checkoutButtonIds,\n            deinitializeCustomer,\n            email,\n            initializeCustomer,\n            isContinuingAsGuest = false,\n            isExecutingPaymentMethodCheckout = false,\n            isInitializing = false,\n            isSubscribed,\n            isWalletButtonsOnTop,\n            privacyPolicyUrl,\n            requiresMarketingConsent,\n            onUnhandledError = noop,\n            onWalletButtonClick = noop,\n            step,\n            isFloatingLabelEnabled,\n            isExpressPrivacyPolicy,\n            isPaymentDataRequired,\n            shouldRenderStripeForm,\n            providerWithCustomCheckout,\n            checkoutSettings,\n        } = this.props;\n\n        const checkoutButtons = isWalletButtonsOnTop || !isPaymentDataRequired\n          ? null\n          : <CheckoutButtonList\n            checkEmbeddedSupport={checkEmbeddedSupport}\n            checkoutSettings={checkoutSettings}\n            deinitialize={deinitializeCustomer}\n            initialize={initializeCustomer}\n            isInitializing={isInitializing}\n            methodIds={checkoutButtonIds}\n            onClick={onWalletButtonClick}\n            onError={onUnhandledError}\n          />;\n\n        const isLoadingGuestForm = isContinuingAsGuest || isExecutingPaymentMethodCheckout;\n\n        return (\n            shouldRenderStripeForm ?\n                <StripeGuestForm\n                    canSubscribe={canSubscribe}\n                    checkoutButtons={checkoutButtons}\n                    continueAsGuestButtonLabelId=\"customer.continue\"\n                    defaultShouldSubscribe={isSubscribed}\n                    deinitialize={deinitializeCustomer}\n                    email={this.draftEmail || email}\n                    initialize={initializeCustomer}\n                    isExpressPrivacyPolicy={isExpressPrivacyPolicy}\n                    isLoading={isContinuingAsGuest || isInitializing || isExecutingPaymentMethodCheckout}\n                    onChangeEmail={this.handleChangeEmail}\n                    onContinueAsGuest={this.handleContinueAsGuest}\n                    onShowLogin={this.handleShowLogin}\n                    privacyPolicyUrl={privacyPolicyUrl}\n                    requiresMarketingConsent={requiresMarketingConsent}\n                    step={step}\n                />\n                :\n            <GuestForm\n                canSubscribe={canSubscribe}\n                checkoutButtons={checkoutButtons}\n                continueAsGuestButtonLabelId=\"customer.continue\"\n                defaultShouldSubscribe={isSubscribed}\n                email={this.draftEmail || email}\n                isExpressPrivacyPolicy={isExpressPrivacyPolicy}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                isLoading={isLoadingGuestForm}\n                onChangeEmail={this.handleChangeEmail}\n                onContinueAsGuest={this.handleContinueAsGuest}\n                onShowLogin={this.handleShowLogin}\n                privacyPolicyUrl={privacyPolicyUrl}\n                requiresMarketingConsent={requiresMarketingConsent}\n                shouldShowEmailWatermark={isPayPalFastlaneMethod(providerWithCustomCheckout)}\n            />\n        );\n    }\n\n    private renderEmailLoginLinkForm(): ReactNode {\n        const { isEmailLoginFormOpen, hasRequestedLoginEmail } = this.state;\n\n        const { isSendingSignInEmail, signInEmailError, signInEmail, isFloatingLabelEnabled } =\n            this.props;\n\n        return (\n            <EmailLoginForm\n                email={this.draftEmail}\n                emailHasBeenRequested={hasRequestedLoginEmail}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                isOpen={isEmailLoginFormOpen}\n                isSendingEmail={isSendingSignInEmail}\n                onRequestClose={this.closeEmailLoginFormForm}\n                onSendLoginEmail={this.handleSendLoginEmail}\n                sentEmail={signInEmail}\n                sentEmailError={signInEmailError}\n            />\n        );\n    }\n\n    private closeEmailLoginFormForm: () => void = () => {\n        this.setState({\n            isEmailLoginFormOpen: false,\n            hasRequestedLoginEmail: false,\n        });\n    };\n\n    private renderCreateAccountForm(): ReactNode {\n        const {\n            customerAccountFields,\n            isExecutingPaymentMethodCheckout,\n            isCreatingAccount,\n            createAccountError,\n            requiresMarketingConsent,\n            isFloatingLabelEnabled,\n            defaultShouldSubscribe,\n            fixNewsletterCheckboxExperimentEnabled,\n        } = this.props;\n\n        return (\n            <CreateAccountForm\n                createAccountError={createAccountError}\n                defaultShouldSubscribe={defaultShouldSubscribe}\n                fixNewsletterCheckboxExperimentEnabled={fixNewsletterCheckboxExperimentEnabled}\n                formFields={customerAccountFields}\n                isCreatingAccount={isCreatingAccount}\n                isExecutingPaymentMethodCheckout={isExecutingPaymentMethodCheckout}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                onCancel={this.handleCancelCreateAccount}\n                onSubmit={this.handleCreateAccount}\n                requiresMarketingConsent={requiresMarketingConsent}\n            />\n        );\n    }\n\n    private renderLoginForm(): ReactNode {\n        const {\n            isEmbedded,\n            email,\n            forgotPasswordUrl,\n            isSignInEmailEnabled,\n            isGuestEnabled,\n            isSendingSignInEmail,\n            isSigningIn,\n            isExecutingPaymentMethodCheckout,\n            isAccountCreationEnabled,\n            providerWithCustomCheckout,\n            signInError,\n            isFloatingLabelEnabled,\n            viewType,\n        } = this.props;\n\n        return (\n            <LoginForm\n                canCancel={isGuestEnabled}\n                continueAsGuestButtonLabelId={\n                    providerWithCustomCheckout\n                        ? 'customer.continue'\n                        : 'customer.continue_as_guest_action'\n                }\n                email={this.draftEmail || email}\n                forgotPasswordUrl={forgotPasswordUrl}\n                isExecutingPaymentMethodCheckout={isExecutingPaymentMethodCheckout}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                isSendingSignInEmail={isSendingSignInEmail}\n                isSignInEmailEnabled={isSignInEmailEnabled && !isEmbedded}\n                isSigningIn={isSigningIn}\n                onCancel={this.handleCancelSignIn}\n                onChangeEmail={this.handleChangeEmail}\n                onContinueAsGuest={this.executePaymentMethodCheckoutOrContinue}\n                onCreateAccount={this.showCreateAccount}\n                onSendLoginEmail={this.handleEmailLoginClicked}\n                onSignIn={this.handleSignIn}\n                shouldShowCreateAccountLink={isAccountCreationEnabled}\n                signInError={signInError}\n                viewType={viewType}\n            />\n        );\n    }\n\n    private handleEmailLoginClicked: () => void = async () => {\n        const { viewType } = this.props;\n\n        try {\n            if (viewType !== CustomerViewType.Login && this.draftEmail) {\n                await this.handleSendLoginEmail({ email: this.draftEmail });\n            }\n        } finally {\n            this.setState({\n                isEmailLoginFormOpen: true,\n            });\n        }\n    };\n\n    private handleSendLoginEmail: (values: EmailLoginFormValues) => Promise<void> = async (\n        values,\n    ) => {\n        const { sendLoginEmail } = this.props;\n\n        try {\n            await sendLoginEmail(values);\n        } catch (error) {\n        // Need to write catch block since one test covers the case when `sendLoginEmail` fails\n        } finally {\n            this.setState({\n                hasRequestedLoginEmail: true,\n            });\n        }\n    };\n\n    private handleContinueAsGuest: (formValues: GuestFormValues) => Promise<void> = async (\n        formValues,\n    ) => {\n        const {\n            canSubscribe,\n            continueAsGuest,\n            hasBillingId,\n            defaultShouldSubscribe,\n            onChangeViewType = noop,\n            onContinueAsGuest = noop,\n            onContinueAsGuestError = noop,\n            onSubscribeToNewsletter,\n        } = this.props;\n\n        const email = formValues.email.trim();\n        const updateSubscriptionWhenUnchecked =\n            hasBillingId || defaultShouldSubscribe ? false : undefined;\n\n        try {\n            const { data } = await continueAsGuest({\n                email,\n                acceptsMarketingNewsletter:\n                    canSubscribe && formValues.shouldSubscribe\n                        ? true\n                        : updateSubscriptionWhenUnchecked,\n                acceptsAbandonedCartEmails: formValues.shouldSubscribe\n                    ? true\n                    : updateSubscriptionWhenUnchecked,\n            });\n\n            onSubscribeToNewsletter(formValues.shouldSubscribe);\n\n            SubscribeSessionStorage.setSubscribeStatus(formValues.shouldSubscribe);\n\n            const customer = data.getCustomer();\n\n            const paymentProviderCustomer = data.getPaymentProviderCustomer();\n\n            if (customer && customer.shouldEncourageSignIn && customer.isGuest && !paymentProviderCustomer?.stripeLinkAuthenticationState) {\n                return onChangeViewType(CustomerViewType.SuggestedLogin);\n            }\n\n            await this.executePaymentMethodCheckoutOrContinue();\n\n            this.draftEmail = undefined;\n        } catch (error) {\n            if (\n                isErrorWithType(error) &&\n                (error.type === 'update_subscriptions' ||\n                    error.type === 'payment_method_client_invalid')\n            ) {\n                this.draftEmail = undefined;\n\n                onContinueAsGuest();\n            }\n\n            if (isErrorWithType(error) && error.status === 429) {\n                return onChangeViewType(CustomerViewType.EnforcedLogin);\n            }\n\n            if (isErrorWithType(error) && error.status === 403) {\n                return onChangeViewType(CustomerViewType.CancellableEnforcedLogin);\n            }\n\n            onContinueAsGuestError(error);\n        }\n    };\n\n    private handleSignIn: (credentials: CustomerCredentials) => Promise<void> = async (\n        credentials,\n    ) => {\n        const {\n            signIn,\n            onSignIn = noop,\n            onSignInError = noop,\n        } = this.props;\n\n        try {\n            await signIn(credentials);\n\n            onSignIn();\n\n            this.draftEmail = undefined;\n        } catch (error) {\n            onSignInError(error);\n        }\n    };\n\n    private handleCreateAccount: (values: CreateAccountFormValues) => void = async (values) => {\n        const {\n            createAccount = noop,\n            onAccountCreated = noop,\n        } = this.props;\n\n        await createAccount(mapCreateAccountFromFormValues(values));\n\n        onAccountCreated();\n    };\n\n    private showCreateAccount: () => void = () => {\n        const { onChangeViewType = noop } = this.props;\n\n        onChangeViewType(CustomerViewType.CreateAccount);\n    };\n\n    private handleCancelCreateAccount: () => void = () => {\n        const { clearError, onChangeViewType = noop, createAccountError } = this.props;\n\n        if (createAccountError) {\n            clearError(createAccountError);\n        }\n\n        onChangeViewType(CustomerViewType.Login);\n    };\n\n    private handleCancelSignIn: () => void = () => {\n        const { clearError, onChangeViewType = noop, signInError } = this.props;\n\n        if (signInError) {\n            clearError(signInError);\n        }\n\n        onChangeViewType(CustomerViewType.Guest);\n    };\n\n    private handleChangeEmail: (email: string) => void = (email) => {\n        const { analyticsTracker } = this.props;\n\n        this.draftEmail = email;\n        analyticsTracker.customerEmailEntry(email);\n    };\n\n    private handleShowLogin: () => void = () => {\n        const { onChangeViewType = noop } = this.props;\n\n        onChangeViewType(CustomerViewType.Login);\n    };\n\n    private executePaymentMethodCheckoutOrContinue: () => void = async () => {\n        const {\n            executePaymentMethodCheckout,\n            onContinueAsGuest = noop,\n            providerWithCustomCheckout\n        } = this.props;\n\n        if (providerWithCustomCheckout && providerWithCustomCheckout !== PaymentMethodId.StripeUPE) {\n            await executePaymentMethodCheckout({\n                methodId: providerWithCustomCheckout,\n                continueWithCheckoutCallback: onContinueAsGuest,\n                checkoutPaymentMethodExecuted: (payload) => this.checkoutPaymentMethodExecuted(payload)\n            });\n        } else {\n            onContinueAsGuest();\n        }\n    };\n\n    private checkoutPaymentMethodExecuted(payload?: CheckoutPaymentMethodExecutedOptions) {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.customerPaymentMethodExecuted(payload);\n    }\n}\n\nexport function mapToWithCheckoutCustomerProps({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutCustomerProps | null {\n    const {\n        data: {\n            getBillingAddress,\n            getCustomerAccountFields,\n            getCheckout,\n            getCustomer,\n            getCart,\n            getSignInEmail,\n            getConfig,\n            isPaymentDataRequired,\n        },\n        errors: { getSignInError, getSignInEmailError, getCreateCustomerAccountError },\n        statuses: {\n            isContinuingAsGuest,\n            isExecutingPaymentMethodCheckout,\n            isInitializingCustomer,\n            isSigningIn,\n            isSendingSignInEmail,\n            isCreatingCustomerAccount,\n        },\n    } = checkoutState;\n\n    const billingAddress = getBillingAddress();\n    const checkout = getCheckout();\n    const customer = getCustomer();\n    const cart = getCart();\n    const signInEmail = getSignInEmail();\n    const config = getConfig();\n\n    if (!checkout || !config || !cart) {\n        return null;\n    }\n\n    const {\n        checkoutSettings: {\n            privacyPolicyUrl,\n            requiresMarketingConsent,\n            isSignInEmailEnabled,\n            isAccountCreationEnabled,\n            isExpressPrivacyPolicy,\n            features,\n        },\n    } = config as StoreConfig & { checkoutSettings: { isAccountCreationEnabled: boolean } };\n\n    const providerWithCustomCheckout = getProviderWithCustomCheckout(\n        config.checkoutSettings.providerWithCustomCheckout,\n    );\n\n    const fixNewsletterCheckboxExperimentEnabled = features['CHECKOUT-8033.fix_newletter_checkbox'];\n\n    return {\n        customerAccountFields: getCustomerAccountFields(),\n        canSubscribe: config.shopperConfig.showNewsletterSignup,\n        checkoutButtonIds: config.checkoutSettings.remoteCheckoutProviders,\n        clearError: checkoutService.clearError,\n        createAccount: checkoutService.createCustomerAccount,\n        continueAsGuest: checkoutService.continueAsGuest,\n        sendLoginEmail: checkoutService.sendSignInEmail,\n        defaultShouldSubscribe: config.shopperConfig.defaultNewsletterSignup,\n        deinitializeCustomer: checkoutService.deinitializeCustomer,\n        executePaymentMethodCheckout: checkoutService.executePaymentMethodCheckout,\n        email: billingAddress?.email || customer?.email,\n        firstName: customer?.firstName,\n        fixNewsletterCheckboxExperimentEnabled,\n        forgotPasswordUrl: config.links.forgotPasswordLink,\n        initializeCustomer: checkoutService.initializeCustomer,\n        isCreatingAccount: isCreatingCustomerAccount(),\n        createAccountError: getCreateCustomerAccountError(),\n        hasBillingId: !!billingAddress?.id,\n        isContinuingAsGuest: isContinuingAsGuest(),\n        isExecutingPaymentMethodCheckout: isExecutingPaymentMethodCheckout(),\n        isInitializing: isInitializingCustomer(),\n        isSignInEmailEnabled,\n        isAccountCreationEnabled,\n        isGuestEnabled: config.checkoutSettings.guestCheckoutEnabled,\n        isSigningIn: isSigningIn(),\n        isSendingSignInEmail: isSendingSignInEmail(),\n        signInEmail,\n        signInEmailError: getSignInEmailError(),\n        privacyPolicyUrl,\n        providerWithCustomCheckout,\n        requiresMarketingConsent,\n        signIn: checkoutService.signInCustomer,\n        signInError: getSignInError(),\n        isFloatingLabelEnabled: isFloatingLabelEnabled(config.checkoutSettings),\n        isExpressPrivacyPolicy,\n        isPaymentDataRequired: isPaymentDataRequired(),\n        shouldRenderStripeForm: providerWithCustomCheckout === PaymentMethodId.StripeUPE && shouldUseStripeLinkByMinimumAmount(cart),\n        checkoutSettings: config.checkoutSettings,\n    };\n}\n\nexport default withAnalytics(withCheckout(mapToWithCheckoutCustomerProps)(Customer));\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconTag: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M21.41 11.58l-9-9C12.05 2.22 11.55 2 11 2H4c-1.1 0-2 .9-2 2v7c0 .55.22 1.05.59 1.42l9 9c.36.36.86.58 1.41.58.55 0 1.05-.22 1.41-.59l7-7c.37-.36.59-.86.59-1.41 0-.55-.23-1.06-.59-1.42zM5.5 7C4.67 7 4 6.33 4 5.5S4.67 4 5.5 4 7 4.67 7 5.5 6.33 7 5.5 7z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconTag);\n","import DOMPurify from 'dompurify';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { IconTag } from '../ui/icon';\n\nexport interface PromotionBannerProps {\n    message: string;\n}\n\nconst PromotionBanner: FunctionComponent<PromotionBannerProps> = ({ message }) => (\n    <Alert\n        additionalClassName=\"optimizedCheckout-discountBanner\"\n        icon={<IconTag />}\n        type={AlertType.Info}\n    >\n        <span\n            dangerouslySetInnerHTML={{\n                __html: DOMPurify.sanitize(message),\n            }}\n            data-test=\"promotion-banner-message\"\n        />\n    </Alert>\n);\n\nexport default memo(PromotionBanner);\n","import { Banner, Promotion } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport PromotionBanner from './PromotionBanner';\nimport './PromotionBannerList.scss';\n\nexport interface PromotionBannerListProps {\n    promotions?: Promotion[];\n}\n\nconst PromotionBannerList: FunctionComponent<PromotionBannerListProps> = ({ promotions }) => {\n    const banners = (promotions || []).reduce(\n        (result, promotion) => [...result, ...promotion.banners],\n        [] as Banner[],\n    );\n\n    if (!banners.length) {\n        return null;\n    }\n\n    return (\n        <div className=\"discountBanner\">\n            <ul className=\"discountBannerList\">\n                {banners.map((banner, index) => (\n                    <PromotionBanner key={index} message={banner.text} />\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default memo(PromotionBannerList);\n","import { Consignment, LineItemMap } from '@bigcommerce/checkout-sdk';\nimport { reduce } from 'lodash';\n\nexport default function hasUnassignedLineItems(\n    consignments: Consignment[],\n    lineItems: LineItemMap,\n): boolean {\n    const totalAssigned = reduce(\n        consignments,\n        (total, consignment) => total + consignment.lineItemIds.length,\n        0,\n    );\n\n    return totalAssigned < lineItems.physicalItems.filter((item) => !item.addedByPromotion).length;\n}\n","import { Consignment, LineItemMap } from '@bigcommerce/checkout-sdk';\nimport { some } from 'lodash';\n\nimport hasUnassignedLineItems from './hasUnassignedLineItems';\n\nexport default function isUsingMultiShipping(\n    consignments: Consignment[],\n    lineItems: LineItemMap,\n): boolean {\n    if (consignments.length > 1) {\n        return true;\n    }\n\n    if (\n        some(consignments, (consignment) => consignment.lineItemIds.length) &&\n        hasUnassignedLineItems(consignments, lineItems)\n    ) {\n        return true;\n    }\n\n    return false;\n}\n","import { Cart, Consignment } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { isPayPalFastlaneAddress, PoweredByPayPalFastlaneLabel, usePayPalFastlaneAddress } from '@bigcommerce/checkout/paypal-fastlane-integration';\n\nimport { AddressType, StaticAddress } from '../address';\n\nimport getShippingCostAfterAutomaticDiscount from './getShippingCostAfterAutomaticDiscount';\nimport { StaticShippingOption } from './shippingOption';\nimport './StaticConsignment.scss';\nimport StaticConsignmentItemList from './StaticConsignmentItemList';\n\ninterface StaticConsignmentProps {\n    consignment: Consignment;\n    cart: Cart;\n    compactView?: boolean;\n    isShippingDiscountDisplayEnabled: boolean;\n}\n\nconst StaticConsignment: FunctionComponent<StaticConsignmentProps> = ({\n    consignment,\n    cart,\n    compactView,\n    isShippingDiscountDisplayEnabled,\n}) => {\n    const { paypalFastlaneAddresses } = usePayPalFastlaneAddress();\n    const { shippingAddress: address, selectedShippingOption } = consignment;\n    const showPayPalFastlaneAddressLabel = isPayPalFastlaneAddress(address, paypalFastlaneAddresses);\n\n    return (\n        <div className=\"staticConsignment\">\n            <StaticAddress address={address} type={AddressType.Shipping} />\n\n            {showPayPalFastlaneAddressLabel && <PoweredByPayPalFastlaneLabel />}\n\n            {!compactView && <StaticConsignmentItemList cart={cart} consignment={consignment} />}\n\n            {selectedShippingOption && (\n                <div>\n                    <div className=\"shippingOption shippingOption--alt shippingOption--selected\">\n                        <StaticShippingOption\n                            displayAdditionalInformation={false}\n                            method={selectedShippingOption}\n                            shippingCostAfterDiscount={isShippingDiscountDisplayEnabled ? getShippingCostAfterAutomaticDiscount(selectedShippingOption.cost, [consignment]) : undefined}\n                        />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default memo(StaticConsignment);\n","import { Cart, Consignment } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { localizeAddress, TranslatedString } from '@bigcommerce/checkout/locale';\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\nimport { isPayPalFastlaneAddress, PoweredByPayPalFastlaneLabel, usePayPalFastlaneAddress } from '@bigcommerce/checkout/paypal-fastlane-integration';\n\nimport ConsignmentLineItemDetail from './ConsignmentLineItemDetail';\nimport findLineItems from './findLineItems';\nimport getLineItemsCount from './getLineItemsCount';\nimport getShippingCostAfterAutomaticDiscount from './getShippingCostAfterAutomaticDiscount';\nimport { StaticShippingOption } from './shippingOption';\nimport './StaticMultiConsignment.scss';\n\ninterface StaticMultiConsignmentProps {\n    consignment: Consignment;\n    cart: Cart;\n    consignmentNumber: number;\n    isShippingDiscountDisplayEnabled: boolean;\n}\n\nconst StaticMultiConsignment: FunctionComponent<StaticMultiConsignmentProps> = ({\n    consignment,\n    cart,\n    consignmentNumber,\n    isShippingDiscountDisplayEnabled,\n}) => {\n    const {\n        checkoutState: {\n            data: { getShippingCountries },\n        },\n    } = useCheckout();\n\n    const { shippingAddress: addressWithoutLocalization, selectedShippingOption } = consignment;\n    const address = localizeAddress(addressWithoutLocalization, getShippingCountries());\n    const { paypalFastlaneAddresses } = usePayPalFastlaneAddress();\n    const showPayPalFastlaneAddressLabel = isPayPalFastlaneAddress(address, paypalFastlaneAddresses);\n\n    const lineItems = findLineItems(cart, consignment);\n\n    return (\n        <div className=\"staticMultiConsignment\">\n            <h3 className=\"staticMultiConsignment-header\">\n                <TranslatedString data={{ consignmentNumber }} id=\"shipping.multishipping_consignment_index_heading\" />\n            </h3>\n\n            <div className=\"checkout-address--static\">\n                <p className=\"address-entry\">\n                    <span className=\"first-name\">{`${address.firstName} `}</span>\n                    <span className=\"family-name\">{address.lastName}</span>\n                </p>\n                <div className=\"address-details\">\n                    <p className=\"street-address address-entry\">\n                        <span className=\"address-line-1\">{`${address.address1}`}</span>\n                        {address.address2 && (\n                            <span className=\"address-line-2\">{`, ${address.address2}`}</span>\n                        )}\n                    </p>\n\n                    <p className=\"address-entry\">\n                        {address.city && <span className=\"locality\">{`${address.city}`}</span>}\n                        {address.localizedProvince && (\n                            <span className=\"region\">{`, ${address.localizedProvince}`}</span>\n                        )}\n                        {address.localizedCountry && (\n                            <span className=\"country-name\">{`, ${address.localizedCountry}`}</span>\n                        )}\n                        {address.postalCode && (\n                            <span className=\"postal-code\">{` ${address.postalCode}`}</span>\n                        )}\n                    </p>\n                </div>\n            </div>\n\n            {showPayPalFastlaneAddressLabel && <PoweredByPayPalFastlaneLabel />}\n\n            <div className=\"staticConsignment-items\">\n            <strong>\n                <TranslatedString\n                    data={{ count: getLineItemsCount(lineItems) }}\n                    id=\"cart.item_count_text\"\n                />\n            </strong>\n            \n            <ConsignmentLineItemDetail lineItems={lineItems} />\n        </div>\n\n            {selectedShippingOption && (\n                <div>\n                    <div className=\"shippingOption shippingOption--alt shippingOption--selected\">\n                        <StaticShippingOption\n                            displayAdditionalInformation={false}\n                            method={selectedShippingOption}\n                            shippingCostAfterDiscount={isShippingDiscountDisplayEnabled ? getShippingCostAfterAutomaticDiscount(selectedShippingOption.cost, [consignment]) : undefined}\n                        />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default memo(StaticMultiConsignment);\n","\nimport { Cart, Consignment } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport StaticConsignment from './StaticConsignment';\nimport StaticMultiConsignment from './StaticMultiConsignment';\n\n\ninterface ShippingSummaryProps {\n    isShippingDiscountDisplayEnabled: boolean;\n    isMultiShippingMode: boolean;\n    consignments: Consignment[];\n    cart: Cart;\n}\n\nconst ShippingSummary: FunctionComponent<ShippingSummaryProps> = ({\n    isShippingDiscountDisplayEnabled,\n    isMultiShippingMode,\n    consignments,\n    cart\n}) => {\n    if (isMultiShippingMode) {\n        return (\n            <>\n                {consignments.map((consignment, index) => (\n                    <div className=\"staticMultiConsignmentContainer\" key={consignment.id}>\n                        <StaticMultiConsignment\n                            cart={cart}\n                            consignment={consignment}\n                            consignmentNumber={index + 1}\n                            isShippingDiscountDisplayEnabled={isShippingDiscountDisplayEnabled}\n                        />\n                    </div>\n                ))}\n            </>\n        );\n    }\n\n    return (\n        <>\n            {consignments.map((consignment) => (\n                <div className=\"staticConsignmentContainer\" key={consignment.id}>\n                    <StaticConsignment\n                        cart={cart}\n                        compactView={consignments.length < 2}\n                        consignment={consignment}\n                        isShippingDiscountDisplayEnabled={isShippingDiscountDisplayEnabled}\n                    />\n                </div>\n            ))}\n        </>\n    );\n};\n\nexport default memo(ShippingSummary);\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class ShippingOptionExpiredError extends CustomError {\n    constructor() {\n        super({\n            name: 'SHIPPING_OPTION_EXPIRED',\n            message: getLanguageService().translate('shipping.shipping_option_expired_error'),\n            title: getLanguageService().translate('shipping.shipping_option_expired_heading'),\n        });\n\n        setPrototypeOf(this, ShippingOptionExpiredError.prototype);\n    }\n}\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconCheck: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconCheck);\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button, ButtonSize, ButtonVariant } from '../ui/button';\nimport { IconCheck } from '../ui/icon';\n\nimport CheckoutStepType from './CheckoutStepType';\n\nexport interface CheckoutStepHeaderProps {\n    heading: ReactNode;\n    isActive?: boolean;\n    isComplete?: boolean;\n    isEditable?: boolean;\n    summary?: ReactNode;\n    type: CheckoutStepType;\n    onEdit?(type: CheckoutStepType): void;\n}\n\nconst CheckoutStepHeader: FunctionComponent<CheckoutStepHeaderProps> = ({\n    heading,\n    isActive,\n    isComplete,\n    isEditable,\n    onEdit,\n    summary,\n    type,\n}) => {\n    return (\n        <div\n            className={classNames('stepHeader', {\n                'is-readonly': !isEditable,\n                'is-clickable': isEditable && !isActive,\n            })}\n            onClick={preventDefault(isEditable && onEdit ? () => onEdit(type) : noop)}\n        >\n            <div className=\"stepHeader-figure stepHeader-column\">\n                <IconCheck\n                    additionalClassName={classNames(\n                        'stepHeader-counter',\n                        'optimizedCheckout-step',\n                        { 'stepHeader-counter--complete': isComplete },\n                    )}\n                />\n\n                <h2 className=\"stepHeader-title optimizedCheckout-headingPrimary\">{heading}</h2>\n            </div>\n\n            <div\n                className=\"stepHeader-body stepHeader-column optimizedCheckout-contentPrimary\"\n                data-test=\"step-info\"\n            >\n                {!isActive && isComplete && summary}\n            </div>\n\n            {isEditable && !isActive && (\n                <div className=\"stepHeader-actions stepHeader-column\">\n                    <Button\n                        aria-expanded={isActive}\n                        size={ButtonSize.Tiny}\n                        testId=\"step-edit-button\"\n                        variant={ButtonVariant.Secondary}\n                    >\n                        <TranslatedString id=\"common.edit_action\" />\n                    </Button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default memo(CheckoutStepHeader);\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { Component, createRef, ReactNode } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { isMobileView, MobileView } from '../ui/responsive';\n\nimport CheckoutStepHeader from './CheckoutStepHeader';\nimport CheckoutStepType from './CheckoutStepType';\n\nexport interface CheckoutStepProps {\n    heading?: ReactNode;\n    isActive?: boolean;\n    isBusy: boolean;\n    isComplete?: boolean;\n    isEditable?: boolean;\n    suggestion?: ReactNode;\n    summary?: ReactNode;\n    type: CheckoutStepType;\n    onExpanded?(step: CheckoutStepType): void;\n    onEdit?(step: CheckoutStepType): void;\n}\n\nexport interface CheckoutStepState {\n    isClosed: boolean;\n}\n\nexport default class CheckoutStep extends Component<CheckoutStepProps, CheckoutStepState> {\n    state = {\n        isClosed: true,\n    };\n\n    private containerRef = createRef<HTMLLIElement>();\n    private contentRef = createRef<HTMLDivElement>();\n    private timeoutRef?: number;\n    private timeoutDelay?: number;\n\n    componentDidMount(): void {\n        const { isActive } = this.props;\n\n        if (isActive) {\n            this.focusStep();\n        }\n    }\n\n    componentDidUpdate(prevProps: Readonly<CheckoutStepProps>): void {\n        const { isActive } = this.props;\n\n        if (isActive && isActive !== prevProps.isActive) {\n            this.focusStep();\n        }\n    }\n\n    componentWillUnmount(): void {\n        if (this.timeoutRef) {\n            window.clearTimeout(this.timeoutRef);\n\n            this.timeoutRef = undefined;\n        }\n    }\n\n    render(): ReactNode {\n        const { heading, isActive, isComplete, isEditable, onEdit, suggestion, summary, type } =\n            this.props;\n\n        const { isClosed } = this.state;\n\n        return (\n            <li\n                className={classNames('checkout-step', 'optimizedCheckout-checkoutStep', {\n                    [`checkout-step--${type}`]: !!type,\n                })}\n                ref={this.containerRef}\n            >\n                <div className=\"checkout-view-header\">\n                    <CheckoutStepHeader\n                        heading={heading}\n                        isActive={isActive}\n                        isComplete={isComplete}\n                        isEditable={isEditable}\n                        onEdit={onEdit}\n                        summary={summary}\n                        type={type}\n                    />\n                </div>\n\n                {suggestion && isClosed && !isActive && (\n                    <div className=\"checkout-suggestion\" data-test=\"step-suggestion\">\n                        {suggestion}\n                    </div>\n                )}\n\n                {this.renderContent()}\n            </li>\n        );\n    }\n\n    private renderContent(): ReactNode {\n        const { children, isActive, isBusy } = this.props;\n\n        return (\n            <MobileView>\n                {(matched) => (\n                    <CSSTransition\n                        addEndListener={this.handleTransitionEnd}\n                        classNames=\"checkout-view-content\"\n                        enter={!matched}\n                        exit={!matched}\n                        in={isActive}\n                        mountOnEnter\n                        onExited={ this.onAnimationEnd }\n                        timeout={ {} }\n                        unmountOnExit\n                    >\n                        <div\n                            aria-busy={isBusy}\n                            className=\"checkout-view-content\"\n                            ref={this.contentRef}\n                        >\n                            {isActive ? children : null}\n                        </div>\n                    </CSSTransition>\n                )}\n            </MobileView>\n        );\n    }\n\n    private focusStep(): void {\n        const delay = isMobileView() ? 0 : this.getTransitionDelay();\n\n        this.setState({ isClosed: false });\n\n        this.timeoutRef = window.setTimeout(() => {\n            const input = this.getChildInput();\n            const position = this.getScrollPosition();\n            const { type, onExpanded = noop } = this.props;\n\n            if (input) {\n                input.focus();\n            }\n\n            if (position !== undefined && !isNaN(position)) {\n                window.scrollTo(0, position);\n            }\n\n            onExpanded(type);\n\n            this.timeoutRef = undefined;\n        }, delay);\n    }\n\n    private getChildInput(): HTMLElement | undefined {\n        const container = this.containerRef.current;\n\n        if (!container) {\n            return;\n        }\n\n        const input = container.querySelector<HTMLElement>('input, select, textarea');\n\n        return input || undefined;\n    }\n\n    private getScrollPosition(): number | undefined {\n        const container = this.getParentContainer();\n        const { isComplete } = this.props;\n\n        if (!container || window !== window.top) {\n            return;\n        }\n\n        const topOffset = isComplete ? 0 : window.innerHeight / 5;\n        const containerOffset =\n            container.getBoundingClientRect().top + (window.scrollY || window.pageYOffset);\n\n        return containerOffset - topOffset;\n    }\n\n    // For now, we need to find the parent container because `CheckoutStep`\n    // isn't the outer container yet. Once both the header and body are\n    // moved inside this component, we can remove the lookup.\n    private getParentContainer(): HTMLElement | undefined {\n        let container: HTMLElement | null = this.containerRef.current;\n\n        while (container && container.parentElement) {\n            if (container.parentElement.classList.contains('checkout-step')) {\n                return container.parentElement;\n            }\n\n            container = container.parentElement;\n        }\n\n        return this.containerRef.current ? this.containerRef.current : undefined;\n    }\n\n    private getTransitionDelay(): number {\n        if (this.timeoutDelay !== undefined) {\n            return this.timeoutDelay;\n        }\n\n        // Cache the result to avoid unnecessary reflow\n        this.timeoutDelay =\n            parseFloat(\n                this.contentRef.current\n                    ? getComputedStyle(this.contentRef.current).transitionDuration\n                    : '0s',\n            ) * 1000;\n\n        return this.timeoutDelay;\n    }\n\n    private handleTransitionEnd: (node: HTMLElement, done: () => void) => void = (node, done) => {\n        node.addEventListener('transitionend', ({ target }) => {\n            if (target === node) {\n                done();\n            }\n        });\n    };\n\n    private onAnimationEnd = (): void => {\n        const { isActive } = this.props;\n\n        if (!isActive) {\n            this.setState({ isClosed: true });\n        }\n    }\n}\n","enum CheckoutStepType {\n    Billing = 'billing',\n    Customer = 'customer',\n    Payment = 'payment',\n    Shipping = 'shipping',\n}\n\nexport default CheckoutStepType;\n","import { Cart, StoreConfig } from '@bigcommerce/checkout-sdk';\n\nconst itemsRequireShipping = (cart?: Cart, config?: StoreConfig) => {\n    if (!cart) {\n        return false;\n    }\n\n    if (cart.lineItems.physicalItems.some((lineItem) => lineItem.isShippingRequired)) {\n        return true;\n    }\n\n    if (config && cart.lineItems.customItems\n    ) {\n        return cart.lineItems.customItems.length > 0;\n    }\n\n    return false;\n};\n\nexport default itemsRequireShipping;\n","import { CheckoutPayment, CheckoutSelectors } from '@bigcommerce/checkout-sdk';\nimport { compact } from 'lodash';\nimport { createSelector } from 'reselect';\n\nimport { shouldUseStripeLinkByMinimumAmount } from '@bigcommerce/checkout/instrument-utils';\n\nimport { isValidAddress } from '../address';\nimport { EMPTY_ARRAY, isExperimentEnabled } from '../common/utility';\nimport { SUPPORTED_METHODS } from '../customer';\nimport { PaymentMethodId } from '../payment/paymentMethod';\nimport {\n    hasSelectedShippingOptions,\n    hasUnassignedLineItems,\n    itemsRequireShipping,\n} from '../shipping';\n\nimport CheckoutStepType from './CheckoutStepType';\n\n// StripeLink is a UX that is only available with StripeUpe and will only be displayed for BC guest users,\n// it uses its own components in the customer and shipping steps, unfortunately in order to preserve the UX\n// when reloading the checkout page it's necessary to refill the stripe components with the information saved.\n// In this step, we require that the customer strategy be reloaded the first time.\nconst getStripeLinkAndCheckoutPageIsReloaded = (\n    isUsingWallet: boolean,\n    hasEmail: boolean,\n    isGuest: boolean,\n    shouldUseStripeLinkByMinimumAmount: boolean,\n    providerWithCustomCheckout?: string | null,\n) => {\n    return !isUsingWallet && providerWithCustomCheckout === PaymentMethodId.StripeUPE && hasEmail && isGuest && shouldUseStripeLinkByMinimumAmount;\n}\n\nconst getCustomerStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getCheckout(),\n    ({ data }: CheckoutSelectors) => data.getCustomer(),\n    ({ data }: CheckoutSelectors) => data.getBillingAddress(),\n    ({ data }: CheckoutSelectors) => data.getConfig(),\n    ({ data }: CheckoutSelectors) => data.getCart(),\n    ({ data }: CheckoutSelectors) => data.getPaymentProviderCustomer(),\n    (checkout, customer, billingAddress, config, cart, paymentProviderCustomer) => {\n        const hasEmail = !!(\n            (customer && customer.email) ||\n            (billingAddress && billingAddress.email)\n        );\n        const isUsingWallet =\n            checkout && checkout.payments\n                ? checkout.payments.some(\n                    (payment: CheckoutPayment) => SUPPORTED_METHODS.indexOf(payment.providerId) >= 0,\n                  )\n                : false;\n        const isGuest = !!(customer && customer.isGuest);\n        const isComplete = hasEmail || isUsingWallet;\n        const isEditable = isComplete && !isUsingWallet && isGuest;\n        const isUsingStripeLinkAndCheckoutPageIsReloaded = getStripeLinkAndCheckoutPageIsReloaded(\n            isUsingWallet,\n            hasEmail,\n            isGuest,\n            cart ? shouldUseStripeLinkByMinimumAmount(cart) : false,\n            config?.checkoutSettings.providerWithCustomCheckout,\n        );\n\n        if (isUsingStripeLinkAndCheckoutPageIsReloaded) {\n            return {\n                type: CheckoutStepType.Customer,\n                isActive: false,\n                isComplete: paymentProviderCustomer?.stripeLinkAuthenticationState !== undefined,\n                isEditable,\n                isRequired: true,\n            };\n        }\n\n        return {\n            type: CheckoutStepType.Customer,\n            isActive: false,\n            isComplete,\n            isEditable,\n            isRequired: true,\n        };\n    },\n);\n\nconst getBillingStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getCheckout(),\n    ({ data }: CheckoutSelectors) => data.getBillingAddress(),\n    ({ data }: CheckoutSelectors) => {\n        const billingAddress = data.getBillingAddress();\n\n        return billingAddress\n            ? data.getBillingAddressFields(billingAddress.countryCode)\n            : EMPTY_ARRAY;\n    },\n    ({ data }: CheckoutSelectors) => data.getConfig(),\n    (checkout, billingAddress, billingAddressFields, config) => {\n        const hasAddress = billingAddress\n            ? isValidAddress(billingAddress, billingAddressFields)\n            : false;\n        const isUsingWallet =\n            checkout && checkout.payments\n                ? checkout.payments.some(\n                      (payment) => SUPPORTED_METHODS.indexOf(payment.providerId) >= 0,\n                  )\n                : false;\n        const isComplete = hasAddress || isUsingWallet;\n        const isUsingAmazonPay =\n            checkout && checkout.payments\n                ? checkout.payments.some((payment) => payment.providerId === 'amazonpay')\n                : false;\n\n        if (isUsingAmazonPay) {\n            const billingAddressCustomFields = billingAddressFields.filter(\n                ({ custom }: { custom: boolean }) => custom,\n            );\n            const hasCustomFields = billingAddressCustomFields.length > 0;\n            const isAmazonPayBillingStepComplete =\n                billingAddress && hasCustomFields\n                    ? isValidAddress(billingAddress, billingAddressCustomFields)\n                    : true;\n\n            return {\n                type: CheckoutStepType.Billing,\n                isActive: false,\n                isComplete: isAmazonPayBillingStepComplete,\n                isEditable: isAmazonPayBillingStepComplete && hasCustomFields,\n                isRequired: true,\n            };\n        }\n\n        const isGooglePayBillingAddressEditingEnabled = isExperimentEnabled(\n            config?.checkoutSettings,\n            'STRIPE-546.allow_billing_address_editing_for_all_Google_Pay_providers',\n        );\n        const isUsingGooglePay =\n            isGooglePayBillingAddressEditingEnabled && (checkout && checkout.payments\n                ? checkout.payments.some((payment) => (payment?.providerId || '').startsWith('googlepay'))\n                : false);\n\n        if (isUsingGooglePay) {\n            return {\n                type: CheckoutStepType.Billing,\n                isActive: false,\n                isComplete: hasAddress,\n                isEditable: hasAddress,\n                isRequired: true,\n            };\n        }\n\n        const isUsingPaypal =\n            checkout && checkout.payments\n                ? checkout.payments.some(\n                    (payment) =>\n                        [\n                            'braintreepaypal',\n                            'braintreepaypalcredit',\n                            'braintreevenmo',\n                            'paypalcommerce',\n                            'paypalcommercecredit',\n                            'paypalcommercevenmo'\n                        ]\n                            .includes(payment.providerId))\n                : false;\n\n        if (isUsingPaypal) {\n            return {\n                type: CheckoutStepType.Billing,\n                isActive: false,\n                isComplete: hasAddress,\n                isEditable: hasAddress,\n                isRequired: true,\n            };\n        }\n\n        return {\n            type: CheckoutStepType.Billing,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete && !isUsingWallet,\n            isRequired: true,\n        };\n    },\n);\n\nconst getShippingStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getShippingAddress(),\n    ({ data }: CheckoutSelectors) => data.getConsignments(),\n    ({ data }: CheckoutSelectors) => data.getCart(),\n    ({ data }: CheckoutSelectors) => {\n        const shippingAddress = data.getShippingAddress();\n\n        return shippingAddress\n            ? data.getShippingAddressFields(shippingAddress.countryCode)\n            : EMPTY_ARRAY;\n    },\n    ({ data }: CheckoutSelectors) => data.getConfig(),\n    (shippingAddress, consignments, cart, shippingAddressFields, config) => {\n        const hasAddress = shippingAddress\n            ? isValidAddress(shippingAddress, shippingAddressFields)\n            : false;\n        const hasOptions = consignments ? hasSelectedShippingOptions(consignments) : false;\n        const hasUnassignedItems =\n            cart && consignments ? hasUnassignedLineItems(consignments, cart.lineItems) : true;\n        const isComplete = hasAddress && hasOptions && !hasUnassignedItems;\n        const isRequired = itemsRequireShipping(cart, config);\n        const isCustomShippingSelected =\n            isExperimentEnabled(\n                config?.checkoutSettings,\n                'PROJECT-5015.manual_order.display_custom_shipping',\n            ) &&\n            hasOptions &&\n            consignments?.some(\n                ({ selectedShippingOption }) => selectedShippingOption?.type === 'custom',\n            );\n\n        return {\n            type: CheckoutStepType.Shipping,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete && isRequired && !isCustomShippingSelected,\n            isRequired,\n        };\n    },\n);\n\nconst getPaymentStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getOrder(),\n    (order) => {\n        const isComplete = order ? order.isComplete : false;\n\n        return {\n            type: CheckoutStepType.Payment,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete,\n            isRequired: true,\n        };\n    },\n);\n\nconst getOrderSubmitStatus = createSelector(\n    ({ statuses }: CheckoutSelectors) => statuses.isSubmittingOrder(),\n    (status) => status,\n);\n\nconst getCheckoutStepStatuses = createSelector(\n    getCustomerStepStatus,\n    getShippingStepStatus,\n    getBillingStepStatus,\n    getPaymentStepStatus,\n    getOrderSubmitStatus,\n    (customerStep, shippingStep, billingStep, paymentStep, orderStatus) => {\n        const isSubmittingOrder = orderStatus;\n\n        const steps = compact([customerStep, shippingStep, billingStep, paymentStep]);\n\n        const defaultActiveStep =\n            steps.find((step) => !step.isComplete && step.isRequired) || steps[steps.length - 1];\n\n        return steps.map((step, index) => {\n            const isPrevStepComplete = steps\n                .slice(0, index)\n                .every((prevStep) => prevStep.isComplete || !prevStep.isRequired);\n\n            return {\n                ...step,\n                isActive: defaultActiveStep.type === step.type,\n                isBusy: false,\n                // A step is only editable if its previous step is complete or not required\n                isEditable: isPrevStepComplete && step.isEditable && !isSubmittingOrder,\n            };\n        });\n    },\n);\n\nexport default getCheckoutStepStatuses;\n","import {\n    Address,\n    Cart,\n    CartChangedError,\n    CheckoutParams,\n    CheckoutSelectors,\n    Consignment,\n    EmbeddedCheckoutMessenger,\n    EmbeddedCheckoutMessengerOptions,\n    ExtensionRegion,\n    FlashMessage,\n    PaymentMethod,\n    Promotion,\n RequestOptions } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { find, findIndex } from 'lodash';\nimport React, { Component, lazy, ReactNode } from 'react';\n\nimport { AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\nimport { Extension, ExtensionContextProps, withExtension } from '@bigcommerce/checkout/checkout-extension';\nimport { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport { AddressFormSkeleton, ChecklistSkeleton , LazyContainer, LoadingNotification, LoadingOverlay } from '@bigcommerce/checkout/ui';\n\nimport { withAnalytics } from '../analytics';\nimport { StaticBillingAddress } from '../billing';\nimport { EmptyCartMessage } from '../cart';\nimport { withCheckout } from '../checkout';\nimport { CustomError, ErrorModal, isCustomError } from '../common/error';\nimport { retry } from '../common/utility';\nimport {\n    CheckoutButtonContainer,\n    CheckoutSuggestion,\n    Customer,\n    CustomerInfo,\n    CustomerSignOutEvent,\n    CustomerViewType,\n} from '../customer';\nimport { getSupportedMethodIds } from '../customer/getSupportedMethods';\nimport { SubscribeSessionStorage } from '../customer/SubscribeSessionStorage';\nimport { EmbeddedCheckoutStylesheet, isEmbedded } from '../embeddedCheckout';\nimport { PromotionBannerList } from '../promotion';\nimport { hasSelectedShippingOptions, isUsingMultiShipping, ShippingSummary } from '../shipping';\nimport { ShippingOptionExpiredError } from '../shipping/shippingOption';\nimport { MobileView } from '../ui/responsive';\n\nimport CheckoutStep from './CheckoutStep';\nimport CheckoutStepStatus from './CheckoutStepStatus';\nimport CheckoutStepType from './CheckoutStepType';\nimport CheckoutSupport from './CheckoutSupport';\nimport mapToCheckoutProps from './mapToCheckoutProps';\nimport navigateToOrderConfirmation from './navigateToOrderConfirmation';\n\nconst Billing = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"billing\" */\n                '../billing/Billing'\n            ),\n    ),\n);\n\nconst CartSummary = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"cart-summary\" */\n                '../cart/CartSummary'\n            ),\n    ),\n);\n\nconst CartSummaryDrawer = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"cart-summary-drawer\" */\n                '../cart/CartSummaryDrawer'\n            ),\n    ),\n);\n\nconst Payment = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"payment\" */\n                '../payment/Payment'\n            ),\n    ),\n);\n\nconst Shipping = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"shipping\" */\n                '../shipping/Shipping'\n            ),\n    ),\n);\n\nexport interface CheckoutProps {\n    checkoutId: string;\n    containerId: string;\n    embeddedStylesheet: EmbeddedCheckoutStylesheet;\n    embeddedSupport: CheckoutSupport;\n    errorLogger: ErrorLogger;\n    createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\n}\n\nexport interface CheckoutState {\n    activeStepType?: CheckoutStepType;\n    isBillingSameAsShipping: boolean;\n    customerViewType?: CustomerViewType;\n    defaultStepType?: CheckoutStepType;\n    error?: Error;\n    flashMessages?: FlashMessage[];\n    isMultiShippingMode: boolean;\n    isCartEmpty: boolean;\n    isRedirecting: boolean;\n    hasSelectedShippingOptions: boolean;\n    isSubscribed: boolean;\n    buttonConfigs: PaymentMethod[];\n}\n\nexport interface WithCheckoutProps {\n    billingAddress?: Address;\n    cart?: Cart;\n    consignments?: Consignment[];\n    error?: Error;\n    hasCartChanged: boolean;\n    flashMessages?: FlashMessage[];\n    isGuestEnabled: boolean;\n    isLoadingCheckout: boolean;\n    isPending: boolean;\n    isPriceHiddenFromGuests: boolean;\n    isShowingWalletButtonsOnTop: boolean;\n    isShippingDiscountDisplayEnabled: boolean;\n    loginUrl: string;\n    cartUrl: string;\n    createAccountUrl: string;\n    promotions?: Promotion[];\n    steps: CheckoutStepStatus[];\n    clearError(error?: Error): void;\n    loadCheckout(id: string, options?: RequestOptions<CheckoutParams>): Promise<CheckoutSelectors>;\n    loadPaymentMethodByIds(methodIds: string[]): Promise<CheckoutSelectors>;\n    subscribeToConsignments(subscriber: (state: CheckoutSelectors) => void): () => void;\n}\n\nclass Checkout extends Component<\n    CheckoutProps &\n        WithCheckoutProps &\n        WithLanguageProps &\n        AnalyticsContextProps &\n        ExtensionContextProps,\n    CheckoutState\n> {\n    state: CheckoutState = {\n        isBillingSameAsShipping: true,\n        isCartEmpty: false,\n        isRedirecting: false,\n        isMultiShippingMode: false,\n        hasSelectedShippingOptions: false,\n        isSubscribed: false,\n        buttonConfigs: [],\n    };\n\n    private embeddedMessenger?: EmbeddedCheckoutMessenger;\n    private unsubscribeFromConsignments?: () => void;\n\n    componentWillUnmount(): void {\n        if (this.unsubscribeFromConsignments) {\n            this.unsubscribeFromConsignments();\n            this.unsubscribeFromConsignments = undefined;\n        }\n\n        window.removeEventListener('beforeunload', this.handleBeforeExit);\n        this.handleBeforeExit();\n    }\n\n    async componentDidMount(): Promise<void> {\n        const {\n            analyticsTracker,\n            checkoutId,\n            containerId,\n            createEmbeddedMessenger,\n            embeddedStylesheet,\n            extensionService,\n            loadCheckout,\n            loadPaymentMethodByIds,\n            subscribeToConsignments,\n        } = this.props;\n\n        try {\n            const [{ data }] = await Promise.all([loadCheckout(checkoutId, {\n                params: {\n                    include: [\n                        'cart.lineItems.physicalItems.categoryNames',\n                        'cart.lineItems.digitalItems.categoryNames',\n                    ] as any, // FIXME: Currently the enum is not exported so it can't be used here.\n                },\n            }), extensionService.loadExtensions()]);\n\n            const providers = data.getConfig()?.checkoutSettings?.remoteCheckoutProviders || [];\n            const checkoutSettings = data.getConfig()?.checkoutSettings;\n\n            const supportedProviders = getSupportedMethodIds(providers, checkoutSettings);\n\n            if (providers.length > 0) {\n                const configs = await loadPaymentMethodByIds(supportedProviders);\n\n                this.setState({\n                    buttonConfigs: configs.data.getPaymentMethods() || [],\n                });\n            }\n\n            extensionService.preloadExtensions();\n\n            const { links: { siteLink = '' } = {} } = data.getConfig() || {};\n            const errorFlashMessages = data.getFlashMessages('error') || [];\n\n            if (errorFlashMessages.length) {\n                const { language } = this.props;\n\n                this.setState({\n                    error: new CustomError({\n                        title:\n                            errorFlashMessages[0].title ||\n                            language.translate('common.error_heading'),\n                        message: errorFlashMessages[0].message,\n                        data: {},\n                        name: 'default',\n                    }),\n                });\n            }\n\n            const messenger = createEmbeddedMessenger({ parentOrigin: siteLink });\n\n            this.unsubscribeFromConsignments = subscribeToConsignments(\n                this.handleConsignmentsUpdated,\n            );\n            this.embeddedMessenger = messenger;\n            messenger.receiveStyles((styles) => embeddedStylesheet.append(styles));\n            messenger.postFrameLoaded({ contentId: containerId });\n            messenger.postLoaded();\n\n            analyticsTracker.checkoutBegin();\n\n            const consignments = data.getConsignments();\n            const cart = data.getCart();\n\n            const hasMultiShippingEnabled =\n                data.getConfig()?.checkoutSettings.hasMultiShippingEnabled;\n            const checkoutBillingSameAsShippingEnabled =\n                data.getConfig()?.checkoutSettings.checkoutBillingSameAsShippingEnabled ?? true;\n            const defaultNewsletterSignupOption =\n                data.getConfig()?.shopperConfig.defaultNewsletterSignup ??\n                false;\n            const isMultiShippingMode =\n                !!cart &&\n                !!consignments &&\n                hasMultiShippingEnabled &&\n                isUsingMultiShipping(consignments, cart.lineItems);\n\n            this.setState({\n                isBillingSameAsShipping: checkoutBillingSameAsShippingEnabled,\n                isSubscribed: defaultNewsletterSignupOption,\n            });\n\n            if (isMultiShippingMode) {\n                this.setState({ isMultiShippingMode }, this.handleReady);\n            } else {\n                this.handleReady();\n            }\n\n            window.addEventListener('beforeunload', this.handleBeforeExit);\n\n        } catch (error) {\n            if (error instanceof Error) {\n                this.handleUnhandledError(error);\n            }\n        }\n    }\n\n    render(): ReactNode {\n        const { error } = this.state;\n        let errorModal = null;\n\n        if (error) {\n            if (isCustomError(error)) {\n                errorModal = (\n                    <ErrorModal\n                        error={error}\n                        onClose={this.handleCloseErrorModal}\n                        title={error.title}\n                    />\n                );\n            } else {\n                errorModal = <ErrorModal error={error} onClose={this.handleCloseErrorModal} />;\n            }\n        }\n\n        return (\n            <div className={classNames('remove-checkout-step-numbers', { 'is-embedded': isEmbedded() })} data-test=\"checkout-page-container\" id=\"checkout-page-container\">\n                <div className=\"layout optimizedCheckout-contentPrimary\">\n                    {this.renderContent()}\n                </div>\n                {errorModal}\n            </div>\n        );\n    }\n\n    private renderContent(): ReactNode {\n        const { isPending, loginUrl, promotions = [], steps, isShowingWalletButtonsOnTop, extensionState } = this.props;\n\n        const { activeStepType, defaultStepType, isCartEmpty, isRedirecting } = this.state;\n\n        if (isCartEmpty) {\n            return <EmptyCartMessage loginUrl={loginUrl} waitInterval={3000} />;\n        }\n\n        const isPaymentStepActive = activeStepType\n            ? activeStepType === CheckoutStepType.Payment\n            : defaultStepType === CheckoutStepType.Payment;\n\n        return (\n            <LoadingOverlay hideContentWhenLoading isLoading={isRedirecting}>\n                <div className=\"layout-main\">\n                    <LoadingNotification isLoading={(!isShowingWalletButtonsOnTop && isPending) || extensionState.isShowingLoadingIndicator} />\n\n                    <PromotionBannerList promotions={promotions} />\n\n                    {isShowingWalletButtonsOnTop && this.state.buttonConfigs?.length > 0 && (\n                        <CheckoutButtonContainer\n                            checkEmbeddedSupport={this.checkEmbeddedSupport}\n                            isPaymentStepActive={isPaymentStepActive}\n                            onUnhandledError={this.handleUnhandledError}\n                            onWalletButtonClick={this.handleWalletButtonClick}\n                        />\n                    )}\n\n                    <ol className=\"checkout-steps\">\n                        {steps\n                            .filter((step) => step.isRequired)\n                            .map((step) =>\n                                this.renderStep({\n                                    ...step,\n                                    isActive: activeStepType\n                                        ? activeStepType === step.type\n                                        : defaultStepType === step.type,\n                                    isBusy: isPending,\n                                }),\n                            )}\n                    </ol>\n                </div>\n\n                {this.renderCartSummary()}\n            </LoadingOverlay>\n        );\n    }\n\n    private renderStep(step: CheckoutStepStatus): ReactNode {\n        switch (step.type) {\n            case CheckoutStepType.Customer:\n                return this.renderCustomerStep(step);\n\n            case CheckoutStepType.Shipping:\n                return this.renderShippingStep(step);\n\n            case CheckoutStepType.Billing:\n                return this.renderBillingStep(step);\n\n            case CheckoutStepType.Payment:\n                return this.renderPaymentStep(step);\n\n            default:\n                return null;\n        }\n    }\n\n    private renderCustomerStep(step: CheckoutStepStatus): ReactNode {\n        const { isGuestEnabled, isShowingWalletButtonsOnTop } = this.props;\n        const {\n            customerViewType = isGuestEnabled ? CustomerViewType.Guest : CustomerViewType.Login,\n            isSubscribed,\n        } = this.state;\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"customer.customer_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n                suggestion={<CheckoutSuggestion />}\n                summary={\n                    <CustomerInfo\n                        onSignOut={this.handleSignOut}\n                        onSignOutError={this.handleError}\n                    />\n                }\n            >\n                <Customer\n                    checkEmbeddedSupport={this.checkEmbeddedSupport}\n                    isEmbedded={isEmbedded()}\n                    isSubscribed={isSubscribed}\n                    isWalletButtonsOnTop = {isShowingWalletButtonsOnTop }\n                    onAccountCreated={this.navigateToNextIncompleteStep}\n                    onChangeViewType={this.setCustomerViewType}\n                    onContinueAsGuest={this.navigateToNextIncompleteStep}\n                    onContinueAsGuestError={this.handleError}\n                    onReady={this.handleReady}\n                    onSignIn={this.navigateToNextIncompleteStep}\n                    onSignInError={this.handleError}\n                    onSubscribeToNewsletter={this.handleNewsletterSubscription}\n                    onUnhandledError={this.handleUnhandledError}\n                    onWalletButtonClick={this.handleWalletButtonClick}\n                    step={step}\n                    viewType={customerViewType}\n                />\n            </CheckoutStep>\n        );\n    }\n\n    private renderShippingStep(step: CheckoutStepStatus): ReactNode {\n        const { hasCartChanged, cart, consignments = [], isShippingDiscountDisplayEnabled } = this.props;\n        const { isBillingSameAsShipping, isMultiShippingMode } = this.state;\n\n        if (!cart) {\n            return;\n        }\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"shipping.shipping_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n                summary={<ShippingSummary cart={cart} consignments={consignments} isMultiShippingMode={isMultiShippingMode} isShippingDiscountDisplayEnabled={isShippingDiscountDisplayEnabled}/>}\n            >\n                <LazyContainer loadingSkeleton={<AddressFormSkeleton />}>\n                    <Shipping\n                        cartHasChanged={hasCartChanged}\n                        isBillingSameAsShipping={isBillingSameAsShipping}\n                        isMultiShippingMode={isMultiShippingMode}\n                        navigateNextStep={this.handleShippingNextStep}\n                        onCreateAccount={this.handleShippingCreateAccount}\n                        onReady={this.handleReady}\n                        onSignIn={this.handleShippingSignIn}\n                        onToggleMultiShipping={this.handleToggleMultiShipping}\n                        onUnhandledError={this.handleUnhandledError}\n                        step={step}\n                    />\n                </LazyContainer>\n            </CheckoutStep>\n        );\n    }\n\n    private renderBillingStep(step: CheckoutStepStatus): ReactNode {\n        const { billingAddress } = this.props;\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"billing.billing_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n                summary={billingAddress && <StaticBillingAddress address={billingAddress} />}\n            >\n                <LazyContainer loadingSkeleton={<AddressFormSkeleton />}>\n                    <Billing\n                        navigateNextStep={this.navigateToNextIncompleteStep}\n                        onReady={this.handleReady}\n                        onUnhandledError={this.handleUnhandledError}\n                    />\n                </LazyContainer>\n            </CheckoutStep>\n        );\n    }\n\n    private renderPaymentStep(step: CheckoutStepStatus): ReactNode {\n        const { consignments, cart, errorLogger } = this.props;\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"payment.payment_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n            >\n                <LazyContainer loadingSkeleton={<ChecklistSkeleton />}>\n                    <Payment\n                        checkEmbeddedSupport={this.checkEmbeddedSupport}\n                        errorLogger={errorLogger}\n                        isEmbedded={isEmbedded()}\n                        isUsingMultiShipping={\n                            cart && consignments\n                                ? isUsingMultiShipping(consignments, cart.lineItems)\n                                : false\n                        }\n                        onCartChangedError={this.handleCartChangedError}\n                        onFinalize={this.navigateToOrderConfirmation}\n                        onReady={this.handleReady}\n                        onSubmit={this.navigateToOrderConfirmation}\n                        onSubmitError={this.handleError}\n                        onUnhandledError={this.handleUnhandledError}\n                    />\n                </LazyContainer>\n            </CheckoutStep>\n        );\n    }\n\n    private renderCartSummary(): ReactNode {\n        const { isMultiShippingMode } = this.state;\n\n        return (\n            <MobileView>\n                {(matched) => {\n                    if (matched) {\n                        return (\n                            <LazyContainer>\n                                <Extension region={ExtensionRegion.SummaryAfter} />\n                                <CartSummaryDrawer isMultiShippingMode={isMultiShippingMode} />\n                            </LazyContainer>\n                        );\n                    }\n\n                    return (\n                        <aside className=\"layout-cart\">\n                            <LazyContainer>\n                                <CartSummary isMultiShippingMode={isMultiShippingMode} />\n                                <Extension region={ExtensionRegion.SummaryAfter} />\n                            </LazyContainer>\n                        </aside>\n                    );\n                }}\n            </MobileView>\n        );\n    }\n\n    private navigateToStep(type: CheckoutStepType, options?: { isDefault?: boolean }): void {\n        const { clearError, error, steps } = this.props;\n        const { activeStepType } = this.state;\n        const step = find(steps, { type });\n\n        if (!step) {\n            return;\n        }\n\n        if (activeStepType === step.type) {\n            return;\n        }\n\n        if (options && options.isDefault) {\n            this.setState({ defaultStepType: step.type });\n        } else {\n            this.setState({ activeStepType: step.type });\n        }\n\n        if (error) {\n            clearError(error);\n        }\n    }\n\n    private handleToggleMultiShipping: () => void = () => {\n        const { isMultiShippingMode } = this.state;\n\n        this.setState({ isMultiShippingMode: !isMultiShippingMode });\n    };\n\n    private navigateToNextIncompleteStep: (options?: { isDefault?: boolean }) => void = (\n        options,\n    ) => {\n        const { steps, analyticsTracker } = this.props;\n        const activeStepIndex = findIndex(steps, { isActive: true });\n        const activeStep = activeStepIndex >= 0 && steps[activeStepIndex];\n\n        if (!activeStep) {\n            return;\n        }\n\n        const previousStep = steps[Math.max(activeStepIndex - 1, 0)];\n\n        if (previousStep) {\n            analyticsTracker.trackStepCompleted(previousStep.type);\n        }\n\n        this.navigateToStep(activeStep.type, options);\n    };\n\n    private navigateToOrderConfirmation: (orderId?: number) => void = (orderId) => {\n        const { steps, analyticsTracker } = this.props;\n\n        analyticsTracker.trackStepCompleted(steps[steps.length - 1].type);\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postComplete();\n        }\n\n        SubscribeSessionStorage.removeSubscribeStatus();\n\n        this.setState({ isRedirecting: true }, () => {\n            navigateToOrderConfirmation(orderId);\n        });\n    };\n\n    private checkEmbeddedSupport: (methodIds: string[]) => boolean = (methodIds) => {\n        const { embeddedSupport } = this.props;\n\n        return embeddedSupport.isSupported(...methodIds);\n    };\n\n    private handleCartChangedError: (error: CartChangedError) => void = () => {\n        this.navigateToStep(CheckoutStepType.Shipping);\n    };\n\n    private handleConsignmentsUpdated: (state: CheckoutSelectors) => void = ({ data }) => {\n        const { hasSelectedShippingOptions: prevHasSelectedShippingOptions, activeStepType, defaultStepType } =\n            this.state;\n\n        const { steps } = this.props;\n\n        const newHasSelectedShippingOptions = hasSelectedShippingOptions(\n            data.getConsignments() || [],\n        );\n\n        const isDefaultStepPaymentOrBilling =\n            !activeStepType &&\n            (defaultStepType === CheckoutStepType.Payment ||\n                defaultStepType === CheckoutStepType.Billing);\n\n        const isShippingStepFinished =\n            findIndex(steps, { type: CheckoutStepType.Shipping }) <\n                findIndex(steps, { type: activeStepType }) || isDefaultStepPaymentOrBilling;\n\n        if (\n            prevHasSelectedShippingOptions &&\n            !newHasSelectedShippingOptions &&\n            isShippingStepFinished\n        ) {\n            this.navigateToStep(CheckoutStepType.Shipping);\n            this.setState({ error: new ShippingOptionExpiredError() });\n        }\n\n        this.setState({ hasSelectedShippingOptions: newHasSelectedShippingOptions });\n    };\n\n    private handleCloseErrorModal: () => void = () => {\n        this.setState({ error: undefined });\n    };\n\n    private handleExpanded: (type: CheckoutStepType) => void = (type) => {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.trackStepViewed(type);\n    };\n\n    private handleUnhandledError: (error: Error) => void = (error) => {\n        this.handleError(error);\n\n        // For errors that are not caught and handled by child components, we\n        // handle them here by displaying a generic error modal to the shopper.\n        this.setState({ error });\n    };\n\n    private handleError: (error: Error) => void = (error) => {\n        const { errorLogger } = this.props;\n\n        errorLogger.log(error);\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postError(error);\n        }\n    };\n\n    private handleEditStep: (type: CheckoutStepType) => void = (type) => {\n        this.navigateToStep(type);\n    };\n\n    private handleReady: () => void = () => {\n        this.navigateToNextIncompleteStep({ isDefault: true });\n    };\n\n    private handleNewsletterSubscription: (subscribed: boolean) => void = (subscribed) => {\n        this.setState({ isSubscribed: subscribed });\n    }\n\n    private handleSignOut: (event: CustomerSignOutEvent) => void = ({ isCartEmpty }) => {\n        const { loginUrl, cartUrl, isPriceHiddenFromGuests, isGuestEnabled } = this.props;\n\n        if (isPriceHiddenFromGuests) {\n            if (window.top) {\n                return (window.top.location.href = cartUrl);\n            }\n        }\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postSignedOut();\n        }\n\n        if (isGuestEnabled) {\n            this.setCustomerViewType(CustomerViewType.Guest);\n        }\n\n        if (isCartEmpty) {\n            this.setState({ isCartEmpty: true });\n\n            if (!isEmbedded()) {\n                if (window.top) {\n                    return window.top.location.assign(loginUrl);\n                }\n            }\n        }\n\n        this.navigateToStep(CheckoutStepType.Customer);\n    };\n\n    private handleShippingNextStep: (isBillingSameAsShipping: boolean) => void = (\n        isBillingSameAsShipping,\n    ) => {\n        this.setState({ isBillingSameAsShipping });\n\n        if (isBillingSameAsShipping) {\n            this.navigateToNextIncompleteStep();\n        } else {\n            this.navigateToStep(CheckoutStepType.Billing);\n        }\n    };\n\n    private handleShippingSignIn: () => void = () => {\n        this.setCustomerViewType(CustomerViewType.Login);\n    };\n\n    private handleShippingCreateAccount: () => void = () => {\n        this.setCustomerViewType(CustomerViewType.CreateAccount);\n    };\n\n    private setCustomerViewType: (viewType: CustomerViewType) => void = (customerViewType) => {\n        const { createAccountUrl } = this.props;\n\n        if (customerViewType === CustomerViewType.CreateAccount && isEmbedded()) {\n            if (window.top) {\n                window.top.location.replace(createAccountUrl);\n            }\n\n            return;\n        }\n\n        this.navigateToStep(CheckoutStepType.Customer);\n        this.setState({ customerViewType });\n    };\n\n    private handleBeforeExit: () => void = () => {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.exitCheckout();\n    }\n\n    private handleWalletButtonClick: (methodName: string) => void = (methodName) => {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.walletButtonClick(methodName);\n    }\n}\n\nexport default withExtension(\n    withAnalytics(withLanguage(withCheckout(mapToCheckoutProps)(Checkout))),\n);\n","import { CheckoutSelectors, CustomError } from '@bigcommerce/checkout-sdk';\nimport { createSelector } from 'reselect';\n\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { EMPTY_ARRAY, isExperimentEnabled } from '../common/utility';\n\nimport { WithCheckoutProps } from './Checkout';\nimport getCheckoutStepStatuses from './getCheckoutStepStatuses';\n\nexport default function mapToCheckoutProps({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutProps {\n    const { data, errors, statuses } = checkoutState;\n    const { promotions = EMPTY_ARRAY } = data.getCheckout() || {};\n    const submitOrderError = errors.getSubmitOrderError() as CustomError;\n    const {\n        checkoutSettings: {\n            guestCheckoutEnabled: isGuestEnabled = false,\n            checkoutUserExperienceSettings = {\n                walletButtonsOnTop: false,\n                floatingLabelEnabled: false,\n            },\n        } = {},\n        links: {\n            loginLink: loginUrl = '',\n            createAccountLink: createAccountUrl = '',\n            cartLink: cartUrl = '',\n        } = {},\n        displaySettings: { hidePriceFromGuests: isPriceHiddenFromGuests = false } = {},\n    } = data.getConfig() || {};\n\n    const subscribeToConsignmentsSelector = createSelector(\n        ({ checkoutService: { subscribe } }: CheckoutContextProps) => subscribe,\n        (subscribe) => (subscriber: (state: CheckoutSelectors) => void) => {\n            return subscribe(subscriber, ({ data: { getConsignments } }) => getConsignments());\n        },\n    );\n\n    const walletButtonsOnTopFlag = Boolean(checkoutUserExperienceSettings.walletButtonsOnTop); \n    const isShippingDiscountDisplayEnabled = isExperimentEnabled(\n        data.getConfig()?.checkoutSettings,\n        'PROJECT-6643.enable_shipping_discounts_in_orders',\n    );\n\n    return {\n        billingAddress: data.getBillingAddress(),\n        cart: data.getCart(),\n        clearError: checkoutService.clearError,\n        consignments: data.getConsignments(),\n        hasCartChanged: submitOrderError && submitOrderError.type === 'cart_changed', // TODO: Need to clear the error once it's displayed\n        isGuestEnabled,\n        isLoadingCheckout: statuses.isLoadingCheckout(),\n        isShippingDiscountDisplayEnabled,\n        isPending: statuses.isPending(),\n        isPriceHiddenFromGuests,\n        isShowingWalletButtonsOnTop: walletButtonsOnTopFlag,\n        loadCheckout: checkoutService.loadCheckout,\n        loadPaymentMethodByIds: checkoutService.loadPaymentMethodByIds,\n        loginUrl,\n        cartUrl,\n        createAccountUrl,\n        promotions,\n        subscribeToConsignments: subscribeToConsignmentsSelector({\n            checkoutService,\n            checkoutState,\n        }),\n        steps: data.getCheckout() ? getCheckoutStepStatuses(checkoutState) : EMPTY_ARRAY,\n    };\n}\n","import { createCheckoutService, createEmbeddedCheckoutMessenger } from '@bigcommerce/checkout-sdk';\nimport { BrowserOptions } from '@sentry/browser';\nimport React, { Component } from 'react';\nimport ReactModal from 'react-modal';\n\nimport { AnalyticsProvider } from '@bigcommerce/checkout/analytics';\nimport { ExtensionProvider } from '@bigcommerce/checkout/checkout-extension';\nimport { ErrorBoundary, ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { getLanguageService, LocaleProvider } from '@bigcommerce/checkout/locale';\nimport { CheckoutProvider } from '@bigcommerce/checkout/payment-integration-api';\n\nimport '../../scss/App.scss';\n\nimport { createErrorLogger } from '../common/error';\nimport {\n    createEmbeddedCheckoutStylesheet,\n    createEmbeddedCheckoutSupport,\n} from '../embeddedCheckout';\n\nimport Checkout from './Checkout';\n\nexport interface CheckoutAppProps {\n    checkoutId: string;\n    containerId: string;\n    publicPath?: string;\n    sentryConfig?: BrowserOptions;\n    sentrySampleRate?: number;\n}\n\nexport default class CheckoutApp extends Component<CheckoutAppProps> {\n    private checkoutService = createCheckoutService({\n        locale: getLanguageService().getLocale(),\n        shouldWarnMutation: process.env.NODE_ENV === 'development',\n    });\n    private embeddedStylesheet = createEmbeddedCheckoutStylesheet();\n    private embeddedSupport = createEmbeddedCheckoutSupport(getLanguageService());\n    private errorLogger: ErrorLogger;\n\n    constructor(props: Readonly<CheckoutAppProps>) {\n        super(props);\n\n        this.errorLogger = createErrorLogger(\n            { sentry: props.sentryConfig },\n            {\n                errorTypes: ['UnrecoverableError'],\n                publicPath: props.publicPath,\n                sampleRate: props.sentrySampleRate ? props.sentrySampleRate : 0.1,\n            },\n        );\n    }\n\n    componentDidMount(): void {\n        const { containerId } = this.props;\n\n        ReactModal.setAppElement(`#${containerId}`);\n    }\n\n    render() {\n        return (\n            <ErrorBoundary logger={this.errorLogger}>\n                <LocaleProvider checkoutService={this.checkoutService}>\n                    <CheckoutProvider checkoutService={this.checkoutService}>\n                        <AnalyticsProvider checkoutService={this.checkoutService}>\n                            <ExtensionProvider\n                                checkoutService={this.checkoutService}\n                                errorLogger={createErrorLogger()}\n                            >\n                                <Checkout\n                                    {...this.props}\n                                    createEmbeddedMessenger={createEmbeddedCheckoutMessenger}\n                                    embeddedStylesheet={this.embeddedStylesheet}\n                                    embeddedSupport={this.embeddedSupport}\n                                    errorLogger={this.errorLogger}\n                                />\n                            </ExtensionProvider>\n                        </AnalyticsProvider>\n                    </CheckoutProvider>\n                </LocaleProvider>\n            </ErrorBoundary>\n        );\n    }\n}\n","import { Consignment } from \"@bigcommerce/checkout-sdk\";\n\nexport default function getShippingCostAfterAutomaticDiscount(shippingCostBeforeDiscount: number, consignments: Consignment[]) {\n    return consignments.reduce((total, consignment) => {\n        return total - getTotalAutomaticDiscount(consignment);\n    }, shippingCostBeforeDiscount);\n}\n\nfunction getTotalAutomaticDiscount(consignment: Consignment) {\n    return consignment.discounts.reduce((discountTotal, discount) => {\n        return discount.type === 'AUTOMATIC' ? discountTotal + discount.amount : discountTotal;\n    }, 0);\n}\n","import classNames from 'classnames';\nimport React, { FunctionComponent } from 'react';\n\ninterface ModalHeaderProps {\n    children: React.ReactNode;\n    additionalClassName?: string;\n}\n\nconst ModalHeader: FunctionComponent<ModalHeaderProps> = ({ children, additionalClassName }) => (\n    <h2\n        className={classNames(\n            'modal-header-title optimizedCheckout-headingSecondary',\n            additionalClassName,\n        )}\n        data-test=\"modal-heading\"\n    >\n        {children}\n    </h2>\n);\n\nexport default ModalHeader;\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconError: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconError);\n","import { Component, ReactNode } from 'react';\n\nimport ErrorLogger from './ErrorLogger';\n\nexport interface ErrorBoundaryProps {\n    children: ReactNode;\n    fallback?: ReactNode;\n    logger?: ErrorLogger;\n    filter?(error: Error): boolean;\n}\n\ninterface ErrorBoundaryState {\n    error?: Error;\n}\n\nclass ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n    static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n        return { error };\n    }\n\n    // eslint-disable-next-line @typescript-eslint/member-ordering\n    state: ErrorBoundaryState = {};\n\n    componentDidCatch(error: Error): void {\n        const { filter = () => true, logger } = this.props;\n\n        if (!filter(error)) {\n            throw error;\n        }\n\n        if (logger) {\n            logger.log(error);\n        }\n    }\n\n    render(): ReactNode {\n        const { children, fallback, filter = () => true } = this.props;\n\n        const { error } = this.state;\n\n        if (error && filter(error)) {\n            return fallback || null;\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorBoundary;\n","import React, { FunctionComponent } from 'react';\n\nimport LoadingSpinner from './LoadingSpinner';\n\nexport interface LoadingOverlayProps {\n    isLoading: boolean;\n    hideContentWhenLoading?: boolean;\n    unmountContentWhenLoading?: boolean;\n}\n\nconst LoadingOverlay: FunctionComponent<LoadingOverlayProps> = ({\n    children,\n    hideContentWhenLoading,\n    unmountContentWhenLoading,\n    isLoading,\n}) => {\n    if (hideContentWhenLoading || unmountContentWhenLoading) {\n        return (\n            <>\n                <LoadingSpinner isLoading={isLoading} />\n                {unmountContentWhenLoading && isLoading ? null : (\n                    <div\n                        style={{\n                            display: hideContentWhenLoading && isLoading ? 'none' : undefined,\n                        }}\n                    >\n                        {children}\n                    </div>\n                )}\n            </>\n        );\n    }\n\n    return (\n        <div className=\"loadingOverlay-container\">\n            {children}\n            {isLoading && (\n                <div\n                    className=\"loadingOverlay optimizedCheckout-overlay\"\n                    data-test=\"loading-overlay\"\n                />\n            )}\n        </div>\n    );\n};\n\nexport default LoadingOverlay;\n","import { SyntheticEvent } from 'react';\n\nexport default function preventDefault<\n    TFunc extends (event: TEvent, ...args: any[]) => any,\n    TEvent extends SyntheticEvent,\n>(fn?: TFunc): (event: TEvent) => void {\n    return (event) => {\n        event.preventDefault();\n\n        if (fn) {\n            fn(event);\n        }\n    };\n}\n","import classNames from 'classnames';\nimport React, { forwardRef, ReactNode, Ref } from 'react';\n\nimport Input, { InputProps } from './Input';\nimport Label from './Label';\n\nexport interface RadioInputProps extends InputProps {\n    additionalClassName?: string;\n    label: ReactNode;\n    value: string;\n    checked: boolean;\n}\n\nconst RadioInput = forwardRef(\n    (\n        { additionalClassName, label, value, checked, id, ...rest }: RadioInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <>\n            <Input\n                {...rest}\n                checked={checked}\n                className={classNames(\n                    'form-radio',\n                    'optimizedCheckout-form-radio',\n                    additionalClassName,\n                )}\n                id={id}\n                ref={ref}\n                type=\"radio\"\n                value={value}\n            />\n            <Label htmlFor={id}>{label}</Label>\n        </>\n    ),\n);\n\nexport default RadioInput;\n","import { FormFieldItem } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { isDate, noop } from 'lodash';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\nimport ReactDatePicker from 'react-datepicker';\n\nimport { withDate, WithDateProps } from '@bigcommerce/checkout/locale';\n\nimport { IconChevronDown } from '../icon';\n\nimport CheckboxInput from './CheckboxInput';\nimport DynamicFormFieldType from './DynamicFormFieldType';\nimport { InputProps } from './Input';\nimport RadioInput from './RadioInput';\nimport TextArea from './TextArea';\nimport TextInput from './TextInput';\n\nexport interface DynamicInputProps extends InputProps {\n    id: string;\n    additionalClassName?: string;\n    value?: string | string[];\n    rows?: number;\n    fieldType?: DynamicFormFieldType;\n    options?: FormFieldItem[];\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst DynamicInput: FunctionComponent<DynamicInputProps & WithDateProps> = ({\n    additionalClassName,\n    date,\n    fieldType,\n    id,\n    name,\n    onChange = noop,\n    options,\n    placeholder,\n    isFloatingLabelEnabled,\n    value,\n    ...rest\n}) => {\n    const { inputFormat } = date;\n    const handleDateChange = useCallback(\n        (dateValue, event) =>\n            onChange({\n                ...event,\n                target: {\n                    name,\n                    value: dateValue,\n                },\n            }),\n        [onChange, name],\n    );\n\n    switch (fieldType) {\n        case DynamicFormFieldType.dropdown:\n            return (\n                <>\n                    <div\n                        className={classNames(\n                            { 'dropdown-chevron': !isFloatingLabelEnabled },\n                            { 'floating-select-chevron': isFloatingLabelEnabled },\n                        )}>\n                        <IconChevronDown />\n                    </div>\n                    <select\n                        {...(rest as any)}\n                        className={classNames(\n                            { 'floating-select': isFloatingLabelEnabled },\n                            'form-select optimizedCheckout-form-select',\n                        )}\n                        data-test={`${id}-select`}\n                        id={id}\n                        name={name}\n                        onChange={onChange}\n                        value={value === null ? '' : value}\n                    >\n                        {placeholder && <option value=\"\">{placeholder}</option>}\n                        {options &&\n                            options.map(({ label, value: optionValue }) => (\n                                <option key={optionValue} value={optionValue}>\n                                    {label}\n                                </option>\n                            ))}\n                    </select>\n                </>\n            );\n\n        case DynamicFormFieldType.radio:\n            if (!options || !options.length) {\n                return null;\n            }\n\n            return (\n                <>\n                    {options.map(({ label, value: optionValue }) => (\n                        <RadioInput\n                            {...rest}\n                            checked={optionValue === value}\n                            id={`${id}-${optionValue}`}\n                            key={optionValue}\n                            label={label}\n                            name={name}\n                            onChange={onChange}\n                            testId={`${id}-${optionValue}-radio`}\n                            value={optionValue}\n                        />\n                    ))}\n                </>\n            );\n\n        case DynamicFormFieldType.checkbox:\n            if (!options || !options.length) {\n                return null;\n            }\n\n            return (\n                <>\n                    {options.map(({ label, value: optionValue }) => (\n                        <CheckboxInput\n                            {...rest}\n                            checked={Array.isArray(value) ? value.includes(optionValue) : false}\n                            id={`${id}-${optionValue}`}\n                            key={optionValue}\n                            label={label}\n                            name={name}\n                            onChange={onChange}\n                            testId={`${id}-${optionValue}-checkbox`}\n                            value={optionValue}\n                        />\n                    ))}\n                </>\n            );\n\n        case DynamicFormFieldType.date:\n            return (\n                <ReactDatePicker\n                    {...(rest as any)}\n                    autoComplete=\"off\"\n                    // FIXME: we can avoid this by simply using onChangeRaw, but it's not being triggered properly\n                    // https://github.com/Hacker0x01/react-datepicker/issues/1357\n                    // onChangeRaw={ rest.onChange }\n                    calendarClassName=\"optimizedCheckout-contentPrimary\"\n                    className={classNames('form-input optimizedCheckout-form-input', {\n                        'floating-input': isFloatingLabelEnabled,\n                    })}\n                    dateFormat={inputFormat}\n                    maxDate={rest.max ? new Date(`${rest.max}T00:00:00Z`) : undefined}\n                    minDate={rest.min ? new Date(`${rest.min}T00:00:00Z`) : undefined}\n                    name={name}\n                    onChange={handleDateChange}\n                    placeholderText={inputFormat.toUpperCase()}\n                    popperClassName=\"optimizedCheckout-contentPrimary\"\n                    selected={isDate(value) ? value : undefined}\n                />\n            );\n\n        case DynamicFormFieldType.multiline:\n            return (\n                <TextArea\n                    {...(rest as any)}\n                    id={id}\n                    isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    name={name}\n                    onChange={onChange}\n                    testId={`${id}-text`}\n                    type={fieldType}\n                    value={value}\n                />\n            );\n\n        default:\n            return (\n                <TextInput\n                    {...rest}\n                    id={id}\n                    isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    name={name}\n                    onChange={onChange}\n                    placeholder={placeholder}\n                    testId={`${id}-${\n                        fieldType === DynamicFormFieldType.password ? 'password' : 'text'\n                    }`}\n                    type={fieldType}\n                    value={value}\n                />\n            );\n    }\n};\n\nexport default memo(withDate(DynamicInput));\n","import React, { FunctionComponent, memo, MouseEvent, useCallback } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './MultiCheckboxControl.scss';\n\nexport interface MultiCheckboxControlProps {\n    testId?: string;\n    onSelectedAll(): void;\n    onSelectedNone(): void;\n}\n\nconst MultiCheckboxControl: FunctionComponent<MultiCheckboxControlProps> = ({\n    testId,\n    onSelectedAll,\n    onSelectedNone,\n}) => {\n    const handleSelectAllClick = useCallback(\n        (event: MouseEvent) => {\n            event.preventDefault();\n            onSelectedAll();\n        },\n        [onSelectedAll],\n    );\n\n    const handleSelectNoneClick = useCallback(\n        (event: MouseEvent) => {\n            event.preventDefault();\n            onSelectedNone();\n        },\n        [onSelectedNone],\n    );\n\n    return (\n        <ul className=\"multiCheckbox--controls\">\n            <li className=\"multiCheckbox--control\">\n                <TranslatedString id=\"address.select\" />\n            </li>\n\n            <li className=\"multiCheckbox--control\">\n                <a\n                    data-test={`${testId}Checkbox-all-button`}\n                    href=\"#\"\n                    onClick={handleSelectAllClick}\n                >\n                    <TranslatedString id=\"address.select_all\" />\n                </a>\n            </li>\n\n            <li className=\"multiCheckbox--control\">\n                <a\n                    data-test={`${testId}Checkbox-none-button`}\n                    href=\"#\"\n                    onClick={handleSelectNoneClick}\n                >\n                    <TranslatedString id=\"address.select_none\" />\n                </a>\n            </li>\n        </ul>\n    );\n};\n\nexport default memo(MultiCheckboxControl);\n","import { FormFieldItem } from '@bigcommerce/checkout-sdk';\nimport { FieldArray, FieldArrayRenderProps, getIn } from 'formik';\nimport { difference, kebabCase, noop, pick } from 'lodash';\nimport React, { ChangeEvent, FunctionComponent, memo, ReactNode, useCallback } from 'react';\n\nimport DynamicFormFieldType from './DynamicFormFieldType';\nimport DynamicInput from './DynamicInput';\nimport FormFieldContainer from './FormFieldContainer';\nimport FormFieldError from './FormFieldError';\nimport MultiCheckboxControl from './MultiCheckboxControl';\n\nexport interface CheckboxGroupFormFieldProps {\n    id: string;\n    label: ReactNode;\n    name: string;\n    options: FormFieldItem[];\n    onChange?(values: string[]): void;\n}\n\ntype MultiCheckboxFormFieldProps = CheckboxGroupFormFieldProps &\n    Pick<FieldArrayRenderProps, 'push' | 'remove' | 'pop' | 'form'>;\n\nconst MultiCheckboxFormField: FunctionComponent<MultiCheckboxFormFieldProps> = ({\n    form: { values, errors },\n    id,\n    label,\n    name,\n    onChange = noop,\n    options,\n    push,\n    remove,\n}) => {\n    const handleSelectAll = useCallback(() => {\n        const checkedValues: string[] = getIn(values, name) || [];\n\n        difference(\n            options.map(({ value }) => value),\n            checkedValues,\n        ).forEach((val) => push(val));\n\n        onChange(getIn(values, name));\n    }, [name, onChange, options, push, values]);\n\n    const handleSelectNone = useCallback(() => {\n        const checkedValues: string[] = getIn(values, name) || [];\n\n        checkedValues.forEach(() => remove(0));\n\n        onChange(getIn(values, name));\n    }, [name, onChange, remove, values]);\n\n    const handleInputChange = useCallback(\n        (event: ChangeEvent<HTMLInputElement>) => {\n            const checkedValues: string[] = getIn(values, name) || [];\n            const { value, checked } = event.target;\n\n            if (checked) {\n                push(value);\n            } else {\n                remove(checkedValues.indexOf(value));\n            }\n\n            onChange(getIn(values, name));\n        },\n        [name, onChange, push, remove, values],\n    );\n\n    return (\n        <FormFieldContainer hasError={getIn(errors, name) && getIn(errors, name).length}>\n            {label}\n\n            {options.length > 1 && (\n                <MultiCheckboxControl\n                    onSelectedAll={handleSelectAll}\n                    onSelectedNone={handleSelectNone}\n                    testId={id}\n                />\n            )}\n\n            <DynamicInput\n                fieldType={DynamicFormFieldType.checkbox}\n                id={id}\n                name={name}\n                onChange={handleInputChange}\n                options={options}\n                value={getIn(values, name) || []}\n            />\n\n            <FormFieldError\n                errorId={`${id ?? name}-field-error-message`}\n                name={name}\n                testId={`${kebabCase(name)}-field-error-message`}\n            />\n        </FormFieldContainer>\n    );\n};\n\nconst CheckboxGroupFormField: FunctionComponent<CheckboxGroupFormFieldProps> = ({\n    id,\n    label,\n    name,\n    onChange,\n    options,\n}) => {\n    const renderField = useCallback(\n        (renderProps: FieldArrayRenderProps) => (\n            <MultiCheckboxFormField\n                id={id}\n                label={label}\n                name={name}\n                onChange={onChange}\n                options={options}\n                {...pick(renderProps, ['form', 'pop', 'push', 'remove'])}\n            />\n        ),\n        [id, label, name, onChange, options],\n    );\n\n    return <FieldArray name={name} render={renderField} />;\n};\n\nexport default memo(CheckboxGroupFormField);\n","import { FormField as FormFieldType } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { FieldProps } from 'formik';\nimport { includes } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport CheckboxGroupFormField from './CheckboxGroupFormField';\nimport DynamicFormFieldType from './DynamicFormFieldType';\nimport DynamicInput from './DynamicInput';\nimport FormField from './FormField';\nimport Label from './Label';\n\nexport interface DynamicFormFieldOption {\n    code: string;\n    name: string;\n}\n\nexport interface DynamicFormFieldProps {\n    field: FormFieldType;\n    inputId?: string;\n    extraClass?: string;\n    autocomplete?: string;\n    parentFieldName?: string;\n    placeholder?: string;\n    label?: ReactNode;\n    isFloatingLabelEnabled?: boolean;\n    onChange?(value: string | string[]): void;\n}\n\nconst DynamicFormField: FunctionComponent<DynamicFormFieldProps> = ({\n    field: {\n        fieldType,\n        type,\n        secret,\n        name,\n        label: fieldLabel,\n        required,\n        options,\n        max,\n        min,\n        maxLength,\n    },\n    parentFieldName,\n    onChange,\n    placeholder,\n    inputId,\n    autocomplete,\n    label,\n    extraClass,\n    isFloatingLabelEnabled,\n}) => {\n    const fieldInputId = inputId || name;\n    const fieldName = parentFieldName ? `${parentFieldName}.${name}` : name;\n    const isFloatingLabelSupportedFieldType = Boolean(\n        isFloatingLabelEnabled &&\n            (includes(['text', 'password', 'dropdown', 'date', 'multiline'], fieldType) ||\n                !fieldType),\n    );\n    const labelComponent = useMemo(\n        () => (\n            <Label\n                htmlFor={fieldInputId}\n                id={`${fieldInputId}-label`}\n                isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n            >\n                {label || fieldLabel}\n                {!required && (\n                    <>\n                        {' '}\n                        <small className=\"optimizedCheckout-contentSecondary\">\n                            <TranslatedString id=\"common.optional_text\" />\n                        </small>\n                    </>\n                )}\n            </Label>\n        ),\n        [fieldInputId, fieldLabel, required, isFloatingLabelSupportedFieldType, label],\n    );\n\n    const dynamicFormFieldType = useMemo((): DynamicFormFieldType => {\n        if (fieldType === 'text') {\n            if (type === 'integer') {\n                return DynamicFormFieldType.number;\n            }\n\n            if (includes(name, 'phone') || includes(name, 'tel')) {\n                return DynamicFormFieldType.telephone;\n            }\n\n            return secret ? DynamicFormFieldType.password : DynamicFormFieldType.text;\n        }\n\n        return fieldType as DynamicFormFieldType;\n    }, [fieldType, type, secret, name]);\n\n    const renderInput = useCallback(\n        ({ field }: FieldProps<string>) => (\n            <DynamicInput\n                {...field}\n                aria-labelledby={`${fieldInputId}-label ${fieldInputId}-field-error-message`}\n                autoComplete={autocomplete}\n                fieldType={dynamicFormFieldType}\n                id={fieldInputId}\n                isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n                max={max}\n                maxLength={maxLength || undefined}\n                min={min}\n                options={options && options.items}\n                placeholder={placeholder || (options && options.helperLabel)}\n                rows={options && (options as any).rows}\n            />\n        ),\n        [\n            fieldInputId,\n            max,\n            maxLength,\n            min,\n            options,\n            placeholder,\n            dynamicFormFieldType,\n            autocomplete,\n        ],\n    );\n\n    return (\n        <div\n            className={classNames(\n                'dynamic-form-field',\n                { 'floating-form-field': isFloatingLabelSupportedFieldType },\n                extraClass,\n            )}\n        >\n            {fieldType === DynamicFormFieldType.checkbox ? (\n                <CheckboxGroupFormField\n                    id={fieldInputId}\n                    label={labelComponent}\n                    name={fieldName}\n                    onChange={onChange}\n                    options={(options && options.items) || []}\n                />\n            ) : (\n                <FormField\n                    id={fieldInputId}\n                    input={renderInput}\n                    isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n                    label={labelComponent}\n                    name={fieldName}\n                    onChange={onChange}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default memo(DynamicFormField);\n","import { RequestError } from '@bigcommerce/checkout-sdk';\n\ninterface ErrorWithType extends RequestError {\n    type: string;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-object-type\nfunction hasOwnProperty<X extends {}, Y extends PropertyKey>(\n    obj: X,\n    key: Y,\n): obj is X & Record<Y, unknown> {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport default function isErrorWithType(error: unknown): error is ErrorWithType {\n    return (\n        typeof error === 'object' &&\n        error !== null &&\n        hasOwnProperty(error, 'type') &&\n        typeof error.type === 'string'\n    );\n}\n","import FALLBACK_TRANSLATIONS from './en.json';\n\nexport const FALLBACK_LOCALE = 'en';\n\nexport { FALLBACK_TRANSLATIONS };\n","import { createLanguageService, LanguageConfig, LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { FALLBACK_LOCALE, FALLBACK_TRANSLATIONS } from './translations';\n\nlet languageService: LanguageService | undefined;\n\nexport default function getLanguageService(): LanguageService {\n    languageService =\n        languageService ??\n        createLanguageService({\n            fallbackLocale: FALLBACK_LOCALE,\n            fallbackTranslations: FALLBACK_TRANSLATIONS,\n        });\n\n    return languageService;\n}\n\nexport type InitializeLanguageService = typeof initializeLanguageService;\n\nexport function initializeLanguageService(config: LanguageConfig): LanguageService {\n    languageService = createLanguageService({\n        ...config,\n        defaultLocale: config.locale,\n        defaultTranslations: config.defaultTranslations,\n        fallbackLocale: FALLBACK_LOCALE,\n        fallbackTranslations: FALLBACK_TRANSLATIONS,\n    });\n\n    return languageService;\n}\n","import React, { FunctionComponent, ReactNode } from 'react';\n\nexport interface LoadingSkeletonProps {\n    isLoading?: boolean;\n    renderWhileLoading?: boolean;\n    skeleton?: ReactNode;\n}\n\nexport const LoadingSkeleton: FunctionComponent<LoadingSkeletonProps> = ({\n    children,\n    isLoading = true,\n    renderWhileLoading = false,\n    skeleton,\n}) => {\n    const shouldShowChildren = renderWhileLoading || !isLoading;\n\n    return (\n        <>\n            {isLoading && skeleton}\n            {Boolean(children) && shouldShowChildren && (\n                <div\n                    className=\"loading-skeleton\"\n                    style={\n                        isLoading ? { position: 'absolute', left: '0%', top: '-300%' } : undefined\n                    }\n                >\n                    {children}\n                </div>\n            )}\n        </>\n    );\n};\n","import { PhysicalItem } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { MultiShippingTableItemWithType } from './MultishippingType';\n\nexport interface ConsignmentLineItemDetailProps {\n    lineItems: MultiShippingTableItemWithType[] | PhysicalItem[]\n}\n\nconst renderProductOptionDetails = (item: MultiShippingTableItemWithType | PhysicalItem) => {\n    if (!item.options || !item.options.length) {\n        return null;\n    }\n\n    return (<span className=\"line-item-options\">{` - ${item.options.map(option => option.value).join(' / ')}`}</span>);\n}\n\nexport const renderItemContent = (item: MultiShippingTableItemWithType | PhysicalItem) => {\n    return <span>\n        <strong>{item.quantity} x </strong>{item.name}\n        {renderProductOptionDetails(item)}\n    </span>;\n};\n\nconst ConsignmentLineItemDetail: FunctionComponent<ConsignmentLineItemDetailProps> = ({\n    lineItems,\n}) => {\n\n    return (\n        <ul className=\"consignment-line-item-list\">\n        {lineItems.map((item) => (\n            <li key={item.id}>\n                {renderItemContent(item)}\n            </li>\n        ))}\n    </ul>\n    );\n};\n\nexport default memo(ConsignmentLineItemDetail);\n","// These values have to match with screensizes.scss\nexport const MOBILE_MAX_WIDTH = 968;\nexport const SMALL_SCREEN_MAX_WIDTH = 551;\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconPayPalFastlane: FunctionComponent = () => (\n    <svg viewBox=\"0 0 101 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M.009 9.791 1.653.298C1.681.1 1.805 0 1.997 0H7.74c.22 0 .332.141.29.354l-.236 1.334c-.028.185-.152.298-.344.298H3.627l-.359 2.058h3.479c.22 0 .332.142.29.354l-.221 1.306C6.788 5.9 6.664 6 6.472 6H2.936l-.662 3.847c-.028.198-.152.298-.344.298H.298c-.22 0-.332-.142-.289-.354m6.78-1.49c0-1.844 1.905-2.468 3.906-2.71.234-.029.415-.041 1.298-.112a3.25 3.25 0 0 0 .04-.498c0-.653-.344-1.022-1.063-1.022-.622 0-1.035.269-1.23.796-.068.185-.18.27-.358.27H7.975c-.18 0-.304-.085-.304-.241 0-.044.014-.086.028-.128.441-1.334 1.67-2.186 3.507-2.186s2.843.71 2.843 2.428c0 .326-.04.739-.11 1.122l-.373 2.07c-.083.484-.207 1.22-.207 1.718 0 .256-.11.341-.318.341h-1.283c-.192 0-.304-.1-.304-.282 0-.17.04-.37.069-.554-.524.539-1.2.978-2.402.978-1.42 0-2.332-.725-2.332-1.986zm5.036-1.205.054-.256-.372.041c-.746.085-2.375.2-2.375 1.205 0 .525.372.78.966.78 1.103 0 1.504-.78 1.725-1.773zm2.446 1.36c-.04-.17-.07-.297-.07-.438 0-.242.124-.313.318-.313h1.588c.192 0 .29.1.332.298.152.554.607.795 1.284.795.773 0 1.186-.326 1.186-.751 0-.369-.415-.54-1.104-.752l-.813-.256c-1.173-.369-2.14-.795-2.14-2.115 0-1.603 1.475-2.483 3.423-2.483 1.519 0 2.762.412 3.12 1.986.015.07.029.141.029.226 0 .142-.124.198-.318.198h-1.504c-.18 0-.276-.085-.36-.27-.165-.37-.538-.596-1.13-.596-.691 0-1.036.27-1.036.653s.332.554 1.284.852l.539.17c1.243.398 2.278.866 2.278 2.059 0 1.732-1.519 2.639-3.59 2.639-1.602 0-2.996-.468-3.313-1.902h-.005zm7.786.455c0-.269.04-.483.083-.725l.676-3.888h-.745c-.22 0-.332-.141-.29-.354l.166-.951c.029-.185.152-.298.344-.298h.8l.29-1.717c.028-.198.152-.298.344-.298h1.519c.22 0 .332.142.29.354l-.29 1.661h.966c.22 0 .332.142.29.356l-.166.951c-.029.186-.152.298-.345.298h-1.02l-.442 2.54c-.083.483-.152.851-.152 1.149 0 .468.152.624.47.624.124 0 .235-.015.318-.015.22 0 .29.17.249.383l-.152.922c-.055.356-.263.412-.76.412-1.297 0-2.443-.071-2.443-1.405m3.995.88 1.63-9.493C27.71.1 27.834 0 28.026 0h1.519c.22 0 .332.141.29.354l-1.643 9.493c-.028.198-.152.298-.344.298h-1.505c-.221 0-.332-.141-.29-.354zm3.147-1.49c0-1.844 1.905-2.468 3.906-2.71.235-.029.415-.041 1.298-.112a3.25 3.25 0 0 0 .04-.498c0-.653-.344-1.022-1.063-1.022-.622 0-1.034.269-1.229.796-.069.185-.18.27-.359.27h-1.407c-.18 0-.304-.085-.304-.241 0-.044.015-.086.028-.128.442-1.334 1.67-2.186 3.508-2.186 1.837 0 2.843.71 2.843 2.428 0 .326-.04.739-.112 1.122l-.372 2.07c-.083.484-.207 1.22-.207 1.718 0 .256-.111.341-.318.341h-1.284c-.192 0-.303-.1-.303-.282 0-.17.04-.37.068-.554-.524.539-1.2.978-2.401.978-1.422 0-2.333-.725-2.333-1.986V8.3m4.914-1.205.055-.256-.373.041c-.745.085-2.375.2-2.375 1.205 0 .525.372.78.966.78 1.103 0 1.505-.78 1.725-1.773zm2.475 2.695 1.16-6.798c.028-.2.152-.298.344-.298h1.421c.22 0 .318.142.275.356l-.11.666c.357-.524 1.13-1.193 2.4-1.193 1.382 0 2.182.88 2.182 2.256 0 .269-.029.54-.083.866l-.731 4.2c-.028.198-.152.298-.344.298h-1.519c-.22 0-.332-.141-.29-.353l.566-3.25c.083-.482.11-.851.11-1.121 0-.766-.274-1.179-.95-1.179-.898 0-1.436.725-1.671 2.086l-.608 3.52c-.028.197-.152.297-.344.297h-1.519c-.22 0-.332-.141-.29-.353m8.063-2.824c0-2.384 1.588-4.456 4.35-4.456 2.14 0 3.45 1.22 3.45 3.42 0 .256-.014.483-.04.71-.028.2-.152.297-.344.297h-5.233c.028 1.051.496 1.689 1.56 1.689.538 0 .91-.198 1.214-.51a.47.47 0 0 1 .387-.186h1.67c.193 0 .305.057.305.2 0 .042-.015.1-.069.198-.705 1.25-1.836 2.071-3.671 2.071-2.098 0-3.576-1.178-3.576-3.434zm5.591-1.405c0-.908-.484-1.476-1.421-1.476-1.009 0-1.616.71-1.78 1.476h3.203zm34.293-.611-1.504 2.6-.764-2.579a.195.195 0 0 0-.185-.141h-1.355a.15.15 0 0 0-.14.195l1.367 4.343-1.236 2.046c-.06.099.009.227.123.227h1.462a.24.24 0 0 0 .206-.12l3.817-6.465a.148.148 0 0 0-.126-.225h-1.46a.23.23 0 0 0-.204.119zM62.935 12c-.135 0-.206-.063-.206-.168 0-.032.01-.074.03-.116l.66-1.613-1.947-5.21c-.03-.084-.052-.126-.052-.189 0-.105.083-.136.216-.136h.7c.135 0 .227.073.268.2l.937 2.816c.176.527.299.886.433 1.329h.02c.176-.517.268-.823.454-1.36l.957-2.785q.078-.202.278-.2h.629c.134 0 .227.041.227.147a.5.5 0 0 1-.052.169l-2.699 6.927c-.051.127-.134.19-.268.19h-.587zm-4.082-1.772c-.927 0-1.524-.422-1.833-.906v.537c0 .158-.083.243-.237.243h-.505c-.154 0-.237-.085-.237-.243V2.803c0-.158.083-.243.237-.243h.577c.154 0 .237.085.237.243v1.381c0 .38 0 .697-.01 1.086.308-.454.906-.875 1.761-.875 1.535 0 2.523 1.244 2.523 2.921s-1.03 2.911-2.513 2.911m-.205-.876c1.009 0 1.596-.801 1.596-2.025s-.597-2.035-1.606-2.035-1.606.855-1.606 2.035.597 2.025 1.617 2.025zm12.82-1.666c1.397 0 2.58-1.043 2.796-2.454.218-1.424-.87-2.666-2.408-2.67h-2.482a.2.2 0 0 0-.192.17l-1.107 7.19a.18.18 0 0 0 .178.212h1.315a.2.2 0 0 0 .191-.169l.326-2.111a.2.2 0 0 1 .19-.17h1.194zm1.1-2.52c-.082.527-.479.915-1.24.915h-.972l.294-1.916h.955c.788 0 1.044.475.962 1zm7.386-.336h-1.246a.2.2 0 0 0-.191.169l-.042.266s-.968-1.082-2.68-.352c-.982.42-1.455 1.287-1.656 1.918 0 0-.638 1.929.803 2.988 0 0 1.336 1.019 2.842-.063l-.026.17a.18.18 0 0 0 .178.211h1.246a.2.2 0 0 0 .191-.169l.76-4.924a.182.182 0 0 0-.178-.214zm-1.831 2.72c-.108.705-.675 1.225-1.4 1.225a1.3 1.3 0 0 1-.393-.058c-.537-.178-.844-.705-.757-1.28.108-.706.676-1.226 1.403-1.226q.216 0 .392.06c.54.178.843.707.755 1.28zm11.3.136c1.396 0 2.58-1.043 2.795-2.454.218-1.424-.87-2.666-2.408-2.67h-2.48a.2.2 0 0 0-.192.17l-1.107 7.19a.18.18 0 0 0 .178.212h1.315a.2.2 0 0 0 .191-.169l.326-2.111a.2.2 0 0 1 .19-.17h1.19v.002zm1.101-2.52c-.082.527-.478.915-1.239.915h-.972l.294-1.916h.955c.786 0 1.043.475.962 1zm7.387-.336h-1.246a.2.2 0 0 0-.191.169l-.042.266s-.968-1.082-2.68-.352c-.982.42-1.455 1.287-1.655 1.918 0 0-.639 1.929.803 2.988 0 0 1.337 1.019 2.842-.063l-.027.17a.18.18 0 0 0 .178.211h1.246a.2.2 0 0 0 .191-.169l.76-4.924a.183.183 0 0 0-.18-.214m-1.831 2.72c-.109.705-.674 1.225-1.4 1.225q-.216 0-.392-.058c-.537-.178-.845-.705-.757-1.28.108-.706.677-1.226 1.402-1.226q.216 0 .392.06c.537.178.843.707.756 1.28zm3.233-4.82L98.206 9.92a.18.18 0 0 0 .178.212h1.314a.2.2 0 0 0 .192-.169l1.107-7.19a.18.18 0 0 0-.178-.213h-1.315a.2.2 0 0 0-.191.17\"\n            fill=\"#333333\"\n        />\n    </svg>\n);\n\nexport default withIconContainer(IconPayPalFastlane);\n","import React from 'react';\n\nimport { IconPayPalFastlane } from '@bigcommerce/checkout/ui';\n\nimport './PoweredByPayPalFastlaneLabel.scss';\n\nconst PoweredByPayPalFastlaneLabel = () => (\n    <div className=\"powered-by-paypal-fastlane\" data-test=\"paypal-fastlane-icon\">\n        <IconPayPalFastlane />\n    </div>\n);\n\nexport default PoweredByPayPalFastlaneLabel;\n","import classNames from 'classnames';\nimport React, { forwardRef, Ref, TextareaHTMLAttributes } from 'react';\n\nexport interface TextAreaProps extends TextareaHTMLAttributes<HTMLTextAreaElement> {\n    additionalClassName?: string;\n    testId?: string;\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst TextArea = forwardRef(\n    (\n        { additionalClassName, testId, className, isFloatingLabelEnabled, ...rest }: TextAreaProps,\n        ref: Ref<HTMLTextAreaElement>,\n    ) => {\n        return (\n            <textarea\n                {...rest}\n                className={\n                    className ||\n                    classNames(\n                        { 'floating-textarea': isFloatingLabelEnabled },\n                        'form-input',\n                        'optimizedCheckout-form-input',\n                        additionalClassName,\n                    )\n                }\n                data-test={testId}\n                ref={ref}\n            />\n        );\n    },\n);\n\nexport default TextArea;\n","export default class CustomError extends Error {\n    static shouldReport: boolean;\n\n    data: any;\n    title: any;\n    type: string;\n\n    constructor({\n        data = {},\n        message = '',\n        title = '',\n        name = '',\n    }: {\n        data?: any;\n        message?: string;\n        title?: string;\n        name?: string;\n    }) {\n        super();\n\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, CustomError);\n        } else {\n            this.stack = new Error().stack;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        this.data = data;\n        this.message = message;\n        this.name = name;\n        this.title = title;\n        this.type = 'custom';\n    }\n}\n","import { PaymentMethodId } from './paymentMethod';\n\nexport default function getProviderWithCustomCheckout(methodId?: string | null): string | undefined {\n    if (!methodId) {\n        return undefined;\n    }\n\n    if (methodId === PaymentMethodId.PaypalCommerce || methodId === PaymentMethodId.PaypalCommerceCreditCards) {\n        return PaymentMethodId.PayPalCommerceAcceleratedCheckout;\n    }\n\n    if (methodId === PaymentMethodId.Braintree) {\n        return PaymentMethodId.BraintreeAcceleratedCheckout;\n    }\n\n    return methodId;\n}\n","import classNames from 'classnames';\nimport { includes } from 'lodash';\nimport React, { forwardRef, InputHTMLAttributes, Ref } from 'react';\n\nexport interface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n    testId?: string;\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst Input = forwardRef(\n    (\n        { className, testId, placeholder, name, isFloatingLabelEnabled, ...rest }: InputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => {\n        const floatingLabelDisabledFieldNames = ['orderComment', 'redeemableCode'];\n\n        return (\n            <input\n                {...{\n                    ...rest,\n                    className: classNames(className, {\n                        'floating-input':\n                            isFloatingLabelEnabled && !includes(floatingLabelDisabledFieldNames, name),\n                    }),\n                    name,\n                }}\n                data-test={testId}\n                placeholder={isFloatingLabelEnabled ? ' ' : placeholder}\n                ref={ref}\n            />\n        );\n    },\n);\n\nexport default Input;\n","import classNames from 'classnames';\nimport React, { FunctionComponent, LabelHTMLAttributes } from 'react';\n\nexport interface LabelProps extends LabelHTMLAttributes<HTMLLabelElement> {\n    testId?: string;\n    hidden?: boolean;\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst Label: FunctionComponent<LabelProps> = ({\n    children,\n    className,\n    hidden,\n    testId,\n    isFloatingLabelEnabled,\n    ...rest\n}) => (\n    <label\n        { ...rest }\n        className={ classNames(\n            { 'floating-label': isFloatingLabelEnabled },\n            className || 'form-label',\n            { 'is-srOnly': hidden },\n            'optimizedCheckout-form-label'\n        ) }\n        data-test={ testId }\n    >\n        { children }\n    </label>\n);\n\nexport default Label;\n","import { CheckoutSelectors, CheckoutService } from '@bigcommerce/checkout-sdk';\nimport { memoizeOne } from '@bigcommerce/memoize';\nimport React, { Component, ReactNode } from 'react';\n\nimport CheckoutContext from './CheckoutContext';\n\nexport interface CheckoutProviderProps {\n    checkoutService: CheckoutService;\n}\n\nexport interface CheckoutProviderState {\n    checkoutState: CheckoutSelectors;\n}\n\nexport default class CheckoutProvider extends Component<\n    CheckoutProviderProps,\n    CheckoutProviderState\n> {\n    state: Readonly<CheckoutProviderState>;\n\n    private unsubscribe?: () => void;\n\n    private getContextValue = memoizeOne(\n        (checkoutService: CheckoutService, checkoutState: CheckoutSelectors) => {\n            return {\n                checkoutService,\n                checkoutState,\n            };\n        },\n    );\n\n    constructor(props: Readonly<CheckoutProviderProps>) {\n        super(props);\n\n        this.state = {\n            checkoutState: props.checkoutService.getState(),\n        };\n    }\n\n    componentDidMount(): void {\n        const { checkoutService } = this.props;\n\n        this.unsubscribe = checkoutService.subscribe((checkoutState) =>\n            this.setState({ checkoutState }),\n        );\n    }\n\n    componentWillUnmount(): void {\n        if (this.unsubscribe) {\n            this.unsubscribe();\n            this.unsubscribe = undefined;\n        }\n    }\n\n    render(): ReactNode {\n        const { checkoutService, children } = this.props;\n        const { checkoutState } = this.state;\n\n        return (\n            <CheckoutContext.Provider value={this.getContextValue(checkoutService, checkoutState)}>\n                {children}\n            </CheckoutContext.Provider>\n        );\n    }\n}\n","import { Address, AddressKey, FormField } from '@bigcommerce/checkout-sdk';\n\nimport { DynamicFormFieldType } from '../ui/form';\n\nexport type AddressFormValues = Pick<Address, Exclude<AddressKey, 'customFields'>> & {\n    customFields: { [id: string]: any };\n};\n\nexport default function mapAddressToFormValues(\n    fields: FormField[],\n    address?: Address,\n): AddressFormValues {\n    const values = {\n        ...fields.reduce(\n            (addressFormValues, { name, custom, fieldType, default: defaultValue }) => {\n                if (custom) {\n                    if (!addressFormValues.customFields) {\n                        addressFormValues.customFields = {};\n                    }\n\n                    const field =\n                        address &&\n                        address.customFields &&\n                        address.customFields.find(({ fieldId }) => fieldId === name);\n\n                    const fieldValue = field && field.fieldValue;\n\n                    addressFormValues.customFields[name] = getValue(\n                        fieldType,\n                        fieldValue,\n                        defaultValue,\n                    );\n\n                    return addressFormValues;\n                }\n\n                if (isSystemAddressFieldName(name)) {\n                    const fieldValue = address && address[name];\n\n                    addressFormValues[name] = getValue(\n                        fieldType,\n                        fieldValue,\n                        defaultValue,\n                    )?.toString() || '';\n                }\n\n                return addressFormValues;\n            },\n            {} as AddressFormValues,\n        ),\n    };\n\n    values.shouldSaveAddress =\n        address && address.shouldSaveAddress !== undefined ? address.shouldSaveAddress : true;\n\n    // Manually backfill stateOrProvince to avoid Formik warning (uncontrolled to controlled input)\n    if (values.stateOrProvince === undefined) {\n        values.stateOrProvince = '';\n    }\n\n    if (values.stateOrProvinceCode === undefined) {\n        values.stateOrProvinceCode = '';\n    }\n\n    return values;\n}\n\nfunction getValue(\n    fieldType?: string,\n    fieldValue?: string | string[] | number,\n    defaultValue?: string,\n): string | string[] | number | Date | undefined {\n    if (fieldValue === undefined || fieldValue === null) {\n        return getDefaultValue(fieldType, defaultValue);\n    }\n\n    if (fieldType === DynamicFormFieldType.date && typeof fieldValue === 'string') {\n        if (fieldValue) {\n            const [year, month, day] = fieldValue.split('-');\n\n            return new Date(Number(year), Number(month)-1, Number(day));\n        }\n\n        return undefined;\n    }\n\n    return fieldValue;\n}\n\nfunction getDefaultValue(fieldType?: string, defaultValue?: string): string | string[] | Date {\n    if (defaultValue && fieldType === DynamicFormFieldType.date) {\n        return new Date(defaultValue);\n    }\n\n    if (fieldType === DynamicFormFieldType.checkbox) {\n        return [];\n    }\n\n    return defaultValue || '';\n}\n\nfunction isSystemAddressFieldName(\n    fieldName: string,\n): fieldName is Exclude<keyof Address, 'customFields' | 'shouldSaveAddress'> {\n    return fieldName !== 'customFields' && fieldName !== 'shouldSaveAddress';\n}\n","import classNames from 'classnames';\nimport React, { FunctionComponent } from 'react';\n\nexport interface LegendProps extends React.HTMLAttributes<HTMLLegendElement> {\n    hidden?: boolean;\n    testId?: string;\n}\n\nconst Legend: FunctionComponent<LegendProps> = ({\n    children,\n    className,\n    hidden,\n    testId,\n    ...rest\n}) => (\n    <legend\n        {...rest}\n        className={classNames(\n            className || 'form-legend',\n            { 'is-srOnly': hidden },\n            { 'optimizedCheckout-headingSecondary': !hidden },\n        )}\n        data-test={testId}\n    >\n        {children}\n    </legend>\n);\n\nexport default Legend;\n","import { CheckoutPaymentMethodExecutedOptions } from '@bigcommerce/checkout-sdk';\nimport { createContext } from 'react';\n\nexport interface AnalyticsEvents {\n    checkoutBegin(): void;\n    trackStepCompleted(step: string): void;\n    trackStepViewed(step: string): void;\n    orderPurchased(): void;\n    customerEmailEntry(email: string): void;\n    customerSuggestionInit(payload?: CheckoutPaymentMethodExecutedOptions): void;\n    customerSuggestionExecute(): void;\n    customerPaymentMethodExecuted(payload?: CheckoutPaymentMethodExecutedOptions): void;\n    showShippingMethods(): void;\n    selectedPaymentMethod(methodName: string, methodId: string): void;\n    clickPayButton(payload?: { [key: string]: unknown }): void;\n    paymentRejected(): void;\n    paymentComplete(): void;\n    exitCheckout(): void;\n    walletButtonClick(methodId: string): void;\n}\n\nexport interface AnalyticsContextProps {\n    analyticsTracker: AnalyticsEvents;\n}\n\nconst AnalyticsContext = createContext<AnalyticsContextProps | undefined>(undefined);\n\nexport default AnalyticsContext;\n","import { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport isPayPalFastlaneCustomer from './is-paypal-fastlane-customer';\nimport isPayPalFastlaneMethod from './is-paypal-fastlane-method';\n\nconst usePayPalFastlaneAddress = () => {\n    const { checkoutState } = useCheckout();\n    const { getConfig, getPaymentProviderCustomer } = checkoutState.data;\n    const paymentWithCustomCheckout =\n        getConfig()?.checkoutSettings.providerWithCustomCheckout || '';\n\n    const isPayPalFastlaneEnabled = isPayPalFastlaneMethod(paymentWithCustomCheckout);\n\n    const paymentProviderCustomer = getPaymentProviderCustomer();\n    const paypalFastlaneCustomer = isPayPalFastlaneCustomer(paymentProviderCustomer)\n        ? paymentProviderCustomer\n        : {};\n\n    const customerAuthenticationState =\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        paymentProviderCustomer?.authenticationState;\n\n    const paypalFastlaneAddresses = paypalFastlaneCustomer.addresses || [];\n\n    const shouldShowPayPalFastlaneLabel =\n        paypalFastlaneAddresses.length > 0 && isPayPalFastlaneEnabled;\n\n    const shouldShowPayPalFastlaneShippingForm =\n        paypalFastlaneAddresses.length > 0 &&\n        customerAuthenticationState &&\n        customerAuthenticationState !== 'CANCELED' &&\n        customerAuthenticationState !== 'unrecognized';\n\n    return {\n        isPayPalFastlaneEnabled,\n        paypalFastlaneAddresses,\n        shouldShowPayPalFastlaneLabel,\n        shouldShowPayPalFastlaneShippingForm,\n    };\n};\n\nexport default usePayPalFastlaneAddress;\n","import { CurrencyService, LanguageService } from '@bigcommerce/checkout-sdk';\nimport { createContext, useContext } from 'react';\n\nexport interface LocaleContextType {\n    language: LanguageService;\n    date?: {\n        inputFormat: string;\n    };\n    currency?: CurrencyService;\n}\n\nconst LocaleContext = createContext<LocaleContextType | undefined>(undefined);\n\nexport default LocaleContext;\n\nexport function useLocale() {\n    const context = useContext(LocaleContext);\n\n    if (!context) {\n        throw new Error('useLocale must be used within a LocaleContextProvider');\n    }\n\n    return context;\n}\n","// NOTE: For now, need to coerce the type as mutable array / object. Otherwise,\n// we'll need to change the props of all components as readonly.\nexport const EMPTY_ARRAY = Object.freeze([]) as never[];\nexport const EMPTY_OBJECT = Object.freeze({}) as any;\n","import { AnalyticsContext } from '@bigcommerce/checkout/analytics';\nimport { createInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nconst withAnalytics = createInjectHoc(AnalyticsContext, { displayNamePrefix: 'WithAnalytics' });\n\nexport default withAnalytics;\n","export default class CustomError extends Error {\n    static shouldReport: boolean;\n\n    data: any;\n    title: string;\n    type: string;\n\n    constructor({\n        data = {},\n        message = '',\n        title = '',\n        name = '',\n    }: {\n        data?: any;\n        message?: string;\n        title?: string;\n        name?: string;\n    }) {\n        super();\n\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, CustomError);\n        } else {\n            this.stack = new Error().stack;\n        }\n\n         \n        this.data = data;\n        this.message = message;\n        this.name = name;\n        this.title = title;\n        this.type = 'custom';\n    }\n\n    // todo: remove these methods when all error types has specific subclasses.\n    // they are only provided for compatibility with errors defined in `app.errors.ts` while we transition\n    // to proper error subclasses.\n    protected setDefaultValues({\n        name,\n        defaultError,\n        defaultTitle,\n    }: {\n        name: string;\n        defaultError: string;\n        defaultTitle: string;\n    }): void {\n        this.name = this.name || name;\n        this.message = this.message || defaultError;\n        this.title = this.title || defaultTitle;\n    }\n}\n","import React, { FunctionComponent, memo } from 'react';\nimport Media, { MediaQueryObject, MultiQueryProps } from 'react-media';\n\nimport { MOBILE_MAX_WIDTH } from './breakpoints';\n\nconst queries = {\n    print: 'print',\n    mobile: `screen and (max-width: ${MOBILE_MAX_WIDTH}px)`,\n};\n\nconst ViewPicker: FunctionComponent<Pick<MultiQueryProps<MediaQueryObject>, 'children'>> = ({\n    children,\n}) => {\n    return <Media queries={queries}>{children}</Media>;\n};\n\nexport default memo(ViewPicker);\n","import React, { FunctionComponent, memo } from 'react';\n\nimport ViewPicker from './ViewPicker';\n\nconst MobileView: FunctionComponent<{ children(matched: boolean): React.ReactNode }> = ({\n    children,\n}) => {\n    return (\n        <ViewPicker>\n            {(matches: { mobile: boolean }) => {\n                return children(matches.mobile);\n            }}\n        </ViewPicker>\n    );\n};\n\nexport default memo(MobileView);\n","import classNames from 'classnames';\nimport React, { FieldsetHTMLAttributes, forwardRef, ReactNode, Ref } from 'react';\n\nexport interface FieldsetProps extends FieldsetHTMLAttributes<HTMLFieldSetElement> {\n    additionalClassName?: string;\n    testId?: string;\n    legend?: ReactNode;\n}\n\nconst Fieldset = forwardRef(\n    (\n        { additionalClassName, children, className, legend, testId, ...rest }: FieldsetProps,\n        ref: Ref<HTMLFieldSetElement>,\n    ) => (\n        <fieldset\n            {...rest}\n            className={className || classNames('form-fieldset', additionalClassName)}\n            data-test={testId}\n            ref={ref}\n        >\n            {legend}\n\n            <div className=\"form-body\">{children}</div>\n        </fieldset>\n    ),\n);\n\nexport default Fieldset;\n","import { assign, kebabCase, map, pickBy } from 'lodash';\n\nexport default function toCSSRule(\n    selector: string,\n    ...styles: Array<{ [key: string]: any } | undefined>\n): string {\n    const mergedStyles = assign({}, ...styles);\n    const props = map(\n        pickBy(mergedStyles, (value) => typeof value === 'string'),\n        (value, key) => `${kebabCase(key)}: ${value};`,\n    ).join(' ');\n\n    return `${selector} {${props}}`;\n}\n","import { EmbeddedCheckoutStyles } from '@bigcommerce/checkout-sdk';\n\nimport { toCSSRule } from '../common/dom';\n\nexport default class EmbeddedCheckoutStyleParser {\n    parse(styles: EmbeddedCheckoutStyles): string[] {\n        const rules: string[] = [];\n\n        if (styles.body) {\n            rules.push(toCSSRule('body', styles.body));\n            rules.push(toCSSRule('.optimizedCheckout-overlay', styles.body));\n        }\n\n        if (styles.text) {\n            rules.push(toCSSRule('.optimizedCheckout-contentPrimary', styles.text));\n        }\n\n        if (styles.secondaryText) {\n            rules.push(toCSSRule('.optimizedCheckout-contentSecondary', styles.secondaryText));\n        }\n\n        if (styles.heading) {\n            rules.push(toCSSRule('.optimizedCheckout-headingPrimary', styles.heading));\n        }\n\n        if (styles.secondaryHeading) {\n            rules.push(toCSSRule('.optimizedCheckout-headingSecondary', styles.secondaryHeading));\n        }\n\n        if (styles.link) {\n            rules.push(toCSSRule('a', styles.link));\n            rules.push(toCSSRule('a:focus', styles.link, styles.link.focus));\n            rules.push(toCSSRule('a:hover', styles.link, styles.link.hover));\n        }\n\n        if (styles.label) {\n            rules.push(toCSSRule('.optimizedCheckout-form-label', styles.label));\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-label',\n                    styles.label,\n                    styles.label.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .form-inlineMessage',\n                    styles.label,\n                    styles.label.error,\n                ),\n            );\n        }\n\n        if (styles.button) {\n            rules.push(toCSSRule('.optimizedCheckout-buttonPrimary', styles.button));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:active',\n                    styles.button,\n                    styles.button.active,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:focus',\n                    styles.button,\n                    styles.button.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:hover',\n                    styles.button,\n                    styles.button.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:active',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:focus',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:hover',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled].is-active',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled].is-loading',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n        }\n\n        if (styles.secondaryButton) {\n            rules.push(toCSSRule('.optimizedCheckout-buttonSecondary', styles.secondaryButton));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.active,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:focus',\n                    styles.secondaryButton,\n                    styles.secondaryButton.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:hover',\n                    styles.secondaryButton,\n                    styles.secondaryButton.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:focus',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:hover',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled].is-active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled].is-loading',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n        }\n\n        if (styles.input) {\n            rules.push(toCSSRule('.optimizedCheckout-form-input', styles.input));\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-input:focus', styles.input, styles.input.focus),\n            );\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-input:hover', styles.input, styles.input.hover),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-input::placeholder',\n                    styles.input,\n                    styles.input.placeholder,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input:focus',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input:hover',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n        }\n\n        if (styles.select) {\n            rules.push(toCSSRule('.optimizedCheckout-form-select', styles.select));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-select:focus',\n                    styles.select,\n                    styles.select.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-select:hover',\n                    styles.select,\n                    styles.select.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select:focus',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select:hover',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n        }\n\n        if (styles.checkbox) {\n            rules.push(toCSSRule('.optimizedCheckout-form-checkbox', styles.checkbox));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checkbox:focus',\n                    styles.checkbox,\n                    styles.checkbox.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checkbox:hover',\n                    styles.checkbox,\n                    styles.checkbox.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox:focus',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox:hover',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n        }\n\n        if (styles.radio) {\n            rules.push(toCSSRule('.optimizedCheckout-form-radio', styles.radio));\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-radio:focus', styles.radio, styles.radio.focus),\n            );\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-radio:hover', styles.radio, styles.radio.hover),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio:focus',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio:hover',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n        }\n\n        if (styles.step) {\n            rules.push(toCSSRule('.optimizedCheckout-checkoutStep', styles.step));\n            rules.push(toCSSRule('.optimizedCheckout-step', styles.step.icon));\n        }\n\n        if (styles.checklist) {\n            rules.push(toCSSRule('.optimizedCheckout-form-checklist', styles.checklist));\n            rules.push(toCSSRule('.optimizedCheckout-form-checklist-item', styles.checklist));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checklist-item:hover',\n                    styles.checklist,\n                    styles.checklist.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checklist-item--selected',\n                    styles.checklist,\n                    styles.checklist.checked,\n                ),\n            );\n        }\n\n        if (styles.discountBanner) {\n            rules.push(toCSSRule('.optimizedCheckout-discountBanner', styles.discountBanner));\n        }\n\n        if (styles.loadingBanner) {\n            rules.push(toCSSRule('.optimizedCheckout-loadingToaster', styles.loadingBanner));\n        }\n\n        if (styles.orderSummary) {\n            rules.push(toCSSRule('.optimizedCheckout-orderSummary', styles.orderSummary));\n            rules.push(\n                toCSSRule('.optimizedCheckout-orderSummary-cartSection', styles.orderSummary),\n            );\n        }\n\n        return rules;\n    }\n}\n","import { EmbeddedCheckoutStyles } from '@bigcommerce/checkout-sdk';\n\nimport { appendStylesheet } from '../common/dom';\n\nimport EmbeddedCheckoutStyleParser from './EmbeddedCheckoutStyleParser';\n\nexport default class EmbeddedCheckoutStylesheet {\n    private _parser: EmbeddedCheckoutStyleParser;\n\n    constructor(embeddedCheckoutStyleParser: EmbeddedCheckoutStyleParser) {\n        this._parser = embeddedCheckoutStyleParser;\n    }\n\n    append(styles: EmbeddedCheckoutStyles): HTMLStyleElement {\n        return appendStylesheet(this._parser.parse(styles));\n    }\n}\n","export default function appendStylesheet(rules: string[]): HTMLStyleElement {\n    const style = document.createElement('style');\n\n    document.head.appendChild(style);\n\n    if (style.sheet instanceof CSSStyleSheet) {\n        const { sheet } = style;\n\n        rules.forEach((rule, index) => {\n            sheet.insertRule(rule, index);\n        });\n    }\n\n    return style;\n}\n","import EmbeddedCheckoutStyleParser from './EmbeddedCheckoutStyleParser';\nimport EmbeddedCheckoutStylesheet from './EmbeddedCheckoutStylesheet';\n\nexport default function createEmbeddedCheckoutStylesheet() {\n    const embeddedCheckoutStyleParser = new EmbeddedCheckoutStyleParser();\n\n    return new EmbeddedCheckoutStylesheet(embeddedCheckoutStyleParser);\n}\n","import classNames from 'classnames';\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { FormContext } from '@bigcommerce/checkout/ui';\n\nexport interface FormFieldContainerProps {\n    additionalClassName?: string;\n    children: ReactNode;\n    className?: string;\n    hasError?: boolean;\n    testId?: string;\n}\n\nconst FormFieldContainer: FunctionComponent<FormFieldContainerProps> = ({\n    additionalClassName,\n    children,\n    className,\n    hasError,\n    testId,\n}) => (\n    <FormContext.Consumer>\n        {({ isSubmitted }) => (\n            <div\n                className={\n                    className ||\n                    classNames('form-field', additionalClassName, {\n                        'form-field--error': hasError && isSubmitted,\n                    })\n                }\n                data-test={testId}\n            >\n                {children}\n            </div>\n        )}\n    </FormContext.Consumer>\n);\n\nexport default memo(FormFieldContainer);\n","import { Field, FieldConfig, FieldProps, getIn } from 'formik';\nimport { isDate, noop } from 'lodash';\nimport React, {\n    Component,\n    createElement,\n    FunctionComponent,\n    memo,\n    useCallback,\n    useMemo,\n} from 'react';\nimport shallowEqual from 'shallowequal';\n\nimport FormFieldContainer from './FormFieldContainer';\n\nexport interface BasicFormFieldProps extends FieldConfig {\n    additionalClassName?: string;\n    className?: string;\n    testId?: string;\n    onChange?(value: any): void;\n}\n\nconst BasicFormField: FunctionComponent<BasicFormFieldProps> = ({\n    additionalClassName,\n    className,\n    component,\n    render,\n    testId,\n    onChange,\n    ...rest\n}) => {\n    const renderInnerField = useCallback(\n        (props: FieldProps) => (\n            <InnerField\n                {...props}\n                additionalClassName={additionalClassName}\n                className={className}\n                component={component}\n                onChange={onChange}\n                render={render}\n                testId={testId}\n            />\n        ),\n        [additionalClassName, className, component, render, testId, onChange],\n    );\n\n    return <Field {...rest}>{renderInnerField}</Field>;\n};\n\ntype InnerFieldProps = Omit<BasicFormFieldProps, keyof FieldConfig> & InnerFieldInputProps;\n\nconst InnerField: FunctionComponent<InnerFieldProps> = memo(\n    ({ additionalClassName, component, field, form, onChange, render, testId, meta }) => {\n        const input = useMemo(\n            () => (\n                <InnerFieldInput\n                    component={component}\n                    field={field}\n                    form={form}\n                    meta={meta}\n                    onChange={onChange}\n                    render={render}\n                />\n            ),\n            [field, form, onChange, component, render],\n        );\n\n        return (\n            <FormFieldContainer\n                additionalClassName={additionalClassName}\n                hasError={getIn(form.errors, field.name)}\n                testId={testId}\n            >\n                {input}\n            </FormFieldContainer>\n        );\n    },\n    (\n        { form: prevForm, field: prevField, ...prevProps },\n        { form: nextForm, field: nextField, ...nextProps },\n    ) =>\n        shallowEqual(prevProps, nextProps) &&\n        shallowEqual(prevForm, nextForm) &&\n        shallowEqual(prevField, nextField),\n);\n\ntype InnerFieldInputProps = FieldProps &\n    Pick<FieldConfig, 'component' | 'render'> & {\n        onChange?(value: string): void;\n    };\n\nclass InnerFieldInput extends Component<InnerFieldInputProps> {\n    componentDidUpdate({ field: prevField }: InnerFieldInputProps) {\n        const {\n            field: { value },\n            onChange = noop,\n        } = this.props;\n        const comparableValue = isDate(value) ? value.getTime() : value;\n        const comparablePrevValue = isDate(prevField.value)\n            ? prevField.value.getTime()\n            : prevField.value;\n\n        if (comparableValue !== comparablePrevValue) {\n            onChange(value);\n        }\n    }\n\n    render() {\n        const { component = 'input', field, render } = this.props;\n\n        if (render) {\n            return (render as any)(this.props);\n        }\n\n        if (typeof component === 'string') {\n            return createElement(component as any, field);\n        }\n\n        return createElement(component as any, this.props);\n    }\n}\n\nexport default memo(BasicFormField);\n","import { MOBILE_MAX_WIDTH } from './breakpoints';\n\nlet query: MediaQueryList;\n\nexport default function isMobileView() {\n    query = window.matchMedia(`(max-width: ${MOBILE_MAX_WIDTH}px)`);\n\n    return query.matches;\n}\n","import { CheckoutSettings } from '@bigcommerce/checkout-sdk';\n\nexport default function isFloatingLabelEnabled(checkoutSettings: CheckoutSettings): boolean {\n    return Boolean(checkoutSettings.checkoutUserExperienceSettings.floatingLabelEnabled);\n}\n","import { RequestError } from '@bigcommerce/checkout-sdk';\n\nexport default function isRequestError(error: unknown): error is RequestError {\n    const requestError = error as RequestError;\n\n    return requestError.type === 'request';\n}\n","import { createRequestSender, RequestSender } from '@bigcommerce/request-sender';\n\nimport { CreatedCustomer, CreatedCustomerResponse } from './CreatedCustomer';\n\nexport interface CustomerCreateRequestBody {\n    confirmPassword: string;\n    newsletter: boolean;\n    orderId: number;\n    password: string;\n}\n\nexport default class AccountService {\n    constructor(private requestSender: RequestSender = createRequestSender()) {}\n\n    create(body: CustomerCreateRequestBody): Promise<CreatedCustomer> {\n        return this.requestSender\n            .put<CreatedCustomerResponse>('/internalapi/v1/checkout/customer', { body })\n            .then((response) => response.body.data.customer);\n    }\n}\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { FormField, TextInput } from '../ui/form';\n\nexport interface PasswordField {\n    minLength: number;\n}\n\nconst SignUpPasswordField: FunctionComponent<PasswordField> = ({ minLength }) => {\n    const renderPasswordInput = useCallback(\n        ({ field }: FieldProps<string>) => <TextInput {...field} id={field.name} type=\"password\" />,\n        [],\n    );\n\n    const renderPasswordConfirmationInput = useCallback(\n        ({ field }: FieldProps<string>) => <TextInput {...field} id={field.name} type=\"password\" />,\n        [],\n    );\n\n    const passwordLabelContent = useMemo(\n        () => (\n            <>\n                <TranslatedString id=\"customer.password_label\" />{' '}\n                <small>\n                    {`${minLength}-`}\n                    <TranslatedString id=\"customer.password_minimum_character_label\" />\n                </small>\n            </>\n        ),\n        [minLength],\n    );\n\n    const passwordConfirmationLabelContent = useMemo(\n        () => <TranslatedString id=\"customer.password_confirmation_label\" />,\n        [],\n    );\n\n    return (\n        <>\n            <FormField\n                input={renderPasswordInput}\n                labelContent={passwordLabelContent}\n                name=\"password\"\n            />\n\n            <FormField\n                input={renderPasswordConfirmationInput}\n                labelContent={passwordConfirmationLabelContent}\n                name=\"confirmPassword\"\n            />\n        </>\n    );\n};\n\nexport default memo(SignUpPasswordField);\n","import { FormikProps, withFormik } from 'formik';\nimport React, { FunctionComponent, memo } from 'react';\nimport { object, ref, string } from 'yup';\n\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\n\nimport { PasswordRequirements } from '../customer';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Fieldset, Form, Legend } from '../ui/form';\n\nimport SignUpPasswordField from './SignUpPasswordField';\n\nexport interface SignUpFormProps {\n    isSigningUp?: boolean;\n    customerCanBeCreated: boolean;\n    passwordRequirements: PasswordRequirements;\n    onSignUp(data: SignUpFormValues): void;\n}\n\nexport interface SignUpFormValues {\n    password: string;\n    confirmPassword: string;\n}\n\nconst GuestSignUpForm: FunctionComponent<\n    SignUpFormProps & WithLanguageProps & FormikProps<SignUpFormValues>\n> = ({ isSigningUp, customerCanBeCreated, passwordRequirements: { minLength } }) => (\n    <Fieldset\n        legend={\n            <Legend>\n                <TranslatedString\n                    id={\n                        customerCanBeCreated\n                            ? 'customer.create_account_text'\n                            : 'customer.set_password_text'\n                    }\n                />\n            </Legend>\n        }\n    >\n        {!customerCanBeCreated && (\n            <p>\n                <TranslatedString id=\"customer.account_created_text\" />\n            </p>\n        )}\n\n        <Form className=\"guest-signup form\">\n            <SignUpPasswordField minLength={minLength} />\n\n            <div className=\"form-actions\">\n                <Button\n                    id=\"createAccountButton\"\n                    isLoading={isSigningUp}\n                    type=\"submit\"\n                    variant={ButtonVariant.Primary}\n                >\n                    <TranslatedString\n                        id={\n                            customerCanBeCreated\n                                ? 'customer.create_account_action'\n                                : 'customer.set_password_action'\n                        }\n                    />\n                </Button>\n            </div>\n        </Form>\n    </Fieldset>\n);\n\nexport default withLanguage(\n    withFormik<SignUpFormProps & WithLanguageProps, SignUpFormValues>({\n        mapPropsToValues: () => ({\n            password: '',\n            confirmPassword: '',\n        }),\n        handleSubmit: (values, { props: { onSignUp } }) => {\n            onSignUp(values);\n        },\n        validationSchema: ({\n            language,\n            passwordRequirements: { description, numeric, alpha, minLength },\n        }: SignUpFormProps & WithLanguageProps) =>\n            object({\n                password: string()\n                    .required(description || language.translate('customer.password_required_error'))\n                    .matches(\n                        numeric,\n                        description ||\n                            language.translate('customer.password_number_required_error'),\n                    )\n                    .matches(\n                        alpha,\n                        description ||\n                            language.translate('customer.password_letter_required_error'),\n                    )\n                    .min(\n                        minLength,\n                        description ||\n                            language.translate('customer.password_under_minimum_length_error'),\n                    )\n                    .max(100, language.translate('customer.password_over_maximum_length_error')),\n                confirmPassword: string()\n                    .required(language.translate('customer.password_confirmation_required_error'))\n                    .oneOf(\n                        [ref('password')],\n                        language.translate('customer.password_confirmation_error'),\n                    ),\n            }),\n    })(memo(GuestSignUpForm)),\n);\n","import React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Alert, AlertType } from '../ui/alert';\n\nconst PasswordSavedSuccessAlert: FunctionComponent = () => (\n    <Alert type={AlertType.Success}>\n        <strong>\n            <TranslatedString id=\"customer.set_password_success\" />\n        </strong>\n    </Alert>\n);\n\nexport default PasswordSavedSuccessAlert;\n","import React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Alert, AlertType } from '../ui/alert';\n\nconst SignedUpSuccessAlert: FunctionComponent = () => (\n    <Alert type={AlertType.Success}>\n        <strong>\n            <TranslatedString id=\"customer.create_account_success\" />\n        </strong>\n    </Alert>\n);\n\nexport default SignedUpSuccessAlert;\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class AccountCreationRequirementsError extends CustomError {\n    constructor(data: Error, requirements: string) {\n        super({\n            name: 'ACCOUNT_CREATION_REQUIREMENTS_ERROR',\n            message: requirements,\n            title: getLanguageService().translate(\n                'customer.create_account_requirements_error_heading',\n            ),\n            data,\n        });\n\n        setPrototypeOf(this, AccountCreationRequirementsError.prototype);\n    }\n}\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class AccountCreationFailedError extends CustomError {\n    constructor(data: Error) {\n        super({\n            name: 'ACCOUNT_CREATION_FAILED',\n            message: getLanguageService().translate('customer.create_account_error'),\n            data,\n        });\n\n        setPrototypeOf(this, AccountCreationFailedError.prototype);\n    }\n}\n","import { GatewayOrderPayment, Order, OrderPayment } from '@bigcommerce/checkout-sdk';\n\nimport { isGiftCertificatePayment } from '../giftCertificate';\nimport { isStoreCreditPayment } from '../payment/storeCredit';\n\nexport interface PaymentInstructionsProps {\n    order: Order;\n}\n\nfunction isDefaultOrderPayment(payment: OrderPayment): payment is GatewayOrderPayment {\n    return !isGiftCertificatePayment(payment) && !isStoreCreditPayment(payment);\n}\n\nfunction getPaymentInstructions(order: Order): string {\n    const gatewayPayment = (order.payments || []).find(isDefaultOrderPayment);\n    const instructions = gatewayPayment && gatewayPayment.detail.instructions;\n\n    return instructions || '';\n}\n\nexport default getPaymentInstructions;\n","import { GiftCertificate, OrderPayments } from '@bigcommerce/checkout-sdk';\n\nimport isGiftCertificatePayment from './isGiftCertificatePayment';\n\nexport default function mapFromPayments(payments: OrderPayments): GiftCertificate[] {\n    return payments.filter(isGiftCertificatePayment).map(({ amount, detail }) => ({\n        code: detail.code,\n        remaining: detail.remaining,\n        used: amount,\n        balance: amount + detail.remaining,\n        purchaseDate: '',\n    }));\n}\n","import { OrderPayment } from '@bigcommerce/checkout-sdk';\n\nimport { isStoreCreditPayment } from '../payment/storeCredit';\n\nexport default function getStoreCreditAmount(payments?: OrderPayment[]): number {\n    return (payments || [])\n        .filter(isStoreCreditPayment)\n        .reduce((total, payment) => total + payment.amount, 0);\n}\n","import { Order } from '@bigcommerce/checkout-sdk';\n\nimport { mapFromPayments } from '../giftCertificate';\n\nimport getOrderShippingCostAfterAutomaticDiscount from './getOrderShippingCostAfterAutomaticDiscount';\nimport getStoreCreditAmount from './getStoreCreditAmount';\nimport { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\n\nexport default function mapToOrderSummarySubtotalsProps({\n    baseAmount,\n    discountAmount,\n    isTaxIncluded,\n    shippingCostBeforeDiscount,\n    payments,\n    handlingCostTotal,\n    giftWrappingCostTotal,\n    coupons,\n    taxes,\n    fees,\n    consignments,\n}: Order,\nisShippingDiscountDisplayEnabled: boolean,\n): OrderSummarySubtotalsProps {\n\n    const shippingAmount = isShippingDiscountDisplayEnabled && consignments.shipping.length > 0\n    ? getOrderShippingCostAfterAutomaticDiscount(shippingCostBeforeDiscount, consignments.shipping)\n    : shippingCostBeforeDiscount;\n\n    return {\n        subtotalAmount: baseAmount,\n        shippingAmount,\n        shippingAmountBeforeDiscount: isShippingDiscountDisplayEnabled ? shippingCostBeforeDiscount : undefined,\n        giftWrappingAmount: giftWrappingCostTotal,\n        discountAmount,\n        storeCreditAmount: getStoreCreditAmount(payments),\n        handlingAmount: handlingCostTotal,\n        coupons,\n        giftCertificates: payments && mapFromPayments(payments),\n        taxes,\n        isTaxIncluded,\n        fees,\n    };\n}\n","import { OrderShippingConsignment } from \"@bigcommerce/checkout-sdk\";\n\nexport default function getOrderShippingCostAfterAutomaticDiscount(shippingCostBeforeDiscount: number, consignments: OrderShippingConsignment[]) {\n    return consignments.reduce((total, consignment) => {\n        return total - getTotalAutomaticDiscount(consignment);\n    }, shippingCostBeforeDiscount);\n}\n\nfunction getTotalAutomaticDiscount(consignment: OrderShippingConsignment) {\n    return consignment.discounts\n    .filter(discount => !discount.code)\n    .reduce((total, discount) => total + discount.amount, 0);\n}\n","import React, { FunctionComponent } from 'react';\n\nconst OrderConfirmationSection: FunctionComponent = ({ children }) => (\n    <section className=\"orderConfirmation-section\">{children}</section>\n);\n\nexport default OrderConfirmationSection;\n","import React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nexport interface MandateTextComponentProps {\n    mandateText: {\n        [key: string]: string;\n    },\n    methodId: string;\n    providerId: string;\n}\n\nexport const MandateTextComponent: FunctionComponent<MandateTextComponentProps> = ({\n    mandateText,\n    providerId,\n    methodId,\n}) => {\n    if (!Object.keys(mandateText).length) {\n        return null;\n    }\n\n    return (\n        <ul data-test='order-confirmation-mandate-text-list'>\n            {Object.entries(mandateText).map((field, index) => {\n                return (\n                    <li data-test={`order-confirmation-mandate-text-list-item-${index}`} key={index}>\n                        <TranslatedString\n                            id={`order_confirmation.mandate.${providerId}.${methodId}.${field[0]}`}\n                        />:\n                        <b>\n                            {` ${field[1]}`}\n                        </b>\n                    </li>\n                )\n            })}\n        </ul>\n    )\n}\n","import { GatewayOrderPayment } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { MandateTextComponent } from './MandateTextComponent';\n\nexport interface PaymentsWithMandatesProps {\n    paymentsWithMandates: GatewayOrderPayment[];\n}\n\nexport const PaymentsWithMandates: FunctionComponent<PaymentsWithMandatesProps> = ({\n    paymentsWithMandates,\n}) => <>\n    {paymentsWithMandates.map((payment) => {\n        if (payment?.mandate?.url) {\n            return (\n                <a\n                    data-test=\"order-confirmation-mandate-link-text\"\n                    href={payment.mandate.url}\n                    key={`${payment.providerId}-${payment.methodId}-mandate`}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                >\n                    <TranslatedString\n                        id={`order_confirmation.mandate.${payment.providerId}.${payment.methodId}`}\n                    />\n                </a>\n            );\n        } else if (payment?.mandate?.id) {\n            return (\n                <p\n                    data-test=\"order-confirmation-mandate-id-text\"\n                    key={`${payment.providerId}-${payment.methodId}-mandate`}\n                >\n                    <TranslatedString\n                        data={{ mandate: payment.mandate.id }}\n                        id={`order_confirmation.mandate.${payment.providerId}.${payment.methodId}`}\n                    />\n                </p>\n            );\n        } else if (payment?.mandate?.mandateText && payment.methodId) {\n            return <MandateTextComponent\n                key='mandateTextList'\n                mandateText={payment.mandate.mandateText}\n                methodId={payment.methodId}\n                providerId={payment.providerId}\n            />\n        }\n    })}\n</>\n","import { GatewayOrderPayment, GiftCertificateOrderPayment, Order, StoreConfig } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\n\nimport OrderConfirmationSection from './OrderConfirmationSection';\nimport { PaymentsWithMandates } from './PaymentsWithMandates';\n\nexport interface OrderStatusProps {\n    config: StoreConfig;\n    supportEmail: string;\n    supportPhoneNumber?: string;\n    order: Order;\n}\n\ntype PaymentWithMandate = GatewayOrderPayment &\n    Required<Pick<GatewayOrderPayment, 'mandate' | 'methodId'>>;\n\nconst isPaymentWithMandate = (\n    payment: GatewayOrderPayment | GiftCertificateOrderPayment,\n): payment is PaymentWithMandate => !!payment.methodId && 'mandate' in payment && !!payment.mandate;\n\nconst OrderStatus: FunctionComponent<OrderStatusProps> = ({\n    config,\n    order,\n    supportEmail,\n    supportPhoneNumber,\n}) => {\n    const paymentsWithMandates = order.payments?.filter(isPaymentWithMandate) || [];\n\n    return (\n        <OrderConfirmationSection>\n            {order.orderId && (\n                <p data-test=\"order-confirmation-order-number-text\">\n                    <TranslatedHtml\n                        data={{ orderNumber: order.orderId }}\n                        id=\"order_confirmation.order_number_text\"\n                    />\n                </p>\n            )}\n\n            <p data-test=\"order-confirmation-order-status-text\">\n                <OrderStatusMessage\n                    config={config}\n                    orderNumber={order.orderId}\n                    orderStatus={order.status}\n                    supportEmail={supportEmail}\n                    supportPhoneNumber={supportPhoneNumber}\n                />\n            </p>\n            <PaymentsWithMandates\n                paymentsWithMandates={paymentsWithMandates}\n            />\n            {order.hasDigitalItems && (\n                <p data-test=\"order-confirmation-digital-items-text\">\n                    <TranslatedHtml\n                        id={\n                            order.isDownloadable\n                                ? 'order_confirmation.order_with_downloadable_digital_items_text'\n                                : 'order_confirmation.order_without_downloadable_digital_items_text'\n                        }\n                    />\n                </p>\n            )}\n        </OrderConfirmationSection>\n    );\n};\n\ninterface OrderStatusMessageProps {\n    config: StoreConfig;\n    orderNumber: number;\n    orderStatus: string;\n    supportEmail?: string;\n    supportPhoneNumber?: string;\n}\n\nconst OrderStatusMessage: FunctionComponent<OrderStatusMessageProps> = ({\n    config,\n    orderNumber,\n    orderStatus,\n    supportEmail,\n    supportPhoneNumber,\n}) => {\n    switch (orderStatus) {\n        case 'MANUAL_VERIFICATION_REQUIRED':\n        case 'AWAITING_PAYMENT':\n            return <TranslatedHtml id=\"order_confirmation.order_pending_review_text\" />;\n\n        case 'PENDING':\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail }}\n                    id=\"order_confirmation.order_pending_status_text\"\n                />\n            );\n\n        case 'INCOMPLETE':\n            if (config.checkoutSettings.features['CHECKOUT-6891.update_incomplete_order_wording_on_order_confirmation_page']) {\n                return (\n                    <TranslatedHtml\n                        data={{ orderNumber, supportEmail }}\n                        id=\"order_confirmation.order_pending_status_text\"\n                    />\n                );\n            }\n\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail }}\n                    id=\"order_confirmation.order_incomplete_status_text\"\n                />\n            );\n\n        default:\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail, supportPhoneNumber }}\n                    id={\n                        supportPhoneNumber\n                            ? 'order_confirmation.order_with_support_number_text'\n                            : 'order_confirmation.order_without_support_number_text'\n                    }\n                />\n            );\n    }\n};\n\nexport default memo(OrderStatus);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconPrint: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconPrint);\n","import { throttle } from 'lodash';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { IconPrint } from '../ui/icon';\n\nexport interface PrintLinkProps {\n    className?: string;\n}\n\nconst PRINT_MODAL_THROTTLE = 500;\n\nconst PrintLink: FunctionComponent<PrintLinkProps> = ({ className }) => {\n    const handleClick = useCallback(\n        throttle(() => {\n            window.print();\n        }, PRINT_MODAL_THROTTLE),\n        [],\n    );\n\n    if (typeof window.print !== 'function') {\n        return null;\n    }\n\n    return (\n        <a\n            className={className || 'cart-header-link'}\n            href=\"#\"\n            id=\"cart-print-link\"\n            onClick={preventDefault(handleClick)}\n        >\n            <IconPrint /> <TranslatedString id=\"cart.print_action\" />\n        </a>\n    );\n};\n\nexport default memo(PrintLink);\n","import React, { FunctionComponent } from 'react';\n\nexport interface HeaderProps {\n    testId?: string;\n}\n\nconst PrimaryHeader: FunctionComponent<HeaderProps> = ({ children, testId }) => (\n    <h1 className=\"optimizedCheckout-headingPrimary\" data-test={testId}>\n        {children}\n    </h1>\n);\n\nexport default PrimaryHeader;\n","import React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { PrimaryHeader } from '../ui/header';\n\nexport interface HeaderProps {\n    name?: string;\n}\n\nconst ThankYouHeader: FunctionComponent<HeaderProps> = ({ name }) => (\n    <PrimaryHeader testId=\"order-confirmation-heading\">\n        {name && (\n            <TranslatedString data={{ name }} id=\"order_confirmation.thank_you_customer_heading\" />\n        )}\n\n        {!name && <TranslatedString id=\"order_confirmation.thank_you_heading\" />}\n    </PrimaryHeader>\n);\n\nexport default memo(ThankYouHeader);\n","import {\n    CheckoutSelectors,\n    EmbeddedCheckoutMessenger,\n    EmbeddedCheckoutMessengerOptions,\n    Order,\n    ShopperConfig,\n    StoreConfig,\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport DOMPurify from 'dompurify';\nimport React, { Component, lazy, ReactNode } from 'react';\n\nimport { AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\nimport { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { LazyContainer, LoadingSpinner } from '@bigcommerce/checkout/ui';\n\nimport { withAnalytics } from '../analytics';\nimport { withCheckout } from '../checkout';\nimport { ErrorModal } from '../common/error';\nimport { isExperimentEnabled, retry } from '../common/utility';\nimport { getPasswordRequirementsFromConfig } from '../customer';\nimport { EmbeddedCheckoutStylesheet, isEmbedded } from '../embeddedCheckout';\nimport {\n    CreatedCustomer,\n    GuestSignUpForm,\n    PasswordSavedSuccessAlert,\n    SignedUpSuccessAlert,\n    SignUpFormValues,\n} from '../guestSignup';\nimport {\n    AccountCreationFailedError,\n    AccountCreationRequirementsError,\n} from '../guestSignup/errors';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { MobileView } from '../ui/responsive';\n\nimport getPaymentInstructions from './getPaymentInstructions';\nimport mapToOrderSummarySubtotalsProps from './mapToOrderSummarySubtotalsProps';\nimport OrderConfirmationSection from './OrderConfirmationSection';\nimport OrderStatus from './OrderStatus';\nimport PrintLink from './PrintLink';\nimport ThankYouHeader from './ThankYouHeader';\n\nconst OrderSummary = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"order-summary\" */\n                './OrderSummary'\n            ),\n    ),\n);\n\nconst OrderSummaryDrawer = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"order-summary-drawer\" */\n                './OrderSummaryDrawer'\n            ),\n    ),\n);\n\nexport interface OrderConfirmationState {\n    error?: Error;\n    hasSignedUp?: boolean;\n    isSigningUp?: boolean;\n}\n\nexport interface OrderConfirmationProps {\n    containerId: string;\n    embeddedStylesheet: EmbeddedCheckoutStylesheet;\n    errorLogger: ErrorLogger;\n    orderId: number;\n    createAccount(values: SignUpFormValues): Promise<CreatedCustomer>;\n    createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\n}\n\ninterface WithCheckoutOrderConfirmationProps {\n    order?: Order;\n    config?: StoreConfig;\n    loadOrder(orderId: number): Promise<CheckoutSelectors>;\n    isLoadingOrder(): boolean;\n}\n\nclass OrderConfirmation extends Component<\n    OrderConfirmationProps & WithCheckoutOrderConfirmationProps & AnalyticsContextProps,\n    OrderConfirmationState\n> {\n    state: OrderConfirmationState = {};\n\n    private embeddedMessenger?: EmbeddedCheckoutMessenger;\n\n    componentDidMount(): void {\n        const {\n            containerId,\n            createEmbeddedMessenger,\n            embeddedStylesheet,\n            loadOrder,\n            orderId,\n            analyticsTracker\n        } = this.props;\n\n        loadOrder(orderId)\n            .then(({ data }) => {\n                const { links: { siteLink = '' } = {} } = data.getConfig() || {};\n                const messenger = createEmbeddedMessenger({ parentOrigin: siteLink });\n\n                this.embeddedMessenger = messenger;\n\n                messenger.receiveStyles((styles) => embeddedStylesheet.append(styles));\n                messenger.postFrameLoaded({ contentId: containerId });\n\n                analyticsTracker.orderPurchased();\n            })\n            .catch(this.handleUnhandledError);\n    }\n\n    render(): ReactNode {\n        const { order, config, isLoadingOrder } = this.props;\n\n        if (!order || !config || isLoadingOrder()) {\n            return <LoadingSpinner isLoading={true} />;\n        }\n\n        const paymentInstructions = getPaymentInstructions(order);\n        const {\n            storeProfile: { orderEmail, storePhoneNumber },\n            shopperConfig,\n            links: { siteLink },\n        } = config;\n\n        return (\n            <div\n                className={classNames('layout optimizedCheckout-contentPrimary', {\n                    'is-embedded': isEmbedded(),\n                })}\n            >\n                <div className=\"layout-main\">\n                    <div className=\"orderConfirmation\">\n                        <ThankYouHeader name={order.billingAddress.firstName} />\n\n                        <OrderStatus\n                            config={config}\n                            order={order}\n                            supportEmail={orderEmail}\n                            supportPhoneNumber={storePhoneNumber}\n                        />\n\n                        {paymentInstructions && (\n                            <OrderConfirmationSection>\n                                <div\n                                    dangerouslySetInnerHTML={{\n                                        __html: DOMPurify.sanitize(paymentInstructions),\n                                    }}\n                                    data-test=\"payment-instructions\"\n                                />\n                            </OrderConfirmationSection>\n                        )}\n\n                        {this.renderGuestSignUp({\n                            shouldShowPasswordForm: order.customerCanBeCreated,\n                            customerCanBeCreated: !order.customerId,\n                            shopperConfig,\n                        })}\n\n                        <div className=\"continueButtonContainer\">\n                            <form action={siteLink} method=\"get\" target=\"_top\">\n                                <Button type=\"submit\" variant={ButtonVariant.Secondary}>\n                                    <TranslatedString id=\"order_confirmation.continue_shopping\" />\n                                </Button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n\n                {this.renderOrderSummary()}\n                {this.renderErrorModal()}\n            </div>\n        );\n    }\n\n    private renderGuestSignUp({\n        customerCanBeCreated,\n        shouldShowPasswordForm,\n        shopperConfig,\n    }: {\n        customerCanBeCreated: boolean;\n        shouldShowPasswordForm: boolean;\n        shopperConfig: ShopperConfig;\n    }): ReactNode {\n        const { isSigningUp, hasSignedUp } = this.state;\n\n        const { order } = this.props;\n\n        return (\n            <>\n                {shouldShowPasswordForm && !hasSignedUp && (\n                    <GuestSignUpForm\n                        customerCanBeCreated={customerCanBeCreated}\n                        isSigningUp={isSigningUp}\n                        onSignUp={this.handleSignUp}\n                        passwordRequirements={getPasswordRequirementsFromConfig(shopperConfig)}\n                    />\n                )}\n\n                {hasSignedUp &&\n                    (order?.customerId ? <PasswordSavedSuccessAlert /> : <SignedUpSuccessAlert />)}\n            </>\n        );\n    }\n\n    private renderOrderSummary(): ReactNode {\n        const { order, config } = this.props;\n\n        if (!order || !config) {\n            return null;\n        }\n\n        const { currency, shopperCurrency, checkoutSettings } = config;\n\n        const isShippingDiscountDisplayEnabled = isExperimentEnabled(\n            checkoutSettings,\n            'PROJECT-6643.enable_shipping_discounts_in_orders',\n        );\n\n        return (\n            <MobileView>\n                {(matched) => {\n                    if (matched) {\n                        return (\n                            <LazyContainer>\n                                <OrderSummaryDrawer\n                                    {...mapToOrderSummarySubtotalsProps(order, isShippingDiscountDisplayEnabled)}\n                                    headerLink={\n                                        <PrintLink className=\"modal-header-link cart-modal-link\" />\n                                    }\n                                    lineItems={order.lineItems}\n                                    shopperCurrency={shopperCurrency}\n                                    storeCurrency={currency}\n                                    total={order.orderAmount}\n                                />\n                            </LazyContainer>\n                        );\n                    }\n\n                    return (\n                        <aside className=\"layout-cart\">\n                            <LazyContainer>\n                                <OrderSummary\n                                    headerLink={<PrintLink />}\n                                    {...mapToOrderSummarySubtotalsProps(order, isShippingDiscountDisplayEnabled)}\n                                    lineItems={order.lineItems}\n                                    shopperCurrency={shopperCurrency}\n                                    storeCurrency={currency}\n                                    total={order.orderAmount}\n                                />\n                            </LazyContainer>\n                        </aside>\n                    );\n                }}\n            </MobileView>\n        );\n    }\n\n    private renderErrorModal(): ReactNode {\n        const { error } = this.state;\n\n        return (\n            <ErrorModal\n                error={error}\n                onClose={this.handleErrorModalClose}\n                shouldShowErrorCode={false}\n            />\n        );\n    }\n\n    private handleErrorModalClose: () => void = () => {\n        this.setState({ error: undefined });\n    };\n\n    private handleSignUp: (values: SignUpFormValues) => void = ({ password, confirmPassword }) => {\n        const { createAccount, config } = this.props;\n\n        const shopperConfig = config && config.shopperConfig;\n        const passwordRequirements =\n            (shopperConfig &&\n                shopperConfig.passwordRequirements &&\n                shopperConfig.passwordRequirements.error) ||\n            '';\n\n        this.setState({\n            isSigningUp: true,\n        });\n\n        createAccount({\n            password,\n            confirmPassword,\n        })\n            .then(() => {\n                this.setState({\n                    hasSignedUp: true,\n                    isSigningUp: false,\n                });\n            })\n            .catch((error) => {\n                this.setState({\n                    error:\n                        error.status < 500\n                            ? new AccountCreationRequirementsError(error, passwordRequirements)\n                            : new AccountCreationFailedError(error),\n                    hasSignedUp: false,\n                    isSigningUp: false,\n                });\n            });\n    };\n\n    private handleUnhandledError: (error: Error) => void = (error) => {\n        const { errorLogger } = this.props;\n\n        this.setState({ error });\n        errorLogger.log(error);\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postError(error);\n        }\n    };\n}\n\nexport function mapToOrderConfirmationProps(\n    context: CheckoutContextProps,\n): WithCheckoutOrderConfirmationProps | null {\n    const {\n        checkoutState: {\n            data: { getOrder, getConfig },\n            statuses: { isLoadingOrder },\n        },\n        checkoutService,\n    } = context;\n\n    const config = getConfig();\n    const order = getOrder();\n\n    return {\n        config,\n        isLoadingOrder,\n        loadOrder: checkoutService.loadOrder,\n        order,\n    };\n}\n\nexport default withAnalytics(withCheckout(mapToOrderConfirmationProps)(OrderConfirmation));\n","import { createCheckoutService, createEmbeddedCheckoutMessenger } from '@bigcommerce/checkout-sdk';\nimport { BrowserOptions } from '@sentry/browser';\nimport React, { Component, ReactNode } from 'react';\nimport ReactModal from 'react-modal';\n\nimport { AnalyticsProvider } from '@bigcommerce/checkout/analytics';\nimport { ExtensionProvider } from '@bigcommerce/checkout/checkout-extension';\nimport { ErrorBoundary, ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { getLanguageService, LocaleProvider } from '@bigcommerce/checkout/locale';\nimport { CheckoutProvider } from '@bigcommerce/checkout/payment-integration-api';\n\nimport '../../scss/App.scss';\n\nimport { createErrorLogger } from '../common/error';\nimport { createEmbeddedCheckoutStylesheet } from '../embeddedCheckout';\nimport { AccountService, CreatedCustomer, SignUpFormValues } from '../guestSignup';\n\nimport OrderConfirmation from './OrderConfirmation';\n\nexport interface OrderConfirmationAppProps {\n    containerId: string;\n    orderId: number;\n    publicPath?: string;\n    sentryConfig?: BrowserOptions;\n    sentrySampleRate?: number;\n}\n\nclass OrderConfirmationApp extends Component<OrderConfirmationAppProps> {\n    private accountService = new AccountService();\n    private checkoutService = createCheckoutService({\n        locale: getLanguageService().getLocale(),\n        shouldWarnMutation: process.env.NODE_ENV === 'development',\n    });\n    private embeddedStylesheet = createEmbeddedCheckoutStylesheet();\n    private errorLogger: ErrorLogger;\n\n    constructor(props: Readonly<OrderConfirmationAppProps>) {\n        super(props);\n\n        this.errorLogger = createErrorLogger(\n            { sentry: props.sentryConfig },\n            {\n                errorTypes: ['UnrecoverableError'],\n                publicPath: props.publicPath,\n                sampleRate: props.sentrySampleRate ? props.sentrySampleRate : 0.1,\n            },\n        );\n    }\n\n    componentDidMount(): void {\n        const { containerId } = this.props;\n\n        ReactModal.setAppElement(`#${containerId}`);\n    }\n\n    render(): ReactNode {\n        return (\n            <ErrorBoundary logger={this.errorLogger}>\n                <LocaleProvider checkoutService={this.checkoutService}>\n                    <CheckoutProvider checkoutService={this.checkoutService}>\n                        <AnalyticsProvider checkoutService={this.checkoutService}>\n                            <ExtensionProvider checkoutService={this.checkoutService} errorLogger={createErrorLogger()}>\n                                <OrderConfirmation\n                                    {...this.props}\n                                    createAccount={this.createAccount}\n                                    createEmbeddedMessenger={createEmbeddedCheckoutMessenger}\n                                    embeddedStylesheet={this.embeddedStylesheet}\n                                    errorLogger={this.errorLogger}\n                                />\n                            </ExtensionProvider>\n                        </AnalyticsProvider>\n                    </CheckoutProvider>\n                </LocaleProvider>\n            </ErrorBoundary>\n        );\n    }\n\n    private createAccount: (values: SignUpFormValues) => Promise<CreatedCustomer> = ({\n        password,\n        confirmPassword,\n    }) => {\n        const { orderId } = this.props;\n\n        return this.accountService.create({\n            orderId,\n            newsletter: false,\n            password,\n            confirmPassword,\n        });\n    };\n}\n\nexport default OrderConfirmationApp;\n","import { Cart } from '@bigcommerce/checkout-sdk';\n\n/**\n * Minimum charge amounts due to the Stripe documentation\n * https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts\n */\nenum stripeLinkMinAmount {\n    'USD' = 0.5,\n    'AED' = 2,\n    'AUD' = 0.5,\n    'BGN' = 1,\n    'BRL' = 0.5,\n    'CAD' = 0.5,\n    'CHF' = 0.5,\n    'CZK' = 15,\n    'DKK' = 2.5,\n    'EUR' = 0.5,\n    'GBP' = 0.3,\n    'HKD' = 4,\n    'HUF' = 175,\n    'INR' = 0.5,\n    'JPY' = 50,\n    'MXN' = 10,\n    'MYR' = 2,\n    'NOK' = 3,\n    'NZD' = 0.5,\n    'PLN' = 2,\n    'RON' = 2,\n    'SEK' = 3,\n    'SGD' = 0.5,\n    'THB' = 10,\n}\n\nconst isStripeLinkMinAmount = (code: string): code is keyof typeof stripeLinkMinAmount => {\n    return code in stripeLinkMinAmount;\n};\n\nconst shouldUseStripeLinkByMinimumAmount = (cart: Cart) => {\n    const {\n        currency: { code },\n        cartAmount,\n    } = cart;\n\n    if (isStripeLinkMinAmount(code) && cartAmount >= stripeLinkMinAmount[code]) {\n        return true;\n    }\n\n    return false;\n};\n\nexport default shouldUseStripeLinkByMinimumAmount;\n","import { Address, Country } from '@bigcommerce/checkout-sdk';\nimport { find, isEmpty } from 'lodash';\n\ninterface LocalizedGeography {\n    localizedCountry: string;\n    localizedProvince: string;\n}\n\nconst localizeAddress = <T1 extends Address>(\n    address: T1,\n    countries?: Country[],\n): T1 & LocalizedGeography => {\n    const country = find(countries, { code: address.countryCode });\n    const states = !country || isEmpty(country.subdivisions) ? [] : country.subdivisions;\n    const state = find(states, { code: address.stateOrProvinceCode });\n\n    return {\n        ...address,\n        localizedCountry: country ? country.name : address.country,\n        localizedProvince: state ? state.name : address.stateOrProvince,\n    };\n};\n\nexport default localizeAddress;\n","import { CustomerPasswordRequirements, ShopperConfig } from '@bigcommerce/checkout-sdk';\n\nexport interface PasswordRequirements {\n    minLength: number;\n    alpha: RegExp;\n    numeric: RegExp;\n    description?: string;\n}\n\nexport function getPasswordRequirementsFromConfig(config: ShopperConfig): PasswordRequirements {\n    const {\n        passwordRequirements: { minlength, error: description, alpha, numeric },\n    } = config;\n\n    return getPasswordRequirements({\n        minlength,\n        description,\n        alpha,\n        numeric,\n    });\n}\n\nexport default function getPasswordRequirements({\n    minlength,\n    description,\n    alpha,\n    numeric,\n}: CustomerPasswordRequirements): PasswordRequirements {\n    const allSlashes = new RegExp('/', 'g');\n\n    return {\n        minLength: minlength,\n        description,\n        alpha: new RegExp(alpha.replace(allSlashes, '')),\n        numeric: new RegExp(numeric.replace(allSlashes, '')),\n    };\n}\n","import React, { ComponentType } from 'react';\n\nimport ResolvableComponent from './ResolvableComponent';\n\nexport default function toResolvableComponent<TProps extends Record<string, any>, TIdentifier>(\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Component: ComponentType<TProps>,\n    resolveIds: TIdentifier[],\n): ResolvableComponent<TProps, TIdentifier> {\n    return Object.assign((props: TProps) => <Component {...props} />, { resolveIds });\n}\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconSuccess: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconSuccess);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconInfo: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconInfo);\n","import classNames from 'classnames';\nimport React, { FunctionComponent, ReactNode } from 'react';\n\nimport { IconError, IconInfo, IconSuccess } from '../icon';\n\nexport interface AlertProps {\n    additionalClassName?: string;\n    icon?: ReactNode;\n    testId?: string;\n    type?: AlertType;\n}\n\nexport enum AlertType {\n    Error = 'error',\n    Info = 'info',\n    Success = 'success',\n    Warning = 'warning',\n}\n\nfunction renderDefaultIcon(type?: AlertType): ReactNode {\n    switch (type) {\n        case AlertType.Error:\n        case AlertType.Warning:\n            return <IconError />;\n\n        case AlertType.Success:\n            return <IconSuccess />;\n\n        case AlertType.Info:\n        default:\n            return <IconInfo />;\n    }\n}\n\nconst Alert: FunctionComponent<AlertProps> = ({\n    additionalClassName,\n    children,\n    icon,\n    testId,\n    type,\n}) => (\n    <div\n        className={classNames(\n            'alertBox',\n            additionalClassName,\n            { 'alertBox--info': type === AlertType.Info || !type },\n            { 'alertBox--error': type === AlertType.Error },\n            { 'alertBox--success': type === AlertType.Success },\n            { 'alertBox--warning': type === AlertType.Warning },\n        )}\n        data-test={testId}\n    >\n        <div className=\"alertBox-column alertBox-icon\">{icon || renderDefaultIcon(type)}</div>\n\n        <div aria-live=\"assertive\" className=\"alertBox-column alertBox-message\" role=\"alert\">\n            {children}\n        </div>\n    </div>\n);\n\nexport default Alert;\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nexport default PaymentMethodId;\n","export default function parseAnchor(text: string): string[] {\n    const div = document.createElement('div');\n\n    div.innerHTML = text;\n\n    const anchor = div.querySelector('a');\n\n    if (!anchor) {\n        return [];\n    }\n\n    const anchorSiblings = div.innerHTML.split(anchor.outerHTML);\n\n    return [anchorSiblings[0], anchor.text, anchorSiblings[1]];\n}\n","import { CurrencyService } from '@bigcommerce/checkout-sdk';\n\nimport { createInjectHoc, InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithCurrencyProps {\n    currency: CurrencyService;\n}\n\nconst withCurrency: InjectHoc<WithCurrencyProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'WithCurrency',\n    pickProps: (value, key) => key === 'currency' && !!value,\n});\n\nexport default withCurrency;\n","import { FormField } from '@bigcommerce/checkout-sdk';\nimport { memoize } from '@bigcommerce/memoize';\nimport {\n    array,\n    ArraySchema,\n    date,\n    number,\n    NumberSchema,\n    object,\n    ObjectSchema,\n    Schema,\n    string,\n} from 'yup';\n\nimport { DynamicFormFieldType } from '../ui/form';\n\nexport type TranslateValidationErrorFunction = (\n    validationType: 'max' | 'min' | 'required' | 'invalid',\n    field: {\n        name: string;\n        label: string;\n        min?: number;\n        max?: number;\n    },\n) => string | undefined;\n\nexport interface FormFieldsValidationSchemaOptions {\n    formFields: FormField[];\n    translate?: TranslateValidationErrorFunction;\n}\n\nexport interface CustomFormFieldValues {\n    customFields: CustomFormFields;\n}\n\nexport interface CustomFormFields {\n    [id: string]: string | string[] | number;\n}\n\nexport default memoize(function getCustomFormFieldsValidationSchema({\n    formFields,\n    translate = () => undefined,\n}: FormFieldsValidationSchemaOptions): ObjectSchema<CustomFormFieldValues> {\n    return object({\n        customFields: object(\n            formFields\n                .filter(({ custom }) => !!custom)\n                .reduce((schema, { name, label, required, fieldType, type, min, max }) => {\n                    let maxValue: number | undefined;\n                    let minValue: number | undefined;\n\n                    if (type === 'date') {\n                        schema[name] = date()\n                            // Transform NaN values to undefined to avoid empty string (empty input) to fail date\n                            // validation when it's optional\n                            .nullable(true)\n                            .transform((value, originalValue) =>\n                                originalValue === '' ? null : value,\n                            );\n                    } else if (type === 'integer') {\n                        schema[name] = number()\n                            // Transform NaN values to undefined to avoid empty string (empty input) to fail number\n                            // validation when it's optional\n                            .transform((value) => (isNaN(value) ? undefined : value));\n\n                        maxValue = typeof max === 'number' ? max : undefined;\n                        minValue = typeof min === 'number' ? min : undefined;\n                    } else if (fieldType === DynamicFormFieldType.checkbox) {\n                        schema[name] = array();\n                    } else {\n                        schema[name] = string();\n                    }\n\n                    if (maxValue !== undefined) {\n                        schema[name] = (schema[name] as NumberSchema).max(\n                            maxValue,\n                            translate('max', { label, name, max: maxValue + 1 }),\n                        );\n                    }\n\n                    if (minValue !== undefined) {\n                        schema[name] = (schema[name] as NumberSchema).min(\n                            minValue,\n                            translate('min', { label, name, min: minValue - 1 }),\n                        );\n                    }\n\n                    if (required) {\n                        const requiredErrorMessage = translate('required', { name, label });\n\n                        schema[name] =\n                            fieldType === DynamicFormFieldType.checkbox\n                                ? (schema[name] as ArraySchema<string>).min(1, requiredErrorMessage)\n                                : (schema[name] as ArraySchema<string>).required(\n                                      requiredErrorMessage,\n                                  );\n                    }\n\n                    return schema;\n                }, {} as { [key: string]: Schema<any> }),\n        ).nullable(true),\n    }) as ObjectSchema<CustomFormFieldValues>;\n});\n","import React, { FunctionComponent } from 'react';\n\nimport { withCurrency, WithCurrencyProps } from '@bigcommerce/checkout/locale';\n\nexport interface ShopperCurrencyProps {\n    amount: number;\n}\n\nconst ShopperCurrency: FunctionComponent<ShopperCurrencyProps & WithCurrencyProps> = ({\n    amount,\n    currency,\n}) => <>{currency.toCustomerCurrency(amount)}</>;\n\nexport default withCurrency(ShopperCurrency);\n","import isBraintreeFastlaneMethod from './is-braintree-fastlane-method';\nimport isPayPalCommerceFastlaneMethod from './is-paypal-commerce-fastlane-method';\n\nconst isPaypalFastlaneMethod = (methodId?: string): boolean => {\n    return isBraintreeFastlaneMethod(methodId) || isPayPalCommerceFastlaneMethod(methodId);\n};\n\nexport default isPaypalFastlaneMethod;\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconClose: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconClose);\n","// `document.currentScript` can only be called at the global level as it only\n// holds a reference to the script when it is initially processed.\nconst path = document.currentScript ? (document.currentScript as HTMLScriptElement).src : undefined;\n\nexport default function getCurrentScriptPath(): string | undefined {\n    return path;\n}\n","import getCurrentScriptPath from './getCurrentScriptPath';\n\nexport default function configurePublicPath(publicPath?: string): string {\n    if (!publicPath) {\n        const scriptPath = getCurrentScriptPath();\n\n        if (!scriptPath) {\n            throw new Error(\n                'Unable to configure the public path of the application because it is not specified and it cannot be inferred using the path of the current script.',\n            );\n        }\n\n        __webpack_public_path__ = `${scriptPath.split('/').slice(0, -1).join('/')}/`;\n\n        return __webpack_public_path__;\n    }\n\n    __webpack_public_path__ = publicPath.substr(-1) === '/' ? publicPath : `${publicPath}/`;\n\n    return __webpack_public_path__;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { configurePublicPath } from '../common/bundler';\n\nimport { CheckoutAppProps } from './CheckoutApp';\n\nexport type RenderCheckoutOptions = CheckoutAppProps;\nexport type RenderCheckout = typeof renderCheckout;\n\nexport default function renderCheckout({\n    containerId,\n    publicPath,\n    ...props\n}: RenderCheckoutOptions): void {\n    const configuredPublicPath = configurePublicPath(publicPath);\n\n    // We want to use `require` here because we want to set up the public path\n    // first before importing the app component and its dependencies.\n    const { default: CheckoutApp } = require('./CheckoutApp');\n\n    // We want to use `require` here because we only want to import the package\n    // in development mode.\n    if (process.env.NODE_ENV === 'development') {\n        const whyDidYouRender = require('@welldone-software/why-did-you-render');\n\n        whyDidYouRender(React, {\n            collapseGroups: true,\n        });\n    }\n\n    ReactDOM.render(\n        <CheckoutApp containerId={containerId} publicPath={configuredPublicPath} {...props} />,\n        document.getElementById(containerId),\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { configurePublicPath } from '../common/bundler';\n\nimport { OrderConfirmationAppProps } from './OrderConfirmationApp';\n\nexport type RenderOrderConfirmationOptions = OrderConfirmationAppProps;\nexport type RenderOrderConfirmation = typeof renderOrderConfirmation;\n\nexport default function renderOrderConfirmation({\n    containerId,\n    publicPath,\n    ...props\n}: RenderOrderConfirmationOptions): void {\n    const configuredPublicPath = configurePublicPath(publicPath);\n\n    // We want to use `require` here because we want to set up the public path\n    // first before importing the app component and its dependencies.\n    const { default: OrderConfirmationApp } = require('./OrderConfirmationApp');\n\n    // We want to use `require` here because we only want to import the package\n    // in development mode.\n    if (process.env.NODE_ENV === 'development') {\n        const whyDidYouRender = require('@welldone-software/why-did-you-render');\n\n        whyDidYouRender(React, {\n            collapseGroups: true,\n        });\n    }\n\n    ReactDOM.render(\n        <OrderConfirmationApp\n            containerId={containerId}\n            publicPath={configuredPublicPath}\n            {...props}\n        />,\n        document.getElementById(containerId),\n    );\n}\n","import { createInjectHoc, InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithDateProps {\n    date: {\n        inputFormat: string;\n    };\n}\n\nconst withDate: InjectHoc<WithDateProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'withDate',\n    pickProps: (value, key) => key === 'date' && !!value,\n});\n\nexport default withDate;\n","import React, { FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\n\nconst AddressFormSkeleton: FunctionComponent<LoadingSkeletonProps> = ({\n    children,\n    isLoading,\n    renderWhileLoading,\n}) => {\n    const skeleton = (\n        <div className=\"checkout-form\">\n            <div className=\"form-legend-container\">\n                <div className=\"address-form-heading-skeleton form-legend optimizedCheckout-headingSecondary\" />\n            </div>\n            <div className=\"address-form-skeleton\">\n                <div className=\"name-fields-skeleton\">\n                    <div className=\"skeleton-container\">\n                        <div className=\"input-skeleton\" />\n                    </div>\n                    <div className=\"skeleton-container\">\n                        <div className=\"input-skeleton\" />\n                    </div>\n                </div>\n                <div className=\"skeleton-container\">\n                    <div className=\"input-skeleton\" />\n                </div>\n            </div>\n        </div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, renderWhileLoading, skeleton }} />;\n};\n\nexport default AddressFormSkeleton;\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nconst isPayPalCommerceFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        methodId === PaymentMethodId.PaypalCommerceCreditCards || // TODO: remove after A/B testing\n        methodId === PaymentMethodId.PayPalCommerceAcceleratedCheckout\n    );\n};\n\nexport default isPayPalCommerceFastlaneMethod;\n","import { kebabCase } from 'lodash';\n\nexport default function getAppliedStyles(\n    element: HTMLElement,\n    properties: string[],\n): { [key: string]: string } {\n    const declaration = window.getComputedStyle(element);\n\n    return properties.reduce(\n        (result, propertyName) => ({\n            ...result,\n            [propertyName]: declaration.getPropertyValue(kebabCase(propertyName)),\n        }),\n        {},\n    );\n}\n","import { Address, FormField } from '@bigcommerce/checkout-sdk';\n\nimport getAddressFormFieldsValidationSchema from './getAddressFormFieldsValidationSchema';\nimport mapAddressToFormValues from './mapAddressToFormValues';\n\nexport default function isValidAddress(\n    address: Address,\n    formFields: FormField[],\n): boolean {\n    const addressSchema = getAddressFormFieldsValidationSchema({ formFields });\n\n    return addressSchema.isValidSync(mapAddressToFormValues(formFields, address));\n}\n","import DOMPurify from 'dompurify';\nimport React, { FunctionComponent } from 'react';\n\nimport { useLocale } from './LocaleContext';\n\nexport interface TranslatedHtmlProps {\n    id: string;\n    data?: any;\n}\n\nexport const TranslatedHtml: FunctionComponent<TranslatedHtmlProps> = ({ data, id }) => {\n    const { language } = useLocale();\n\n    return (\n        <span\n            dangerouslySetInnerHTML={{\n                __html: DOMPurify.sanitize(language.translate(id, data), { ADD_ATTR: ['target'] }),\n            }}\n        />\n    );\n};\n\nexport default TranslatedHtml;\n","import React, { FunctionComponent, memo } from 'react';\n\nexport interface LoadingSpinnerProps {\n    isLoading: boolean;\n}\n\nconst LoadingSpinner: FunctionComponent<LoadingSpinnerProps> = ({ isLoading }) => {\n    if (!isLoading) {\n        return null;\n    }\n\n    return (\n        <div\n            aria-busy=\"true\"\n            className=\"loadingSpinner loadingOverlay-container\"\n            role=\"status\"\n            style={{ height: 100 }}\n        >\n            <div className=\"loadingOverlay optimizedCheckout-overlay\" />\n        </div>\n    );\n};\n\nexport default memo(LoadingSpinner);\n","import { FieldProps } from 'formik';\nimport { kebabCase } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode, useCallback } from 'react';\n\nimport BasicFormField from './BasicFormField';\nimport CheckboxInput from './CheckboxInput';\nimport FormFieldError from './FormFieldError';\n\nexport interface CheckboxFormFieldProps {\n    additionalClassName?: string;\n    disabled?: boolean;\n    name: string;\n    id?: string;\n    labelContent: ReactNode;\n    onChange?(isChecked: boolean): void;\n    testId?: string;\n}\n\nconst CheckboxFormField: FunctionComponent<CheckboxFormFieldProps> = ({\n    additionalClassName,\n    disabled = false,\n    labelContent,\n    onChange,\n    name,\n    id,\n    testId,\n}) => {\n    const renderField = useCallback(\n        ({ field }: FieldProps) => (\n            <>\n                <CheckboxInput\n                    {...field}\n                    checked={!!field.value}\n                    disabled={disabled}\n                    id={id || field.name}\n                    label={labelContent}\n                    testId={testId}\n                />\n\n                <FormFieldError\n                    errorId={`${id ?? name}-field-error-message`}\n                    name={name}\n                    testId={`${kebabCase(name)}-field-error-message`}\n                />\n            </>\n        ),\n        [disabled, id, labelContent, name],\n    );\n\n    return (\n        <BasicFormField\n            additionalClassName={additionalClassName}\n            name={name}\n            onChange={onChange}\n            render={renderField}\n        />\n    );\n};\n\nexport default memo(CheckboxFormField);\n","enum AddressType {\n    Billing = 'billing',\n    Shipping = 'shipping',\n}\n\nexport default AddressType;\n","import { LineItem } from '@bigcommerce/checkout-sdk';\nimport { reduce } from 'lodash';\n\nexport default function getLineItemsCount(lineItems: LineItem[]): number {\n    return reduce(lineItems, (total, item) => total + item.quantity, 0);\n}\n","import classNames from 'classnames';\nimport React, { ComponentType, memo } from 'react';\n\nexport enum IconSize {\n    Regular = 'regular',\n    Small = 'small',\n    Medium = 'medium',\n    Large = 'large',\n}\n\nexport interface IconProps {\n    additionalClassName?: string;\n    size?: IconSize;\n    testId?: string;\n}\n\nexport default function withIconContainer<TProps extends Record<string, any>>(\n    OriginalComponent: ComponentType<TProps>,\n): ComponentType<TProps & IconProps> {\n    return memo(({ additionalClassName, size, testId, ...rest }) => (\n        <div\n            className={classNames(\n                'icon',\n                additionalClassName,\n                size === IconSize.Small ? 'icon--small' : null,\n                size === IconSize.Large ? 'icon--large' : null,\n                size === IconSize.Medium ? 'icon--medium' : null,\n            )}\n            data-test={testId}\n        >\n            <OriginalComponent {...(rest as TProps)} />\n        </div>\n    ));\n}\n","import { Address, CheckoutPayment, FormField } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { isPayPalFastlaneAddress, PoweredByPayPalFastlaneLabel, usePayPalFastlaneAddress } from '@bigcommerce/checkout/paypal-fastlane-integration';\n\nimport { AddressType, StaticAddress } from '../address';\nimport { withCheckout } from '../checkout';\nimport { EMPTY_ARRAY } from '../common/utility';\n\nexport interface StaticBillingAddressProps {\n    address: Address;\n}\n\ninterface WithCheckoutStaticBillingAddressProps {\n    fields: FormField[];\n    payments?: CheckoutPayment[];\n}\n\nconst StaticBillingAddress: FunctionComponent<\n    StaticBillingAddressProps & WithCheckoutStaticBillingAddressProps\n> = ({ address, payments = EMPTY_ARRAY }) => {\n    const { paypalFastlaneAddresses } = usePayPalFastlaneAddress();\n    const showPayPalFastlaneLabel = isPayPalFastlaneAddress(address, paypalFastlaneAddresses);\n\n    if (payments.find((payment) => payment.providerId === 'amazonpay')) {\n        return (\n            <p>\n                <TranslatedString id=\"billing.billing_address_amazonpay\" />\n            </p>\n        );\n    }\n\n    return (\n        <>\n            <StaticAddress address={address} type={AddressType.Billing} />\n\n            {showPayPalFastlaneLabel && <PoweredByPayPalFastlaneLabel />}\n        </>\n    );\n};\n\nexport function mapToStaticBillingAddressProps(\n    { checkoutState }: CheckoutContextProps,\n    { address }: StaticBillingAddressProps,\n): WithCheckoutStaticBillingAddressProps | null {\n    const {\n        data: { getBillingAddressFields, getCheckout },\n    } = checkoutState;\n\n    const checkout = getCheckout();\n\n    return {\n        fields: getBillingAddressFields(address.countryCode),\n        payments: checkout && checkout.payments,\n    };\n}\n\nexport default withCheckout(mapToStaticBillingAddressProps)(memo(StaticBillingAddress));\n","import {\n    CheckoutPayment,\n    GiftCertificateOrderPayment,\n    OrderPayment,\n} from '@bigcommerce/checkout-sdk';\n\nexport default function isGiftCertificatePayment(\n    payment: OrderPayment | CheckoutPayment,\n): payment is GiftCertificateOrderPayment {\n    return payment.providerId === 'giftcertificate';\n}\n","import classNames from 'classnames';\nimport React, { forwardRef, Ref } from 'react';\n\nimport Input, { InputProps } from './Input';\n\nexport interface TextInputProps extends InputProps {\n    additionalClassName?: string;\n    appearFocused?: boolean;\n    type?: 'text' | 'password' | 'tel' | 'email' | 'number';\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst TextInput = forwardRef(\n    (\n        {\n            additionalClassName,\n            isFloatingLabelEnabled,\n            appearFocused,\n            type = 'text',\n            ...rest\n        }: TextInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <Input\n            {...rest}\n            className={classNames(\n                'form-input',\n                'optimizedCheckout-form-input',\n                { 'form-input--focus': appearFocused },\n                { 'optimizedCheckout-form-input--focus': appearFocused },\n                additionalClassName,\n            )}\n            isFloatingLabelEnabled={isFloatingLabelEnabled}\n            ref={ref}\n            type={type}\n        />\n    ),\n);\n\nexport default TextInput;\n","import { ComponentType } from 'react';\n\nimport { ResolvableComponent } from '.';\n\nexport default function isResolvableComponent<TProps, TIdentifier>(\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Component: ComponentType<TProps>,\n): Component is ResolvableComponent<TProps, TIdentifier> {\n    return 'resolveIds' in Component;\n}\n","import { ComponentType } from 'react';\n\nimport { isResolvableComponent } from '@bigcommerce/checkout/payment-integration-api';\n\ninterface ResolveResult<TProps> {\n    component: ComponentType<TProps>;\n    matches: number;\n    default: boolean;\n}\n\nexport default function resolveComponent<TResolveId extends Record<string, unknown>, TProps>(\n    query: TResolveId,\n    components: Record<string, ComponentType<TProps>>,\n): ComponentType<TProps> | undefined {\n    const results: Array<ResolveResult<TProps>> = [];\n\n    for (const [_, Component] of Object.entries(components)) {\n        if (!isResolvableComponent<TProps, TResolveId>(Component)) {\n            continue;\n        }\n\n        for (const resolverId of Component.resolveIds) {\n            const result = { component: Component, matches: 0, default: false };\n\n            for (const [key, value] of Object.entries(resolverId)) {\n                if (key in query && query[key] !== value) {\n                    result.matches = 0;\n                    break;\n                }\n\n                if (query[key] === value) {\n                    result.matches++;\n                }\n\n                if (key === 'default' && value === true) {\n                    result.default = true;\n                }\n            }\n\n            results.push(result);\n        }\n    }\n\n    const matched = results\n        .sort((a, b) => b.matches - a.matches)\n        .filter((result) => result.matches > 0)[0];\n\n    return matched?.component ?? results.find((result) => result.default)?.component;\n}\n","import CustomError from './CustomError';\n\n// todo: remove this method in favour of creating proper subclasses for each error type.\n// it's only provided for compatibility with errors defined in `app.errors.ts` while we transition\n// to proper error subclasses.\nexport default function createCustomErrorType({\n    name,\n    defaultError = '',\n    defaultTitle = '',\n    shouldReport = false,\n}: {\n    name: string;\n    defaultError?: string;\n    defaultTitle?: string;\n    shouldReport?: boolean;\n}) {\n    class CustomErrorType extends CustomError {\n        constructor(data = {}, errorMessage = '', errorTitle = '') {\n            super({\n                data,\n                message: errorMessage,\n                title: errorTitle,\n            });\n\n            // todo: this should use new.taget.prototype in the parent class once we can make it work\n            setPrototypeOf(this, CustomErrorType.prototype);\n\n            this.setDefaultValues({\n                name,\n                defaultError,\n                defaultTitle,\n            });\n        }\n    }\n\n    CustomErrorType.shouldReport = shouldReport;\n\n    return CustomErrorType;\n}\n\nexport function setPrototypeOf(object: any, prototype: any) {\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(object, prototype);\n    } else {\n        object.__proto__ = prototype;\n    }\n\n    return object;\n}\n","import classNames from 'classnames';\nimport React, { ButtonHTMLAttributes, FunctionComponent } from 'react';\n\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n    isFullWidth?: boolean;\n    isLoading?: boolean;\n    size?: ButtonSize;\n    testId?: string;\n    variant?: ButtonVariant;\n}\n\nexport enum ButtonVariant {\n    Primary = 'primary',\n    Secondary = 'secondary',\n    Action = 'action',\n}\n\nexport enum ButtonSize {\n    Small = 'small',\n    Tiny = 'tiny',\n    Large = 'large',\n}\n\nfunction getClassName(\n    props: Pick<ButtonProps, 'className' | 'isFullWidth' | 'isLoading' | 'size' | 'variant'>,\n) {\n    const { className, isFullWidth, isLoading, size, variant } = props;\n\n    return classNames(\n        'button',\n        className,\n        { 'button--primary': variant === ButtonVariant.Primary },\n        { 'button--tertiary': variant === ButtonVariant.Secondary },\n        { 'button--action': variant === ButtonVariant.Action },\n        { 'button--small': size === ButtonSize.Small },\n        { 'button--tiny': size === ButtonSize.Tiny },\n        { 'button--large': size === ButtonSize.Large },\n        { 'button--slab': isFullWidth },\n        {\n            'optimizedCheckout-buttonPrimary':\n                variant === ButtonVariant.Primary || variant === ButtonVariant.Action,\n        },\n        { 'optimizedCheckout-buttonSecondary': variant === ButtonVariant.Secondary },\n        { 'is-loading': isLoading },\n    );\n}\n\nconst Button: FunctionComponent<ButtonProps> = ({\n    children,\n    className,\n    disabled,\n    isFullWidth,\n    isLoading,\n    size,\n    testId,\n    type,\n    variant,\n    ...rest\n}) => (\n    <button\n        {...rest}\n        className={getClassName({ className, isFullWidth, isLoading, size, variant })}\n        data-test={testId}\n        disabled={disabled || isLoading}\n        type={type || 'button'}\n    >\n        {children}\n    </button>\n);\n\nexport default Button;\n","import { useContext } from 'react';\n\nimport { ExtensionContext } from './ExtensionContext';\n\nexport const useExtensions = () => {\n    const extensionContext = useContext(ExtensionContext);\n\n    if (!extensionContext) {\n        throw new Error('useExtensions must be used within an <ExtensionProvider>');\n    }\n\n    return extensionContext;\n};\n","import { CheckoutPayment, OrderPayment } from '@bigcommerce/checkout-sdk';\n\nexport default function isStoreCreditPayment(payment: OrderPayment | CheckoutPayment): boolean {\n    return payment.providerId === 'storecredit';\n}\n","import React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './ErrorCode.scss';\n\nexport interface ErrorCodeProps {\n    code: string;\n    label?: ReactNode;\n}\n\nconst ErrorCode: FunctionComponent<ErrorCodeProps> = ({ code, label }) => {\n    return (\n        <div className=\"errorCode\">\n            <span className=\"errorCode-label\">\n                {label ?? <TranslatedString id=\"common.error_code\" />}\n            </span>{' '}\n            <span className=\"errorCode-value\">{code}</span>\n        </div>\n    );\n};\n\nexport default memo(ErrorCode);\n","import { RequestError } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { PureComponent, ReactNode, SyntheticEvent } from 'react';\n\nimport { TranslatedHtml, TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button, ButtonSize } from '../../ui/button';\nimport { IconError, IconSize } from '../../ui/icon';\nimport { Modal, ModalHeader } from '../../ui/modal';\n\nimport computeErrorCode from './computeErrorCode';\nimport ErrorCode from './ErrorCode';\nimport isCustomError from './isCustomError';\nimport isHtmlError from './isHtmlError';\nimport isRequestError from './isRequestError';\n\nimport { CustomError } from './index';\n\nexport interface ErrorModalProps {\n    error?: Error | RequestError | CustomError;\n    message?: ReactNode;\n    title?: ReactNode;\n    shouldShowErrorCode?: boolean;\n    onClose?(event: Event, props: ErrorModalOnCloseProps): void;\n}\n\nexport interface ErrorModalOnCloseProps {\n    error: Error;\n}\n\nexport default class ErrorModal extends PureComponent<ErrorModalProps> {\n    private aria = {\n        labelledby: 'errorModalMessage',\n    };\n\n    render(): ReactNode {\n        const { error } = this.props;\n\n        return (\n            <Modal\n                additionalModalClassName=\"modal--error\"\n                aria={this.aria}\n                footer={this.renderFooter()}\n                header={this.renderHeader()}\n                isOpen={!!error}\n                onRequestClose={this.handleOnRequestClose}\n            >\n                {this.renderBody()}\n            </Modal>\n        );\n    }\n\n    private renderHeader(): ReactNode {\n        const { error, title = error && isCustomError(error) && error.title } = this.props;\n\n        return (\n            <ModalHeader>\n                <IconError\n                    additionalClassName=\"icon--error modal-header-icon\"\n                    size={IconSize.Small}\n                />\n                <span aria-live=\"assertive\" role=\"alert\">\n                    {title || <TranslatedString id=\"common.error_heading\" />}\n                </span>\n            </ModalHeader>\n        );\n    }\n\n    private renderBody(): ReactNode {\n        const { error, message = error && error.message } = this.props;\n\n        return (\n            <>\n                {error && isHtmlError(error) &&\n                    <TranslatedHtml id={error.data.translationKey} />\n                }\n                {message && (\n                    <p aria-live=\"assertive\" id=\"errorModalMessage\" role=\"alert\">\n                        {message}\n                    </p>\n                )}\n\n                <div className=\"optimizedCheckout-contentSecondary\">{this.renderErrorCode()}</div>\n            </>\n        );\n    }\n\n    private renderFooter(): ReactNode {\n        return (\n            <Button onClick={this.handleOnRequestClose} size={ButtonSize.Small}>\n                <TranslatedString id=\"common.ok_action\" />\n            </Button>\n        );\n    }\n\n    private renderErrorCode(): ReactNode {\n        const { error, shouldShowErrorCode = true } = this.props;\n\n        if (!error || !shouldShowErrorCode) {\n            return;\n        }\n\n        if (isRequestError(error) && error.headers?.['x-request-id']) {\n            return (\n                <ErrorCode\n                    code={error.headers['x-request-id']}\n                    label={<TranslatedString id=\"common.request_id\" />}\n                />\n            );\n        }\n\n        const errorCode = computeErrorCode(error);\n\n        if (!errorCode) {\n            return;\n        }\n\n        return <ErrorCode code={errorCode} />;\n    }\n\n    private handleOnRequestClose: (event: SyntheticEvent) => void = (event) => {\n        const { error, onClose = noop } = this.props;\n\n        if (error) {\n            onClose(event.nativeEvent, { error });\n        }\n    };\n}\n","import { CustomError } from \"@bigcommerce/checkout/payment-integration-api\";\n\nexport default function isHtmlError(error: Error): error is CustomError {\n\n    return 'type' in error &&\n        error.type === 'custom' &&\n        'data' in error &&\n        typeof error.data === 'object' &&\n        error.data !== null &&\n        'shouldBeTranslatedAsHtml' in error.data &&\n        typeof error.data.shouldBeTranslatedAsHtml === 'boolean';\n}\n","import { createContext } from 'react';\n\nimport { ExtensionState } from './ExtensionProvider';\nimport { ExtensionService } from './ExtensionService';\n\nexport interface ExtensionContextProps {\n    extensionService: ExtensionService;\n    extensionState: ExtensionState;\n}\n\nexport const ExtensionContext = createContext<ExtensionContextProps | undefined>(undefined);\n","import { Cart, Consignment } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport findLineItems from './findLineItems';\nimport getLineItemsCount from './getLineItemsCount';\n\nexport interface StaticConsignmentItemListProps {\n    consignment: Consignment;\n    cart: Cart;\n}\n\nconst StaticConsignmentItemList: FunctionComponent<StaticConsignmentItemListProps> = ({\n    cart,\n    consignment,\n}) => {\n    const lineItems = findLineItems(cart, consignment);\n\n    return (\n        <div className=\"staticConsignment-items\">\n            <strong>\n                <TranslatedString\n                    data={{ count: getLineItemsCount(lineItems) }}\n                    id=\"cart.item_count_text\"\n                />\n            </strong>\n\n            <ul>\n                {lineItems.map((item) => (\n                    <li key={item.id}>{`${item.quantity} x ${item.name}`}</li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default memo(StaticConsignmentItemList);\n","import { forIn, isDate, padStart } from 'lodash';\n\nexport default function mapCustomFormFieldsFromFormValues(customFieldsObject: {\n    [id: string]: any;\n}): Array<{ fieldId: string; fieldValue: string }> {\n    const customFields: Array<{ fieldId: string; fieldValue: string }> = [];\n\n    forIn(customFieldsObject, (value, key) => {\n        let fieldValue: string;\n\n        if (isDate(value)) {\n            const padMonth = padStart((value.getMonth() + 1).toString(), 2, '0');\n            const padDay = padStart(value.getDate().toString(), 2, '0');\n\n            fieldValue = `${value.getFullYear()}-${padMonth}-${padDay}`;\n        } else {\n            fieldValue = value;\n        }\n\n        customFields.push({\n            fieldId: key,\n            fieldValue,\n        });\n    });\n\n    return customFields;\n}\n","import { memoize } from '@bigcommerce/memoize';\nimport { object, ObjectSchema, string, StringSchema } from 'yup';\n\nimport getCustomFormFieldsValidationSchema, {\n    FormFieldsValidationSchemaOptions,\n} from './getCustomFormFieldsValidationSchema';\n\nexport const WHITELIST_REGEXP = /^[^<>]*$/;\n\nexport interface FormFieldValues {\n    [key: string]: string | { [id: string]: any };\n}\n\nexport default memoize(function getFormFieldsValidationSchema({\n    formFields,\n    translate = () => undefined,\n}: FormFieldsValidationSchemaOptions): ObjectSchema<FormFieldValues> {\n    return object({\n        ...formFields\n            .filter(({ custom }) => !custom)\n            .reduce((schema, { name, required, label, maxLength }) => {\n                schema[name] = string();\n\n                if (required) {\n                    schema[name] = schema[name]\n                        .trim()\n                        .required(translate('required', { label, name}));\n                }\n\n                if ((name === 'address1' || name === 'address2') && maxLength) {\n                    schema[name] = schema[name]\n                        .max(maxLength, translate('max', { label, name, max: maxLength }));\n                }\n\n                schema[name] = schema[name].matches(\n                    WHITELIST_REGEXP,\n                    translate('invalid', { name, label }),\n                );\n\n                return schema;\n            }, {} as { [key: string]: StringSchema }),\n    }).concat(\n        getCustomFormFieldsValidationSchema({ formFields, translate }),\n    ) as ObjectSchema<FormFieldValues>;\n});\n","import { FormField, LanguageService } from '@bigcommerce/checkout-sdk';\nimport { memoize } from 'lodash';\nimport { ObjectSchema } from 'yup';\n\nimport {\n    FormFieldValues,\n    getFormFieldsValidationSchema,\n    TranslateValidationErrorFunction,\n} from '../formFields';\n\nexport interface AddressFormFieldsValidationSchemaOptions {\n    formFields: FormField[];\n    language?: LanguageService;\n}\n\nexport function getTranslateAddressError(\n    language?: LanguageService,\n): TranslateValidationErrorFunction {\n    const requiredFieldErrorTranslationIds: { [fieldName: string]: string } = {\n        countryCode: 'address.country',\n        firstName: 'address.first_name',\n        lastName: 'address.last_name',\n        company: 'address.company_name',\n        address1: 'address.address_line_1',\n        address2: 'address.address_line_2',\n        city: 'address.city',\n        stateOrProvince: 'address.state',\n        stateOrProvinceCode: 'address.state',\n        postalCode: 'address.postal_code',\n        phone: 'address.phone_number',\n    };\n\n    return (type, { label, name, min, max }) => {\n        if (!language) {\n            return;\n        }\n\n        if (type === 'required') {\n            if (requiredFieldErrorTranslationIds[name]) {\n                return language.translate(\n                    `${requiredFieldErrorTranslationIds[name]}_required_error`,\n                );\n            }\n\n            return language.translate(`address.custom_required_error`, { label });\n        }\n\n        if (type === 'max' && max) {\n            return language.translate(`address.custom_max_error`, { label, max });\n        }\n\n        if (type === 'min' && min) {\n            return language.translate(`address.custom_min_error`, { label, min });\n        }\n\n        if (type === 'invalid') {\n            return language.translate(`address.invalid_characters_error`, { label });\n        }\n    };\n}\n\nexport default memoize(function getAddressFormFieldsValidationSchema({\n    formFields,\n    language,\n}: AddressFormFieldsValidationSchemaOptions): ObjectSchema<FormFieldValues> {\n    return getFormFieldsValidationSchema({\n        formFields,\n        translate: getTranslateAddressError(language),\n    });\n});\n","import React, { FunctionComponent } from 'react';\n\nimport { useLocale } from './LocaleContext';\n\nexport interface TranslatedStringProps {\n    id: string;\n    data?: any;\n}\n\nconst TranslatedString: FunctionComponent<TranslatedStringProps> = ({ data, id }) => {\n    const { language } = useLocale();\n\n    return <>{language.translate(id, data)}</>;\n};\n\nexport default TranslatedString;\n","import { Component, ReactNode } from 'react';\n\nexport interface ToggleProps {\n    openByDefault?: boolean;\n    children(props: any): ReactNode;\n}\n\nexport interface ToggleState {\n    isOpen: boolean;\n}\n\nexport default class Toggle extends Component<ToggleProps, ToggleState> {\n    constructor(props: ToggleProps) {\n        super(props);\n\n        this.state = { isOpen: !!props.openByDefault };\n    }\n\n    render(): ReactNode {\n        const { children } = this.props;\n        const { isOpen } = this.state;\n\n        return children({\n            isOpen,\n            toggle: this.toggle,\n        });\n    }\n\n    private toggle: (event: Event) => void = (event) => {\n        const { isOpen } = this.state;\n\n        event.preventDefault();\n\n        this.setState({ isOpen: !isOpen });\n    };\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\nimport { Form as FormikForm, FormikFormProps } from 'formik';\nimport { values } from 'lodash';\nimport React, { createRef, FunctionComponent, memo, useCallback, useRef } from 'react';\n\nimport { FormContextType, FormProvider } from '@bigcommerce/checkout/ui';\n\nexport interface FormProps extends FormikFormProps {\n    testId?: string;\n}\n\nconst Form: FunctionComponent<FormProps> = ({ className, testId, ...rest }) => {\n    const ref = useRef({ containerRef: createRef<HTMLDivElement>() });\n\n    const focusOnError = () => {\n        const { current } = ref.current.containerRef;\n\n        if (!current) {\n            return;\n        }\n\n        const errorInputSelectors = [\n            '.form-field--error input',\n            '.form-field--error textarea',\n            '.form-field--error select',\n        ];\n\n        const erroredFormField = current.querySelector<HTMLElement>(errorInputSelectors.join(', '));\n\n        if (erroredFormField) {\n            erroredFormField.focus({ preventScroll: true });\n\n            try {\n                erroredFormField.offsetParent?.scrollIntoView({\n                    behavior: 'smooth',\n                    block: 'center',\n                    inline: 'center',\n                });\n            } catch {\n                erroredFormField.offsetParent?.scrollIntoView();\n            }\n        }\n    };\n\n    const handleSubmitCapture = useCallback(\n        memoizeOne((setSubmitted: FormContextType['setSubmitted']) => {\n            return () => {\n                setSubmitted(true);\n\n                // use timeout to allow Formik validation to happen\n                setTimeout(() => focusOnError());\n            };\n        }),\n        [focusOnError],\n    );\n\n    const renderContent = useCallback(\n        memoizeOne(({ setSubmitted }: FormContextType) => {\n            return (\n                <div ref={ref.current.containerRef}>\n                    <FormikForm\n                        {...rest}\n                        className={className}\n                        data-test={testId}\n                        noValidate\n                        onSubmitCapture={handleSubmitCapture(setSubmitted)}\n                    />\n                </div>\n            );\n        }),\n        [className, handleSubmitCapture, testId, ...values(rest)],\n    );\n\n    return <FormProvider>{renderContent}</FormProvider>;\n};\n\nexport default memo(Form);\n","import { ExtensionAction, ExtensionActionType, ExtensionState } from './ExtensionProvider';\n\nexport const extensionReducer = (\n    state: ExtensionState,\n    action: ExtensionAction,\n): ExtensionState => {\n    switch (action.type) {\n        case ExtensionActionType.SHOW_LOADING_INDICATOR:\n            if (typeof action.payload === 'boolean') {\n                return { ...state, isShowingLoadingIndicator: action.payload };\n            }\n\n            break;\n\n        case ExtensionActionType.RE_RENDER_SHIPPING_FORM:\n            if (typeof action.payload === 'number') {\n                return { ...state, shippingFormRenderTimestamp: action.payload };\n            }\n\n            break;\n\n        default:\n            return state;\n    }\n\n    return state;\n};\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { CommandHandler, CommandHandlerProps } from './CommandHandler';\n\nexport function createReloadCheckoutHandler({\n    checkoutService,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.ReloadCheckout> {\n    return {\n        commandType: ExtensionCommandType.ReloadCheckout,\n        handler: () => {\n            void checkoutService.loadCheckout(checkoutService.getState().data.getCheckout()?.id, {\n                params: {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/consistent-type-assertions\n                    include: ['consignments.availableShippingOptions'] as any,\n                },\n            });\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { CommandHandler, CommandHandlerProps } from './CommandHandler';\n\nexport function createSetIframeStyleHandler({\n    extension,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.SetIframeStyle> {\n    return {\n        commandType: ExtensionCommandType.SetIframeStyle,\n        handler: (data) => {\n            const { style } = data.payload;\n            const extensionContainer = document.querySelector(\n                `div[data-extension-id=\"${extension.id}\"]`,\n            );\n            const iframe = extensionContainer?.querySelector('iframe');\n\n            if (iframe) {\n                Object.assign(iframe.style, style);\n            }\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { ExtensionActionType } from '../../ExtensionProvider';\n\nimport { CommandHandler, CommandHandlerProps } from './CommandHandler';\n\nexport function createShowLoadingIndicatorHandler({\n    dispatch,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.ShowLoadingIndicator> {\n    return {\n        commandType: ExtensionCommandType.ShowLoadingIndicator,\n        handler: (data) => {\n            const { show } = data.payload;\n\n            dispatch({\n                type: ExtensionActionType.SHOW_LOADING_INDICATOR,\n                payload: show,\n            });\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { ExtensionActionType } from '../../ExtensionProvider';\n\nimport { CommandHandler, CommandHandlerProps } from './CommandHandler';\n\nexport function createReRenderShippingFormHandler({\n    checkoutService,\n    dispatch,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.ReRenderShippingForm> {\n    return {\n        commandType: ExtensionCommandType.ReRenderShippingForm,\n        handler: async () => {\n            await checkoutService.loadCheckout(checkoutService.getState().data.getCheckout()?.id, {\n                params: {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/consistent-type-assertions\n                    include: ['consignments.availableShippingOptions'] as any,\n                },\n            });\n\n            dispatch({\n                type: ExtensionActionType.RE_RENDER_SHIPPING_FORM,\n                payload: Date.now(),\n            });\n        },\n    };\n}\n","import { ExtensionMessageType, ExtensionQueryType } from '@bigcommerce/checkout-sdk';\n\nimport { QueryHandler, QueryHandlerProps } from './QueryHandler';\n\nexport function createGetConsignmentHandler({\n    checkoutService,\n    extension,\n}: QueryHandlerProps): QueryHandler<ExtensionQueryType.GetConsignments> {\n    return {\n        queryType: ExtensionQueryType.GetConsignments,\n        handler: async (data) => {\n            if (!data.payload?.useCache) {\n                await checkoutService.loadCheckout();\n            }\n\n            const consignments = checkoutService.getState().data.getCheckout()?.consignments || [];\n\n            checkoutService.postMessageToExtension(extension.id, {\n                type: ExtensionMessageType.GetConsignments,\n                payload: {\n                    consignments,\n                },\n            });\n        },\n    };\n}\n","import {\n    CheckoutService,\n    Extension,\n    ExtensionCommandMap,\n    ExtensionQueryMap,\n    ExtensionRegion,\n} from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { ErrorLevelType, ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\n\nimport { ExtensionAction } from './ExtensionProvider';\nimport { CommandHandler, QueryHandler } from './handler';\nimport * as commandHandlerFactories from './handler/commandHandlers';\nimport * as queryHandlerFactories from './handler/queryHandlers';\n\nexport class ExtensionService {\n    private handlers: { [extensionId: string]: Array<() => void> } = {};\n\n    constructor(\n        private checkoutService: CheckoutService,\n        private dispatch: React.Dispatch<ExtensionAction>,\n        private errorLogger: ErrorLogger,\n    ) {}\n\n    async loadExtensions(): Promise<void> {\n        await this.checkoutService.loadExtensions();\n    }\n\n    preloadExtensions(): void {\n        const state = this.checkoutService.getState();\n        const extensions = state.data.getExtensions();\n        const cartId = state.data.getCart()?.id;\n        const parentOrigin = state.data.getConfig()?.links.siteLink;\n\n        if (!cartId || !parentOrigin) {\n            return;\n        }\n\n        extensions?.forEach((extension) => {\n            const url = new URL(extension.url);\n\n            url.searchParams.set('extensionId', extension.id);\n            url.searchParams.set('cartId', cartId);\n            url.searchParams.set('parentOrigin', parentOrigin);\n\n            const link = document.createElement('link');\n\n            link.rel = 'preload';\n            link.as = 'document';\n            link.href = url.toString();\n\n            const head = document.head;\n\n            head.appendChild(link);\n        });\n    }\n\n    async renderExtension(container: string, region: ExtensionRegion): Promise<void> {\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        if (!extension) {\n            return;\n        }\n\n        try {\n            await this.checkoutService.renderExtension(container, region);\n\n            this.registerHandlers(extension);\n        } catch (error: unknown) {\n            if (error instanceof Error) {\n                this.errorLogger.log(\n                    error,\n                    { errorCode: 'checkoutExtension' },\n                    ErrorLevelType.Error,\n                    { extensionId: extension.id, region },\n                );\n            }\n        }\n    }\n\n    removeListeners(region: ExtensionRegion): void {\n        this.checkoutService.clearExtensionCache(region);\n\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        if (!extension) {\n            return;\n        }\n\n        const removers = this.handlers[extension.id];\n\n        if (!removers) {\n            return;\n        }\n\n        for (const remover of removers) {\n            remover();\n        }\n\n        delete this.handlers[extension.id];\n    }\n\n    isRegionEnabled(region: ExtensionRegion): boolean {\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        return Boolean(extension);\n    }\n\n    private registerHandlers(extension: Extension): void {\n        const handlerProps = {\n            checkoutService: this.checkoutService,\n            dispatch: this.dispatch,\n            extension,\n        };\n\n        if (!this.handlers[extension.id]) {\n            this.handlers[extension.id] = [];\n        }\n\n        Object.values(commandHandlerFactories).forEach((createCommandHandlerFactory) => {\n            const handlerFactory = createCommandHandlerFactory(handlerProps);\n\n            if (this.isCommandHandler(handlerFactory.commandType, handlerFactory)) {\n                this.handlers[extension.id].push(\n                    this.checkoutService.handleExtensionCommand(\n                        extension.id,\n                        handlerFactory.commandType,\n                        handlerFactory.handler,\n                    ),\n                );\n            }\n        });\n\n        Object.values(queryHandlerFactories).forEach((createQueryHandlerFactory) => {\n            const handlerFactory = createQueryHandlerFactory(handlerProps);\n\n            if (this.isQueryHandler(handlerFactory.queryType, handlerFactory)) {\n                this.handlers[extension.id].push(\n                    this.checkoutService.handleExtensionQuery(\n                        extension.id,\n                        handlerFactory.queryType,\n                        handlerFactory.handler,\n                    ),\n                );\n            }\n        });\n    }\n\n    private isCommandHandler<T extends keyof ExtensionCommandMap>(\n        type: T,\n        handler: CommandHandler<any>,\n    ): handler is CommandHandler<T> {\n        return handler.commandType === type;\n    }\n\n    private isQueryHandler<T extends keyof ExtensionQueryMap>(\n        type: T,\n        handler: QueryHandler<any>,\n    ): handler is QueryHandler<T> {\n        return handler.queryType === type;\n    }\n}\n","import { CheckoutService } from '@bigcommerce/checkout-sdk';\nimport React, { ReactNode, useReducer } from 'react';\n\nimport { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\n\nimport { ExtensionContext } from './ExtensionContext';\nimport { extensionReducer } from './ExtensionReducer';\nimport { ExtensionService } from './ExtensionService';\n\nexport interface ExtensionState {\n    isShowingLoadingIndicator: boolean;\n    shippingFormRenderTimestamp: undefined | number;\n}\n\nexport interface ExtensionAction {\n    type: ExtensionActionType;\n    payload: boolean | number;\n}\n\nexport enum ExtensionActionType {\n    SHOW_LOADING_INDICATOR,\n    RE_RENDER_SHIPPING_FORM,\n}\n\nexport interface ExtensionProviderProps {\n    checkoutService: CheckoutService;\n    children: ReactNode;\n    errorLogger: ErrorLogger;\n}\n\nexport const ExtensionProvider = ({\n    checkoutService,\n    children,\n    errorLogger,\n}: ExtensionProviderProps) => {\n    const [extensionState, dispatch] = useReducer(extensionReducer, {\n        isShowingLoadingIndicator: false,\n        shippingFormRenderTimestamp: undefined,\n    });\n    const extensionService = new ExtensionService(checkoutService, dispatch, errorLogger);\n\n    const extensionValues = {\n        extensionService,\n        extensionState,\n    };\n\n    return (\n        <ExtensionContext.Provider value={extensionValues}>{children}</ExtensionContext.Provider>\n    );\n};\n","import classNames from 'classnames';\nimport React, { ComponentType, memo } from 'react';\n\nexport enum IconSize {\n    Regular = 'regular',\n    Small = 'small',\n    Medium = 'medium',\n    Large = 'large',\n}\n\nexport interface IconProps {\n    additionalClassName?: string;\n    size?: IconSize;\n    testId?: string;\n}\n\nexport default function withIconContainer<TProps extends Record<string, any>>(\n    OriginalComponent: ComponentType<TProps>,\n): ComponentType<TProps & IconProps> {\n    return memo(({ additionalClassName, size, testId, ...rest }) => (\n        <div\n            className={classNames(\n                'icon',\n                additionalClassName,\n                size === IconSize.Small ? 'icon--small' : null,\n                size === IconSize.Large ? 'icon--large' : null,\n                size === IconSize.Medium ? 'icon--medium' : null,\n            )}\n            data-test={testId}\n        >\n            <OriginalComponent {...(rest as TProps)} />\n        </div>\n    ));\n}\n","import { CheckoutService, createCurrencyService, StoreConfig } from '@bigcommerce/checkout-sdk';\nimport { memoizeOne } from '@bigcommerce/memoize';\nimport React, { Component, ReactNode } from 'react';\n\nimport getLanguageService from './getLanguageService';\nimport LocaleContext from './LocaleContext';\n\nexport interface LocaleProviderProps {\n    checkoutService: CheckoutService;\n}\n\nexport interface LocaleProviderState {\n    config?: StoreConfig;\n}\n\nclass LocaleProvider extends Component<LocaleProviderProps> {\n    state: Readonly<LocaleProviderState> = {};\n\n    private languageService = getLanguageService();\n    private unsubscribe?: () => void;\n\n    private getContextValue = memoizeOne((config?: StoreConfig) => {\n        return {\n            currency: config ? createCurrencyService(config) : undefined,\n            date: config\n                ? {\n                      inputFormat: config.inputDateFormat,\n                  }\n                : undefined,\n            language: this.languageService,\n        };\n    });\n\n    componentDidMount(): void {\n        const { checkoutService } = this.props;\n\n        this.unsubscribe = checkoutService.subscribe(\n            ({ data }) => {\n                this.setState({ config: data.getConfig() });\n            },\n            ({ data }) => data.getConfig(),\n        );\n    }\n\n    componentWillUnmount(): void {\n        if (this.unsubscribe) {\n            this.unsubscribe();\n            this.unsubscribe = undefined;\n        }\n    }\n\n    render(): ReactNode {\n        const { children } = this.props;\n        const { config } = this.state;\n\n        return (\n            <LocaleContext.Provider value={this.getContextValue(config)}>\n                {children}\n            </LocaleContext.Provider>\n        );\n    }\n}\n\nexport default LocaleProvider;\n","import classNames from 'classnames';\nimport React, { FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\n\ninterface ChecklistSkeletonProps {\n    additionalClassName?: string;\n    rows?: number;\n}\n\nconst ChecklistSkeleton: FunctionComponent<LoadingSkeletonProps & ChecklistSkeletonProps> = ({\n    additionalClassName,\n    children,\n    isLoading = true,\n    rows = 3,\n}) => {\n    const content = [];\n\n    for (let i = 0; i < rows; i += 1) {\n        content.push(\n            <div className=\"skeleton-container\" key={`checklist-skeleton-item${i}`}>\n                <div className=\"checklist-skeleton-circle\" />\n                <div className=\"checklist-skeleton-rectangle\" />\n            </div>,\n        );\n    }\n\n    const skeleton = (\n        <div className={classNames(additionalClassName, 'checklist-skeleton')}>{content}</div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, skeleton }} />;\n};\n\nexport default ChecklistSkeleton;\n","import { isFunction, noop } from 'lodash';\nimport React, { createContext, FunctionComponent, memo, ReactNode, useMemo, useState } from 'react';\n\nexport interface FormContextType {\n    isSubmitted: boolean;\n    setSubmitted(isSubmitted: boolean): void;\n}\n\nexport const FormContext = createContext<FormContextType>({\n    isSubmitted: false,\n    setSubmitted: noop,\n});\n\ntype FormContextFunction = (props: FormContextType) => ReactNode;\n\nexport interface FormProviderProps {\n    initialIsSubmitted?: boolean;\n    children: ReactNode | FormContextFunction;\n}\n\nexport const FormProvider: FunctionComponent<FormProviderProps> = memo(\n    ({ children, initialIsSubmitted = false }) => {\n        const [isSubmitted, setSubmitted] = useState(initialIsSubmitted);\n        const contextValue = useMemo(() => ({ isSubmitted, setSubmitted }), [isSubmitted]);\n\n        return (\n            <FormContext.Provider value={contextValue}>\n                {isFunction(children) ? children({ isSubmitted, setSubmitted }) : children}\n            </FormContext.Provider>\n        );\n    },\n);\n\nexport default FormContext;\n","import React, { ComponentType, Context, FunctionComponent, memo, useContext, useMemo } from 'react';\nimport { Omit } from 'utility-types';\n\nimport { MatchedProps } from './InjectHoc';\nimport MappableInjectHoc, { MapToProps, MapToPropsFactory } from './MappableInjectHoc';\n\nfunction isMapToPropsFactory<TContextProps, TMappedProps, TOwnProps>(\n    mapToProps:\n        | MapToProps<TContextProps, TMappedProps, TOwnProps>\n        | MapToPropsFactory<TContextProps, TMappedProps, TOwnProps>,\n): mapToProps is MapToPropsFactory<TContextProps, TMappedProps, TOwnProps> {\n    return mapToProps.length === 0;\n}\n\nexport default function createMappableInjectHoc<TContextProps>(\n    ContextComponent: Context<TContextProps>,\n    options?: { displayNamePrefix?: string },\n): MappableInjectHoc<NonNullable<TContextProps>> {\n    return <TMappedProps, TOwnProps>(\n        mapToPropsOrFactory:\n            | MapToProps<NonNullable<TContextProps>, TMappedProps, TOwnProps>\n            | MapToPropsFactory<NonNullable<TContextProps>, TMappedProps, TOwnProps>,\n    ) => {\n        return <TProps extends MatchedProps<TMappedProps, TProps>>(\n            OriginalComponent: ComponentType<TProps>,\n        ) => {\n            const InnerDecoratedComponent: FunctionComponent<TProps> = memo((props) => (\n                <OriginalComponent {...props} />\n            ));\n\n            const DecoratedComponent: FunctionComponent<Omit<TProps, keyof TMappedProps>> = (\n                props,\n            ) => {\n                const context = useContext(ContextComponent);\n\n                const mapToProps = useMemo(\n                    () =>\n                        isMapToPropsFactory(mapToPropsOrFactory)\n                            ? mapToPropsOrFactory()\n                            : mapToPropsOrFactory,\n                    [],\n                );\n\n                const mappedProps = context\n                    ? mapToProps(context, props as unknown as TOwnProps)\n                    : context;\n\n                if (!mappedProps) {\n                    return null;\n                }\n\n                const mergedProps = { ...mappedProps, ...props } as unknown as TProps;\n\n                return <InnerDecoratedComponent {...mergedProps} />;\n            };\n\n            if (options && options.displayNamePrefix && OriginalComponent) {\n                DecoratedComponent.displayName = `${options.displayNamePrefix}(${\n                    OriginalComponent.displayName || OriginalComponent.name\n                })`;\n            }\n\n            return DecoratedComponent;\n        };\n    };\n}\n","import { createMappableInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\nimport { CheckoutContext, CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nexport type WithCheckoutProps = CheckoutContextProps;\n\nconst withCheckout = createMappableInjectHoc(CheckoutContext, {\n    displayNamePrefix: 'WithCheckout',\n});\n\nexport default withCheckout;\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, KeyboardEvent, MouseEvent, ReactNode, useCallback } from 'react';\nimport ReactModal from 'react-modal';\nimport { Omit } from 'utility-types';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\n\nimport { IconClose } from '../icon';\n\nexport type ModalProps = Omit<\n    ReactModal.Props,\n    'bodyOpenClassName' | 'className' | 'closeTimeoutMS' | 'overlayClassName'\n> & {\n    children: ReactNode;\n    closeButtonLabel?: string | ReactNode;\n    footer?: ReactNode;\n    header?: ReactNode;\n    additionalHeaderClassName?: string;\n    additionalBodyClassName?: string;\n    additionalModalClassName?: string;\n    shouldShowCloseButton?: boolean;\n};\n\nconst Modal: FunctionComponent<ModalProps> = ({\n    children,\n    closeButtonLabel = 'Close',\n    footer,\n    header,\n    additionalHeaderClassName,\n    additionalBodyClassName,\n    additionalModalClassName,\n    onRequestClose = noop,\n    shouldShowCloseButton = false,\n    ...rest\n}) => {\n    const handleClose = useCallback(\n        (event: MouseEvent | KeyboardEvent) => {\n            onRequestClose(event);\n        },\n        [onRequestClose],\n    );\n\n    return (\n        <ReactModal\n            {...rest}\n            ariaHideApp={process.env.NODE_ENV !== 'test'}\n            bodyOpenClassName=\"has-activeModal\"\n            className={{\n                base: classNames(\n                    'modal optimizedCheckout-contentPrimary',\n                    additionalModalClassName,\n                ),\n                afterOpen: 'modal--afterOpen',\n                beforeClose: 'modal--beforeClose',\n            }}\n            closeTimeoutMS={200}\n            onRequestClose={onRequestClose}\n            overlayClassName={{\n                base: 'modalOverlay',\n                afterOpen: 'modalOverlay--afterOpen',\n                beforeClose: 'modalOverlay--beforeClose',\n            }}\n            shouldCloseOnEsc={true}\n            shouldCloseOnOverlayClick={false}\n        >\n            <div className={classNames('modal-header', additionalHeaderClassName)}>\n                {header}\n\n                {shouldShowCloseButton && (\n                     \n                    <a\n                        className=\"modal-close\"\n                        data-test=\"modal-close-button\"\n                        href=\"#\"\n                        onClick={preventDefault(handleClose)}\n                    >\n                        {closeButtonLabel && <span className=\"is-srOnly\">{closeButtonLabel}</span>}\n\n                        <IconClose />\n                    </a>\n                )}\n            </div>\n\n            <div\n                className={classNames('modal-body', additionalBodyClassName)}\n                data-test=\"modal-body\"\n            >\n                {children}\n            </div>\n\n            {Boolean(footer) && (\n                <div className=\"modal-footer\" data-test=\"modal-footer\">\n                    {footer}\n                </div>\n            )}\n        </ReactModal>\n    );\n};\n\nexport default Modal;\n","import HashStatic from 'object-hash';\n\nexport default function computeErrorCode(value: any): string | undefined {\n    try {\n        return HashStatic(value).toUpperCase();\n    } catch (error) {}\n}\n","import { BrowserOptions } from '@sentry/browser';\n\nexport default interface ErrorLogger {\n    /**\n     * Logs an error in, tagging it with an error code.\n     *\n     * @param error The error object to be logged\n     * @param tags The tags attached to the log entry\n     * @param level The level of the log\n     * @param meta Any extra meta data\n     */\n    log(error: Error, tags?: ErrorTags, level?: ErrorLevelType, meta?: ErrorMeta): void;\n}\n\nexport interface ErrorLoggerOptions {\n    errorTypes?: string[];\n    publicPath?: string;\n    sampleRate?: number;\n}\n\nexport interface ErrorLoggerServiceConfig {\n    sentry?: BrowserOptions;\n}\n\nexport interface ErrorTags {\n    /**\n     * A code that identifies uniquely each error type\n     */\n    errorCode: string;\n}\n\nexport interface ErrorMeta {\n    [key: string]: unknown;\n}\n\nexport enum ErrorLevelType {\n    Info = 'info',\n    Warning = 'warning',\n    Error = 'error',\n    Debug = 'debug',\n}\n","export default function isEmbedded(pathname: string = document.location.pathname): boolean {\n    const basePath = `/${pathname.split('/')[1]}`;\n\n    return basePath === '/embedded-checkout';\n}\n","import {\n    Address,\n    CheckoutSelectors,\n    Country,\n    ShippingInitializeOptions,\n} from '@bigcommerce/checkout-sdk';\nimport { isEmpty } from 'lodash';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { localizeAddress } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { withCheckout } from '../checkout';\n\nimport AddressType from './AddressType';\n\nimport './StaticAddress.scss';\n\nexport interface StaticAddressProps {\n    address: Address;\n    type?: AddressType;\n}\n\nexport interface StaticAddressEditableProps extends StaticAddressProps {\n    initialize?(options: ShippingInitializeOptions): Promise<CheckoutSelectors>;\n}\n\ninterface WithCheckoutStaticAddressProps {\n    countries?: Country[];\n}\n\nconst StaticAddress: FunctionComponent<\n    StaticAddressEditableProps & WithCheckoutStaticAddressProps\n    > = ({\n        countries,\n        address: addressWithoutLocalization,\n    }) => {\n    const address = localizeAddress(addressWithoutLocalization, countries);\n    const isValid = !isEmpty(address);\n\n    return !isValid ? null : (\n        <div className=\"vcard checkout-address--static\" data-test=\"static-address\">\n            {(address.firstName || address.lastName) && (\n                <p className=\"fn address-entry\">\n                    <span className=\"first-name\">{`${address.firstName} `}</span>\n                    <span className=\"family-name\">{address.lastName}</span>\n                </p>\n            )}\n\n            {(address.phone || address.company) && (\n                <p className=\"address-entry\">\n                    <span className=\"company-name\">{`${address.company} `}</span>\n                    <span className=\"tel\">{address.phone}</span>\n                </p>\n            )}\n\n            <div className=\"adr\">\n                <p className=\"street-address address-entry\">\n                    <span className=\"address-line-1\">{`${address.address1} `}</span>\n                    {address.address2 && (\n                        <span className=\"address-line-2\">{` / ${address.address2}`}</span>\n                    )}\n                </p>\n\n                <p className=\"address-entry\">\n                    {address.city && <span className=\"locality\">{`${address.city}, `}</span>}\n                    {address.localizedProvince && (\n                        <span className=\"region\">{`${address.localizedProvince}, `}</span>\n                    )}\n                    {address.postalCode && (\n                        <span className=\"postal-code\">{`${address.postalCode} / `}</span>\n                    )}\n                    {address.localizedCountry && (\n                        <span className=\"country-name\">{`${address.localizedCountry} `}</span>\n                    )}\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport function mapToStaticAddressProps(\n    context: CheckoutContextProps,\n    { type }: StaticAddressProps,\n): WithCheckoutStaticAddressProps | null {\n    const {\n        checkoutState: {\n            data: { getBillingCountries, getShippingCountries },\n        },\n    } = context;\n\n    return {\n        countries: type === AddressType.Billing\n            ? getBillingCountries()\n            : getShippingCountries(),\n    };\n}\n\nexport default withCheckout(mapToStaticAddressProps)(memo(StaticAddress));\n","import React, { FunctionComponent, useEffect } from 'react';\n\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nconst CheckoutButton: FunctionComponent<CheckoutButtonProps> = ({\n    checkoutService: { deinitializeCustomer, initializeCustomer },\n    checkoutButtonContainerClass,\n    containerId,\n    methodId,\n    onUnhandledError,\n    onWalletButtonClick,\n}) => {\n    useEffect(() => {\n        initializeCustomer({\n            methodId,\n            [methodId]: {\n                container: containerId,\n                onUnhandledError,\n                onClick: () => onWalletButtonClick(methodId),\n            },\n        }).catch(onUnhandledError);\n\n        return () => {\n            deinitializeCustomer({ methodId }).catch(onUnhandledError);\n        };\n    }, [\n        containerId,\n        deinitializeCustomer,\n        initializeCustomer,\n        methodId,\n        onUnhandledError,\n        onWalletButtonClick,\n    ]);\n\n    return <div className={checkoutButtonContainerClass} id={containerId} />;\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    CheckoutButton,\n    [],\n);\n","import React, { FunctionComponent, useEffect } from 'react';\n\nimport { CheckoutButton } from '@bigcommerce/checkout/checkout-button-integration';\nimport { isHTMLElement } from '@bigcommerce/checkout/instrument-utils';\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nconst beautifyAmazonButton = (): void => {\n    if (!document.querySelector('.checkout-button-container')) {\n        return;\n    }\n\n    const container = document.querySelector('#amazonpayCheckoutButton > div');\n\n    if (container) {\n        const amazonButton = container.shadowRoot?.querySelector('.amazonpay-button-view1');\n\n        if (isHTMLElement(amazonButton)) {\n            amazonButton.style.height = '36px';\n\n            return;\n        }\n    }\n\n    setTimeout(beautifyAmazonButton, 10);\n};\n\nconst AmazonPayV2Button: FunctionComponent<CheckoutButtonProps> = (props) => {\n    useEffect(() => {\n        beautifyAmazonButton();\n    }, []);\n\n    return (\n        <div className=\"AmazonPayContainer\">\n            <CheckoutButton {...props} />\n        </div>\n    );\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    AmazonPayV2Button,\n    [{ id: 'amazonpay' }],\n);\n","export default function isHTMLElement(element: unknown): element is HTMLElement {\n    return element instanceof HTMLElement;\n}\n","import setPrototypeOf from '../setPrototypeOf';\n\nimport CustomError from './CustomError';\n\nexport default class EmbeddedCheckoutUnsupportedError extends CustomError {\n    constructor(message: string) {\n        super({\n            name: 'EMBEDDED_CHECKOUT_UNSUPPORTED_ERROR',\n            message,\n        });\n\n        setPrototypeOf(this, EmbeddedCheckoutUnsupportedError.prototype);\n    }\n}\n","export default function setPrototypeOf<T extends object>(object: T, prototype: object): T {\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(object, prototype);\n    } else if (hasProto(object)) {\n        // eslint-disable-next-line no-proto\n        object.__proto__ = prototype;\n    }\n\n    return object;\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction hasProto(object: object): object is object & { __proto__: object } {\n    return '__proto__' in object;\n}\n","import React, { FunctionComponent } from 'react';\n\nimport { CheckoutButton } from '@bigcommerce/checkout/checkout-button-integration';\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    EmbeddedCheckoutUnsupportedError,\n    isEmbedded,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nimport './GooglePayButton.scss';\n\nconst GooglePayButton: FunctionComponent<CheckoutButtonProps> = (props) => {\n    const { language, onUnhandledError } = props;\n\n    if (isEmbedded()) {\n        onUnhandledError(\n            new EmbeddedCheckoutUnsupportedError(\n                language.translate('embedded_checkout.unsupported_error', {\n                    methods: 'googlepay',\n                }),\n            ),\n        );\n\n        return null;\n    }\n\n    return <CheckoutButton checkoutButtonContainerClass=\"google-pay-top-button\" {...props} />;\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    GooglePayButton,\n    [\n        { id: 'googlepayadyenv2' },\n        { id: 'googlepayadyenv3' },\n        { id: 'googlepayauthorizenet' },\n        { id: 'googlepaybnz' },\n        { id: 'googlepaybraintree' },\n        { id: 'googlepaypaypalcommerce' },\n        { id: 'googlepaycheckoutcom' },\n        { id: 'googlepaycybersourcev2' },\n        { id: 'googlepayorbital' },\n        { id: 'googlepaystripe' },\n        { id: 'googlepaystripeupe' },\n        { id: 'googlepayworldpayaccess' },\n        { id: 'googlepaytdonlinemart' },\n    ],\n);\n","export default function isEmbedded(pathname: string = document.location.pathname): boolean {\n    const basePath = `/${pathname.split('/')[1]}`;\n\n    return basePath === '/embedded-checkout';\n}\n","const DEFAULT_OPTIONS = {\n    count: 5,\n    interval: 1000,\n};\n\nexport interface RetryOptions {\n    count?: number;\n    interval?: number;\n}\n\nexport default async function retry<T>(fn: () => Promise<T>, options?: RetryOptions): Promise<T> {\n    const { count, interval } = { ...DEFAULT_OPTIONS, ...options };\n\n    try {\n        return await fn();\n    } catch (error) {\n        if (count === 1) {\n            throw error;\n        }\n\n        await new Promise((resolve) => setTimeout(resolve, interval));\n\n        return retry(fn, { interval, count: count - 1 });\n    }\n}\n","import { isEmpty, pickBy } from 'lodash';\nimport React, { ComponentType, Context, FunctionComponent, memo, useContext } from 'react';\n\nimport InjectHoc from './InjectHoc';\n\nexport interface InjectHocOptions<TInjectedProps> {\n    displayNamePrefix?: string;\n    pickProps?(value: TInjectedProps[keyof TInjectedProps], key: keyof TInjectedProps): boolean;\n}\n\nexport default function createInjectHoc<\n    TInjectedProps extends object | undefined,\n    TPickedProps extends Partial<TInjectedProps> = TInjectedProps,\n>(\n    ContextComponent: Context<TInjectedProps>,\n    options?: InjectHocOptions<TInjectedProps>,\n): InjectHoc<NonNullable<TPickedProps>> {\n    return <TProps extends TPickedProps>(OriginalComponent: ComponentType<TProps>) => {\n        const { displayNamePrefix = '', pickProps = () => true } = options || {};\n\n        const InnerDecoratedComponent: FunctionComponent<TProps> = memo((props) => (\n            <OriginalComponent {...props} />\n        ));\n\n        const DecoratedComponent = (props: Omit<TProps, keyof NonNullable<TPickedProps>>) => {\n            const context = useContext(ContextComponent);\n            const injectedProps = pickBy(context, (value, key) =>\n                pickProps(value, key as keyof TInjectedProps),\n            );\n\n            if (isEmpty(injectedProps)) {\n                return null;\n            }\n\n            const mergedProps = { ...injectedProps, ...props } as unknown as TProps;\n\n            return <InnerDecoratedComponent {...mergedProps} />;\n        };\n\n        if (displayNamePrefix) {\n            DecoratedComponent.displayName = `${displayNamePrefix}(${\n                OriginalComponent.displayName || OriginalComponent.name\n            })`;\n        }\n\n        return DecoratedComponent;\n    };\n}\n","import classNames from 'classnames';\nimport React, { forwardRef, ReactNode, Ref } from 'react';\n\nimport Input, { InputProps } from './Input';\nimport Label from './Label';\n\nexport interface CheckboxInputProps extends InputProps {\n    additionalClassName?: string;\n    label: ReactNode;\n    value: string;\n    checked: boolean;\n}\n\nconst CheckboxInput = forwardRef(\n    (\n        { additionalClassName, label, id, testId, ...rest }: CheckboxInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <>\n            <Input\n                {...rest}\n                className={classNames(\n                    'form-checkbox',\n                    'optimizedCheckout-form-checkbox',\n                    additionalClassName,\n                )}\n                id={id}\n                ref={ref}\n                testId={testId}\n                type=\"checkbox\"\n            />\n            <Label htmlFor={id}>{label}</Label>\n        </>\n    ),\n);\n\nexport default CheckboxInput;\n","import { FieldProps } from 'formik';\nimport { kebabCase } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode, useCallback } from 'react';\n\nimport BasicFormField from './BasicFormField';\nimport FormFieldError from './FormFieldError';\nimport Label from './Label';\n\nexport interface FormFieldProps {\n    additionalClassName?: string;\n    name: string;\n    label?: ReactNode | ((fieldName: string) => ReactNode);\n    labelContent?: ReactNode;\n    footer?: ReactNode;\n    id?: string;\n    isFloatingLabelEnabled?: boolean;\n    input(field: FieldProps<string>): ReactNode;\n    onChange?(value: string): void;\n}\n\nconst FormField: FunctionComponent<FormFieldProps> = ({\n    additionalClassName,\n    labelContent,\n    label,\n    onChange,\n    footer,\n    input,\n    name,\n    id,\n    isFloatingLabelEnabled,\n}) => {\n    const renderField = useCallback(\n        (props) => (\n            <>\n                {isFloatingLabelEnabled && input(props)}\n\n                {label && (typeof label === 'function' ? label(name) : label)}\n                {labelContent && !label && (\n                    <Label\n                        htmlFor={name}\n                        id={`${id ?? name}-label`}\n                        isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    >\n                        {labelContent}\n                    </Label>\n                )}\n\n                {!isFloatingLabelEnabled && input(props)}\n\n                <FormFieldError\n                    errorId={`${id ?? name}-field-error-message`}\n                    name={name}\n                    testId={`${kebabCase(name)}-field-error-message`}\n                />\n\n                {footer}\n            </>\n        ),\n        [label, labelContent, id, input, name, footer, isFloatingLabelEnabled],\n    );\n\n    return (\n        <BasicFormField\n            additionalClassName={additionalClassName}\n            name={name}\n            onChange={onChange}\n            render={renderField}\n        />\n    );\n};\n\nexport default memo(FormField);\n","import {\n  ErrorLevelType,\n  ErrorLogger,\n  ErrorMeta,\n  ErrorTags,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nexport interface ConsoleErrorLoggerOptions {\n    console?: Console;\n    errorTypes?: string[];\n}\n\n// tslint:disable:no-console\nexport default class ConsoleErrorLogger implements ErrorLogger {\n    private console: Console;\n\n    constructor(options?: ConsoleErrorLoggerOptions) {\n        const { console: customConsole = console } = options || {};\n\n        this.console = customConsole;\n    }\n\n    log(\n        error: Error,\n        tags?: ErrorTags,\n        level: ErrorLevelType = ErrorLevelType.Error,\n        meta?: ErrorMeta,\n    ): void {\n        switch (level) {\n            case ErrorLevelType.Error:\n                return this.console.error(error, tags, meta);\n\n            case ErrorLevelType.Info:\n                return this.console.info(error, tags, meta);\n\n            case ErrorLevelType.Warning:\n                return this.console.warn(error, tags, meta);\n\n            default:\n                return this.console.log(error, tags, meta);\n        }\n    }\n}\n","import { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\n\nexport default class NoopErrorLogger implements ErrorLogger {\n    log() {}\n}\n","import {\n    BrowserOptions,\n    captureException,\n    Event,\n    init,\n    Integrations,\n    SeverityLevel,\n    StackFrame,\n    withScope,\n} from '@sentry/browser';\nimport { RewriteFrames } from '@sentry/integrations';\nimport { EventHint, Exception } from '@sentry/types';\n\nimport {\n    ErrorLevelType,\n    ErrorLogger,\n    ErrorMeta,\n    ErrorTags,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nimport computeErrorCode from './computeErrorCode';\nimport ConsoleErrorLogger from './ConsoleErrorLogger';\nimport NoopErrorLogger from './NoopErrorLogger';\n\nconst FILENAME_PREFIX = 'app://';\n\nexport interface SentryErrorLoggerOptions {\n    consoleLogger?: ConsoleErrorLogger;\n    errorTypes?: string[];\n    publicPath?: string;\n    sampleRate?: number;\n}\n\nexport enum SeverityLevelEnum {\n    DEBUG = 'debug',\n    ERROR = 'error',\n    INFO = 'info',\n    WARNING = 'warning',\n}\n\nexport default class SentryErrorLogger implements ErrorLogger {\n    private consoleLogger: ErrorLogger;\n    private publicPath: string;\n\n    constructor(config: BrowserOptions, options?: SentryErrorLoggerOptions) {\n        const {\n            consoleLogger = new NoopErrorLogger(),\n            publicPath = '',\n            sampleRate = 0.1,\n        } = options || {};\n\n        this.consoleLogger = consoleLogger;\n        this.publicPath = publicPath;\n\n        init({\n            sampleRate,\n            beforeSend: this.handleBeforeSend,\n            denyUrls: [\n                ...(config.denyUrls || []),\n                'polyfill~checkout',\n                'sentry~checkout',\n            ],\n            integrations: [\n                new Integrations.GlobalHandlers({\n                    onerror: false,\n                    onunhandledrejection: true,\n                }),\n                new RewriteFrames({\n                    iteratee: this.handleRewriteFrame,\n                }),\n            ],\n            ...config,\n        });\n    }\n\n    log(\n        error: Error,\n        tags?: ErrorTags,\n        level: ErrorLevelType = ErrorLevelType.Error,\n        payload?: ErrorMeta,\n    ): void {\n        this.consoleLogger.log(error, tags, level);\n\n        withScope((scope) => {\n            const { errorCode = computeErrorCode(error) } = tags || {};\n\n            if (errorCode) {\n                scope.setTags({ errorCode });\n            }\n\n            scope.setLevel(this.mapToSentryLevel(level));\n\n            if (payload) {\n                scope.setExtras(payload);\n            }\n\n            scope.setFingerprint(['{{ default }}']);\n\n            captureException(error);\n        });\n    }\n\n    private mapToSentryLevel(level: ErrorLevelType): SeverityLevel {\n        switch (level) {\n            case ErrorLevelType.Info:\n                return SeverityLevelEnum.INFO;\n\n            case ErrorLevelType.Warning:\n                return SeverityLevelEnum.WARNING;\n\n            case ErrorLevelType.Debug:\n                return SeverityLevelEnum.DEBUG;\n\n            case ErrorLevelType.Error:\n            default:\n                return SeverityLevelEnum.ERROR;\n        }\n    }\n\n    /**\n     * Ignore exceptions that don't have a stacktrace at all, or have a stacktrace that references files external to\n     * this app. For example, if the exception is caused by a piece of third party code, one of the frames in the\n     * stacktrace will reference a file that is not a part of the app. This behaviour is different to the whitelist\n     * config provided by Sentry, as the latter only examines the topmost frame in the stacktrace. The config is not\n     * sufficient for us because some stores have customisation code built on top of our code, resulting in a stacktrace\n     * whose topmost frame is ours but frames below it are not.\n     */\n    private shouldReportExceptions(exceptions: Exception[], originalException: unknown): boolean {\n        // Ignore exceptions that are not an instance of Error because they are most likely not thrown by our own code,\n        // as we have a lint rule that prevents us from doing so. Although these exceptions don't actually have a\n        // stacktrace, meaning that the condition below should theoretically cover the scenario, but we still need this\n        // condition because Sentry client creates a \"synthentic\" stacktrace for them using the information it has.\n        if (!exceptions.length || !(originalException instanceof Error)) {\n            return false;\n        }\n\n        return exceptions.every((exception) => {\n            if (!exception.stacktrace?.frames?.length) {\n                return false;\n            }\n\n            return exception.stacktrace.frames.every((frame) =>\n                frame.filename?.startsWith(FILENAME_PREFIX),\n            );\n        });\n    }\n\n    private handleBeforeSend: (event: Event, hint?: EventHint) => Event | null = (event, hint) => {\n        if (event.exception) {\n            if (\n                !this.shouldReportExceptions(\n                    event.exception.values ?? [],\n                    hint?.originalException ?? null,\n                )\n            ) {\n                return null;\n            }\n\n            return event;\n        }\n\n        return event;\n    };\n\n    private handleRewriteFrame: (frame: StackFrame) => StackFrame = (frame) => {\n        if (this.publicPath && frame.filename) {\n            // We want to remove the base path of the filename, otherwise we\n            // will need to specify it when we upload the sourcemaps so that the\n            // filenames can match up.\n            const filename = frame.filename.replace(new RegExp(`^${this.publicPath}/?`), '');\n\n            // `frame` needs to be modified in-place (based on the example in\n            // their documentation).\n            if (filename !== frame.filename) {\n                frame.filename = `${FILENAME_PREFIX}/${filename}`;\n            }\n        }\n\n        return frame;\n    };\n}\n","import {\n  ErrorLogger,\n  ErrorLoggerOptions,\n  ErrorLoggerServiceConfig,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nimport ConsoleErrorLogger from './ConsoleErrorLogger';\nimport NoopErrorLogger from './NoopErrorLogger';\nimport SentryErrorLogger from './SentryErrorLogger';\n\nexport default function createErrorLogger(\n    serviceConfig?: ErrorLoggerServiceConfig,\n    options?: ErrorLoggerOptions,\n): ErrorLogger {\n    if (serviceConfig && serviceConfig.sentry) {\n        return new SentryErrorLogger(serviceConfig.sentry, {\n            ...options,\n            consoleLogger: new ConsoleErrorLogger(options),\n        });\n    }\n\n    if (process.env.NODE_ENV === 'test') {\n        return new NoopErrorLogger();\n    }\n\n    return new ConsoleErrorLogger(options);\n}\n","enum DynamicFormFieldType {\n    telephone = 'tel',\n    dropdown = 'dropdown',\n    number = 'number',\n    password = 'password',\n    checkbox = 'checkbox',\n    multiline = 'multiline',\n    date = 'date',\n    radio = 'radio',\n    text = 'text',\n}\n\nexport default DynamicFormFieldType;\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nconst isBraintreeFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        methodId === PaymentMethodId.Braintree || // TODO: remove after A/B testing\n        methodId === PaymentMethodId.BraintreeAcceleratedCheckout\n    );\n};\n\nexport default isBraintreeFastlaneMethod;\n","import React, { FunctionComponent, ReactNode, Suspense } from 'react';\n\nimport { ErrorBoundary } from '@bigcommerce/checkout/error-handling-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './LazyContainer.scss';\n\nimport LoadingSpinner from './LoadingSpinner';\n\nexport interface LazyContainerProps {\n    children: ReactNode;\n    loadingSkeleton?: ReactNode;\n}\n\nconst filterError = (error: Error) => error.name === 'ChunkLoadError';\n\nconst LazyContainer: FunctionComponent<LazyContainerProps> = ({ loadingSkeleton, children }) => (\n    <ErrorBoundary\n        fallback={\n            <div className=\"lazyContainer-error\">\n                <TranslatedString id=\"common.unstable_network_error\" />\n            </div>\n        }\n        filter={filterError}\n    >\n        <Suspense fallback={loadingSkeleton || <LoadingSpinner isLoading />}>{children}</Suspense>\n    </ErrorBoundary>\n);\n\nexport default LazyContainer;\n"],"names":["findLineItems","cart","consignment","compact","map","lineItemIds","itemId","find","lineItems","physicalItems","item","id","isNil","parentId","PaymentMethodId","memo","description","className","Toggle","openByDefault","length","isOpen","toggle","onClick","preventDefault","TranslatedString","displayAdditionalInformation","method","shippingCostAfterDiscount","imageUrl","alt","src","transitTime","additionalDescription","undefined","cost","ShopperCurrency","amount","CheckoutContext","createContext","useCheckout","context","useContext","Error","data","testId","translatedString","translate","parsedString","href","displayNamePrefix","pickProps","value","key","createAnalyticsService","createFn","createArguments","analyticsTracker","checkoutService","children","getStepTracker","useMemo","createStepTracker","getBodlService","createBodlService","subscribe","getBraintreeAnalyticTracker","createBraintreeAnalyticTracker","getPayPalCommerceAnalyticTracker","createPayPalCommerceAnalyticTracker","checkoutBegin","trackCheckoutStarted","trackStepCompleted","currentStep","stepCompleted","trackStepViewed","step","orderPurchased","trackOrderComplete","customerEmailEntry","email","customerSuggestionInit","payload","customerSuggestionExecute","customerPaymentMethodExecuted","showShippingMethods","selectedPaymentMethod","methodName","methodId","clickPayButton","paymentRejected","paymentComplete","exitCheckout","walletButtonClick","AnalyticsContext","A","Provider","isPayPalFastlaneCustomer","customer","isBuyNowCart","lastPathName","window","location","pathname","split","pop","ExtensionRegionContainer","extensionRegionToContainerMap","ShippingShippingAddressFormBefore","ShippingShippingAddressFormAfter","ShippingSelectedShippingMethod","SummaryAfter","SummaryLastItemAfter","Extension","region","getExtensions","getConfig","getCheckout","extensions","config","checkout","extensionService","useExtensions","isRegionEnabled","containerId","useEffect","renderExtension","removeListeners","height","role","viewBox","width","xmlns","d","fill","name","errorId","renderMessage","useCallback","message","htmlFor","Consumer","render","normalizeAddress","address","omit","addresses","some","paypalFastlaneAddress","bcAddress","isEqual","isEqualToPayPalFastlaneAddress","hasSelectedShippingOptions","consignments","every","selectedShippingOption","type","isCustomError","error","customError","title","isExperimentEnabled","checkoutSettings","experimentName","Boolean","features","isSupported","EmbeddedCheckoutUnsupportedError","prototype","CustomError","unsupportedMethods","langService","ids","filter","indexOf","this","methods","join","UNSUPPORTED_METHODS","withExtension","createInjectHoc","ExtensionContext","state","isWaiting","componentDidMount","waitInterval","props","waitToken","setTimeout","setState","componentWillUnmount","clearInterval","loginUrl","LoadingOverlay","hideContentWhenLoading","isLoading","TranslatedHtml","url","PureComponent","CustomerViewType","buttonsCount","skeleton","Array","_v","i","LoadingSkeleton","renderWhileLoading","SUPPORTED_METHODS","getSupportedMethodIds","methodIds","isBrowserSupported","isApplePayWindow","shouldFilterApplePay","initialize","isShowingWalletButtonsOnTop","onError","noop","heightOption","buttonHeight","container","deinitialize","navigateToOrderConfirmation","orderId","toString","replace","Promise","rest","localeContext","LocaleContext","initializeOptions","options","applepay","shippingLabel","language","subtotalLabel","onPaymentAuthorize","onComplete","paypalCommerceIds","withCheckout","checkoutState","getCustomer","isPaymentDataRequired","isInitializedCustomer","getInitializeCustomerError","providers","remoteCheckoutProviders","availableMethodIds","isGuest","checkEmbeddedSupport","isPaymentStepActive","onUnhandledError","onWalletButtonClick","style","position","left","top","includes","isPayPalCommerce","resolveId","ResolvedCheckoutButton","resolveComponent","deinitializeCustomer","initializeCustomer","analyticsContext","isExecutingPaymentMethodCheckout","executePaymentMethodCheckout","useState","showSuggestion","setShowSuggestion","bolt","onInit","hasBoltAccount","fn","event","stopPropagation","provider","providerFlow","Button","IconBolt","additionalClassName","providerWithCustomCheckout","Bolt","SUPPORTED_SIGNOUT_METHODS","isSupportedSignoutMethod","canSignOut","payments","payment","providerId","getBillingAddress","isSigningOut","billingAddress","logoutLink","isRedirectExperimentEnabled","isSignedIn","shouldRedirectToStorefrontForAuth","signOut","signOutCustomer","onSignOut","onSignOutError","assign","isCartEmpty","reload","isErrorWithType","size","Tiny","variant","Secondary","beautifyAmazonButton","document","querySelector","amazonButton","shadowRoot","isInitializing","hideText","supportedMethodIds","EMAIL_REGEXP","getEmailValidationSchema","max","matches","required","getTranslateCreateCustomerError","label","min","memoize","formFields","passwordRequirements","numeric","alpha","minLength","firstName","lastName","password","concat","getCustomFormFieldsValidationSchema","getAcceptsMarketingEmailsDefault","defaultShouldSubscribe","requiresMarketingConsent","withLanguage","handleSubmit","values","onSubmit","mapPropsToValues","customFields","acceptsMarketingEmails","validationSchema","requirements","getCreateCustomerValidationSchema","getPasswordRequirements","fixNewsletterCheckboxExperimentEnabled","createAccountError","isCreatingAccount","onCancel","isFloatingLabelEnabled","createAccountErrorMessage","isRequestError","status","splitMessage","trim","fields","field","updatedItems","items","transformFormFieldsData","Form","Fieldset","Alert","DynamicFormField","autocomplete","extraClass","parentFieldName","custom","disabled","Primary","onChange","renderInput","TextInput","autoComplete","labelContent","FormField","input","onSendLoginEmail","isSendingEmail","emailHasBeenRequested","onRequestClose","sentEmailError","sentEmail","submitForm","formEmail","modalHeaderStringId","okButton","footer","LoadingSpinner","sent_email","TranslatedLink","form","expiry","minutes","Math","round","Modal","additionalBodyClassName","additionalModalClassName","header","ModalHeader","shouldShowCloseButton","isFastlaneHostWindow","hasOwnProperty","getPaymentMethod","paymentMethod","shouldRenderFastlaneWatermark","initializationData","isFastlanePrivacySettingEnabled","braintreeFastlane","paypalFastlane","FastlaneWatermarkComponent","includeAdditionalInfo","then","result","PrivacyPolicyCheckboxFieldLink","CheckboxFormField","PrivacyPolicyFieldset","PrivacyPolicyAutoConsent","getPrivacyPolicyValidationSchema","isRequired","schemaFields","privacyPolicy","oneOf","Input","checked","String","Label","setSubscribeStatus","shouldSubscribe","sessionStorage","setItem","getSubscribeStatus","getItem","removeSubscribeStatus","removeItem","getShouldSubscribeValue","SubscribeSessionStorage","onContinueAsGuest","privacyPolicyUrl","isExpressPrivacyPolicy","baseSchema","canSubscribe","checkoutButtons","continueAsGuestButtonLabelId","onChangeEmail","onShowLogin","shouldShowEmailWatermark","renderField","fieldProps","checkoutLink","loginLink","legend","Legend","hidden","BasicFormField","tabIndex","withIconContainer","onSignIn","canCancel","forgotPasswordUrl","isSignInEmailEnabled","isSigningIn","onCreateAccount","signInError","shouldShowCreateAccountLink","viewType","Login","changeEmailLink","body","mapErrorMessage","SuggestedLogin","Info","CancellableEnforcedLogin","EnforcedLogin","rel","target","mapCreateAccountFromFormValues","mapCustomFormFieldsFromFormValues","setStatus","valSuccess","continueAsAGuestButton","setContinueAsAGuestButton","emailValue","setEmailValue","authentication","setAuthentication","isStripeLoading","setIsStripeLoading","isNewAuth","setIsNewAuth","handleOnClickSubmitButton","setEmailCallback","authenticated","isComplete","handleLoading","mounted","stripeupe","onEmailChange","getStyles","getStripeStyles","gatewayId","getStylesFromElement","properties","parentContainer","getElementById","getAppliedStyles","formInput","formLabel","formError","labelText","color","fieldText","fieldPlaceholderText","fieldErrorText","fieldBackground","fieldInnerShadow","fieldBorder","buttonText","display","placeholder","isEmailLoginFormOpen","isReady","hasRequestedLoginEmail","closeEmailLoginFormForm","handleEmailLoginClicked","draftEmail","handleSendLoginEmail","sendLoginEmail","handleContinueAsGuest","formValues","continueAsGuest","hasBillingId","onChangeViewType","onContinueAsGuestError","onSubscribeToNewsletter","updateSubscriptionWhenUnchecked","acceptsMarketingNewsletter","acceptsAbandonedCartEmails","paymentProviderCustomer","getPaymentProviderCustomer","shouldEncourageSignIn","stripeLinkAuthenticationState","executePaymentMethodCheckoutOrContinue","handleSignIn","credentials","signIn","onSignInError","handleCreateAccount","createAccount","onAccountCreated","showCreateAccount","CreateAccount","handleCancelCreateAccount","clearError","handleCancelSignIn","Guest","handleChangeEmail","handleShowLogin","StripeUPE","continueWithCheckoutCallback","checkoutPaymentMethodExecuted","onReady","shouldRenderGuestForm","shouldRenderCreateAccountForm","shouldRenderLoginForm","renderEmailLoginLinkForm","renderLoginForm","renderGuestForm","renderCreateAccountForm","checkoutButtonIds","isContinuingAsGuest","isSubscribed","isWalletButtonsOnTop","shouldRenderStripeForm","isLoadingGuestForm","isSendingSignInEmail","signInEmailError","signInEmail","customerAccountFields","isEmbedded","isGuestEnabled","isAccountCreationEnabled","Component","withAnalytics","getCustomerAccountFields","getCart","getSignInEmail","getSignInError","getSignInEmailError","getCreateCustomerAccountError","isInitializingCustomer","isCreatingCustomerAccount","getProviderWithCustomCheckout","shopperConfig","showNewsletterSignup","createCustomerAccount","sendSignInEmail","defaultNewsletterSignup","links","forgotPasswordLink","guestCheckoutEnabled","signInCustomer","shouldUseStripeLinkByMinimumAmount","Customer","icon","dangerouslySetInnerHTML","__html","sanitize","banners","reduce","promotion","banner","index","text","hasUnassignedLineItems","total","addedByPromotion","isUsingMultiShipping","compactView","isShippingDiscountDisplayEnabled","paypalFastlaneAddresses","usePayPalFastlaneAddress","showPayPalFastlaneAddressLabel","StaticAddress","AddressType","Shipping","PoweredByPayPalFastlaneLabel","StaticConsignmentItemList","StaticShippingOption","getShippingCostAfterAutomaticDiscount","consignmentNumber","getShippingCountries","addressWithoutLocalization","localizeAddress","address1","address2","city","localizedProvince","localizedCountry","postalCode","count","getLineItemsCount","ConsignmentLineItemDetail","isMultiShippingMode","getLanguageService","ShippingOptionExpiredError","heading","isActive","isEditable","onEdit","summary","isClosed","containerRef","createRef","contentRef","handleTransitionEnd","node","done","addEventListener","onAnimationEnd","focusStep","componentDidUpdate","prevProps","timeoutRef","clearTimeout","suggestion","ref","renderContent","isBusy","MobileView","matched","CSSTransition","addEndListener","classNames","enter","exit","in","mountOnEnter","onExited","timeout","unmountOnExit","delay","isMobileView","getTransitionDelay","getChildInput","getScrollPosition","onExpanded","focus","isNaN","scrollTo","current","getParentContainer","topOffset","innerHeight","getBoundingClientRect","scrollY","pageYOffset","parentElement","classList","contains","timeoutDelay","parseFloat","getComputedStyle","transitionDuration","CheckoutStepType","lineItem","isShippingRequired","customItems","getCustomerStepStatus","createSelector","hasEmail","isUsingWallet","isUsingStripeLinkAndCheckoutPageIsReloaded","getStripeLinkAndCheckoutPageIsReloaded","getBillingStepStatus","getBillingAddressFields","countryCode","billingAddressFields","hasAddress","isValidAddress","billingAddressCustomFields","hasCustomFields","isAmazonPayBillingStepComplete","Billing","startsWith","getShippingStepStatus","getShippingAddress","getConsignments","shippingAddress","getShippingAddressFields","shippingAddressFields","hasOptions","hasUnassignedItems","isCustomShippingSelected","getPaymentStepStatus","getOrder","order","Payment","getOrderSubmitStatus","isSubmittingOrder","customerStep","shippingStep","billingStep","paymentStep","orderStatus","steps","defaultActiveStep","isPrevStepComplete","slice","prevStep","lazy","retry","CartSummary","CartSummaryDrawer","isBillingSameAsShipping","isRedirecting","buttonConfigs","handleToggleMultiShipping","navigateToNextIncompleteStep","activeStepIndex","findIndex","activeStep","previousStep","navigateToStep","embeddedMessenger","postComplete","embeddedSupport","handleCartChangedError","handleConsignmentsUpdated","prevHasSelectedShippingOptions","activeStepType","defaultStepType","newHasSelectedShippingOptions","isDefaultStepPaymentOrBilling","isShippingStepFinished","handleCloseErrorModal","handleExpanded","handleUnhandledError","handleError","log","postError","handleEditStep","handleReady","isDefault","handleNewsletterSubscription","subscribed","handleSignOut","cartUrl","isPriceHiddenFromGuests","postSignedOut","setCustomerViewType","handleShippingNextStep","handleShippingSignIn","handleShippingCreateAccount","customerViewType","createAccountUrl","handleBeforeExit","handleWalletButtonClick","unsubscribeFromConsignments","removeEventListener","checkoutId","createEmbeddedMessenger","embeddedStylesheet","loadCheckout","loadPaymentMethodByIds","subscribeToConsignments","all","params","include","loadExtensions","supportedProviders","configs","getPaymentMethods","preloadExtensions","siteLink","errorFlashMessages","getFlashMessages","messenger","parentOrigin","receiveStyles","styles","append","postFrameLoaded","contentId","postLoaded","hasMultiShippingEnabled","checkoutBillingSameAsShippingEnabled","defaultNewsletterSignupOption","errorModal","ErrorModal","onClose","isPending","promotions","extensionState","isShowingLoadingIndicator","renderStep","renderCartSummary","renderCustomerStep","renderShippingStep","renderBillingStep","renderPaymentStep","hasCartChanged","LazyContainer","loadingSkeleton","AddressFormSkeleton","cartHasChanged","navigateNextStep","onToggleMultiShipping","StaticBillingAddress","errorLogger","ChecklistSkeleton","onCartChangedError","onFinalize","onSubmitError","errors","statuses","submitOrderError","getSubmitOrderError","checkoutUserExperienceSettings","walletButtonsOnTop","floatingLabelEnabled","createAccountLink","cartLink","displaySettings","hidePriceFromGuests","subscribeToConsignmentsSelector","subscriber","walletButtonsOnTopFlag","isLoadingCheckout","Checkout","createCheckoutService","locale","getLocale","shouldWarnMutation","createEmbeddedCheckoutStylesheet","createErrorLogger","sentry","sentryConfig","errorTypes","publicPath","sampleRate","sentrySampleRate","ErrorBoundary","logger","LocaleProvider","CheckoutProvider","AnalyticsProvider","ExtensionProvider","createEmbeddedCheckoutMessenger","shippingCostBeforeDiscount","discounts","discountTotal","discount","getTotalAutomaticDiscount","getDerivedStateFromError","componentDidCatch","fallback","unmountContentWhenLoading","forwardRef","withDate","date","fieldType","inputFormat","handleDateChange","dateValue","DynamicFormFieldType","dropdown","IconChevronDown","optionValue","radio","checkbox","CheckboxInput","isArray","calendarClassName","dateFormat","maxDate","Date","minDate","placeholderText","toUpperCase","popperClassName","selected","isDate","multiline","TextArea","onSelectedAll","onSelectedNone","handleSelectAllClick","handleSelectNoneClick","MultiCheckboxFormField","push","remove","handleSelectAll","checkedValues","difference","forEach","val","handleSelectNone","handleInputChange","FormFieldContainer","hasError","FormFieldError","kebabCase","renderProps","pick","secret","fieldLabel","maxLength","inputId","fieldInputId","fieldName","isFloatingLabelSupportedFieldType","labelComponent","dynamicFormFieldType","number","telephone","helperLabel","rows","obj","Object","call","FALLBACK_LOCALE","languageService","createLanguageService","fallbackLocale","fallbackTranslations","initializeLanguageService","defaultLocale","defaultTranslations","shouldShowChildren","renderItemContent","quantity","option","renderProductOptionDetails","MOBILE_MAX_WIDTH","SMALL_SCREEN_MAX_WIDTH","captureStackTrace","stack","PaypalCommerce","PaypalCommerceCreditCards","PayPalCommerceAcceleratedCheckout","Braintree","BraintreeAcceleratedCheckout","getContextValue","memoizeOne","getState","unsubscribe","mapAddressToFormValues","addressFormValues","defaultValue","fieldValue","getValue","shouldSaveAddress","stateOrProvince","stateOrProvinceCode","getDefaultValue","year","month","day","Number","paymentWithCustomCheckout","isPayPalFastlaneEnabled","paypalFastlaneCustomer","customerAuthenticationState","authenticationState","shouldShowPayPalFastlaneLabel","shouldShowPayPalFastlaneShippingForm","useLocale","EMPTY_ARRAY","freeze","setDefaultValues","defaultError","defaultTitle","queries","print","mobile","toCSSRule","selector","mergedStyles","pickBy","parse","rules","secondaryText","secondaryHeading","link","hover","button","active","secondaryButton","select","checklist","discountBanner","loadingBanner","orderSummary","embeddedCheckoutStyleParser","_parser","createElement","head","appendChild","sheet","CSSStyleSheet","rule","insertRule","appendStylesheet","isSubmitted","InnerField","component","meta","InnerFieldInput","prevForm","prevField","nextForm","nextField","nextProps","getTime","renderInnerField","matchMedia","requestSender","createRequestSender","create","put","response","renderPasswordInput","renderPasswordConfirmationInput","passwordLabelContent","passwordConfirmationLabelContent","confirmPassword","onSignUp","isSigningUp","customerCanBeCreated","Success","AccountCreationRequirementsError","AccountCreationFailedError","isDefaultOrderPayment","isGiftCertificatePayment","isStoreCreditPayment","gatewayPayment","detail","instructions","mapFromPayments","code","remaining","used","balance","purchaseDate","getStoreCreditAmount","mapToOrderSummarySubtotalsProps","baseAmount","discountAmount","isTaxIncluded","handlingCostTotal","giftWrappingCostTotal","coupons","taxes","fees","shippingAmount","shipping","getOrderShippingCostAfterAutomaticDiscount","subtotalAmount","shippingAmountBeforeDiscount","giftWrappingAmount","storeCreditAmount","handlingAmount","giftCertificates","MandateTextComponent","mandateText","keys","entries","PaymentsWithMandates","paymentsWithMandates","mandate","isPaymentWithMandate","OrderStatusMessage","orderNumber","supportEmail","supportPhoneNumber","hasDigitalItems","isDownloadable","handleClick","throttle","OrderSummary","OrderSummaryDrawer","handleErrorModalClose","handleSignUp","hasSignedUp","catch","loadOrder","isLoadingOrder","paymentInstructions","orderEmail","storePhoneNumber","renderGuestSignUp","shouldShowPasswordForm","customerId","action","renderOrderSummary","renderErrorModal","currency","shopperCurrency","headerLink","storeCurrency","orderAmount","shouldShowErrorCode","OrderConfirmation","accountService","newsletter","stripeLinkMinAmount","cartAmount","isStripeLinkMinAmount","countries","country","states","isEmpty","subdivisions","getPasswordRequirementsFromConfig","minlength","allSlashes","RegExp","toResolvableComponent","resolveIds","AlertType","Warning","IconError","renderDefaultIcon","parseAnchor","div","innerHTML","anchor","anchorSiblings","outerHTML","schema","maxValue","minValue","nullable","transform","originalValue","requiredErrorMessage","toCustomerCurrency","path","currentScript","configurePublicPath","scriptPath","substr","renderCheckout","configuredPublicPath","CheckoutApp","renderOrderConfirmation","OrderConfirmationApp","element","declaration","propertyName","getPropertyValue","isValidSync","ADD_ATTR","IconSize","OriginalComponent","Small","Large","Medium","showPayPalFastlaneLabel","appearFocused","isResolvableComponent","query","components","results","resolverId","default","sort","a","b","setPrototypeOf","object","__proto__","ButtonVariant","ButtonSize","getClassName","isFullWidth","Action","extensionContext","aria","labelledby","handleOnRequestClose","nativeEvent","renderFooter","renderHeader","renderBody","shouldBeTranslatedAsHtml","isHtmlError","translationKey","renderErrorCode","headers","errorCode","computeErrorCode","customFieldsObject","forIn","padMonth","padStart","getMonth","padDay","getDate","getFullYear","fieldId","WHITELIST_REGEXP","getTranslateAddressError","requiredFieldErrorTranslationIds","company","phone","getFormFieldsValidationSchema","useRef","focusOnError","erroredFormField","preventScroll","offsetParent","scrollIntoView","behavior","block","inline","handleSubmitCapture","setSubmitted","noValidate","onSubmitCapture","extensionReducer","ExtensionActionType","SHOW_LOADING_INDICATOR","RE_RENDER_SHIPPING_FORM","shippingFormRenderTimestamp","createReloadCheckoutHandler","commandType","ExtensionCommandType","ReloadCheckout","handler","createSetIframeStyleHandler","extension","SetIframeStyle","extensionContainer","iframe","createShowLoadingIndicatorHandler","dispatch","ShowLoadingIndicator","show","createReRenderShippingFormHandler","ReRenderShippingForm","now","createGetConsignmentHandler","queryType","ExtensionQueryType","GetConsignments","useCache","postMessageToExtension","handlers","cartId","URL","searchParams","set","as","getExtensionByRegion","registerHandlers","extensionId","clearExtensionCache","removers","remover","handlerProps","createCommandHandlerFactory","handlerFactory","isCommandHandler","handleExtensionCommand","createQueryHandlerFactory","isQueryHandler","handleExtensionQuery","useReducer","extensionValues","ExtensionService","createCurrencyService","inputDateFormat","content","FormContext","FormProvider","initialIsSubmitted","contextValue","isFunction","ContextComponent","mapToPropsOrFactory","InnerDecoratedComponent","DecoratedComponent","mapToProps","isMapToPropsFactory","mappedProps","mergedProps","displayName","closeButtonLabel","additionalHeaderClassName","handleClose","ariaHideApp","bodyOpenClassName","base","afterOpen","beforeClose","closeTimeoutMS","overlayClassName","shouldCloseOnEsc","shouldCloseOnOverlayClick","ErrorLevelType","getBillingCountries","checkoutButtonContainerClass","HTMLElement","hasProto","DEFAULT_OPTIONS","interval","resolve","injectedProps","customConsole","console","tags","level","info","warn","SeverityLevelEnum","FILENAME_PREFIX","handleBeforeSend","hint","exception","shouldReportExceptions","originalException","handleRewriteFrame","frame","filename","consoleLogger","beforeSend","denyUrls","integrations","GlobalHandlers","onerror","onunhandledrejection","RewriteFrames","iteratee","scope","setTags","setLevel","mapToSentryLevel","setExtras","setFingerprint","INFO","WARNING","Debug","DEBUG","ERROR","exceptions","stacktrace","frames","serviceConfig","filterError","Suspense"],"sourceRoot":""}