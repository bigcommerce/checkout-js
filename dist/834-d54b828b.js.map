{"version":3,"file":"834-d54b828b.js","mappings":"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","sources":["webpack://checkout/./packages/core/src/app/cart/EditLink.tsx","webpack://checkout/./packages/core/src/app/cart/mapToCartSummaryProps.ts","webpack://checkout/./packages/core/src/app/cart/mapToRedeemableProps.ts","webpack://checkout/./packages/core/src/app/coupon/AppliedCoupon.tsx","webpack://checkout/./packages/core/src/app/giftCertificate/AppliedGiftCertificate.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconRemove.tsx","webpack://checkout/./packages/core/src/app/cart/AppliedRedeemable.tsx","webpack://checkout/./packages/core/src/app/cart/AppliedRedeemables.tsx","webpack://checkout/./packages/core/src/app/cart/Redeemable.tsx","webpack://checkout/./packages/core/src/app/cart/withRedeemable.tsx","webpack://checkout/./packages/core/src/app/cart/mapToOrderSummarySubtotalsProps.ts"],"sourcesContent":["import React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nexport interface EditLinkProps {\n    className?: string;\n    url: string;\n}\n\nconst EditLink: FunctionComponent<EditLinkProps> = ({ className, url }) => (\n    <a\n        className={className || 'cart-header-link'}\n        data-test=\"cart-edit-link\"\n        href={url}\n        id=\"cart-edit-link\"\n        target=\"_top\"\n    >\n        <TranslatedString id=\"cart.edit_cart_action\" />\n    </a>\n);\n\nexport default memo(EditLink);\n","import { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { WithCheckoutCartSummaryProps } from './CartSummary';\nimport mapToRedeemableProps from './mapToRedeemableProps';\n\nexport default function mapToCartSummaryProps(\n    context: CheckoutContextProps,\n): WithCheckoutCartSummaryProps | null {\n    const {\n        checkoutState: {\n            data: { getConfig, getCustomer, getCheckout },\n        },\n    } = context;\n\n    const checkout = getCheckout();\n    const config = getConfig();\n    const customer = getCustomer();\n    const redeemableProps = mapToRedeemableProps(context);\n\n    if (!checkout || !config || !redeemableProps || !customer) {\n        return null;\n    }\n\n    const { isStoreCreditApplied, grandTotal } = checkout;\n    const { storeCredit } = customer;\n    const updatedCartModal = config?.checkoutSettings.features['CHECKOUT-7403.updated_cart_summary_modal'] ?? false;\n\n    return {\n        checkout,\n        shopperCurrency: config.shopperCurrency,\n        cartUrl: config.links.cartLink,\n        storeCurrency: config.currency,\n        storeCreditAmount: isStoreCreditApplied ? Math.min(grandTotal, storeCredit) : undefined,\n        isUpdatedCartSummayModal: updatedCartModal,\n        ...redeemableProps,\n    };\n}\n","import { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { EMPTY_ARRAY } from '../common/utility';\n\nimport { RedeemableProps } from './Redeemable';\n\nexport default function mapToRedeemableProps(\n    context: CheckoutContextProps,\n): RedeemableProps | null {\n    const {\n        checkoutService,\n        checkoutState: {\n            data: { getConfig, getCoupons, getGiftCertificates },\n            statuses: {\n                isApplyingCoupon,\n                isApplyingGiftCertificate,\n                isRemovingCoupon,\n                isRemovingGiftCertificate,\n            },\n            errors: {\n                getApplyCouponError,\n                getApplyGiftCertificateError,\n                getRemoveCouponError,\n                getRemoveGiftCertificateError,\n            },\n        },\n    } = context;\n\n    const config = getConfig();\n\n    if (!config) {\n        return null;\n    }\n\n    return {\n        appliedRedeemableError: getApplyCouponError() || getApplyGiftCertificateError(),\n        applyCoupon: checkoutService.applyCoupon,\n        applyGiftCertificate: checkoutService.applyGiftCertificate,\n        clearError: checkoutService.clearError,\n        coupons: getCoupons() || EMPTY_ARRAY,\n        giftCertificates: getGiftCertificates() || EMPTY_ARRAY,\n        isApplyingRedeemable: isApplyingCoupon() || isApplyingGiftCertificate(),\n        isRemovingCoupon: isRemovingCoupon(),\n        isRemovingGiftCertificate: isRemovingGiftCertificate(),\n        onRemovedCoupon: checkoutService.removeCoupon,\n        onRemovedGiftCertificate: checkoutService.removeGiftCertificate,\n        removedRedeemableError: getRemoveCouponError() || getRemoveGiftCertificateError(),\n        shouldCollapseCouponCode: config.checkoutSettings.isCouponCodeCollapsed,\n    };\n}\n","import { Coupon } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nexport interface AppliedCouponProps {\n    coupon: Coupon;\n}\n\nconst AppliedCoupon: FunctionComponent<AppliedCouponProps> = ({ coupon }) => (\n    <div className=\"redeemable-column redeemable-info\" data-test=\"redeemable-item--coupon\">\n        <span className=\"redeemable-info-header\">\n            <span className=\"redeemable-info-header--highlight\" data-test=\"coupon-amount\">\n                {coupon.displayName}\n            </span>{' '}\n            <TranslatedString id=\"redeemable.coupon_text\" />\n        </span>\n\n        <span className=\"redeemable-info-subHeader\" data-test=\"coupon-code\">\n            {coupon.code}\n        </span>\n    </div>\n);\n\nexport default memo(AppliedCoupon);\n","import { GiftCertificate } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { ShopperCurrency } from '../currency';\n\nexport interface AppliedGiftCertificateProps {\n    giftCertificate: GiftCertificate;\n}\n\nconst AppliedGiftCertificate: FunctionComponent<AppliedGiftCertificateProps> = ({\n    giftCertificate,\n}) => (\n    <div className=\"redeemable-column redeemable-info\" data-test=\"redeemable-item--giftCertificate\">\n        <span className=\"redeemable-info-header\">\n            <span className=\"redeemable-info-header--highlight\" data-test=\"giftCertificate-amount\">\n                <ShopperCurrency amount={giftCertificate.used} />\n            </span>{' '}\n            <TranslatedString id=\"redeemable.gift_certificate_text\" />\n        </span>\n\n        <span className=\"redeemable-info-subHeader\">\n            {giftCertificate.remaining > 0 && (\n                <span className=\"redeemable-info-subHeader--remaining\">\n                    <TranslatedString id=\"redeemable.gift_certificate_remaining_text\" />{' '}\n                    <span data-test=\"giftCertificate-remaining\">\n                        <ShopperCurrency amount={giftCertificate.remaining} />\n                    </span>\n                </span>\n            )}\n\n            <span data-test=\"giftCertificate-code\">{giftCertificate.code}</span>\n        </span>\n    </div>\n);\n\nexport default memo(AppliedGiftCertificate);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconRemove: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M14.59 8L12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconRemove);\n","import classNames from 'classnames';\nimport React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { IconRemove } from '../ui/icon';\n\nimport './AppliedRedeemable.scss';\n\nexport interface AppliedRedeemableProps {\n    isRemoving: boolean;\n    onRemove(): void;\n}\n\nconst AppliedRedeemable: FunctionComponent<AppliedRedeemableProps> = ({\n    children,\n    isRemoving,\n    onRemove,\n}) => (\n    <div className=\"form-checklist-header\">\n        <div className=\"form-checklist-checkbox optimizedCheckout-form-checklist-checkbox\">\n            <span className=\"is-srOnly\">\n                <TranslatedString id=\"redeemable.applied_text\" />\n            </span>\n        </div>\n\n        <div className=\"form-label form-label-redeemable\">\n            <div className=\"redeemable\">\n                {children}\n                <div className=\"redeemable-column redeemable-actions\">\n                    <button\n                        className={classNames('redeemable-remove', { 'is-loading': isRemoving })}\n                        data-test=\"redeemable-remove\"\n                        disabled={isRemoving}\n                        onClick={onRemove}\n                        type=\"button\"\n                    >\n                        <IconRemove />\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n);\n\nexport default AppliedRedeemable;\n","import { Coupon, GiftCertificate } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\n\nimport { AppliedCoupon } from '../coupon';\nimport { AppliedGiftCertificate } from '../giftCertificate';\n\nimport AppliedRedeemable from './AppliedRedeemable';\n\ninterface AppliedCouponProps {\n    coupon: Coupon;\n    isRemoving?: boolean;\n    onRemoved(code: string): void;\n}\n\nconst AppliedCouponChecklistItem: FunctionComponent<AppliedCouponProps> = ({\n    coupon,\n    onRemoved,\n    isRemoving = false,\n}) => {\n    const handleRemove = useCallback(() => {\n        onRemoved(coupon.code);\n    }, [coupon, onRemoved]);\n\n    return (\n        <li className=\"form-checklist-item optimizedCheckout-form-checklist-item\">\n            <AppliedRedeemable isRemoving={isRemoving} onRemove={handleRemove}>\n                <AppliedCoupon coupon={coupon} />\n            </AppliedRedeemable>\n        </li>\n    );\n};\n\ninterface AppliedGiftCertificateProps {\n    giftCertificate: GiftCertificate;\n    isRemoving?: boolean;\n    onRemoved(code: string): void;\n}\n\nconst AppliedGiftCertificateChecklistItem: FunctionComponent<AppliedGiftCertificateProps> = ({\n    giftCertificate,\n    onRemoved,\n    isRemoving = false,\n}) => {\n    const handleRemove = useCallback(() => {\n        onRemoved(giftCertificate.code);\n    }, [giftCertificate, onRemoved]);\n\n    return (\n        <li className=\"form-checklist-item optimizedCheckout-form-checklist-item\">\n            <AppliedRedeemable isRemoving={isRemoving} onRemove={handleRemove}>\n                <AppliedGiftCertificate giftCertificate={giftCertificate} />\n            </AppliedRedeemable>\n        </li>\n    );\n};\n\nexport interface AppliedRedeemablesProps {\n    coupons?: Coupon[];\n    giftCertificates?: GiftCertificate[];\n    isRemovingGiftCertificate?: boolean;\n    isRemovingCoupon?: boolean;\n    onRemovedCoupon(code: string): void;\n    onRemovedGiftCertificate(code: string): void;\n}\n\nconst AppliedRedeemables: FunctionComponent<AppliedRedeemablesProps> = ({\n    coupons = [],\n    giftCertificates = [],\n    isRemovingCoupon = false,\n    isRemovingGiftCertificate = false,\n    onRemovedCoupon,\n    onRemovedGiftCertificate,\n}) => {\n    if (!coupons.length && !giftCertificates.length) {\n        return null;\n    }\n\n    return (\n        <ul\n            className=\"form-checklist optimizedCheckout-form-checklist\"\n            data-test=\"redeemables-list\"\n        >\n            {coupons.map((coupon) => (\n                <AppliedCouponChecklistItem\n                    coupon={coupon}\n                    isRemoving={isRemovingCoupon}\n                    key={coupon.code}\n                    onRemoved={onRemovedCoupon}\n                />\n            ))}\n\n            {giftCertificates.map((giftCertificate) => (\n                <AppliedGiftCertificateChecklistItem\n                    giftCertificate={giftCertificate}\n                    isRemoving={isRemovingGiftCertificate}\n                    key={giftCertificate.code}\n                    onRemoved={onRemovedGiftCertificate}\n                />\n            ))}\n        </ul>\n    );\n};\n\nexport default memo(AppliedRedeemables);\n","import { CheckoutSelectors, RequestError } from '@bigcommerce/checkout-sdk';\nimport { memoizeOne } from '@bigcommerce/memoize';\nimport { FieldProps, FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, KeyboardEvent, memo, useCallback } from 'react';\nimport { object, string } from 'yup';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\nimport { FormContextType, FormProvider } from '@bigcommerce/checkout/ui';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { FormField, Label, TextInput } from '../ui/form';\nimport { Toggle } from '../ui/toggle';\n\nimport AppliedRedeemables, { AppliedRedeemablesProps } from './AppliedRedeemables';\n\nexport interface RedeemableFormValues {\n    redeemableCode: string;\n}\n\nexport type ReedemableChildrenProps = Pick<\n    RedeemableProps,\n    | 'onRemovedCoupon'\n    | 'onRemovedGiftCertificate'\n    | 'isRemovingGiftCertificate'\n    | 'isRemovingCoupon'\n    | 'coupons'\n    | 'giftCertificates'\n>;\n\nexport type RedeemableProps = {\n    appliedRedeemableError?: RequestError;\n    isApplyingRedeemable?: boolean;\n    isRemovingRedeemable?: boolean;\n    removedRedeemableError?: RequestError;\n    showAppliedRedeemables?: boolean;\n    shouldCollapseCouponCode?: boolean;\n    applyCoupon(code: string): Promise<CheckoutSelectors>;\n    applyGiftCertificate(code: string): Promise<CheckoutSelectors>;\n    clearError(error: Error): void;\n} & AppliedRedeemablesProps;\n\nconst Redeemable: FunctionComponent<\n    RedeemableProps & WithLanguageProps & FormikProps<RedeemableFormValues>\n> = ({ shouldCollapseCouponCode, showAppliedRedeemables, ...formProps }) => (\n    <Toggle openByDefault={!shouldCollapseCouponCode}>\n        {({ toggle, isOpen }) => (\n            <>\n                {shouldCollapseCouponCode && (\n                    <a\n                        aria-controls=\"redeemable-collapsable\"\n                        aria-expanded={isOpen}\n                        className=\"redeemable-label\"\n                        data-test=\"redeemable-label\"\n                        href=\"#\"\n                        onClick={preventDefault(toggle)}\n                    >\n                        <TranslatedString id=\"redeemable.toggle_action\" />\n                    </a>\n                )}\n                {!shouldCollapseCouponCode && (\n                    <div className=\"redeemable-label\">\n                        <TranslatedString id=\"redeemable.toggle_action\" />\n                    </div>\n                )}\n                {(isOpen || !shouldCollapseCouponCode) && (\n                    <div data-test=\"redeemable-collapsable\" id=\"redeemable-collapsable\">\n                        <RedeemableForm {...formProps} />\n                        {showAppliedRedeemables && <AppliedRedeemables {...formProps} />}\n                    </div>\n                )}\n            </>\n        )}\n    </Toggle>\n);\n\nconst RedeemableForm: FunctionComponent<\n    Partial<RedeemableProps> & FormikProps<RedeemableFormValues> & WithLanguageProps\n> = ({ appliedRedeemableError, isApplyingRedeemable, clearError = noop, submitForm, language }) => {\n    const {\n        checkoutState: {\n            statuses: { isSubmittingOrder }\n        }\n    } = useCheckout();\n\n    const handleSubmitForm = (setSubmitted: FormContextType['setSubmitted']) => {\n        if (isSubmittingOrder()) {\n            return;\n        }\n\n        setSubmitted(true);\n        submitForm();\n    }\n\n    const handleKeyDown = useCallback(\n        memoizeOne((setSubmitted: FormContextType['setSubmitted']) => (event: KeyboardEvent) => {\n            if (appliedRedeemableError) {\n                clearError(appliedRedeemableError);\n            }\n\n            // note: to prevent submitting main form, we manually intercept\n            // the enter key event and submit the \"subform\".\n            if (event.keyCode === 13) {\n                handleSubmitForm(setSubmitted);\n                event.preventDefault();\n            }\n        }),\n        [appliedRedeemableError, clearError, submitForm],\n    );\n\n    const handleSubmit = useCallback(\n        memoizeOne((setSubmitted: FormContextType['setSubmitted']) => () => {\n            handleSubmitForm(setSubmitted);\n        }),\n        [],\n    );\n\n    const renderLabel = useCallback(\n        (name: string) => (\n            <Label hidden htmlFor={name}>\n                <TranslatedString id=\"redeemable.code_label\" />\n            </Label>\n        ),\n        [],\n    );\n\n    const renderErrorMessage = useCallback((errorCode: string) => {\n        switch (errorCode) {\n            case 'min_purchase':\n                return <TranslatedString id=\"redeemable.coupon_min_order_total\" />;\n\n            case 'not_applicable':\n                return <TranslatedString id=\"redeemable.coupon_location_error\" />;\n\n            default:\n                return <TranslatedString id=\"redeemable.code_invalid_error\" />;\n        }\n    }, []);\n\n    const renderInput = useCallback(\n        (setSubmitted: FormContextType['setSubmitted']) =>\n            ({ field }: FieldProps) =>\n                (\n                    <>\n                        {appliedRedeemableError &&\n                            appliedRedeemableError.errors &&\n                            appliedRedeemableError.errors[0] && (\n                                <Alert type={AlertType.Error}>\n                                    {renderErrorMessage(appliedRedeemableError.errors[0].code)}\n                                </Alert>\n                            )}\n\n                        <div className=\"form-prefixPostfix\">\n                            <TextInput\n                                {...field}\n                                aria-label={language.translate('redeemable.code_label')}\n                                className=\"form-input optimizedCheckout-form-input\"\n                                onKeyDown={handleKeyDown(setSubmitted)}\n                                testId=\"redeemableEntry-input\"\n                            />\n\n                            <Button\n                                className=\"form-prefixPostfix-button--postfix\"\n                                disabled={isSubmittingOrder()}\n                                id=\"applyRedeemableButton\"\n                                isLoading={isApplyingRedeemable}\n                                onClick={handleSubmit(setSubmitted)}\n                                testId=\"redeemableEntry-submit\"\n                                variant={ButtonVariant.Secondary}\n                            >\n                                <TranslatedString id=\"redeemable.apply_action\" />\n                            </Button>\n                        </div>\n                    </>\n                ),\n        [\n            appliedRedeemableError,\n            handleKeyDown,\n            handleSubmit,\n            isApplyingRedeemable,\n            language,\n            isSubmittingOrder,\n            renderErrorMessage,\n        ],\n    );\n\n    const renderContent = useCallback(\n        memoizeOne(({ setSubmitted }: FormContextType) => (\n            <FormField\n                input={renderInput(setSubmitted)}\n                label={renderLabel}\n                name=\"redeemableCode\"\n            />\n        )),\n        [renderLabel, renderInput],\n    );\n\n    return (\n        <fieldset className=\"form-fieldset redeemable-entry\">\n            <FormProvider>{renderContent}</FormProvider>\n        </fieldset>\n    );\n};\n\nexport default withLanguage(\n    withFormik<RedeemableProps & WithLanguageProps, RedeemableFormValues>({\n        mapPropsToValues() {\n            return {\n                redeemableCode: '',\n            };\n        },\n\n        async handleSubmit(\n            { redeemableCode },\n            { props: { applyCoupon, applyGiftCertificate, clearError } },\n        ) {\n            const code = redeemableCode.trim();\n\n            try {\n                await applyGiftCertificate(code);\n            } catch (error) {\n                if (error instanceof Error) {\n                    clearError(error);\n                }\n\n                applyCoupon(code);\n            }\n        },\n\n        validationSchema({ language }: RedeemableProps & WithLanguageProps) {\n            return object({\n                redeemableCode: string().required(\n                    language.translate('redeemable.code_required_error'),\n                ),\n            });\n        },\n    })(memo(Redeemable)),\n);\n","import React, { ComponentType, FunctionComponent } from 'react';\n\nimport { OrderSummaryProps, OrderSummarySubtotalsProps } from '../order';\n\nimport { WithCheckoutCartSummaryProps } from './CartSummary';\nimport mapToOrderSummarySubtotalsProps from './mapToOrderSummarySubtotalsProps';\nimport Redeemable from './Redeemable';\n\nexport default function withRedeemable(\n    OriginalComponent: ComponentType<OrderSummaryProps & OrderSummarySubtotalsProps>,\n): FunctionComponent<WithCheckoutCartSummaryProps & { headerLink?: any }> {\n    return (props) => {\n        const {\n            checkout,\n            storeCurrency,\n            shopperCurrency,\n            headerLink,\n            onRemovedCoupon,\n            onRemovedGiftCertificate,\n            storeCreditAmount,\n            hasSubscription,\n            isUpdatedCartSummayModal = false,\n            ...redeemableProps  \n        } = props;\n\n        return (\n            <OriginalComponent\n                {...mapToOrderSummarySubtotalsProps(checkout)}\n                additionalLineItems={\n                    <Redeemable\n                        {...{\n                            ...redeemableProps,\n                            onRemovedCoupon,\n                            onRemovedGiftCertificate,\n                        }}\n                    />\n                }\n                hasSubscription={hasSubscription}\n                headerLink={headerLink}\n                isUpdatedCartSummayModal={isUpdatedCartSummayModal}\n                lineItems={checkout.cart.lineItems}\n                onRemovedCoupon={onRemovedCoupon}\n                onRemovedGiftCertificate={onRemovedGiftCertificate}\n                shopperCurrency={shopperCurrency}\n                storeCreditAmount={storeCreditAmount}\n                storeCurrency={storeCurrency}\n                total={checkout.outstandingBalance}\n            />\n        );\n    };\n}\n","import { Checkout } from '@bigcommerce/checkout-sdk';\n\nimport { OrderSummarySubtotalsProps } from '../order';\nimport { hasSelectedShippingOptions } from '../shipping';\n\nexport default function mapToOrderSummarySubtotalsProps({\n    subtotal,\n    cart: { discountAmount, isTaxIncluded },\n    giftCertificates,\n    consignments,\n    handlingCostTotal,\n    shippingCostBeforeDiscount,\n    giftWrappingCostTotal,\n    coupons,\n    taxes,\n    fees,\n}: Checkout): OrderSummarySubtotalsProps {\n    return {\n        subtotalAmount: subtotal,\n        discountAmount,\n        giftCertificates,\n        giftWrappingAmount: giftWrappingCostTotal,\n        shippingAmount: hasSelectedShippingOptions(consignments)\n            ? shippingCostBeforeDiscount\n            : undefined,\n        handlingAmount: handlingCostTotal,\n        coupons,\n        taxes,\n        fees,\n        isTaxIncluded,\n    };\n}\n"],"names":["memo","className","url","href","id","target","mapToCartSummaryProps","context","getConfig","getCustomer","checkout","getCheckout","config","customer","redeemableProps","checkoutService","data","getCoupons","getGiftCertificates","statuses","isApplyingCoupon","isApplyingGiftCertificate","isRemovingCoupon","isRemovingGiftCertificate","errors","getApplyCouponError","getApplyGiftCertificateError","getRemoveCouponError","getRemoveGiftCertificateError","appliedRedeemableError","applyCoupon","applyGiftCertificate","clearError","coupons","giftCertificates","isApplyingRedeemable","onRemovedCoupon","removeCoupon","onRemovedGiftCertificate","removeGiftCertificate","removedRedeemableError","shouldCollapseCouponCode","checkoutSettings","isCouponCodeCollapsed","mapToRedeemableProps","isStoreCreditApplied","grandTotal","storeCredit","updatedCartModal","features","shopperCurrency","cartUrl","links","cartLink","storeCurrency","currency","storeCreditAmount","Math","min","undefined","isUpdatedCartSummayModal","coupon","displayName","TranslatedString","code","giftCertificate","ShopperCurrency","amount","used","remaining","height","viewBox","width","xmlns","d","children","isRemoving","onRemove","disabled","onClick","type","AppliedCouponChecklistItem","onRemoved","handleRemove","useCallback","AppliedGiftCertificateChecklistItem","length","map","key","RedeemableForm","noop","submitForm","language","isSubmittingOrder","handleSubmitForm","setSubmitted","handleKeyDown","memoizeOne","event","keyCode","preventDefault","handleSubmit","renderLabel","name","Label","hidden","htmlFor","renderErrorMessage","errorCode","renderInput","field","Alert","TextInput","translate","onKeyDown","testId","Button","isLoading","variant","renderContent","FormField","input","label","withLanguage","withFormik","mapPropsToValues","redeemableCode","props","trim","Error","validationSchema","required","showAppliedRedeemables","formProps","Toggle","openByDefault","toggle","isOpen","withRedeemable","OriginalComponent","headerLink","hasSubscription","subtotal","cart","discountAmount","isTaxIncluded","consignments","handlingCostTotal","shippingCostBeforeDiscount","giftWrappingCostTotal","taxes","fees","subtotalAmount","giftWrappingAmount","shippingAmount","hasSelectedShippingOptions","handlingAmount","mapToOrderSummarySubtotalsProps","additionalLineItems","lineItems","total","outstandingBalance"],"sourceRoot":""}