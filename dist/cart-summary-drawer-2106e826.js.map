{"version":3,"file":"cart-summary-drawer-2106e826.js","mappings":"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","sources":["webpack://checkout/./packages/core/src/app/order/getLineItemsCount.ts","webpack://checkout/./packages/ui/src/icon/IconCloseWithBorder.tsx","webpack://checkout/./packages/core/src/app/order/OrderModalSummarySubheader.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryModal.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryDrawer.tsx","webpack://checkout/./packages/ui/src/modal/ConfirmationModal.tsx","webpack://checkout/./packages/core/src/app/cart/mapToCartSummaryProps.ts","webpack://checkout/./packages/core/src/app/cart/EditLink.tsx","webpack://checkout/./packages/core/src/app/cart/withRedeemable.tsx","webpack://checkout/./packages/core/src/app/cart/mapToOrderSummarySubtotalsProps.ts","webpack://checkout/./packages/core/src/app/cart/CartSummaryDrawer.tsx","webpack://checkout/./packages/core/src/app/ui/modal/ModalTrigger.tsx"],"sourcesContent":["import { LineItemMap } from '@bigcommerce/checkout-sdk';\n\nexport default function getLineItemsCount({\n    physicalItems,\n    digitalItems,\n    giftCertificates,\n    customItems,\n}: LineItemMap): number {\n    return (\n        physicalItems.length +\n        digitalItems.length +\n        giftCertificates.length +\n        (customItems || []).length\n    );\n}\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconCloseWithBorder: FunctionComponent = () => (\n    <svg fill=\"none\" height=\"37\" viewBox=\"0 0 38 37\" width=\"38\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M38 18.5C38 28.7173 29.7173 37 19.5 37C9.28273 37 1 28.7173 1 18.5C1 8.28273 9.28273 0 19.5 0C29.7173 0 38 8.28273 38 18.5Z\"\n            fill=\"#F3F3F3\"\n        />\n        <path\n            clipRule=\"evenodd\"\n            d=\"M24.6671 24.6674L12.9998 13.0002L14.4141 11.5859L26.0813 23.2532L24.6671 24.6674Z\"\n            fill=\"black\"\n            fillRule=\"evenodd\"\n        />\n        <path\n            clipRule=\"evenodd\"\n            d=\"M25.6674 13.0004L14.0002 24.6676L12.5859 23.2534L24.2532 11.5862L25.6674 13.0004Z\"\n            fill=\"black\"\n            fillRule=\"evenodd\"\n        />\n    </svg>\n);\n\nexport default withIconContainer(IconCloseWithBorder);\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport getItemsCount from './getItemsCount';\n\nexport interface OrderModalSummarySubheaderProps {\n    items: LineItemMap\n    amountWithCurrency: ReactNode;\n    shopperCurrencyCode: string;\n    storeCurrencyCode: string;\n}\n\nconst OrderModalSummarySubheader: FunctionComponent<OrderModalSummarySubheaderProps> = ({\n    items,\n    shopperCurrencyCode,\n    storeCurrencyCode,\n    amountWithCurrency,\n}) => {\n    const itemsCount = getItemsCount(items);\n    const hasDifferentCurrency = shopperCurrencyCode !== storeCurrencyCode;\n    const itemsText = itemsCount === 1 ? 'cart.item' : 'cart.items';\n\n    return <>\n        {itemsCount} <TranslatedString id={itemsText} /> | {amountWithCurrency} {\n            hasDifferentCurrency && <span>({shopperCurrencyCode})</span>\n        }\n    </>;\n};\n\nexport default memo(OrderModalSummarySubheader);\n","import {\n    LineItemMap,\n    ShopperCurrency as ShopperCurrencyType,\n    StoreCurrency,\n} from '@bigcommerce/checkout-sdk';\nimport React, { cloneElement, FunctionComponent, isValidElement, ReactNode } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { Button, IconCloseWithBorder } from '@bigcommerce/checkout/ui';\n\nimport { ShopperCurrency } from '../currency';\nimport { Modal, ModalHeader } from '../ui/modal';\nimport { isSmallScreen } from '../ui/responsive';\n\nimport OrderModalSummarySubheader from './OrderModalSummarySubheader';\nimport OrderSummaryItems from './OrderSummaryItems';\nimport OrderSummaryPrice from './OrderSummaryPrice';\nimport OrderSummarySection from './OrderSummarySection';\nimport OrderSummarySubtotals, { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\nimport OrderSummaryTotal from './OrderSummaryTotal';\n\nexport interface OrderSummaryDrawerProps {\n    children: ReactNode;\n    additionalLineItems?: ReactNode;\n    items: LineItemMap;\n    total: number;\n    storeCurrency: StoreCurrency;\n    shopperCurrency: ShopperCurrencyType;\n    isOpen: boolean;\n    headerLink?: ReactNode & React.HTMLProps<HTMLDivElement>;\n    onRequestClose?(): void;\n    onAfterOpen?(): void;\n}\n\nconst OrderSummaryModal: FunctionComponent<\n    OrderSummaryDrawerProps & OrderSummarySubtotalsProps\n> = ({\n    additionalLineItems,\n    children,\n    isTaxIncluded,\n    taxes,\n    onRequestClose,\n    onAfterOpen,\n    storeCurrency,\n    shopperCurrency,\n    isOpen,\n    headerLink,\n    items,\n    total,\n    ...orderSummarySubtotalsProps\n}) => {\n    const displayInclusiveTax = isTaxIncluded && taxes && taxes.length > 0;\n\n    const subHeaderText = <OrderModalSummarySubheader\n        amountWithCurrency={<ShopperCurrency amount={total} />}\n        items={items}\n        shopperCurrencyCode={shopperCurrency.code}\n        storeCurrencyCode={storeCurrency.code}\n    />;\n\n    const continueButton = isSmallScreen() && <Button\n        className='cart-modal-continue'\n        data-test=\"manage-instrument-cancel-button\"\n        onClick={preventDefault(onRequestClose)}>\n            <TranslatedString id=\"cart.return_to_checkout\" />\n    </Button>;\n\n    return <Modal\n        additionalBodyClassName=\"cart-modal-body optimizedCheckout-orderSummary\"\n        additionalHeaderClassName=\"cart-modal-header optimizedCheckout-orderSummary with-continue-button\"\n        additionalModalClassName=\"optimizedCheckout-cart-modal\"\n        footer={continueButton}\n        header={renderHeader({\n            headerLink,\n            subHeaderText,\n            onRequestClose,\n        })}\n        isOpen={isOpen}\n        onAfterOpen={onAfterOpen}\n        onRequestClose={onRequestClose}\n    >\n        <OrderSummarySection>\n            <OrderSummaryItems displayLineItemsCount={false} items={items} />\n        </OrderSummarySection>\n        <OrderSummarySection>\n            <OrderSummarySubtotals isTaxIncluded={isTaxIncluded} taxes={taxes} {...orderSummarySubtotalsProps} />\n            {additionalLineItems}\n        </OrderSummarySection>\n        <OrderSummarySection>\n            <OrderSummaryTotal\n                orderAmount={total}\n                shopperCurrencyCode={shopperCurrency.code}\n                storeCurrencyCode={storeCurrency.code}\n            />\n        </OrderSummarySection>\n        {displayInclusiveTax && <OrderSummarySection>\n                <h5\n                    className=\"cart-taxItem cart-taxItem--subtotal optimizedCheckout-contentPrimary\"\n                    data-test=\"tax-text\"\n                >\n                    <TranslatedString\n                        id=\"tax.inclusive_label\"\n                    />\n                </h5>\n                {(taxes || []).map((tax, index) => (\n                    <OrderSummaryPrice\n                        amount={tax.amount}\n                        key={index}\n                        label={tax.name}\n                        testId=\"cart-taxes\"\n                    />\n                ))}\n            </OrderSummarySection>}\n    </Modal>\n};\n\nconst renderHeader: FunctionComponent<{\n    headerLink?: ReactNode & React.HTMLProps<HTMLDivElement>;\n    subHeaderText: ReactNode;\n    onRequestClose?(): void;\n}> = ({ onRequestClose, headerLink, subHeaderText }) => {\n    let newHeaderLink;\n\n    if (isValidElement(headerLink)) {\n        newHeaderLink = cloneElement(headerLink, { className: 'modal-header-link cart-modal-link test' });\n    }\n\n    return <>\n        {newHeaderLink ?? headerLink}\n        <ModalHeader additionalClassName=\"cart-modal-title\">\n            <div>\n                <TranslatedString id=\"cart.cart_heading\" />\n                <div className='cart-heading-subheader'>{subHeaderText}</div>\n            </div>\n        </ModalHeader>\n        <a className=\"cart-modal-close\" href=\"#\" onClick={preventDefault(onRequestClose)}>\n            <span className=\"is-srOnly\">\n                <TranslatedString id=\"common.close_action\" />\n            </span>\n            <IconCloseWithBorder />\n        </a>\n    </>\n};\n\nexport default OrderSummaryModal;\n","import {\n    LineItemMap,\n    ShopperCurrency as ShopperCurrencyType,\n    StoreCurrency,\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { FunctionComponent, memo, ReactNode, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { ShopperCurrency } from '../currency';\nimport { IconGiftCertificate } from '../ui/icon';\nimport { ModalTrigger } from '../ui/modal';\n\nimport getItemsCount from './getItemsCount';\nimport getLineItemsCount from './getLineItemsCount';\nimport OrderSummaryModal from './OrderSummaryModal';\nimport { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\nimport removeBundledItems from './removeBundledItems';\n\nexport interface OrderSummaryDrawerProps {\n    lineItems: LineItemMap;\n    total: number;\n    headerLink: ReactNode;\n    storeCurrency: StoreCurrency;\n    shopperCurrency: ShopperCurrencyType;\n    additionalLineItems?: ReactNode;\n}\n\nconst OrderSummaryDrawer: FunctionComponent<\n    OrderSummaryDrawerProps & OrderSummarySubtotalsProps\n> = ({\n    additionalLineItems,\n    coupons,\n    discountAmount,\n    giftCertificates,\n    handlingAmount,\n    headerLink,\n    isTaxIncluded,\n    lineItems,\n    onRemovedCoupon,\n    onRemovedGiftCertificate,\n    shippingAmount,\n    shippingAmountBeforeDiscount,\n    shopperCurrency,\n    storeCreditAmount,\n    giftWrappingAmount,\n    storeCurrency,\n    subtotalAmount,\n    taxes,\n    total,\n    fees,\n}) => {\n    const nonBundledLineItems = useMemo(() => removeBundledItems(lineItems), [lineItems]);\n\n    const renderModal = useCallback(\n        (props: any) => (\n            <OrderSummaryModal\n                {...props}\n                additionalLineItems={additionalLineItems}\n                coupons={coupons}\n                discountAmount={discountAmount}\n                fees={fees}\n                giftCertificates={giftCertificates}\n                giftWrappingAmount={giftWrappingAmount}\n                handlingAmount={handlingAmount}\n                headerLink={headerLink}\n                isTaxIncluded={isTaxIncluded}\n                items={nonBundledLineItems}\n                onRemovedCoupon={onRemovedCoupon}\n                onRemovedGiftCertificate={onRemovedGiftCertificate}\n                shippingAmount={shippingAmount}\n                shippingAmountBeforeDiscount={shippingAmountBeforeDiscount}\n                shopperCurrency={shopperCurrency}\n                storeCreditAmount={storeCreditAmount}\n                storeCurrency={storeCurrency}\n                subtotalAmount={subtotalAmount}\n                taxes={taxes}\n                total={total}\n            />\n        ),\n        [\n            additionalLineItems,\n            coupons,\n            discountAmount,\n            giftCertificates,\n            handlingAmount,\n            headerLink,\n            isTaxIncluded,\n            nonBundledLineItems,\n            onRemovedCoupon,\n            onRemovedGiftCertificate,\n            giftWrappingAmount,\n            shippingAmount,\n            shippingAmountBeforeDiscount,\n            shopperCurrency,\n            storeCreditAmount,\n            storeCurrency,\n            subtotalAmount,\n            taxes,\n            total,\n            fees,\n        ],\n    );\n\n    return (\n        <ModalTrigger modal={renderModal}>\n            {({ onClick, onKeyPress }) => (\n                <div\n                    className=\"cartDrawer optimizedCheckout-orderSummary\"\n                    onClick={onClick}\n                    onKeyPress={onKeyPress}\n                    tabIndex={0}\n                >\n                    <figure\n                        className={classNames('cartDrawer-figure', {\n                            'cartDrawer-figure--stack': getLineItemsCount(nonBundledLineItems) > 1,\n                        })}\n                    >\n                        <div className=\"cartDrawer-imageWrapper\">{getImage(nonBundledLineItems)}</div>\n                    </figure>\n                    <div className=\"cartDrawer-body\">\n                        <h3 className=\"cartDrawer-items optimizedCheckout-headingPrimary\">\n                            <TranslatedString\n                                data={{ count: getItemsCount(nonBundledLineItems) }}\n                                id=\"cart.item_count_text\"\n                            />\n                        </h3>\n                        <a>\n                            <TranslatedString id=\"cart.show_details_action\" />\n                        </a>\n                    </div>\n                    <div className=\"cartDrawer-actions\">\n                        <h3 className=\"cartDrawer-total optimizedCheckout-headingPrimary\">\n                            <ShopperCurrency amount={total} />\n                        </h3>\n                    </div>\n                </div>\n            )}\n        </ModalTrigger>\n    );\n};\n\nfunction getImage(lineItems: LineItemMap): ReactNode {\n    const productWithImage = lineItems.physicalItems[0] || lineItems.digitalItems[0];\n\n    if (productWithImage && productWithImage.imageUrl) {\n        return (\n            <img\n                alt={productWithImage.name}\n                data-test=\"cart-item-image\"\n                src={productWithImage.imageUrl}\n            />\n        );\n    }\n\n    if (lineItems.giftCertificates.length) {\n        return <IconGiftCertificate />;\n    }\n}\n\nexport default memo(OrderSummaryDrawer);\n","import { noop } from 'lodash';\nimport React, { ReactNode } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button, ButtonSize, ButtonVariant } from '../button';\n\nimport Modal from './Modal';\nimport ModalHeader from './ModalHeader';\n\ninterface ConfirmationModalProps {\n    headerId: string;\n    messageId: string;\n    isModalOpen: boolean;\n    onRequestClose?: () => void;\n    action: () => void;\n    actionButtonLabel?: ReactNode;\n    shouldShowCloseButton?: boolean;\n}\n\nconst ConfirmationModal = ({\n    headerId,\n    messageId,\n    isModalOpen,\n    action,\n    actionButtonLabel,\n    onRequestClose = noop,\n    shouldShowCloseButton = true,\n}: ConfirmationModalProps) => {\n    return (\n        <Modal\n            additionalModalClassName=\"modal--confirm\"\n            footer={\n                <Button onClick={action} size={ButtonSize.Small} variant={ButtonVariant.Primary}>\n                    {actionButtonLabel ?? <TranslatedString id=\"common.confirm_action\" />}\n                </Button>\n            }\n            header={\n                <ModalHeader>\n                    <span aria-live=\"assertive\" role=\"alert\">\n                        <TranslatedString id={headerId} />\n                    </span>\n                </ModalHeader>\n            }\n            isOpen={isModalOpen}\n            onRequestClose={onRequestClose}\n            shouldShowCloseButton={shouldShowCloseButton}\n        >\n            <p aria-live=\"assertive\" role=\"alert\">\n                <TranslatedString id={messageId} />\n            </p>\n        </Modal>\n    );\n};\n\nexport default ConfirmationModal;\n","import { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { isBuyNowCart } from '@bigcommerce/checkout/utility';\n\nimport { isExperimentEnabled } from '../common/utility';\n\nimport { WithCheckoutCartSummaryProps } from './CartSummary';\nimport mapToRedeemableProps from './mapToRedeemableProps';\n\nexport default function mapToCartSummaryProps(\n    context: CheckoutContextProps,\n): WithCheckoutCartSummaryProps | null {\n    const {\n        checkoutState: {\n            data: { getConfig, getCustomer, getCheckout },\n        },\n    } = context;\n\n    const checkout = getCheckout();\n    const config = getConfig();\n    const customer = getCustomer();\n    const redeemableProps = mapToRedeemableProps(context);\n\n    if (!checkout || !config || !redeemableProps || !customer) {\n        return null;\n    }\n\n    const { isStoreCreditApplied, grandTotal } = checkout;\n    const { storeCredit } = customer;\n\n    const isShippingDiscountDisplayEnabled = isExperimentEnabled(\n        config.checkoutSettings,\n        'PROJECT-6643.enable_shipping_discounts_in_orders',\n    );\n\n    return {\n        isBuyNowCart: isBuyNowCart(checkout.cart),\n        isShippingDiscountDisplayEnabled,\n        checkout,\n        shopperCurrency: config.shopperCurrency,\n        cartUrl: config.links.cartLink,\n        storeCurrency: config.currency,\n        storeCreditAmount: isStoreCreditApplied ? Math.min(grandTotal, storeCredit) : undefined,\n        ...redeemableProps,\n    };\n}\n","import classNames from 'classnames';\nimport React, { FunctionComponent, memo, useState } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { ConfirmationModal, useThemeContext } from '@bigcommerce/checkout/ui';\n\nexport interface EditLinkProps {\n    className?: string;\n    isMultiShippingMode: boolean;\n    url: string;\n}\n\nconst EditLink: FunctionComponent<EditLinkProps> = ({ className, url, isMultiShippingMode }) => {\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    const { themeV2 } = useThemeContext();\n\n    const gotoCartPage = () => {\n        window.location.assign(url);\n    };\n\n    if (isMultiShippingMode) {\n        return (\n            <>\n                <ConfirmationModal\n                    action={gotoCartPage}\n                    headerId=\"cart.edit_cart_action\"\n                    isModalOpen={isModalOpen}\n                    messageId=\"cart.edit_multi_shipping_cart_message\"\n                    onRequestClose={() => setIsModalOpen(false)}\n                />\n                <a\n                    className={classNames((className || 'cart-header-link'),\n                        { 'body-cta': themeV2 })}\n                    data-test=\"cart-edit-link\"\n                    href=\"#\"\n                    id=\"cart-edit-link\"\n                    onClick={preventDefault(() => setIsModalOpen(true))}\n                >\n                    <TranslatedString id=\"cart.edit_cart_action\" />\n                </a>\n            </>\n        );\n    }\n\n    return (\n        <a\n            className={classNames((className || 'cart-header-link'),\n                { 'body-cta': themeV2 })}\n            data-test=\"cart-edit-link\"\n            href={url}\n            id=\"cart-edit-link\"\n            target=\"_top\"\n        >\n            <TranslatedString id=\"cart.edit_cart_action\" />\n        </a>\n    );\n};\n\nexport default memo(EditLink);\n","import React, { ComponentType, FunctionComponent } from 'react';\n\nimport { OrderSummaryProps, OrderSummarySubtotalsProps } from '../order';\n\nimport { WithCheckoutCartSummaryProps } from './CartSummary';\nimport mapToOrderSummarySubtotalsProps from './mapToOrderSummarySubtotalsProps';\nimport Redeemable from './Redeemable';\n\nexport default function withRedeemable(\n    OriginalComponent: ComponentType<OrderSummaryProps & OrderSummarySubtotalsProps>,\n): FunctionComponent<WithCheckoutCartSummaryProps & { headerLink?: any }> {\n    return (props) => {\n        const {\n            checkout,\n            storeCurrency,\n            shopperCurrency,\n            headerLink,\n            onRemovedCoupon,\n            onRemovedGiftCertificate,\n            storeCreditAmount,\n            isShippingDiscountDisplayEnabled,\n            ...redeemableProps\n        } = props;\n\n        return (\n            <OriginalComponent\n                {...mapToOrderSummarySubtotalsProps(checkout, isShippingDiscountDisplayEnabled)}\n                additionalLineItems={\n                    <Redeemable\n                        {...{\n                            ...redeemableProps,\n                            onRemovedCoupon,\n                            onRemovedGiftCertificate,\n                        }}\n                    />\n                }\n                headerLink={headerLink}\n                lineItems={checkout.cart.lineItems}\n                onRemovedCoupon={onRemovedCoupon}\n                onRemovedGiftCertificate={onRemovedGiftCertificate}\n                shopperCurrency={shopperCurrency}\n                storeCreditAmount={storeCreditAmount}\n                storeCurrency={storeCurrency}\n                total={checkout.outstandingBalance}\n            />\n        );\n    };\n}\n","import { Checkout } from '@bigcommerce/checkout-sdk';\n\nimport { OrderSummarySubtotalsProps } from '../order';\nimport { getShippingCostAfterAutomaticDiscount, hasSelectedShippingOptions } from '../shipping';\n\nexport default function mapToOrderSummarySubtotalsProps({\n    subtotal,\n    cart: { discountAmount, isTaxIncluded },\n    giftCertificates,\n    consignments,\n    handlingCostTotal,\n    shippingCostBeforeDiscount,\n    giftWrappingCostTotal,\n    coupons,\n    taxes,\n    fees,\n}: Checkout,\nisShippingDiscountDisplayEnabled: boolean,\n): OrderSummarySubtotalsProps {\n    const allConsignmentsHaveSelectedShippingOption = hasSelectedShippingOptions(consignments);\n\n    const shippingAmount = allConsignmentsHaveSelectedShippingOption\n        ? isShippingDiscountDisplayEnabled\n            ? getShippingCostAfterAutomaticDiscount(shippingCostBeforeDiscount, consignments)\n            : shippingCostBeforeDiscount\n        : undefined;\n\n    return {\n        subtotalAmount: subtotal,\n        discountAmount,\n        giftCertificates,\n        giftWrappingAmount: giftWrappingCostTotal,\n        shippingAmount,\n        shippingAmountBeforeDiscount: isShippingDiscountDisplayEnabled && allConsignmentsHaveSelectedShippingOption\n            ? shippingCostBeforeDiscount\n            : undefined,\n        handlingAmount: handlingCostTotal,\n        coupons,\n        taxes,\n        fees,\n        isTaxIncluded,\n    };\n}\n","import React, { FunctionComponent, memo } from 'react';\n\nimport { withCheckout } from '../checkout';\nimport OrderSummaryDrawer from '../order/OrderSummaryDrawer';\n\nimport { WithCheckoutCartSummaryProps } from './CartSummary';\nimport EditLink from './EditLink';\nimport mapToCartSummaryProps from './mapToCartSummaryProps';\nimport withRedeemable from './withRedeemable';\n\nconst CartSummaryDrawer: FunctionComponent<\n    WithCheckoutCartSummaryProps & {\n        isMultiShippingMode: boolean;\n    }\n    > = ({ cartUrl, isMultiShippingMode, isBuyNowCart, ...props }) =>\n    withRedeemable(OrderSummaryDrawer)({\n        ...props,\n        isBuyNowCart,\n        cartUrl,\n        headerLink: isBuyNowCart ? <div /> : (\n            <EditLink\n                className=\"modal-header-link cart-modal-link\"\n                isMultiShippingMode={isMultiShippingMode}\n                url={cartUrl}\n            />\n        ),\n    });\n\nexport default withCheckout(mapToCartSummaryProps)(memo(CartSummaryDrawer));\n","import React, {\n    KeyboardEvent,\n    KeyboardEventHandler,\n    MouseEventHandler,\n    ReactElement,\n    ReactNode,\n    useEffect,\n    useRef,\n    useState,\n} from 'react';\n\nexport interface ModalTriggerProps {\n    children(props: { onClick: MouseEventHandler; onKeyPress: KeyboardEventHandler<HTMLDivElement> }): ReactNode;\n    modal(props: ModalTriggerModalProps): ReactNode;\n}\n\nexport interface ModalTriggerModalProps {\n    isOpen: boolean;\n    onRequestClose(): void;\n}\n\nconst ModalTrigger = ({ children, modal }: ModalTriggerProps): ReactElement => {\n    const [isOpen, setIsOpen] = useState(false);\n    const canHandleEventRef = useRef(false);\n\n    useEffect(() => {\n        canHandleEventRef.current = true;\n\n        return () => {\n            canHandleEventRef.current = false;\n        };\n    }, []);\n\n    const handleOpen = (): void => {\n        if (!canHandleEventRef.current) {\n            return;\n        }\n\n        setIsOpen(true);\n    };\n\n    const handleClose = (): void => {\n        if (!canHandleEventRef.current) {\n            return;\n        }\n\n        setIsOpen(false);\n    };\n\n    const handleKeyOpen = (keyboardEvent: KeyboardEvent<HTMLElement>): void => {\n        if (keyboardEvent.key === 'Enter') {\n            handleOpen();\n        }\n    };\n\n    return (\n        <>\n            {children({\n                onClick: handleOpen,\n                onKeyPress: handleKeyOpen,\n            })}\n\n            {modal({\n                isOpen,\n                onRequestClose: handleClose,\n            })}\n        </>\n    );\n};\n\nexport default ModalTrigger;\n"],"names":["getLineItemsCount","physicalItems","digitalItems","giftCertificates","customItems","length","fill","height","viewBox","width","xmlns","d","clipRule","fillRule","memo","items","shopperCurrencyCode","storeCurrencyCode","amountWithCurrency","itemsCount","getItemsCount","hasDifferentCurrency","itemsText","TranslatedString","id","renderHeader","newHeaderLink","onRequestClose","headerLink","subHeaderText","isValidElement","cloneElement","className","ModalHeader","additionalClassName","href","onClick","preventDefault","additionalLineItems","isTaxIncluded","taxes","onAfterOpen","storeCurrency","shopperCurrency","isOpen","total","orderSummarySubtotalsProps","displayInclusiveTax","ShopperCurrency","amount","code","continueButton","isSmallScreen","Button","Modal","additionalBodyClassName","additionalHeaderClassName","additionalModalClassName","footer","header","OrderSummarySection","OrderSummaryItems","displayLineItemsCount","OrderSummarySubtotals","OrderSummaryTotal","orderAmount","map","tax","index","OrderSummaryPrice","key","label","name","testId","coupons","discountAmount","handlingAmount","lineItems","onRemovedCoupon","onRemovedGiftCertificate","shippingAmount","shippingAmountBeforeDiscount","storeCreditAmount","giftWrappingAmount","subtotalAmount","fees","nonBundledLineItems","useMemo","removeBundledItems","renderModal","useCallback","props","ModalTrigger","modal","onKeyPress","tabIndex","productWithImage","imageUrl","alt","src","IconGiftCertificate","getImage","data","count","headerId","messageId","isModalOpen","action","actionButtonLabel","noop","shouldShowCloseButton","size","Small","variant","Primary","role","mapToCartSummaryProps","context","getConfig","getCustomer","checkout","getCheckout","config","customer","redeemableProps","isStoreCreditApplied","grandTotal","storeCredit","isShippingDiscountDisplayEnabled","checkoutSettings","isBuyNowCart","cart","cartUrl","links","cartLink","currency","Math","min","undefined","url","isMultiShippingMode","useState","setIsModalOpen","themeV2","window","location","assign","target","withRedeemable","OriginalComponent","subtotal","consignments","handlingCostTotal","shippingCostBeforeDiscount","giftWrappingCostTotal","allConsignmentsHaveSelectedShippingOption","hasSelectedShippingOptions","getShippingCostAfterAutomaticDiscount","mapToOrderSummarySubtotalsProps","Redeemable","outstandingBalance","children","setIsOpen","canHandleEventRef","useRef","useEffect","current","handleOpen","keyboardEvent"],"sourceRoot":""}